2025-07-01 08:52:48.594 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-01 08:52:48.611 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 3808 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 08:52:48.611 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 08:52:48.612 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 08:52:48.798 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-01 08:52:48.799 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-01 08:52:49.377 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 08:52:49.379 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 08:52:49.402 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2025-07-01 08:52:49.610 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$63d89e2d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 08:52:49.625 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 08:52:49.998 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 08:52:49.999 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 08:52:50.000 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 08:52:50.000 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 08:52:50.004 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 08:52:50.009 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 08:52:50.010 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 08:52:50.011 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 08:52:50.059 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 08:52:50.059 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1260 ms
2025-07-01 08:52:50.062 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 08:52:50.773 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-01 08:52:50.801 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-01 08:52:51.106 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 08:52:51.106 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 08:52:51.550 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 08:52:51.686 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@9ac773a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2bca1450, org.springframework.security.web.context.SecurityContextPersistenceFilter@62985e32, org.springframework.security.web.header.HeaderWriterFilter@17ea8724, org.springframework.web.filter.CorsFilter@4600c24b, org.springframework.security.web.authentication.logout.LogoutFilter@41919912, com.huang.store.security.JwtAuthenticationTokenFilter@55a48e7e, com.huang.store.security.CustomAuthenticationFilter@5fcd8579, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1fc0435f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6385d14d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7b7dcddb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@22b2084c, org.springframework.security.web.session.SessionManagementFilter@18d8251, org.springframework.security.web.access.ExceptionTranslationFilter@21695592, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4e359779]
2025-07-01 08:52:51.962 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 08:52:51.978 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 08:52:51.992 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 08:52:51.999 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 3.902 seconds (JVM running for 4.503)
2025-07-01 08:54:23.392 [http-nio-8080-exec-4] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-01 08:54:23.392 [http-nio-8080-exec-4] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-01 08:54:23.394 [http-nio-8080-exec-4] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-07-01 08:54:23.494 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMjkxODI1ODI4LCJleHAiOjE3NTEyOTM2MjV9.qJwoEd_O3Mj9hGOZnMUEhpH6uzzpe-lm5QcKLcvE0X63veyiMDSY_ia7_p95WkVK-ofpdBTiz4RsDVEdQDhPnA
2025-07-01 08:54:23.497 [http-nio-8080-exec-6] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMjkxODI1ODI4LCJleHAiOjE3NTEyOTM2MjV9.qJwoEd_O3Mj9hGOZnMUEhpH6uzzpe-lm5QcKLcvE0X63veyiMDSY_ia7_p95WkVK-ofpdBTiz4RsDVEdQDhPnA
2025-07-01 08:54:23.495 [http-nio-8080-exec-7] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMjkxODI1ODI4LCJleHAiOjE3NTEyOTM2MjV9.qJwoEd_O3Mj9hGOZnMUEhpH6uzzpe-lm5QcKLcvE0X63veyiMDSY_ia7_p95WkVK-ofpdBTiz4RsDVEdQDhPnA
2025-07-01 08:54:23.494 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMjkxODI1ODI4LCJleHAiOjE3NTEyOTM2MjV9.qJwoEd_O3Mj9hGOZnMUEhpH6uzzpe-lm5QcKLcvE0X63veyiMDSY_ia7_p95WkVK-ofpdBTiz4RsDVEdQDhPnA
2025-07-01 08:54:23.497 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMjkxODI1ODI4LCJleHAiOjE3NTEyOTM2MjV9.qJwoEd_O3Mj9hGOZnMUEhpH6uzzpe-lm5QcKLcvE0X63veyiMDSY_ia7_p95WkVK-ofpdBTiz4RsDVEdQDhPnA
2025-07-01 08:54:23.495 [http-nio-8080-exec-2] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMjkxODI1ODI4LCJleHAiOjE3NTEyOTM2MjV9.qJwoEd_O3Mj9hGOZnMUEhpH6uzzpe-lm5QcKLcvE0X63veyiMDSY_ia7_p95WkVK-ofpdBTiz4RsDVEdQDhPnA
2025-07-01 08:54:23.524 [http-nio-8080-exec-7] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-01 08:54:23.554 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-01 08:54:23.556 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 08:54:23.556 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-01 08:54:23.556 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 08:54:23.556 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 08:54:23.556 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-01 08:54:23.588 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:23.589 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-01 08:54:23.589 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:23.589 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-01 08:54:23.589 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:23.589 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-01 08:54:23.589 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:23.589 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 08:54:23.590 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:23.590 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 08:54:23.590 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:23.590 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 08:54:23.638 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-01 08:54:23.639 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 08:54:23.662 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 08:54:23.679 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 08:54:23.681 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-01 08:54:23.683 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-01 08:54:23.685 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-01 08:54:23.686 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:23.686 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-01 08:54:23.686 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 08:54:23.686 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 08:54:23.686 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:23.686 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:23.686 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 08:54:23.686 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 08:54:23.687 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-01 08:54:23.688 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 08:54:23.691 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-01 08:54:23.691 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-01 08:54:23.692 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 08:54:23.692 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 08:54:23.692 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:23.692 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 08:54:23.692 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 08:54:23.693 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 08:54:23.693 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 08:54:23.694 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 08:54:23.694 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 08:54:23.694 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:23.694 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 08:54:23.696 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 08:54:23.736 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 08:54:23.736 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-01 08:54:23.736 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 08:54:23.742 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-01 08:54:23.743 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 08:54:23.743 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 08:54:23.743 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 08:54:23.744 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 08:54:23.744 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:23.744 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:23.744 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 08:54:23.744 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 08:54:23.745 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 08:54:23.745 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 08:54:23.745 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 08:54:23.745 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 08:54:23.745 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 08:54:23.745 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:23.745 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 08:54:23.745 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 08:54:23.745 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:23.745 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 08:54:23.745 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 08:54:23.747 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 08:54:23.748 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 08:54:23.748 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 08:54:23.748 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:23.748 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 08:54:23.748 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 08:54:23.749 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 08:54:23.749 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 08:54:23.749 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:23.749 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 08:54:23.749 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 08:54:23.751 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 08:54:23.752 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 08:54:23.752 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:23.752 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 08:54:23.753 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 08:54:23.753 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 08:54:23.754 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 08:54:23.754 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:23.754 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 08:54:23.754 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 08:54:23.755 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 08:54:23.756 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 08:54:35.930 [http-nio-8080-exec-10] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMjkxODI1ODI4LCJleHAiOjE3NTEyOTM2MjV9.qJwoEd_O3Mj9hGOZnMUEhpH6uzzpe-lm5QcKLcvE0X63veyiMDSY_ia7_p95WkVK-ofpdBTiz4RsDVEdQDhPnA
2025-07-01 08:54:35.930 [http-nio-8080-exec-2] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMjkxODI1ODI4LCJleHAiOjE3NTEyOTM2MjV9.qJwoEd_O3Mj9hGOZnMUEhpH6uzzpe-lm5QcKLcvE0X63veyiMDSY_ia7_p95WkVK-ofpdBTiz4RsDVEdQDhPnA
2025-07-01 08:54:35.931 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMjkxODI1ODI4LCJleHAiOjE3NTEyOTM2MjV9.qJwoEd_O3Mj9hGOZnMUEhpH6uzzpe-lm5QcKLcvE0X63veyiMDSY_ia7_p95WkVK-ofpdBTiz4RsDVEdQDhPnA
2025-07-01 08:54:35.932 [http-nio-8080-exec-6] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMjkxODI1ODI4LCJleHAiOjE3NTEyOTM2MjV9.qJwoEd_O3Mj9hGOZnMUEhpH6uzzpe-lm5QcKLcvE0X63veyiMDSY_ia7_p95WkVK-ofpdBTiz4RsDVEdQDhPnA
2025-07-01 08:54:35.934 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-01 08:54:35.934 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:35.934 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-01 08:54:35.936 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-01 08:54:35.936 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:35.936 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-01 08:54:35.936 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-01 08:54:35.936 [http-nio-8080-exec-9] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMjkxODI1ODI4LCJleHAiOjE3NTEyOTM2MjV9.qJwoEd_O3Mj9hGOZnMUEhpH6uzzpe-lm5QcKLcvE0X63veyiMDSY_ia7_p95WkVK-ofpdBTiz4RsDVEdQDhPnA
2025-07-01 08:54:35.936 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 08:54:35.936 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:35.936 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 08:54:35.938 [http-nio-8080-exec-9] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-01 08:54:35.938 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 08:54:35.938 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:35.939 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 08:54:35.939 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-01 08:54:35.940 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 08:54:35.941 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-01 08:54:35.944 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 08:54:35.944 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-01 08:54:35.945 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 08:54:35.945 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:35.945 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 08:54:35.945 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 08:54:35.946 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-01 08:54:35.946 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 08:54:35.946 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 08:54:35.946 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:35.946 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 08:54:35.947 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-01 08:54:35.947 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 08:54:35.947 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:35.947 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-01 08:54:35.947 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 08:54:35.947 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-01 08:54:35.948 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 08:54:35.948 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:35.948 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 08:54:35.948 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-01 08:54:35.948 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 08:54:35.948 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:35.948 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-01 08:54:35.949 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-01 08:54:35.949 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 08:54:35.949 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 08:54:35.949 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:35.949 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 08:54:35.950 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 08:54:35.951 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 08:54:35.952 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 08:54:35.953 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 08:54:35.953 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 08:54:35.953 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:35.953 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:35.953 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 08:54:35.953 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 08:54:35.953 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 08:54:35.953 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 08:54:35.952 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 08:54:35.954 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 08:54:35.954 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 08:54:35.954 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 08:54:35.954 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 08:54:35.954 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:35.954 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 08:54:35.955 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 08:54:35.954 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:35.944 [http-nio-8080-exec-8] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMjkxODI1ODI4LCJleHAiOjE3NTEyOTM2MjV9.qJwoEd_O3Mj9hGOZnMUEhpH6uzzpe-lm5QcKLcvE0X63veyiMDSY_ia7_p95WkVK-ofpdBTiz4RsDVEdQDhPnA
2025-07-01 08:54:35.956 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 08:54:35.956 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 08:54:35.957 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 08:54:35.957 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:35.957 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 08:54:35.957 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 08:54:35.957 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-01 08:54:35.957 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 08:54:35.957 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:35.957 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 08:54:35.957 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 08:54:35.958 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 08:54:35.958 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:35.958 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 08:54:35.958 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 08:54:35.958 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 08:54:35.958 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 08:54:35.958 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:35.958 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 08:54:35.958 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 08:54:35.958 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 08:54:35.959 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 08:54:35.959 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 08:54:35.958 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 08:54:35.965 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 08:54:35.965 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 08:54:35.966 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:35.966 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 08:54:35.966 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 08:54:35.968 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 08:54:37.508 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMjkxODI1ODI4LCJleHAiOjE3NTEyOTM2MjV9.qJwoEd_O3Mj9hGOZnMUEhpH6uzzpe-lm5QcKLcvE0X63veyiMDSY_ia7_p95WkVK-ofpdBTiz4RsDVEdQDhPnA
2025-07-01 08:54:37.508 [http-nio-8080-exec-9] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMjkxODI1ODI4LCJleHAiOjE3NTEyOTM2MjV9.qJwoEd_O3Mj9hGOZnMUEhpH6uzzpe-lm5QcKLcvE0X63veyiMDSY_ia7_p95WkVK-ofpdBTiz4RsDVEdQDhPnA
2025-07-01 08:54:37.509 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 08:54:37.509 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:37.509 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 08:54:37.510 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 08:54:37.512 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 08:54:37.513 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 08:54:37.514 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:37.514 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 08:54:37.515 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 08:54:37.517 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 08:54:37.518 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 08:54:37.518 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:37.518 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 08:54:37.518 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 08:54:37.521 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 08:54:37.523 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 08:54:37.524 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:37.525 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 08:54:37.525 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 08:54:37.531 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 08:54:37.532 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 08:54:37.532 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:37.533 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 08:54:37.533 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 08:54:37.537 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 08:54:38.170 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-01 08:54:38.170 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:38.170 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-01 08:54:38.173 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 1(Integer)
2025-07-01 08:54:38.176 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-01 08:54:38.177 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getBookImgSrcList - ==>  Preparing: select imgSrc from bookimg where isbn=?
2025-07-01 08:54:38.177 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:38.177 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? ::: DataSources: slave
2025-07-01 08:54:38.179 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getBookImgSrcList - ==> Parameters: 9787020002207(String)
2025-07-01 08:54:38.182 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getBookImgSrcList - <==      Total: 2
2025-07-01 08:54:38.183 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 08:54:38.183 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:38.183 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 08:54:38.184 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 08:54:38.189 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 08:54:38.190 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookSort - ==>  Preparing: select * from booksort where id in (select bookSortId from booksortlist where bookId=?)
2025-07-01 08:54:38.190 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:38.190 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where id in (select bookSortId from booksortlist where bookId=?) ::: DataSources: slave
2025-07-01 08:54:38.199 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookSort - ==> Parameters: 1(Integer)
2025-07-01 08:54:38.205 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookSort - <==      Total: 1
2025-07-01 08:54:38.206 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getBookSortId - ==>  Preparing: select id from booksort where upperName=? and sortName=?
2025-07-01 08:54:38.206 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:38.206 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select id from booksort where upperName=? and sortName=? ::: DataSources: slave
2025-07-01 08:54:38.209 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getBookSortId - ==> Parameters: 无(String), 文学(String)
2025-07-01 08:54:38.212 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getBookSortId - <==      Total: 1
2025-07-01 08:54:39.480 [http-nio-8080-exec-8] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMjkxODI1ODI4LCJleHAiOjE3NTEyOTM2MjV9.qJwoEd_O3Mj9hGOZnMUEhpH6uzzpe-lm5QcKLcvE0X63veyiMDSY_ia7_p95WkVK-ofpdBTiz4RsDVEdQDhPnA
2025-07-01 08:54:39.480 [http-nio-8080-exec-10] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMjkxODI1ODI4LCJleHAiOjE3NTEyOTM2MjV9.qJwoEd_O3Mj9hGOZnMUEhpH6uzzpe-lm5QcKLcvE0X63veyiMDSY_ia7_p95WkVK-ofpdBTiz4RsDVEdQDhPnA
2025-07-01 08:54:39.481 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 08:54:39.483 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:39.483 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 08:54:39.483 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 08:54:39.484 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-01 08:54:39.484 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:39.484 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-01 08:54:39.485 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 08:54:39.485 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 08:54:39.485 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 08:54:39.485 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:39.485 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 08:54:39.486 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 08:54:39.487 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-01 08:54:39.487 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-01 08:54:39.487 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:39.487 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-01 08:54:39.488 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-01 08:54:39.489 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 08:54:39.489 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-01 08:54:39.492 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMjkxODI1ODI4LCJleHAiOjE3NTEyOTM2MjV9.qJwoEd_O3Mj9hGOZnMUEhpH6uzzpe-lm5QcKLcvE0X63veyiMDSY_ia7_p95WkVK-ofpdBTiz4RsDVEdQDhPnA
2025-07-01 08:54:39.492 [http-nio-8080-exec-7] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMjkxODI1ODI4LCJleHAiOjE3NTEyOTM2MjV9.qJwoEd_O3Mj9hGOZnMUEhpH6uzzpe-lm5QcKLcvE0X63veyiMDSY_ia7_p95WkVK-ofpdBTiz4RsDVEdQDhPnA
2025-07-01 08:54:39.492 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMjkxODI1ODI4LCJleHAiOjE3NTEyOTM2MjV9.qJwoEd_O3Mj9hGOZnMUEhpH6uzzpe-lm5QcKLcvE0X63veyiMDSY_ia7_p95WkVK-ofpdBTiz4RsDVEdQDhPnA
2025-07-01 08:54:39.493 [http-nio-8080-exec-9] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMjkxODI1ODI4LCJleHAiOjE3NTEyOTM2MjV9.qJwoEd_O3Mj9hGOZnMUEhpH6uzzpe-lm5QcKLcvE0X63veyiMDSY_ia7_p95WkVK-ofpdBTiz4RsDVEdQDhPnA
2025-07-01 08:54:39.494 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 08:54:39.494 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-01 08:54:39.494 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:39.494 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 08:54:39.494 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-01 08:54:39.494 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:39.495 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-01 08:54:39.495 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 08:54:39.495 [http-nio-8080-exec-5] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-01 08:54:39.495 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-01 08:54:39.495 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 08:54:39.495 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:39.495 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 08:54:39.495 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:39.495 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-01 08:54:39.495 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-01 08:54:39.496 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-01 08:54:39.497 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 08:54:39.500 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 08:54:39.501 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:39.501 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 08:54:39.501 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 08:54:39.501 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 08:54:39.504 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 08:54:39.505 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-01 08:54:39.506 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 08:54:39.506 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 08:54:39.506 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:39.506 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 08:54:39.506 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:39.506 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 08:54:39.506 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 08:54:39.506 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 08:54:39.507 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-01 08:54:39.508 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 08:54:39.508 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 08:54:39.508 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:39.508 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 08:54:39.508 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 08:54:39.508 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 08:54:39.508 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:39.508 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 08:54:39.508 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 08:54:39.509 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 08:54:39.510 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 08:54:39.510 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 08:54:39.511 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 08:54:39.511 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:39.511 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 08:54:39.511 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 08:54:39.511 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 08:54:39.512 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:39.512 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 08:54:39.512 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 08:54:39.513 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 08:54:39.513 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 08:54:39.514 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 08:54:39.514 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:39.514 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 08:54:39.514 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 08:54:39.516 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 08:54:39.517 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 08:54:39.517 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:39.517 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 08:54:39.517 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 08:54:39.519 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 08:54:39.520 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 08:54:39.520 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:39.520 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 08:54:39.520 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 08:54:39.522 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 08:54:39.523 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 08:54:39.523 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:39.523 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 08:54:39.524 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 08:54:39.526 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 08:54:54.522 [http-nio-8080-exec-8] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMjkxODI1ODI4LCJleHAiOjE3NTEyOTM2MjV9.qJwoEd_O3Mj9hGOZnMUEhpH6uzzpe-lm5QcKLcvE0X63veyiMDSY_ia7_p95WkVK-ofpdBTiz4RsDVEdQDhPnA
2025-07-01 08:54:54.599 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 08:54:54.599 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:54.599 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 08:54:54.600 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 56464ff@456.com(String)
2025-07-01 08:54:54.602 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 08:54:54.607 [http-nio-8080-exec-8] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:56464ff@456.com    数据库密码:$2a$10$7OBMT05X3FsorQiaTl2aQuxGJpdi4w1dVWZdG8Oy9K7E61SWT9WAy
2025-07-01 08:54:54.681 [http-nio-8080-exec-8] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=56464ff@456.com, password=$2a$10$7OBMT05X3FsorQiaTl2aQuxGJpdi4w1dVWZdG8Oy9K7E61SWT9WAy, enabled=true, roles=[ROLE_USER]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=80F49A708126630F2CF33439FDD374BC], Granted Authorities=[ROLE_USER]]
2025-07-01 08:54:54.689 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 08:54:54.689 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:54.689 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 08:54:54.689 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 56464ff@456.com(String)
2025-07-01 08:54:54.690 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 08:54:55.755 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-01 08:54:55.755 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-01 08:54:55.755 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 08:54:55.755 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:55.755 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-01 08:54:55.755 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 08:54:55.755 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 08:54:55.755 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:55.755 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:55.755 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-01 08:54:55.755 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 08:54:55.755 [http-nio-8080-exec-3] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-01 08:54:55.755 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:55.755 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-01 08:54:55.755 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 08:54:55.755 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:55.755 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 08:54:55.755 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:55.755 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-01 08:54:55.755 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 08:54:55.755 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 08:54:55.756 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 08:54:55.756 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-01 08:54:55.756 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-01 08:54:55.756 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 08:54:55.756 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-01 08:54:55.756 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-01 08:54:55.757 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 08:54:55.757 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 08:54:55.757 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-01 08:54:55.757 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:55.757 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 08:54:55.757 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:55.757 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 08:54:55.757 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-01 08:54:55.757 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:55.757 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 08:54:55.757 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-01 08:54:55.757 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 08:54:55.757 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 08:54:55.757 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 08:54:55.759 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-01 08:54:55.759 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 08:54:55.759 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-01 08:54:55.759 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 08:54:55.759 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:55.759 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 08:54:55.760 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 08:54:55.760 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:55.760 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 08:54:55.760 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 08:54:55.760 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 08:54:55.760 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 08:54:55.761 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 08:54:55.762 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 08:54:55.762 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:55.762 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 08:54:55.763 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-01 08:54:55.764 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 08:54:55.764 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 08:54:55.764 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:55.764 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 08:54:55.765 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 08:54:55.765 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 08:54:55.765 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 08:54:55.766 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:55.766 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 08:54:55.766 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 08:54:55.766 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 08:54:55.766 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 08:54:55.766 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 08:54:55.766 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:55.766 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 08:54:55.766 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 08:54:55.767 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 08:54:55.767 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 08:54:55.767 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 08:54:55.767 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:55.767 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 08:54:55.768 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 08:54:55.768 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:55.768 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 08:54:55.768 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 08:54:55.769 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 08:54:55.771 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 08:54:55.771 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 08:54:55.772 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 08:54:55.772 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:55.772 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 08:54:55.772 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 08:54:55.774 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 08:54:55.774 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 08:54:55.774 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:55.774 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 08:54:55.775 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 08:54:55.776 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 08:54:59.535 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 08:54:59.535 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:59.536 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 08:54:59.536 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 08:54:59.538 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 08:54:59.539 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 08:54:59.539 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:59.539 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 08:54:59.539 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 08:54:59.541 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 08:54:59.541 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 08:54:59.541 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:59.541 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 08:54:59.542 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 08:54:59.543 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 08:54:59.543 [http-nio-8080-exec-3] ERROR com.huang.store.exception.GlobalExceptionHandler - 运行时异常
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.NumberFormatException: For input string: "undefined"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.valueOf(Integer.java:999)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:729)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125)
	... 107 common frames omitted
2025-07-01 08:54:59.544 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 08:54:59.544 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:59.544 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 08:54:59.544 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 08:54:59.546 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 08:54:59.546 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 08:54:59.546 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:54:59.546 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 08:54:59.546 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 08:54:59.548 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 08:54:59.553 [http-nio-8080-exec-3] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2025-07-01 08:55:04.457 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 08:55:04.457 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:55:04.457 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 08:55:04.458 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 1(Integer)
2025-07-01 08:55:04.460 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 1
2025-07-01 08:55:04.460 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==>  Preparing: select id from booksort where (upperName="无" and sortName=?) or upperName=?
2025-07-01 08:55:04.460 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:55:04.460 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select id from booksort where (upperName="无" and sortName=?) or upperName=? ::: DataSources: slave
2025-07-01 08:55:04.464 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==> Parameters: 文学(String), 文学(String)
2025-07-01 08:55:04.466 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - <==      Total: 4
2025-07-01 08:55:04.503 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBooksByFirst - ==>  Preparing: select * from book where id in (select t.bookId from (select * from booksortlist WHERE bookSortId in ( ? , ? , ? , ? ) ) as t ) limit ?,?
2025-07-01 08:55:04.504 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:55:04.504 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book
            where id in (select t.bookId from
                (select * from booksortlist
                     WHERE bookSortId in
                        (
                            ?
                        ,
                            ?
                        ,
                            ?
                        ,
                            ?
                        ) 
                )
        as t ) limit ?,? ::: DataSources: slave
2025-07-01 08:55:04.506 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBooksByFirst - ==> Parameters: 5(Integer), 6(Integer), 7(Integer), 1(Integer), 0(Integer), 10(Integer)
2025-07-01 08:55:04.509 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBooksByFirst - <==      Total: 2
2025-07-01 08:55:04.510 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==>  Preparing: select id from booksort where (upperName="无" and sortName=?) or upperName=?
2025-07-01 08:55:04.510 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:55:04.510 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select id from booksort where (upperName="无" and sortName=?) or upperName=? ::: DataSources: slave
2025-07-01 08:55:04.510 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==> Parameters: 文学(String), 文学(String)
2025-07-01 08:55:04.512 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - <==      Total: 4
2025-07-01 08:55:04.514 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getFirstBookCount - ==>  Preparing: select count(*) from book where id in (select bookId from booksortlist WHERE bookSortId in ( ? , ? , ? , ? ) )
2025-07-01 08:55:04.514 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:55:04.514 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select count(*) from book
        where id in (select bookId from booksortlist
         WHERE bookSortId in
            (
                ?
            ,
                ?
            ,
                ?
            ,
                ?
            ) 
        ) ::: DataSources: slave
2025-07-01 08:55:04.516 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getFirstBookCount - ==> Parameters: 5(Integer), 6(Integer), 7(Integer), 1(Integer)
2025-07-01 08:55:04.520 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getFirstBookCount - <==      Total: 1
2025-07-01 08:55:04.521 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 08:55:04.522 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:55:04.522 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 08:55:04.523 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 08:55:04.525 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 08:55:04.526 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 08:55:04.526 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:55:04.526 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 08:55:04.526 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 08:55:04.529 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 08:55:05.773 [http-nio-8080-exec-7] ERROR com.huang.store.exception.GlobalExceptionHandler - 运行时异常
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.NumberFormatException: For input string: "undefined"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.valueOf(Integer.java:999)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:729)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125)
	... 107 common frames omitted
2025-07-01 08:55:05.775 [http-nio-8080-exec-7] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2025-07-01 08:55:07.994 [http-nio-8080-exec-5] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-01 08:55:07.995 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 08:55:07.995 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 08:55:07.995 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:55:07.995 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:55:07.995 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 08:55:07.995 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-01 08:55:07.996 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 08:55:07.997 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:55:07.997 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 08:55:07.997 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-01 08:55:07.997 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:55:07.997 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-01 08:55:07.997 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-01 08:55:07.997 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:55:07.997 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-01 08:55:07.997 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 08:55:07.997 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 08:55:07.997 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 08:55:07.995 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 08:55:07.997 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 08:55:07.997 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-01 08:55:07.999 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-01 08:55:07.999 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-01 08:55:08.000 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 08:55:08.000 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-01 08:55:08.000 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:55:08.000 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-01 08:55:08.000 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-01 08:55:08.000 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:55:08.001 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 08:55:08.001 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 08:55:08.001 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 08:55:08.001 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 08:55:08.002 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 08:55:08.003 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:55:08.002 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 08:55:08.003 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 08:55:08.003 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:55:08.003 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 08:55:08.003 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-01 08:55:08.003 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 08:55:08.003 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 08:55:08.003 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 08:55:08.005 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 08:55:08.005 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 08:55:08.005 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 08:55:08.005 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:55:08.006 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 08:55:08.006 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 08:55:08.007 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-01 08:55:08.007 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 08:55:08.007 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:55:08.007 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-01 08:55:08.007 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-01 08:55:08.007 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 08:55:08.007 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:55:08.007 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 08:55:08.008 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 08:55:08.009 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 08:55:08.010 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 08:55:08.010 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:55:08.010 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 08:55:08.010 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-01 08:55:08.010 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 08:55:08.011 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 08:55:08.011 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:55:08.011 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 08:55:08.011 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 08:55:08.012 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 08:55:08.012 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 08:55:08.012 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 08:55:08.012 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:55:08.012 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 08:55:08.013 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 08:55:08.014 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 08:55:08.015 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 08:55:08.015 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:55:08.015 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 08:55:08.015 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 08:55:08.017 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 08:55:08.017 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 08:55:08.017 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:55:08.017 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 08:55:08.018 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 08:55:08.019 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 08:55:08.019 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 08:55:08.019 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:55:08.019 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 08:55:08.019 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 08:55:08.020 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 08:55:08.021 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 08:55:08.021 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:55:08.021 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 08:55:08.021 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 08:55:08.022 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 08:55:10.400 [http-nio-8080-exec-6] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 08:55:10.400 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:55:10.400 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 08:55:10.401 [http-nio-8080-exec-6] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 08:55:10.408 [http-nio-8080-exec-6] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 3
2025-07-01 08:55:10.410 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 08:55:10.411 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:55:10.411 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 08:55:10.421 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 1(Long)
2025-07-01 08:55:10.428 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 3
2025-07-01 08:55:10.433 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 08:55:10.434 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:55:10.434 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 08:55:10.435 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 2(Long)
2025-07-01 08:55:10.441 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 08:55:10.443 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 08:55:10.443 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:55:10.443 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 08:55:10.444 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 3(Long)
2025-07-01 08:55:10.451 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 08:57:21.617 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 08:57:21.617 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:57:21.617 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 08:57:21.619 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 2545059634@qq.com(String)
2025-07-01 08:57:21.620 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 08:57:21.621 [http-nio-8080-exec-10] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:2545059634@qq.com    数据库密码:$2a$10$w8zNNUSDq3MCiLDDuAhYXedA0QGva1Z4.6UxO61Njhsrlo8voc01G
2025-07-01 08:57:21.691 [http-nio-8080-exec-10] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=2545059634@qq.com, password=$2a$10$w8zNNUSDq3MCiLDDuAhYXedA0QGva1Z4.6UxO61Njhsrlo8voc01G, enabled=true, roles=[ROLE_ADMIN]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=80F49A708126630F2CF33439FDD374BC], Granted Authorities=[ROLE_ADMIN]]
2025-07-01 08:57:21.692 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 08:57:21.692 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:57:21.692 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 08:57:21.692 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 2545059634@qq.com(String)
2025-07-01 08:57:21.693 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 08:57:28.359 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 08:57:28.359 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:57:28.359 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 08:57:28.360 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 08:57:28.361 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 08:57:28.365 [http-nio-8080-exec-5] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=5
2025-07-01 08:57:28.365 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 08:57:28.365 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:57:28.365 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 08:57:28.365 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 08:57:28.365 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==>  Preparing: select name from publish
2025-07-01 08:57:28.365 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:57:28.365 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select name from publish ::: DataSources: slave
2025-07-01 08:57:28.366 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select * from book limit ?,?
2025-07-01 08:57:28.366 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:57:28.366 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book limit ?,? ::: DataSources: slave
2025-07-01 08:57:28.366 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 08:57:28.366 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==> Parameters: 
2025-07-01 08:57:28.366 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 08:57:28.366 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:57:28.366 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 08:57:28.366 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 08:57:28.366 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 08:57:28.368 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 08:57:28.369 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 08:57:28.369 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-01 08:57:28.369 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:57:28.369 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 08:57:28.370 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 08:57:28.370 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 08:57:28.370 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:57:28.370 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 08:57:28.370 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 08:57:28.371 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 08:57:28.372 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 08:57:28.372 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:57:28.372 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 08:57:28.372 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - <==      Total: 5
2025-07-01 08:57:28.372 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 08:57:28.373 [http-nio-8080-exec-5] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-01 08:57:28.373 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 08:57:28.373 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 08:57:28.373 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:57:28.373 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 08:57:28.374 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 08:57:28.375 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 08:57:28.376 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 08:57:28.376 [http-nio-8080-exec-5] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-01 08:57:28.377 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 08:57:28.377 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:57:28.377 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 08:57:28.378 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 08:57:28.381 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 08:57:28.381 [http-nio-8080-exec-5] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-01 08:57:28.382 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 08:57:28.382 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:57:28.382 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 08:57:28.382 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 08:57:28.384 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 08:57:28.384 [http-nio-8080-exec-5] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-01 08:57:28.385 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 08:57:28.385 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:57:28.385 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 08:57:28.385 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 08:57:28.386 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 08:57:28.386 [http-nio-8080-exec-5] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-01 08:57:28.386 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-01 08:57:28.386 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 08:57:28.386 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-01 08:57:28.387 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-01 08:57:28.388 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-01 09:24:21.796 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-01 09:24:21.798 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-01 09:24:21.798 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-01 09:24:21.799 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-01 09:24:27.636 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-01 09:24:27.645 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 21824 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 09:24:27.646 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 09:24:27.646 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 09:24:27.765 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-01 09:24:27.765 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-01 09:24:28.200 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 09:24:28.201 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 09:24:28.223 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2025-07-01 09:24:28.398 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$cb4bdc06] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 09:24:28.414 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 09:24:28.799 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 09:24:28.800 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 09:24:28.800 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 09:24:28.800 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 09:24:28.804 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 09:24:28.810 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 09:24:28.811 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 09:24:28.811 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 09:24:28.867 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 09:24:28.867 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1101 ms
2025-07-01 09:24:28.871 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 09:24:29.574 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-01 09:24:29.598 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-01 09:24:29.888 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 09:24:29.888 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 09:24:30.247 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 09:24:30.360 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@f03eeee, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@546f129b, org.springframework.security.web.context.SecurityContextPersistenceFilter@5cb9f697, org.springframework.security.web.header.HeaderWriterFilter@6392883e, org.springframework.web.filter.CorsFilter@275f3cc, org.springframework.security.web.authentication.logout.LogoutFilter@423d3cc4, com.huang.store.security.JwtAuthenticationTokenFilter@36e3b19, com.huang.store.security.CustomAuthenticationFilter@4d6968e8, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@661e0b21, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@25d942f9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7eb0f26, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@9ebe4f6, org.springframework.security.web.session.SessionManagementFilter@51c7abe0, org.springframework.security.web.access.ExceptionTranslationFilter@3b66519b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@14be1a3f]
2025-07-01 09:24:30.589 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 09:24:30.605 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 09:24:30.618 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 09:24:30.625 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 3.27 seconds (JVM running for 3.892)
2025-07-01 09:24:32.093 [http-nio-8080-exec-3] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-01 09:24:32.093 [http-nio-8080-exec-3] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-01 09:24:32.094 [http-nio-8080-exec-3] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-01 09:24:32.213 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeActivityMapper.getAllActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 09:24:32.225 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 09:24:32.226 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 09:24:32.249 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeActivityMapper.getAllActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 09:24:32.264 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeActivityMapper.getAllActivities - <==      Total: 3
2025-07-01 09:24:32.268 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 09:24:32.268 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 09:24:32.268 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 09:24:32.269 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityCount - ==> Parameters: 
2025-07-01 09:24:32.270 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityCount - <==      Total: 1
2025-07-01 09:24:51.987 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==>  Preparing: select name from publish
2025-07-01 09:24:51.987 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 09:24:51.987 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select name from publish ::: DataSources: slave
2025-07-01 09:24:51.988 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==> Parameters: 
2025-07-01 09:24:51.990 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 09:24:51.990 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 09:24:51.990 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 09:24:51.992 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - <==      Total: 5
2025-07-01 09:24:52.087 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 09:24:52.091 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 09:24:52.093 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 09:24:52.094 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 09:24:52.094 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 09:24:52.095 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 09:24:52.096 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 09:24:52.097 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 09:24:52.097 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 09:24:52.097 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 09:24:52.098 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 09:24:52.101 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 09:24:52.102 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 09:24:52.102 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 09:24:52.102 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 09:24:52.102 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 09:24:52.104 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 09:24:52.104 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 09:24:52.104 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 09:24:52.104 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 09:24:52.105 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 09:24:52.107 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 09:24:52.553 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-01 09:24:52.553 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 09:24:52.553 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-01 09:24:52.555 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 1(Integer)
2025-07-01 09:24:52.558 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-01 09:24:52.558 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.BookMapper.getBookImgSrcList - ==>  Preparing: select imgSrc from bookimg where isbn=?
2025-07-01 09:24:52.559 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 09:24:52.559 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? ::: DataSources: slave
2025-07-01 09:24:52.560 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.BookMapper.getBookImgSrcList - ==> Parameters: 9787020002207(String)
2025-07-01 09:24:52.562 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.BookMapper.getBookImgSrcList - <==      Total: 2
2025-07-01 09:24:52.563 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 09:24:52.563 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 09:24:52.563 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 09:24:52.565 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 09:24:52.566 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 09:24:52.567 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookSort - ==>  Preparing: select * from booksort where id in (select bookSortId from booksortlist where bookId=?)
2025-07-01 09:24:52.567 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 09:24:52.567 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where id in (select bookSortId from booksortlist where bookId=?) ::: DataSources: slave
2025-07-01 09:24:52.570 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookSort - ==> Parameters: 1(Integer)
2025-07-01 09:24:52.572 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookSort - <==      Total: 1
2025-07-01 09:24:52.573 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortId - ==>  Preparing: select id from booksort where upperName=? and sortName=?
2025-07-01 09:24:52.573 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 09:24:52.573 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select id from booksort where upperName=? and sortName=? ::: DataSources: slave
2025-07-01 09:24:52.574 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortId - ==> Parameters: 无(String), 文学(String)
2025-07-01 09:24:52.575 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortId - <==      Total: 1
2025-07-01 09:24:54.968 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeActivityMapper.getAllActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 09:24:54.968 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 09:24:54.968 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 09:24:54.968 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeActivityMapper.getAllActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 09:24:54.976 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeActivityMapper.getAllActivities - <==      Total: 3
2025-07-01 09:24:54.977 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 09:24:54.977 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 09:24:54.977 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 09:24:54.978 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityCount - ==> Parameters: 
2025-07-01 09:24:54.979 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityCount - <==      Total: 1
2025-07-01 09:36:46.425 [http-nio-8080-exec-6] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzE0NDE2OTEsImV4cCI6MTc1MTMzMzI0MX0.gmbioKKmUHwqig_YcKVldniJLs89FRtpUJkWsotR8l3yiqI9PxQ5fuGmmVSbVVl91VDpbkj-rsZoRMK1HHg4RQ
2025-07-01 09:36:46.427 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeActivityMapper.getAllActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 09:36:46.428 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 09:36:46.428 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 09:36:46.437 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeActivityMapper.getAllActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 09:36:46.440 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeActivityMapper.getAllActivities - <==      Total: 3
2025-07-01 09:36:46.441 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 09:36:46.441 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 09:36:46.441 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 09:36:46.442 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityCount - ==> Parameters: 
2025-07-01 09:36:46.443 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityCount - <==      Total: 1
2025-07-01 09:39:59.790 [http-nio-8080-exec-8] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzE0NDE2OTEsImV4cCI6MTc1MTMzMzI0MX0.gmbioKKmUHwqig_YcKVldniJLs89FRtpUJkWsotR8l3yiqI9PxQ5fuGmmVSbVVl91VDpbkj-rsZoRMK1HHg4RQ
2025-07-01 09:39:59.791 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeActivityMapper.getAllActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 09:39:59.791 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 09:39:59.791 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 09:39:59.793 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeActivityMapper.getAllActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 09:39:59.795 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeActivityMapper.getAllActivities - <==      Total: 3
2025-07-01 09:39:59.795 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 09:39:59.795 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 09:39:59.795 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 09:39:59.795 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityCount - ==> Parameters: 
2025-07-01 09:39:59.796 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityCount - <==      Total: 1
2025-07-01 09:42:32.121 [http-nio-8080-exec-7] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzE0NDE2OTEsImV4cCI6MTc1MTMzMzI0MX0.gmbioKKmUHwqig_YcKVldniJLs89FRtpUJkWsotR8l3yiqI9PxQ5fuGmmVSbVVl91VDpbkj-rsZoRMK1HHg4RQ
2025-07-01 09:42:32.123 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.getAllActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 09:42:32.123 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 09:42:32.123 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 09:42:32.125 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.getAllActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 09:42:32.127 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.getAllActivities - <==      Total: 3
2025-07-01 09:42:32.127 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 09:42:32.127 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 09:42:32.127 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 09:42:32.128 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityCount - ==> Parameters: 
2025-07-01 09:42:32.129 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityCount - <==      Total: 1
2025-07-01 09:47:24.682 [http-nio-8080-exec-9] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzE0NDE2OTEsImV4cCI6MTc1MTMzMzI0MX0.gmbioKKmUHwqig_YcKVldniJLs89FRtpUJkWsotR8l3yiqI9PxQ5fuGmmVSbVVl91VDpbkj-rsZoRMK1HHg4RQ
2025-07-01 09:47:24.683 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeActivityMapper.getAllActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 09:47:24.683 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 09:47:24.683 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 09:47:24.685 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeActivityMapper.getAllActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 09:47:24.688 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeActivityMapper.getAllActivities - <==      Total: 3
2025-07-01 09:47:24.689 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 09:47:24.689 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 09:47:24.689 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 09:47:24.689 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityCount - ==> Parameters: 
2025-07-01 09:47:24.690 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityCount - <==      Total: 1
2025-07-01 09:47:58.928 [http-nio-8080-exec-10] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzE0NDE2OTEsImV4cCI6MTc1MTMzMzI0MX0.gmbioKKmUHwqig_YcKVldniJLs89FRtpUJkWsotR8l3yiqI9PxQ5fuGmmVSbVVl91VDpbkj-rsZoRMK1HHg4RQ
2025-07-01 09:47:58.932 [http-nio-8080-exec-10] ERROR com.huang.store.exception.GlobalExceptionHandler - 系统异常
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:260)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:442)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:383)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:125)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:67)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:498)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1266)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1048)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2025-07-01 09:47:58.938 [http-nio-8080-exec-10] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
2025-07-01 09:48:04.988 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzE0NDE2OTEsImV4cCI6MTc1MTMzMzI0MX0.gmbioKKmUHwqig_YcKVldniJLs89FRtpUJkWsotR8l3yiqI9PxQ5fuGmmVSbVVl91VDpbkj-rsZoRMK1HHg4RQ
2025-07-01 09:48:04.989 [http-nio-8080-exec-3] ERROR com.huang.store.exception.GlobalExceptionHandler - 系统异常
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:260)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:442)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:383)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:125)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:67)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:498)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1266)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1048)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2025-07-01 09:48:04.990 [http-nio-8080-exec-3] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
2025-07-01 09:48:09.630 [http-nio-8080-exec-2] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzE0NDE2OTEsImV4cCI6MTc1MTMzMzI0MX0.gmbioKKmUHwqig_YcKVldniJLs89FRtpUJkWsotR8l3yiqI9PxQ5fuGmmVSbVVl91VDpbkj-rsZoRMK1HHg4RQ
2025-07-01 09:48:09.632 [http-nio-8080-exec-2] ERROR com.huang.store.exception.GlobalExceptionHandler - 系统异常
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:260)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:442)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:383)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:125)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:67)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:498)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1266)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1048)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2025-07-01 09:48:09.633 [http-nio-8080-exec-2] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
2025-07-01 09:48:35.644 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzE0NDE2OTEsImV4cCI6MTc1MTMzMzI0MX0.gmbioKKmUHwqig_YcKVldniJLs89FRtpUJkWsotR8l3yiqI9PxQ5fuGmmVSbVVl91VDpbkj-rsZoRMK1HHg4RQ
2025-07-01 09:48:35.645 [http-nio-8080-exec-1] ERROR com.huang.store.exception.GlobalExceptionHandler - 系统异常
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:260)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:442)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:383)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:125)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:67)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:498)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1266)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1048)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2025-07-01 09:48:35.646 [http-nio-8080-exec-1] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
2025-07-01 09:48:59.470 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzE0NDE2OTEsImV4cCI6MTc1MTMzMzI0MX0.gmbioKKmUHwqig_YcKVldniJLs89FRtpUJkWsotR8l3yiqI9PxQ5fuGmmVSbVVl91VDpbkj-rsZoRMK1HHg4RQ
2025-07-01 09:48:59.473 [http-nio-8080-exec-4] ERROR com.huang.store.exception.GlobalExceptionHandler - 系统异常
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:260)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:442)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:383)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:125)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:67)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:498)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1266)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1048)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2025-07-01 09:48:59.475 [http-nio-8080-exec-4] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
2025-07-01 09:50:27.091 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-01 09:50:27.091 [Thread-7] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 09:50:27.092 [Thread-7] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-07-01 09:50:27.100 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-2070343663] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 09:50:27.100 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-2070343663] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 09:50:27.101 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1421211112] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 09:50:27.101 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1421211112] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 09:50:27.101 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-nioEventLoop-4-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/sun.nio.ch.WEPoll.wait(Native Method)
 java.base@17.0.8/sun.nio.ch.WEPollSelectorImpl.doSelect(WEPollSelectorImpl.java:111)
 java.base@17.0.8/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:129)
 java.base@17.0.8/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:146)
 app//io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:68)
 app//io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:879)
 app//io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:526)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 09:50:27.102 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 09:50:27.102 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-01 09:50:27.104 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-01 09:50:27.222 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-01 09:50:27.226 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-01 09:50:27.226 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-01 09:50:27.228 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-01 09:50:27.319 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 21824 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 09:50:27.319 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 09:50:27.319 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 09:50:27.522 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 09:50:27.522 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 09:50:27.532 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2025-07-01 09:50:27.576 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$cb4bdc06] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 09:50:27.581 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 09:50:27.640 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 09:50:27.641 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 09:50:27.641 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 09:50:27.641 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 09:50:27.641 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 09:50:27.642 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 09:50:27.642 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 09:50:27.642 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 09:50:27.657 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 09:50:27.657 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 333 ms
2025-07-01 09:50:27.659 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 09:50:27.734 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} inited
2025-07-01 09:50:27.749 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} inited
2025-07-01 09:50:27.803 [restartedMain] ERROR o.s.boot.web.embedded.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'myUserDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeActivityMapper.xml]'
2025-07-01 09:50:27.809 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 09:50:27.811 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1839122707] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 09:50:27.811 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1839122707] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 09:50:27.811 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-449220588] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 09:50:27.812 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-449220588] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 09:50:27.812 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2025-07-01 09:50:27.812 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closing ...
2025-07-01 09:50:27.813 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed
2025-07-01 09:50:27.813 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closing ...
2025-07-01 09:50:27.813 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed
2025-07-01 09:50:27.816 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 09:50:27.830 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:165)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:142)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'myUserDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeActivityMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:405)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4904)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	... 18 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeActivityMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 69 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeActivityMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 83 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeActivityMapper.xml]'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1534)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 97 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeActivityMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	... 108 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeActivityMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 121 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeActivityMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$c5a0ea65.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$c5a0ea65$$FastClassBySpringCGLIB$$9703adaa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$c5a0ea65.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 122 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 99; columnNumber: 30; 元素内容必须由格式正确的字符数据或标记组成。
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:262)
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:127)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.<init>(XMLMapperBuilder.java:85)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:697)
	... 135 common frames omitted
Caused by: org.xml.sax.SAXParseException: 元素内容必须由格式正确的字符数据或标记组成。
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:204)
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:178)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1465)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.startOfMarkup(XMLDocumentFragmentScannerImpl.java:2589)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2679)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:605)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:542)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:889)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:825)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:247)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:342)
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:260)
	... 138 common frames omitted
2025-07-01 09:53:41.913 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 21824 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 09:53:41.913 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 09:53:41.913 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 09:53:42.117 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 09:53:42.117 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 09:53:42.127 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2025-07-01 09:53:42.189 [restartedMain] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[com.huang.store.mapper]' package. Please check your configuration.
2025-07-01 09:53:42.257 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 09:53:42.258 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 09:53:42.258 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 09:53:42.258 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 09:53:42.259 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 09:53:42.259 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 09:53:42.259 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 09:53:42.259 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 09:53:42.283 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 09:53:42.283 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 367 ms
2025-07-01 09:53:42.299 [restartedMain] ERROR org.apache.catalina.session.StandardManager - Exception loading sessions from persistent storage
java.lang.ClassNotFoundException: com.huang.store.entity.user.SecurityUser
	at org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedWebappClassLoader.loadClass(TomcatEmbeddedWebappClassLoader.java:72)
	at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1141)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:467)
	at org.apache.catalina.util.CustomObjectInputStream.resolveClass(CustomObjectInputStream.java:158)
	at java.base/java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:2045)
	at java.base/java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1909)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2235)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream$FieldValues.<init>(ObjectInputStream.java:2617)
	at java.base/java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2468)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2268)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream$FieldValues.<init>(ObjectInputStream.java:2617)
	at java.base/java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2468)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2268)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:514)
	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:472)
	at org.apache.catalina.session.StandardSession.doReadObject(StandardSession.java:1530)
	at org.apache.catalina.session.StandardSession.readObjectData(StandardSession.java:1000)
	at org.apache.catalina.session.StandardManager.doLoad(StandardManager.java:210)
	at org.apache.catalina.session.StandardManager.load(StandardManager.java:156)
	at org.apache.catalina.session.StandardManager.startInternal(StandardManager.java:346)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4931)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2025-07-01 09:53:42.348 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerAdapter' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]: Factory method 'requestMappingHandlerAdapter' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'messageConverters' defined in class path resource [org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.autoconfigure.http.HttpMessageConverters]: Factory method 'messageConverters' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mappingJackson2HttpMessageConverter' defined in class path resource [org/springframework/boot/autoconfigure/http/JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration.class]: Unsatisfied dependency expressed through method 'mappingJackson2HttpMessageConverter' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jacksonObjectMapper' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperConfiguration.class]: Unsatisfied dependency expressed through method 'jacksonObjectMapper' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jacksonObjectMapperBuilder' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder]: Factory method 'jacksonObjectMapperBuilder' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jsonMixinModule' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\entity\book\Recommend.class]; nested exception is java.lang.ArrayIndexOutOfBoundsException: Index 6 out of bounds for length 0
2025-07-01 09:53:42.349 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 09:53:42.353 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 09:53:42.359 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerAdapter' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]: Factory method 'requestMappingHandlerAdapter' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'messageConverters' defined in class path resource [org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.autoconfigure.http.HttpMessageConverters]: Factory method 'messageConverters' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mappingJackson2HttpMessageConverter' defined in class path resource [org/springframework/boot/autoconfigure/http/JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration.class]: Unsatisfied dependency expressed through method 'mappingJackson2HttpMessageConverter' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jacksonObjectMapper' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperConfiguration.class]: Unsatisfied dependency expressed through method 'jacksonObjectMapper' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jacksonObjectMapperBuilder' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder]: Factory method 'jacksonObjectMapperBuilder' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jsonMixinModule' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\entity\book\Recommend.class]; nested exception is java.lang.ArrayIndexOutOfBoundsException: Index 6 out of bounds for length 0
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]: Factory method 'requestMappingHandlerAdapter' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'messageConverters' defined in class path resource [org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.autoconfigure.http.HttpMessageConverters]: Factory method 'messageConverters' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mappingJackson2HttpMessageConverter' defined in class path resource [org/springframework/boot/autoconfigure/http/JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration.class]: Unsatisfied dependency expressed through method 'mappingJackson2HttpMessageConverter' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jacksonObjectMapper' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperConfiguration.class]: Unsatisfied dependency expressed through method 'jacksonObjectMapper' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jacksonObjectMapperBuilder' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder]: Factory method 'jacksonObjectMapperBuilder' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jsonMixinModule' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\entity\book\Recommend.class]; nested exception is java.lang.ArrayIndexOutOfBoundsException: Index 6 out of bounds for length 0
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'messageConverters' defined in class path resource [org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.autoconfigure.http.HttpMessageConverters]: Factory method 'messageConverters' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mappingJackson2HttpMessageConverter' defined in class path resource [org/springframework/boot/autoconfigure/http/JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration.class]: Unsatisfied dependency expressed through method 'mappingJackson2HttpMessageConverter' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jacksonObjectMapper' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperConfiguration.class]: Unsatisfied dependency expressed through method 'jacksonObjectMapper' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jacksonObjectMapperBuilder' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder]: Factory method 'jacksonObjectMapperBuilder' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jsonMixinModule' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\entity\book\Recommend.class]; nested exception is java.lang.ArrayIndexOutOfBoundsException: Index 6 out of bounds for length 0
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getIfAvailable(DefaultListableBeanFactory.java:2032)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.ifAvailable(DefaultListableBeanFactory.java:2043)
	at org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter.configureMessageConverters(WebMvcAutoConfiguration.java:231)
	at org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite.configureMessageConverters(WebMvcConfigurerComposite.java:137)
	at org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration.configureMessageConverters(DelegatingWebMvcConfiguration.java:118)
	at org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport.getMessageConverters(WebMvcConfigurationSupport.java:865)
	at org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport.requestMappingHandlerAdapter(WebMvcConfigurationSupport.java:673)
	at org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration.requestMappingHandlerAdapter(WebMvcAutoConfiguration.java:420)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.autoconfigure.http.HttpMessageConverters]: Factory method 'messageConverters' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mappingJackson2HttpMessageConverter' defined in class path resource [org/springframework/boot/autoconfigure/http/JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration.class]: Unsatisfied dependency expressed through method 'mappingJackson2HttpMessageConverter' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jacksonObjectMapper' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperConfiguration.class]: Unsatisfied dependency expressed through method 'jacksonObjectMapper' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jacksonObjectMapperBuilder' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder]: Factory method 'jacksonObjectMapperBuilder' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jsonMixinModule' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\entity\book\Recommend.class]; nested exception is java.lang.ArrayIndexOutOfBoundsException: Index 6 out of bounds for length 0
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 49 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mappingJackson2HttpMessageConverter' defined in class path resource [org/springframework/boot/autoconfigure/http/JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration.class]: Unsatisfied dependency expressed through method 'mappingJackson2HttpMessageConverter' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jacksonObjectMapper' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperConfiguration.class]: Unsatisfied dependency expressed through method 'jacksonObjectMapper' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jacksonObjectMapperBuilder' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder]: Factory method 'jacksonObjectMapperBuilder' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jsonMixinModule' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\entity\book\Recommend.class]; nested exception is java.lang.ArrayIndexOutOfBoundsException: Index 6 out of bounds for length 0
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:536)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1616)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1349)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.resolveStream(DefaultListableBeanFactory.java:2119)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.orderedStream(DefaultListableBeanFactory.java:2113)
	at org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration.messageConverters(HttpMessageConvertersAutoConfiguration.java:70)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 50 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jacksonObjectMapper' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperConfiguration.class]: Unsatisfied dependency expressed through method 'jacksonObjectMapper' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jacksonObjectMapperBuilder' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder]: Factory method 'jacksonObjectMapperBuilder' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jsonMixinModule' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\entity\book\Recommend.class]; nested exception is java.lang.ArrayIndexOutOfBoundsException: Index 6 out of bounds for length 0
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:536)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 72 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jacksonObjectMapperBuilder' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder]: Factory method 'jacksonObjectMapperBuilder' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jsonMixinModule' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\entity\book\Recommend.class]; nested exception is java.lang.ArrayIndexOutOfBoundsException: Index 6 out of bounds for length 0
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:353)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 86 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder]: Factory method 'jacksonObjectMapperBuilder' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jsonMixinModule' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\entity\book\Recommend.class]; nested exception is java.lang.ArrayIndexOutOfBoundsException: Index 6 out of bounds for length 0
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 98 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jsonMixinModule' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\entity\book\Recommend.class]; nested exception is java.lang.ArrayIndexOutOfBoundsException: Index 6 out of bounds for length 0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:673)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:661)
	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1314)
	at org.springframework.beans.factory.BeanFactoryUtils.beansOfTypeIncludingAncestors(BeanFactoryUtils.java:329)
	at org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer.getBeans(JacksonAutoConfiguration.java:335)
	at org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer.configureModules(JacksonAutoConfiguration.java:295)
	at org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer.customize(JacksonAutoConfiguration.java:200)
	at org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration.customize(JacksonAutoConfiguration.java:148)
	at org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration.jacksonObjectMapperBuilder(JacksonAutoConfiguration.java:141)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 99 common frames omitted
Caused by: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\entity\book\Recommend.class]; nested exception is java.lang.ArrayIndexOutOfBoundsException: Index 6 out of bounds for length 0
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:457)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:316)
	at org.springframework.boot.jackson.JsonMixinModule.afterPropertiesSet(JsonMixinModule.java:73)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 119 common frames omitted
Caused by: java.lang.ArrayIndexOutOfBoundsException: Index 6 out of bounds for length 0
	at org.springframework.asm.ClassReader.readShort(ClassReader.java:3615)
	at org.springframework.asm.ClassReader.<init>(ClassReader.java:197)
	at org.springframework.asm.ClassReader.<init>(ClassReader.java:180)
	at org.springframework.asm.ClassReader.<init>(ClassReader.java:166)
	at org.springframework.asm.ClassReader.<init>(ClassReader.java:287)
	at org.springframework.core.type.classreading.SimpleMetadataReader.getClassReader(SimpleMetadataReader.java:57)
	at org.springframework.core.type.classreading.SimpleMetadataReader.<init>(SimpleMetadataReader.java:48)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:103)
	at org.springframework.core.type.classreading.CachingMetadataReaderFactory.getMetadataReader(CachingMetadataReaderFactory.java:123)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:429)
	... 123 common frames omitted
2025-07-01 09:53:43.998 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 21824 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 09:53:43.999 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 09:53:44.000 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 09:53:44.981 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 09:53:44.982 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 09:53:45.021 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 39 ms. Found 0 Redis repository interfaces.
2025-07-01 09:53:45.797 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$cb4bdc06] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 09:53:45.808 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 09:53:46.170 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 09:53:46.170 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 09:53:46.170 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 09:53:46.170 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 09:53:46.172 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 09:53:46.173 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 09:53:46.173 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 09:53:46.173 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 09:53:46.390 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-2].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 09:53:46.390 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2388 ms
2025-07-01 09:53:46.771 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} inited
2025-07-01 09:53:46.844 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} inited
2025-07-01 09:53:48.183 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController': Unsatisfied dependency expressed through field 'cartService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstCart': Unsatisfied dependency expressed through field 'cartMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\CartMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
2025-07-01 09:53:48.184 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} closing ...
2025-07-01 09:53:48.184 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} closed
2025-07-01 09:53:48.184 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} closing ...
2025-07-01 09:53:48.185 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} closed
2025-07-01 09:53:48.186 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 09:53:48.191 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 09:53:48.195 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController': Unsatisfied dependency expressed through field 'cartService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstCart': Unsatisfied dependency expressed through field 'cartMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\CartMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstCart': Unsatisfied dependency expressed through field 'cartMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\CartMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 25 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\CartMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1534)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 39 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	... 50 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 63 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$c5a0ea65.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$c5a0ea65$$FastClassBySpringCGLIB$$9703adaa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$c5a0ea65.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 64 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.dto.OrderDto'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.dto.OrderDto
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 77 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.dto.OrderDto'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.dto.OrderDto
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:270)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:262)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(XMLMapperBuilder.java:254)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:124)
	... 79 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.dto.OrderDto'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.dto.OrderDto
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 83 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.dto.OrderDto
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 85 common frames omitted
2025-07-01 09:55:25.117 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 21824 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 09:55:25.117 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 09:55:25.118 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 09:55:25.313 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 09:55:25.313 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 09:55:25.323 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2025-07-01 09:55:25.376 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$cb4bdc06] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 09:55:25.383 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 09:55:25.424 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 09:55:25.424 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 09:55:25.424 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 09:55:25.424 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 09:55:25.425 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 09:55:25.425 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 09:55:25.426 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 09:55:25.426 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 09:55:25.449 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-3].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 09:55:25.449 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 330 ms
2025-07-01 09:55:25.524 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} inited
2025-07-01 09:55:25.545 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} inited
2025-07-01 09:55:25.592 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController': Unsatisfied dependency expressed through field 'cartService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstCart': Unsatisfied dependency expressed through field 'cartMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\CartMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
2025-07-01 09:55:25.593 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} closing ...
2025-07-01 09:55:25.594 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} closed
2025-07-01 09:55:25.594 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} closing ...
2025-07-01 09:55:25.594 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} closed
2025-07-01 09:55:25.595 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 09:55:25.601 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 09:55:25.606 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController': Unsatisfied dependency expressed through field 'cartService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstCart': Unsatisfied dependency expressed through field 'cartMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\CartMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstCart': Unsatisfied dependency expressed through field 'cartMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\CartMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 25 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\CartMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1534)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 39 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	... 50 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 63 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$c5a0ea65.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$c5a0ea65$$FastClassBySpringCGLIB$$9703adaa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$c5a0ea65.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 64 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.dto.OrderDto'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.dto.OrderDto
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 77 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.dto.OrderDto'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.dto.OrderDto
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:270)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:262)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(XMLMapperBuilder.java:254)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:124)
	... 79 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.dto.OrderDto'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.dto.OrderDto
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 83 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.dto.OrderDto
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 85 common frames omitted
2025-07-01 09:55:29.094 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 21824 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 09:55:29.094 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 09:55:29.094 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 09:55:29.194 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 09:55:29.194 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 09:55:29.196 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 0 Redis repository interfaces.
2025-07-01 09:55:29.222 [restartedMain] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[com.huang.store.mapper]' package. Please check your configuration.
2025-07-01 09:55:29.252 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 09:55:29.253 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 09:55:29.253 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 09:55:29.253 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 09:55:29.253 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 09:55:29.254 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 09:55:29.254 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 09:55:29.254 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 09:55:29.267 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-4].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 09:55:29.267 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 172 ms
2025-07-01 09:55:29.311 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 09:55:29.354 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-9} inited
2025-07-01 09:55:29.371 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-10} inited
2025-07-01 09:55:29.390 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
2025-07-01 09:55:29.390 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-9} closing ...
2025-07-01 09:55:29.391 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-9} closed
2025-07-01 09:55:29.391 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-10} closing ...
2025-07-01 09:55:29.391 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-10} closed
2025-07-01 09:55:29.392 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 09:55:29.396 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 09:55:29.398 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 24 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$c5a0ea65.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$c5a0ea65$$FastClassBySpringCGLIB$$9703adaa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$c5a0ea65.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:78)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:144)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:136)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:126)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 46 common frames omitted
2025-07-01 09:55:31.266 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 21824 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 09:55:31.266 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 09:55:31.266 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 09:55:31.363 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 09:55:31.363 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 09:55:31.370 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2025-07-01 09:55:31.399 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$cb4bdc06] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 09:55:31.404 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 09:55:31.437 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 09:55:31.437 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 09:55:31.437 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 09:55:31.437 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 09:55:31.437 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 09:55:31.438 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 09:55:31.438 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 09:55:31.438 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 09:55:31.449 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-5].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 09:55:31.449 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 182 ms
2025-07-01 09:55:31.451 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 09:55:31.507 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-11} inited
2025-07-01 09:55:31.524 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-12} inited
2025-07-01 09:55:31.560 [restartedMain] ERROR o.s.boot.web.embedded.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'myUserDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeActivityMapper.xml]'
2025-07-01 09:55:31.561 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 09:55:31.562 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1156467659] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 09:55:31.562 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1156467659] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 09:55:31.562 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-976324736] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 09:55:31.563 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-976324736] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 09:55:31.563 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2025-07-01 09:55:31.563 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-11} closing ...
2025-07-01 09:55:31.564 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-11} closed
2025-07-01 09:55:31.564 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-12} closing ...
2025-07-01 09:55:31.564 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-12} closed
2025-07-01 09:55:31.567 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 09:55:31.569 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:165)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:142)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'myUserDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeActivityMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:405)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4904)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	... 18 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeActivityMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 69 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeActivityMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 83 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeActivityMapper.xml]'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1534)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 97 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeActivityMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	... 108 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeActivityMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 121 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeActivityMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$c5a0ea65.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$c5a0ea65$$FastClassBySpringCGLIB$$9703adaa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$c5a0ea65.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 122 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 99; columnNumber: 30; 元素内容必须由格式正确的字符数据或标记组成。
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:262)
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:127)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.<init>(XMLMapperBuilder.java:85)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:697)
	... 135 common frames omitted
Caused by: org.xml.sax.SAXParseException: 元素内容必须由格式正确的字符数据或标记组成。
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:204)
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:178)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1465)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.startOfMarkup(XMLDocumentFragmentScannerImpl.java:2589)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2679)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:605)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:542)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:889)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:825)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:247)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:342)
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:260)
	... 138 common frames omitted
2025-07-01 09:55:44.192 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-01 09:55:44.200 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 16984 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 09:55:44.201 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 09:55:44.201 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 09:55:44.297 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-01 09:55:44.297 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-01 09:55:44.754 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 09:55:44.756 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 09:55:44.781 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2025-07-01 09:55:44.987 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$6e951d81] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 09:55:45.004 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 09:55:45.335 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 09:55:45.335 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 09:55:45.335 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 09:55:45.335 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 09:55:45.338 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 09:55:45.343 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 09:55:45.344 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 09:55:45.344 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 09:55:45.386 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 09:55:45.386 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1088 ms
2025-07-01 09:55:45.390 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 09:55:46.001 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-01 09:55:46.030 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-01 09:55:46.226 [restartedMain] ERROR o.s.boot.web.embedded.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'myUserDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeActivityMapper.xml]'
2025-07-01 09:55:46.246 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 09:55:46.251 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1710765052] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 09:55:46.252 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1710765052] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 09:55:46.252 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-130553335] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 09:55:46.252 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-130553335] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 09:55:46.253 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2025-07-01 09:55:46.254 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-01 09:55:46.258 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-01 09:55:46.258 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-01 09:55:46.259 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-01 09:55:46.266 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 09:55:46.284 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:165)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:142)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'myUserDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeActivityMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:405)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4904)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	... 18 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeActivityMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 69 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeActivityMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 83 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeActivityMapper.xml]'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1534)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 97 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeActivityMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	... 108 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeActivityMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 121 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeActivityMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$68ea2be0.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$68ea2be0$$FastClassBySpringCGLIB$$fc9038e7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$68ea2be0.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 122 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 99; columnNumber: 30; 元素内容必须由格式正确的字符数据或标记组成。
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:262)
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:127)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.<init>(XMLMapperBuilder.java:85)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:697)
	... 135 common frames omitted
Caused by: org.xml.sax.SAXParseException: 元素内容必须由格式正确的字符数据或标记组成。
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:204)
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:178)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1465)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.startOfMarkup(XMLDocumentFragmentScannerImpl.java:2589)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2679)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:605)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:542)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:889)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:825)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:247)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:342)
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:260)
	... 138 common frames omitted
2025-07-01 10:01:09.483 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-01 10:01:09.499 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 19440 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 10:01:09.500 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 10:01:09.501 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 10:01:09.637 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-01 10:01:09.638 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-01 10:01:10.114 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 10:01:10.115 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 10:01:10.138 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2025-07-01 10:01:10.322 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$9cadff8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 10:01:10.334 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 10:01:10.711 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 10:01:10.712 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 10:01:10.712 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 10:01:10.713 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 10:01:10.717 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 10:01:10.724 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 10:01:10.725 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 10:01:10.725 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 10:01:10.777 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 10:01:10.777 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1139 ms
2025-07-01 10:01:10.781 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 10:01:11.416 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-01 10:01:11.443 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-01 10:01:11.603 [restartedMain] ERROR o.s.boot.web.embedded.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'myUserDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeActivityMapper.xml]'
2025-07-01 10:01:11.621 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 10:01:11.625 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-172424139] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 10:01:11.626 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-172424139] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 10:01:11.626 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1198554619] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 10:01:11.627 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1198554619] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 10:01:11.628 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2025-07-01 10:01:11.628 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-01 10:01:11.632 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-01 10:01:11.633 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-01 10:01:11.634 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-01 10:01:11.640 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 10:01:11.654 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:165)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:142)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'myUserDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeActivityMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:405)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4904)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	... 18 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeActivityMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 69 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeActivityMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 83 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeActivityMapper.xml]'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1534)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 97 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeActivityMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	... 108 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeActivityMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 121 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeActivityMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$97030dea.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$97030dea$$FastClassBySpringCGLIB$$a253911f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$97030dea.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 122 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 99; columnNumber: 30; 元素内容必须由格式正确的字符数据或标记组成。
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:262)
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:127)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.<init>(XMLMapperBuilder.java:85)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:697)
	... 135 common frames omitted
Caused by: org.xml.sax.SAXParseException: 元素内容必须由格式正确的字符数据或标记组成。
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:204)
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:178)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1465)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.startOfMarkup(XMLDocumentFragmentScannerImpl.java:2589)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2679)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:605)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:542)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:889)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:825)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:247)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:342)
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:260)
	... 138 common frames omitted
2025-07-01 10:02:30.663 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-01 10:02:30.677 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 20900 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 10:02:30.677 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 10:02:30.677 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 10:02:30.786 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-01 10:02:30.787 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-01 10:02:31.225 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 10:02:31.227 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 10:02:31.253 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2025-07-01 10:02:31.431 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$6bd296c6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 10:02:31.444 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 10:02:31.808 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 10:02:31.808 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 10:02:31.809 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 10:02:31.809 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 10:02:31.813 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 10:02:31.819 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 10:02:31.821 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 10:02:31.821 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 10:02:31.881 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 10:02:31.881 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1094 ms
2025-07-01 10:02:31.884 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 10:02:32.496 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-01 10:02:32.523 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-01 10:02:32.765 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 10:02:32.766 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 10:02:33.143 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 10:02:33.262 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@193f51c4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7e13962d, org.springframework.security.web.context.SecurityContextPersistenceFilter@5b2a9187, org.springframework.security.web.header.HeaderWriterFilter@4e9bb64c, org.springframework.web.filter.CorsFilter@10b0380f, org.springframework.security.web.authentication.logout.LogoutFilter@783949ac, com.huang.store.security.JwtAuthenticationTokenFilter@1227f3fb, com.huang.store.security.CustomAuthenticationFilter@1dbd7e94, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@706f29b4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6afe979b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1b58ad1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@f404105, org.springframework.security.web.session.SessionManagementFilter@9c4a1fb, org.springframework.security.web.access.ExceptionTranslationFilter@29115975, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@26b87dd5]
2025-07-01 10:02:33.472 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 10:02:33.486 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 10:02:33.503 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 10:02:33.511 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 3.17 seconds (JVM running for 3.472)
2025-07-01 10:03:51.564 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-01 10:03:51.578 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 17744 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 10:03:51.578 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 10:03:51.578 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 10:03:51.687 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-01 10:03:51.687 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-01 10:03:52.139 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 10:03:52.141 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 10:03:52.161 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2025-07-01 10:03:52.341 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$88bb740d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 10:03:52.356 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 10:03:52.678 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 10:03:52.678 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 10:03:52.678 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 10:03:52.679 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 10:03:52.681 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 10:03:52.686 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 10:03:52.687 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 10:03:52.688 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 10:03:52.732 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 10:03:52.732 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1045 ms
2025-07-01 10:03:52.736 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 10:03:53.333 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-01 10:03:53.355 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-01 10:03:53.614 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 10:03:53.614 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 10:03:53.963 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 10:03:54.073 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@217c02cf, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@71889cb, org.springframework.security.web.context.SecurityContextPersistenceFilter@5885ac6a, org.springframework.security.web.header.HeaderWriterFilter@70cb87d, org.springframework.web.filter.CorsFilter@7792ce02, org.springframework.security.web.authentication.logout.LogoutFilter@329d7993, com.huang.store.security.JwtAuthenticationTokenFilter@462ea444, com.huang.store.security.CustomAuthenticationFilter@37e174f, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@239db831, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2f3dc194, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3fdaa6b0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6426de3e, org.springframework.security.web.session.SessionManagementFilter@67fc8606, org.springframework.security.web.access.ExceptionTranslationFilter@64f21ef7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@36fd35f5]
2025-07-01 10:03:54.310 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 10:03:54.327 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 10:03:54.343 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 10:03:54.351 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 3.085 seconds (JVM running for 3.587)
2025-07-01 10:04:00.036 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-01 10:04:00.036 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-01 10:04:00.037 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-01 10:04:00.087 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzE0NDE2OTEsImV4cCI6MTc1MTMzMzI0MX0.gmbioKKmUHwqig_YcKVldniJLs89FRtpUJkWsotR8l3yiqI9PxQ5fuGmmVSbVVl91VDpbkj-rsZoRMK1HHg4RQ
2025-07-01 10:04:02.833 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 10:04:02.892 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:04:02.893 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 10:04:03.066 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 2545059634@qq.com(String)
2025-07-01 10:04:03.096 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 10:04:03.116 [http-nio-8080-exec-2] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:2545059634@qq.com    数据库密码:$2a$10$w8zNNUSDq3MCiLDDuAhYXedA0QGva1Z4.6UxO61Njhsrlo8voc01G
2025-07-01 10:04:03.229 [http-nio-8080-exec-2] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=2545059634@qq.com, password=$2a$10$w8zNNUSDq3MCiLDDuAhYXedA0QGva1Z4.6UxO61Njhsrlo8voc01G, enabled=true, roles=[ROLE_ADMIN]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]
2025-07-01 10:04:03.289 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 10:04:03.292 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:04:03.293 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 10:04:03.295 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 2545059634@qq.com(String)
2025-07-01 10:04:03.301 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 10:04:08.050 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 10:04:08.050 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:04:08.050 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 10:04:08.058 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 10:04:08.071 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 10:04:08.074 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 10:04:08.074 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:04:08.074 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 10:04:08.078 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 10:04:08.079 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 10:04:10.210 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 10:04:10.211 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:04:10.211 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 10:04:10.212 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 1(Long)
2025-07-01 10:04:10.216 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 10:04:18.857 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 10:04:18.857 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:04:18.863 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 10:04:18.865 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 2(Long)
2025-07-01 10:04:18.872 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 10:04:22.002 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 10:04:22.002 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:04:22.002 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 10:04:22.003 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 3(Long)
2025-07-01 10:04:22.007 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 10:04:27.129 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 10:04:27.129 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:04:27.129 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 10:04:27.130 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 3(Long)
2025-07-01 10:04:27.133 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 10:04:38.559 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 10:04:38.559 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:04:38.559 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 10:04:38.559 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 1(Long)
2025-07-01 10:04:38.562 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 10:05:35.619 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 10:05:35.619 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:05:35.619 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 10:05:35.619 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 1(Long)
2025-07-01 10:05:35.621 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 10:06:35.374 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 10:06:35.374 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:06:35.374 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 10:06:35.375 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 10:06:35.376 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 10:06:35.377 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 10:06:35.377 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:06:35.377 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 10:06:35.377 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 10:06:35.378 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 10:06:36.651 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 10:06:36.651 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:06:36.651 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 10:06:36.652 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 1(Long)
2025-07-01 10:06:36.653 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 10:06:40.433 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 10:06:40.433 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:06:40.433 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 10:06:40.433 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 2(Long)
2025-07-01 10:06:40.434 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 10:06:52.254 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity WHERE activityName LIKE CONCAT('%', ?, '%') ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 10:06:52.254 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:06:52.254 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
         WHERE  activityName LIKE CONCAT('%', ?, '%') 
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 10:06:52.256 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 新年(String), 0(Integer), 5(Integer)
2025-07-01 10:06:52.261 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 1
2025-07-01 10:06:52.262 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity WHERE activityName LIKE CONCAT('%', ?, '%')
2025-07-01 10:06:52.263 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:06:52.263 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity
         WHERE  activityName LIKE CONCAT('%', ?, '%') ::: DataSources: slave
2025-07-01 10:06:52.264 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 新年(String)
2025-07-01 10:06:52.266 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 10:06:56.319 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 10:06:56.319 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:06:56.319 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 10:06:56.319 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 10:06:56.325 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 10:06:56.326 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 10:06:56.326 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:06:56.326 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 10:06:56.326 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 10:06:56.327 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 10:07:00.171 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 10:07:00.171 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:07:00.171 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 10:07:00.171 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 10:07:00.173 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 10:07:00.174 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 10:07:00.174 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:07:00.174 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 10:07:00.174 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 10:07:00.175 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 10:07:05.467 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity WHERE activityName LIKE CONCAT('%', ?, '%') ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 10:07:05.467 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:07:05.467 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
         WHERE  activityName LIKE CONCAT('%', ?, '%') 
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 10:07:05.467 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 午间(String), 0(Integer), 5(Integer)
2025-07-01 10:07:05.468 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 1
2025-07-01 10:07:05.469 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity WHERE activityName LIKE CONCAT('%', ?, '%')
2025-07-01 10:07:05.469 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:07:05.469 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity
         WHERE  activityName LIKE CONCAT('%', ?, '%') ::: DataSources: slave
2025-07-01 10:07:05.469 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 午间(String)
2025-07-01 10:07:05.471 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 10:07:09.049 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 10:07:09.049 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:07:09.049 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 10:07:09.049 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 10:07:09.050 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 10:07:09.051 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 10:07:09.051 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:07:09.051 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 10:07:09.051 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 10:07:09.052 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 10:12:29.690 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 10:12:29.690 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:12:29.690 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 10:12:29.697 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 10:12:29.699 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 10:12:29.700 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 10:12:29.700 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:12:29.700 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 10:12:29.700 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 10:12:29.702 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 10:15:24.927 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 10:15:24.927 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:15:24.927 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 10:15:24.929 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 10:15:24.930 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 10:15:24.930 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 10:15:24.930 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:15:24.930 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 10:15:24.930 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 10:15:24.931 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 10:21:37.838 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-01 10:21:37.838 [Thread-7] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 10:21:37.840 [Thread-7] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-07-01 10:21:37.854 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-321919284] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 10:21:37.854 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-321919284] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 10:21:37.854 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1376716376] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 10:21:37.855 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1376716376] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 10:21:37.855 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-01 10:21:37.857 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-01 10:21:37.872 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-01 10:21:37.876 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-01 10:21:37.877 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-01 10:21:37.878 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-01 10:21:37.974 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 17744 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 10:21:37.974 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 10:21:37.974 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 10:21:38.210 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 10:21:38.210 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 10:21:38.214 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-07-01 10:21:38.275 [restartedMain] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[com.huang.store.mapper]' package. Please check your configuration.
2025-07-01 10:21:38.374 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 10:21:38.375 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 10:21:38.375 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 10:21:38.375 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 10:21:38.376 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 10:21:38.376 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 10:21:38.377 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 10:21:38.378 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 10:21:38.402 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 10:21:38.403 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 421 ms
2025-07-01 10:21:38.423 [restartedMain] ERROR org.apache.catalina.session.StandardManager - Exception loading sessions from persistent storage
java.lang.ClassNotFoundException: com.huang.store.entity.user.SecurityUser
	at org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedWebappClassLoader.loadClass(TomcatEmbeddedWebappClassLoader.java:72)
	at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1141)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:467)
	at org.apache.catalina.util.CustomObjectInputStream.resolveClass(CustomObjectInputStream.java:158)
	at java.base/java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:2045)
	at java.base/java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1909)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2235)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream$FieldValues.<init>(ObjectInputStream.java:2617)
	at java.base/java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2468)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2268)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream$FieldValues.<init>(ObjectInputStream.java:2617)
	at java.base/java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2468)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2268)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:514)
	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:472)
	at org.apache.catalina.session.StandardSession.doReadObject(StandardSession.java:1530)
	at org.apache.catalina.session.StandardSession.readObjectData(StandardSession.java:1000)
	at org.apache.catalina.session.StandardManager.doLoad(StandardManager.java:210)
	at org.apache.catalina.session.StandardManager.load(StandardManager.java:156)
	at org.apache.catalina.session.StandardManager.startInternal(StandardManager.java:346)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4931)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2025-07-01 10:21:38.525 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 10:21:38.616 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} inited
2025-07-01 10:21:38.640 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} inited
2025-07-01 10:21:38.706 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\CartMapper.xml]'
2025-07-01 10:21:38.706 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closing ...
2025-07-01 10:21:38.707 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed
2025-07-01 10:21:38.707 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closing ...
2025-07-01 10:21:38.708 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed
2025-07-01 10:21:38.708 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 10:21:38.716 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 10:21:38.749 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\CartMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\CartMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 24 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\CartMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8310826c.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8310826c$$FastClassBySpringCGLIB$$6866eaef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8310826c.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\CartMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Cart'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Cart
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Cart'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Cart
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:78)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:144)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:136)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:126)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Cart'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Cart
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Cart
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 46 common frames omitted
2025-07-01 10:21:40.217 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 17744 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 10:21:40.217 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 10:21:40.217 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 10:21:40.334 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 10:21:40.334 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 10:21:40.341 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2025-07-01 10:21:40.373 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$88bb740d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 10:21:40.375 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 10:21:40.419 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 10:21:40.419 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 10:21:40.419 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 10:21:40.419 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 10:21:40.419 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 10:21:40.420 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 10:21:40.420 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 10:21:40.420 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 10:21:40.435 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 10:21:40.435 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 216 ms
2025-07-01 10:21:40.437 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 10:21:40.510 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} inited
2025-07-01 10:21:40.525 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} inited
2025-07-01 10:21:40.612 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 10:21:40.612 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 10:21:40.721 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 10:21:40.778 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7c24e8ad, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@173a4966, org.springframework.security.web.context.SecurityContextPersistenceFilter@1e37b3d4, org.springframework.security.web.header.HeaderWriterFilter@426c795b, org.springframework.web.filter.CorsFilter@907fac9, org.springframework.security.web.authentication.logout.LogoutFilter@6c101136, com.huang.store.security.JwtAuthenticationTokenFilter@739f3c3b, com.huang.store.security.CustomAuthenticationFilter@33c02d19, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6b72ccb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6c87bffd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4d80a597, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6f0663a0, org.springframework.security.web.session.SessionManagementFilter@41424441, org.springframework.security.web.access.ExceptionTranslationFilter@28ab4d32, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1e69696b]
2025-07-01 10:21:40.873 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 10:21:40.882 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 10:21:40.885 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 10:21:40.888 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 0.693 seconds (JVM running for 1070.124)
2025-07-01 10:21:41.031 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-01 10:21:41.046 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 22040 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 10:21:41.047 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 10:21:41.047 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 10:21:41.152 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-01 10:21:41.152 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-01 10:21:41.589 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 10:21:41.590 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 10:21:41.622 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23 ms. Found 0 Redis repository interfaces.
2025-07-01 10:21:41.800 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$6bd296c6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 10:21:41.813 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 10:21:42.194 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 10:21:42.194 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 10:21:42.195 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 10:21:42.195 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 10:21:42.199 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 10:21:42.206 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 10:21:42.208 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 10:21:42.208 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 10:21:42.258 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 10:21:42.258 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1105 ms
2025-07-01 10:21:42.262 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 10:21:42.896 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-01 10:21:42.923 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-01 10:21:43.178 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 10:21:43.178 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 10:21:43.551 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 10:21:43.670 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@12f6c216, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6a9e0040, org.springframework.security.web.context.SecurityContextPersistenceFilter@1ee14077, org.springframework.security.web.header.HeaderWriterFilter@3bd14e0d, org.springframework.web.filter.CorsFilter@72dc4e93, org.springframework.security.web.authentication.logout.LogoutFilter@1a30825b, com.huang.store.security.JwtAuthenticationTokenFilter@6392bb15, com.huang.store.security.CustomAuthenticationFilter@3d43e1e2, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2b72e9dc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@66904a55, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@9c4a1fb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@726be744, org.springframework.security.web.session.SessionManagementFilter@98165ee, org.springframework.security.web.access.ExceptionTranslationFilter@19d5b358, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@787b4cd8]
2025-07-01 10:21:43.882 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2025-07-01 10:21:43.895 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 10:21:43.899 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8080 is already in use
2025-07-01 10:21:43.909 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-01 10:21:43.913 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-01 10:21:43.913 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-01 10:21:43.914 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-01 10:21:43.917 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-01 10:21:43.917 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 10:21:43.922 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-01 10:21:43.923 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-01 10:21:43.928 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 10:21:43.946 [restartedMain] ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2025-07-01 10:22:00.406 [http-nio-8080-exec-1] INFO  o.a.c.c.ContainerBase.[Tomcat-1].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-01 10:22:00.406 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-01 10:22:00.407 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-01 10:22:00.410 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 10:22:00.410 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:22:00.410 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 10:22:00.411 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 2545059634@qq.com(String)
2025-07-01 10:22:00.413 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 10:22:00.420 [http-nio-8080-exec-1] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:2545059634@qq.com    数据库密码:$2a$10$w8zNNUSDq3MCiLDDuAhYXedA0QGva1Z4.6UxO61Njhsrlo8voc01G
2025-07-01 10:22:00.429 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 10:22:00.429 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:22:00.429 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 10:22:00.430 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 10:22:00.431 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 10:22:00.431 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 10:22:00.432 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:22:00.432 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 10:22:00.432 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 10:22:00.433 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 10:22:26.699 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-01 10:22:26.716 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 5420 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 10:22:26.716 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 10:22:26.718 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 10:22:26.831 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-01 10:22:26.831 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-01 10:22:27.304 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 10:22:27.306 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 10:22:27.327 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2025-07-01 10:22:27.526 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$d03dbeb0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 10:22:27.545 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 10:22:27.939 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 10:22:27.940 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 10:22:27.940 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 10:22:27.941 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 10:22:27.944 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 10:22:27.951 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 10:22:27.954 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 10:22:27.954 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 10:22:28.009 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 10:22:28.009 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1178 ms
2025-07-01 10:22:28.013 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 10:22:28.648 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-01 10:22:28.671 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-01 10:22:28.913 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 10:22:28.913 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 10:22:29.297 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 10:22:29.410 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@f404105, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6c129058, org.springframework.security.web.context.SecurityContextPersistenceFilter@42b882a7, org.springframework.security.web.header.HeaderWriterFilter@e5ac7be, org.springframework.web.filter.CorsFilter@ed2c109, org.springframework.security.web.authentication.logout.LogoutFilter@774d3860, com.huang.store.security.JwtAuthenticationTokenFilter@5c14100c, com.huang.store.security.CustomAuthenticationFilter@4007dc6f, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5b7669fa, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5cf2b5b9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7187c923, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1f33f09c, org.springframework.security.web.session.SessionManagementFilter@228f2737, org.springframework.security.web.access.ExceptionTranslationFilter@19a40c2d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7c80a71e]
2025-07-01 10:22:29.607 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 10:22:29.620 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 10:22:29.635 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 10:22:29.644 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 3.259 seconds (JVM running for 3.526)
2025-07-01 10:22:42.156 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-01 10:22:42.157 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-01 10:22:42.158 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-01 10:22:42.352 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 10:22:42.394 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:22:42.395 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 10:22:42.499 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 2545059634@qq.com(String)
2025-07-01 10:22:42.539 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 10:22:42.568 [http-nio-8080-exec-1] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:2545059634@qq.com    数据库密码:$2a$10$w8zNNUSDq3MCiLDDuAhYXedA0QGva1Z4.6UxO61Njhsrlo8voc01G
2025-07-01 10:22:42.745 [http-nio-8080-exec-1] WARN  org.apache.catalina.util.SessionIdGeneratorBase - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [147] milliseconds.
2025-07-01 10:22:42.843 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 10:22:42.845 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:22:42.845 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 10:22:42.854 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 10:22:42.861 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 10:22:42.862 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 10:22:42.862 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:22:42.867 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 10:22:42.870 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 10:22:42.873 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 10:23:05.797 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 10:23:05.797 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:05.797 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 10:23:05.799 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 1(Long)
2025-07-01 10:23:05.803 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 10:23:22.249 [http-nio-8080-exec-5] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=5
2025-07-01 10:23:22.256 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select * from book limit ?,?
2025-07-01 10:23:22.256 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 10:23:22.251 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==>  Preparing: select name from publish
2025-07-01 10:23:22.272 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:22.256 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:22.262 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:22.291 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 10:23:22.275 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select name from publish ::: DataSources: slave
2025-07-01 10:23:22.287 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book limit ?,? ::: DataSources: slave
2025-07-01 10:23:22.294 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 10:23:22.332 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 10:23:22.343 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==> Parameters: 
2025-07-01 10:23:22.345 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 10:23:22.357 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:22.357 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 10:23:22.346 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 10:23:22.350 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - <==      Total: 5
2025-07-01 10:23:22.360 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 10:23:22.365 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-01 10:23:22.372 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:23:22.372 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 10:23:22.375 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:22.380 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 10:23:22.382 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:22.380 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:23:22.383 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 10:23:22.387 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 10:23:22.388 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 10:23:22.390 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:23:22.391 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 10:23:22.393 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 10:23:22.392 [http-nio-8080-exec-5] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-01 10:23:22.394 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:22.395 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:23:22.396 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 10:23:22.396 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:22.396 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 10:23:22.396 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:23:22.400 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 10:23:22.400 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 10:23:22.402 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 10:23:22.403 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:23:22.405 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:22.406 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 10:23:22.406 [http-nio-8080-exec-5] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-01 10:23:22.407 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 10:23:22.407 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:23:22.408 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:22.408 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:23:22.409 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 10:23:22.409 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 10:23:22.417 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:23:22.420 [http-nio-8080-exec-5] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-01 10:23:22.421 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:23:22.421 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:22.421 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:23:22.423 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 10:23:22.426 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:23:22.428 [http-nio-8080-exec-5] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-01 10:23:22.429 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:23:22.431 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:22.433 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:23:22.437 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 10:23:22.441 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:23:22.443 [http-nio-8080-exec-5] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-01 10:23:22.449 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-01 10:23:22.449 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:22.450 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-01 10:23:22.452 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-01 10:23:22.453 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-01 10:23:28.690 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==>  Preparing: select name from publish
2025-07-01 10:23:28.741 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 10:23:28.855 [http-nio-8080-exec-9] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=5
2025-07-01 10:23:28.857 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:28.914 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:28.981 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select * from book limit ?,?
2025-07-01 10:23:28.998 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select name from publish ::: DataSources: slave
2025-07-01 10:23:28.998 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 10:23:29.082 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:29.152 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==> Parameters: 
2025-07-01 10:23:29.277 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 10:23:29.372 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book limit ?,? ::: DataSources: slave
2025-07-01 10:23:29.482 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - <==      Total: 5
2025-07-01 10:23:29.602 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 10:23:29.663 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 10:23:29.906 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 10:23:30.122 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-01 10:23:30.409 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:30.882 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:23:31.461 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:31.461 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:23:31.462 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 10:23:30.901 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==>  Preparing: select name from publish
2025-07-01 10:23:31.465 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:23:31.465 [http-nio-8080-exec-9] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-01 10:23:31.466 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:23:31.466 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:31.466 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:23:31.466 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 10:23:31.161 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 10:23:31.465 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:31.468 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:23:31.829 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select name from publish ::: DataSources: slave
2025-07-01 10:23:31.698 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 10:23:31.829 [http-nio-8080-exec-9] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-01 10:23:31.971 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:31.832 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 10:23:31.971 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==> Parameters: 
2025-07-01 10:23:31.971 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:23:32.193 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:32.193 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:23:32.194 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 10:23:32.194 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - <==      Total: 5
2025-07-01 10:23:32.195 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:23:32.196 [http-nio-8080-exec-9] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-01 10:23:32.197 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:23:32.197 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:32.197 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:23:32.197 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 10:23:32.198 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 10:23:32.199 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:23:32.199 [http-nio-8080-exec-9] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-01 10:23:32.200 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:23:32.200 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 10:23:32.200 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:32.745 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:32.745 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 10:23:32.746 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 10:23:32.200 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 10:23:32.745 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:23:32.747 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 10:23:33.080 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 10:23:33.081 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 10:23:33.081 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:33.081 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 10:23:33.082 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 10:23:33.082 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:23:33.083 [http-nio-8080-exec-9] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-01 10:23:33.083 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-01 10:23:33.083 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:33.083 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 10:23:33.083 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-01 10:23:33.084 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 10:23:33.084 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-01 10:23:33.084 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:33.084 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 10:23:33.084 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 10:23:33.085 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-01 10:23:33.086 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 10:23:33.093 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 10:23:33.520 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 10:23:33.521 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 10:23:33.521 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:33.521 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 10:23:33.522 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 10:23:33.523 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 10:23:33.713 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 10:23:33.713 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:33.970 [http-nio-8080-exec-2] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=5
2025-07-01 10:23:33.970 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 10:23:33.970 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select * from book limit ?,?
2025-07-01 10:23:34.650 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:34.650 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book limit ?,? ::: DataSources: slave
2025-07-01 10:23:34.651 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 10:23:34.652 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 10:23:34.654 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-01 10:23:34.678 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:23:34.678 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:34.679 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:23:34.679 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 10:23:34.681 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:23:34.681 [http-nio-8080-exec-2] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-01 10:23:34.681 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 10:23:34.681 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:23:34.682 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:34.682 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 10:23:34.840 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:34.840 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 10:23:34.840 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:23:34.840 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 10:23:34.882 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 10:23:34.991 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:23:34.992 [http-nio-8080-exec-2] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-01 10:23:34.992 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 10:23:34.992 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:23:34.992 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:34.993 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:23:34.993 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 10:23:34.993 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:34.993 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 10:23:34.993 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 10:23:34.993 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 10:23:34.995 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:23:34.995 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 10:23:34.996 [http-nio-8080-exec-2] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-01 10:23:34.996 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 10:23:35.900 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:35.900 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 10:23:35.901 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 10:23:35.903 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 10:23:35.903 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 10:23:35.904 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:36.204 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 10:23:36.205 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 10:23:35.967 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:23:36.208 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 10:23:36.209 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:36.250 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:23:36.671 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 10:23:36.683 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:23:36.712 [http-nio-8080-exec-2] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-01 10:23:37.088 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:23:38.708 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:39.262 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:23:39.509 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 10:23:39.807 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:23:39.902 [http-nio-8080-exec-2] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-01 10:23:40.316 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-01 10:23:40.378 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:40.496 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-01 10:23:40.770 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-01 10:23:40.791 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-01 10:23:53.950 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==>  Preparing: select name from publish
2025-07-01 10:23:53.952 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:53.962 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select name from publish ::: DataSources: slave
2025-07-01 10:23:53.963 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==> Parameters: 
2025-07-01 10:23:53.966 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - <==      Total: 5
2025-07-01 10:23:53.968 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 10:23:53.972 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:53.972 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 10:23:53.976 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 10:23:53.977 [http-nio-8080-exec-6] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=5
2025-07-01 10:23:53.980 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select * from book limit ?,?
2025-07-01 10:23:53.982 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:53.983 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 10:23:53.986 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 10:23:53.986 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book limit ?,? ::: DataSources: slave
2025-07-01 10:23:53.987 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:53.988 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 10:23:53.989 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 10:23:53.991 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 10:23:53.994 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 10:23:53.995 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 10:23:53.995 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:53.998 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 10:23:54.000 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 10:23:54.002 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-01 10:23:54.003 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 10:23:54.004 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:23:54.004 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:54.005 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 10:23:54.005 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:23:54.005 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:54.005 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 10:23:54.006 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 10:23:54.006 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 10:23:54.007 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:23:54.008 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 10:23:54.008 [http-nio-8080-exec-6] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-01 10:23:54.008 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:23:54.008 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:54.009 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:23:54.008 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 10:23:54.009 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:54.009 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 10:23:54.009 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 10:23:54.010 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 10:23:54.012 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:23:54.012 [http-nio-8080-exec-6] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-01 10:23:54.012 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 10:23:54.012 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:23:54.015 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:54.015 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:23:54.016 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 10:23:54.019 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:23:54.020 [http-nio-8080-exec-6] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-01 10:23:54.021 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:23:54.021 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:54.021 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:23:54.022 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 10:23:54.025 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:23:54.026 [http-nio-8080-exec-6] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-01 10:23:54.026 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:23:54.027 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:54.027 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:23:54.028 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 10:23:54.030 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:23:54.031 [http-nio-8080-exec-6] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-01 10:23:54.031 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-01 10:23:54.031 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:54.031 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-01 10:23:54.032 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-01 10:23:54.033 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-01 10:23:55.062 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 10:23:55.062 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:55.062 [http-nio-8080-exec-9] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=5
2025-07-01 10:23:55.063 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 10:23:55.063 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select * from book limit ?,?
2025-07-01 10:23:55.063 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 10:23:55.063 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:55.063 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book limit ?,? ::: DataSources: slave
2025-07-01 10:23:55.064 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 10:23:55.068 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 10:23:55.070 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 10:23:55.071 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:55.071 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-01 10:23:55.071 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 10:23:55.088 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 10:23:55.094 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 10:23:55.095 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 10:23:55.096 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:55.097 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 10:23:55.098 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 10:23:55.102 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 10:23:55.103 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 10:23:55.103 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:55.104 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 10:23:55.104 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 10:23:55.104 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==>  Preparing: select name from publish
2025-07-01 10:23:55.105 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:55.105 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 10:23:55.106 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select name from publish ::: DataSources: slave
2025-07-01 10:23:55.109 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:23:55.110 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:55.110 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:23:55.111 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 10:23:55.115 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:23:55.118 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==> Parameters: 
2025-07-01 10:23:55.122 [http-nio-8080-exec-9] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-01 10:23:55.122 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 10:23:55.124 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:23:55.125 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - <==      Total: 5
2025-07-01 10:23:55.125 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:55.126 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:55.129 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 10:23:55.130 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:23:55.131 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 10:23:55.131 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 10:23:55.133 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:23:55.133 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 10:23:55.133 [http-nio-8080-exec-9] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-01 10:23:55.137 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:23:55.137 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:55.138 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:23:55.139 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 10:23:55.140 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:23:55.141 [http-nio-8080-exec-9] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-01 10:23:55.141 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:23:55.141 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:55.141 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:23:55.142 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 10:23:55.143 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:23:55.144 [http-nio-8080-exec-9] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-01 10:23:55.144 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:23:55.144 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:55.145 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:23:55.145 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 10:23:55.146 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:23:55.147 [http-nio-8080-exec-9] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-01 10:23:55.148 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-01 10:23:55.148 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:55.148 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-01 10:23:55.149 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-01 10:23:55.151 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-01 10:23:56.034 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==>  Preparing: select name from publish
2025-07-01 10:23:56.037 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:56.039 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select name from publish ::: DataSources: slave
2025-07-01 10:23:56.039 [http-nio-8080-exec-3] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=5
2025-07-01 10:23:56.040 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==> Parameters: 
2025-07-01 10:23:56.041 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select * from book limit ?,?
2025-07-01 10:23:56.041 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:56.042 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book limit ?,? ::: DataSources: slave
2025-07-01 10:23:56.042 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 10:23:56.042 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - <==      Total: 5
2025-07-01 10:23:56.044 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 10:23:56.045 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:56.049 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-01 10:23:56.049 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 10:23:56.051 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:23:56.053 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:56.053 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:23:56.052 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 10:23:56.054 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 10:23:56.056 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 10:23:56.058 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:23:56.060 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 10:23:56.060 [http-nio-8080-exec-3] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-01 10:23:56.061 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:56.062 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:23:56.062 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 10:23:56.062 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:56.063 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:23:56.063 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 10:23:56.064 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 10:23:56.067 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:23:56.067 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 10:23:56.067 [http-nio-8080-exec-3] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-01 10:23:56.067 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 10:23:56.068 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:23:56.068 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:56.068 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:56.068 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 10:23:56.068 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:23:56.069 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 10:23:56.069 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 10:23:56.070 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:23:56.070 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 10:23:56.071 [http-nio-8080-exec-3] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-01 10:23:56.071 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 10:23:56.072 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:23:56.073 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:56.073 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:56.073 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:23:56.073 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 10:23:56.074 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 10:23:56.074 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 10:23:56.075 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:23:56.076 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 10:23:56.076 [http-nio-8080-exec-3] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-01 10:23:56.076 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:23:56.076 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 10:23:56.077 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:56.078 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:56.079 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:23:56.080 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 10:23:56.080 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 10:23:56.080 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 10:23:56.082 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:23:56.082 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 10:23:56.083 [http-nio-8080-exec-3] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-01 10:23:56.084 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-01 10:23:56.084 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:23:56.085 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-01 10:23:56.086 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-01 10:23:56.087 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-01 10:24:00.223 [http-nio-8080-exec-7] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-01 10:24:00.224 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-01 10:24:00.225 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 10:24:00.236 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 10:24:00.236 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:24:00.240 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-01 10:24:00.237 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:24:00.241 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 10:24:00.239 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 10:24:00.239 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-01 10:24:00.239 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-01 10:24:00.240 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:24:00.242 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 10:24:00.242 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 10:24:00.242 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:24:00.242 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:24:00.242 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:24:00.244 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-01 10:24:00.243 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 10:24:00.243 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 10:24:00.244 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-01 10:24:00.244 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 10:24:00.246 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-01 10:24:00.254 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 10:24:00.259 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 10:24:00.262 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:24:00.260 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-01 10:24:00.260 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-01 10:24:00.261 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 10:24:00.263 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 10:24:00.263 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:24:00.266 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-01 10:24:00.265 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-01 10:24:00.267 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 10:24:00.267 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-01 10:24:00.270 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-01 10:24:00.275 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 10:24:00.280 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-01 10:24:00.280 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 10:24:00.287 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:24:00.289 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 10:24:00.283 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 10:24:00.285 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-01 10:24:00.285 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 10:24:00.286 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-01 10:24:00.290 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 10:24:00.297 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:24:00.298 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 10:24:00.298 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 10:24:00.304 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:24:00.302 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 10:24:00.303 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 10:24:00.304 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:24:00.305 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 10:24:00.305 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 10:24:00.305 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 10:24:00.305 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 10:24:00.308 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 10:24:00.311 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 10:24:00.311 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 10:24:00.312 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 10:24:00.312 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:24:00.312 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 10:24:00.312 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 10:24:00.313 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:24:00.313 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 10:24:00.313 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:24:00.313 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:24:00.314 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 10:24:00.315 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 10:24:00.316 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:24:00.316 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 10:24:00.317 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:24:00.317 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:24:00.317 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:24:00.317 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 10:24:00.317 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:24:00.317 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 10:24:00.318 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 10:24:00.319 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 10:24:00.319 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:24:00.322 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:24:00.323 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:24:00.323 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:24:00.324 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 10:24:00.327 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:24:00.327 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:24:00.327 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:24:00.327 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:24:00.328 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 10:24:00.329 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:24:00.330 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:24:00.331 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:24:00.331 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:24:00.332 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 10:24:00.333 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:24:06.784 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 10:24:06.784 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:24:06.784 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 10:24:06.785 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 2545059634@qq.com(String)
2025-07-01 10:24:06.787 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 10:24:06.788 [http-nio-8080-exec-10] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:2545059634@qq.com    数据库密码:$2a$10$w8zNNUSDq3MCiLDDuAhYXedA0QGva1Z4.6UxO61Njhsrlo8voc01G
2025-07-01 10:24:06.876 [http-nio-8080-exec-10] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=2545059634@qq.com, password=$2a$10$w8zNNUSDq3MCiLDDuAhYXedA0QGva1Z4.6UxO61Njhsrlo8voc01G, enabled=true, roles=[ROLE_ADMIN]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=BD4D9A14560B49D47265080C284AC929], Granted Authorities=[ROLE_ADMIN]]
2025-07-01 10:24:06.889 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 10:24:06.890 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:24:06.890 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 10:24:06.890 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 2545059634@qq.com(String)
2025-07-01 10:24:06.891 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 10:24:10.856 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 10:24:10.857 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:24:10.859 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 10:24:10.860 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 10:24:10.863 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 10:24:10.864 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 10:24:10.865 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:24:10.865 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 10:24:10.866 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 10:24:10.868 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 10:24:24.080 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 10:24:24.080 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:24:24.080 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 10:24:24.080 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 10:24:24.082 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 10:24:24.083 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 10:24:24.083 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:24:24.084 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 10:24:24.084 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 10:24:24.086 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 10:27:47.906 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 10:27:47.906 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:27:47.906 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 10:27:47.914 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 10:27:47.916 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 10:27:47.917 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 10:27:47.917 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:27:47.917 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 10:27:47.918 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 10:27:47.919 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 10:40:07.934 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 10:40:07.935 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:40:07.935 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 10:40:07.937 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 10:40:07.938 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 10:40:07.938 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 10:40:07.938 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:40:07.938 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 10:40:07.938 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 10:40:07.939 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 10:40:09.631 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==>  Preparing: SELECT sg.*, b.bookName as name, b.author, b.coverImg FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? ORDER BY sg.sortOrder ASC, sg.createTime DESC LIMIT ?, ?
2025-07-01 10:40:09.631 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:40:09.631 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT sg.*, b.bookName as name, b.author, b.coverImg
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        ORDER BY sg.sortOrder ASC, sg.createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 10:40:09.638 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==> Parameters: 1(Long), 0(Integer), 10(Integer)
2025-07-01 10:40:09.656 [http-nio-8080-exec-5] ERROR druid.sql.Statement - {conn-110004, pstmt-120040} execute error. SELECT sg.*, b.bookName as name, b.author, b.coverImg
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        ORDER BY sg.sortOrder ASC, sg.createTime DESC
        LIMIT ?, ?
java.sql.SQLSyntaxErrorException: Unknown column 'b.coverImg' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3446)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:639)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:158)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:483)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.MasterSlavePreparedStatement.execute(MasterSlavePreparedStatement.java:118)
	at jdk.internal.reflect.GeneratedMethodAccessor14.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy4/jdk.proxy4.$Proxy123.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:333)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at jdk.internal.reflect.GeneratedMethodAccessor30.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy107.getActivityGoodsPaged(Unknown Source)
	at com.huang.store.service.SpikeService.getActivityGoods(SpikeService.java:464)
	at com.huang.store.service.SpikeService$$FastClassBySpringCGLIB$$6c437123.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.huang.store.service.SpikeService$$EnhancerBySpringCGLIB$$350763f7.getActivityGoods(<generated>)
	at com.huang.store.controller.SpikeController.getActivityGoods(SpikeController.java:332)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2025-07-01 10:40:45.371 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==>  Preparing: SELECT sg.*, b.bookName as name, b.author, b.coverImg FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? ORDER BY sg.sortOrder ASC, sg.createTime DESC LIMIT ?, ?
2025-07-01 10:40:45.371 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:40:45.371 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT sg.*, b.bookName as name, b.author, b.coverImg
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        ORDER BY sg.sortOrder ASC, sg.createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 10:40:45.372 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==> Parameters: 1(Long), 0(Integer), 10(Integer)
2025-07-01 10:40:45.376 [http-nio-8080-exec-6] ERROR druid.sql.Statement - {conn-110004, pstmt-120041} execute error. SELECT sg.*, b.bookName as name, b.author, b.coverImg
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        ORDER BY sg.sortOrder ASC, sg.createTime DESC
        LIMIT ?, ?
java.sql.SQLSyntaxErrorException: Unknown column 'b.coverImg' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3446)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:639)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:158)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:483)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.MasterSlavePreparedStatement.execute(MasterSlavePreparedStatement.java:118)
	at jdk.internal.reflect.GeneratedMethodAccessor14.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy4/jdk.proxy4.$Proxy123.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:333)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at jdk.internal.reflect.GeneratedMethodAccessor30.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy107.getActivityGoodsPaged(Unknown Source)
	at com.huang.store.service.SpikeService.getActivityGoods(SpikeService.java:464)
	at com.huang.store.service.SpikeService$$FastClassBySpringCGLIB$$6c437123.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.huang.store.service.SpikeService$$EnhancerBySpringCGLIB$$350763f7.getActivityGoods(<generated>)
	at com.huang.store.controller.SpikeController.getActivityGoods(SpikeController.java:332)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2025-07-01 10:43:28.340 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 10:43:28.340 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:43:28.340 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 10:43:28.342 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 10:43:28.344 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 10:43:28.345 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 10:43:28.346 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:43:28.346 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 10:43:28.346 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 10:43:28.348 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 10:45:03.346 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 10:45:03.346 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:45:03.347 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 10:45:03.348 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 10:45:03.350 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 10:45:03.351 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 10:45:03.351 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:45:03.351 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 10:45:03.351 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 10:45:03.353 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 10:45:14.606 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 10:45:14.607 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:45:14.607 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 10:45:14.607 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 10:45:14.610 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 10:45:14.611 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 10:45:14.611 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:45:14.611 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 10:45:14.612 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 10:45:14.613 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 10:45:24.897 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==>  Preparing: SELECT sg.*, b.bookName as name, b.author, b.coverImg FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? ORDER BY sg.sortOrder ASC, sg.createTime DESC LIMIT ?, ?
2025-07-01 10:45:24.897 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:45:24.898 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT sg.*, b.bookName as name, b.author, b.coverImg
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        ORDER BY sg.sortOrder ASC, sg.createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 10:45:24.900 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==> Parameters: 1(Long), 0(Integer), 10(Integer)
2025-07-01 10:45:24.903 [http-nio-8080-exec-9] ERROR druid.sql.Statement - {conn-110004, pstmt-120044} execute error. SELECT sg.*, b.bookName as name, b.author, b.coverImg
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        ORDER BY sg.sortOrder ASC, sg.createTime DESC
        LIMIT ?, ?
java.sql.SQLSyntaxErrorException: Unknown column 'b.coverImg' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3446)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:639)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:158)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:483)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.MasterSlavePreparedStatement.execute(MasterSlavePreparedStatement.java:118)
	at jdk.internal.reflect.GeneratedMethodAccessor14.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy4/jdk.proxy4.$Proxy123.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:333)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at jdk.internal.reflect.GeneratedMethodAccessor30.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy107.getActivityGoodsPaged(Unknown Source)
	at com.huang.store.service.SpikeService.getActivityGoods(SpikeService.java:464)
	at com.huang.store.service.SpikeService$$FastClassBySpringCGLIB$$6c437123.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.huang.store.service.SpikeService$$EnhancerBySpringCGLIB$$350763f7.getActivityGoods(<generated>)
	at com.huang.store.controller.SpikeController.getActivityGoods(SpikeController.java:332)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2025-07-01 10:49:01.189 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-01 10:49:01.189 [Thread-7] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 10:49:01.191 [Thread-7] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-07-01 10:49:01.216 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-236171904] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 10:49:01.216 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-236171904] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 10:49:01.217 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1158159531] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 10:49:01.218 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1158159531] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 10:49:01.218 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-01 10:49:01.221 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-01 10:49:01.243 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-01 10:49:01.246 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-01 10:49:01.246 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-01 10:49:01.249 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-01 10:49:01.327 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 5420 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 10:49:01.327 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 10:49:01.327 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 10:49:01.474 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 10:49:01.475 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 10:49:01.478 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-07-01 10:49:01.530 [restartedMain] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[com.huang.store.mapper]' package. Please check your configuration.
2025-07-01 10:49:01.585 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 10:49:01.585 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 10:49:01.585 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 10:49:01.585 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 10:49:01.586 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 10:49:01.587 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 10:49:01.587 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 10:49:01.588 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 10:49:01.604 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 10:49:01.604 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 270 ms
2025-07-01 10:49:01.617 [restartedMain] ERROR org.apache.catalina.session.StandardManager - Exception loading sessions from persistent storage
java.lang.ClassNotFoundException: com.huang.store.entity.user.SecurityUser
	at org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedWebappClassLoader.loadClass(TomcatEmbeddedWebappClassLoader.java:72)
	at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1141)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:467)
	at org.apache.catalina.util.CustomObjectInputStream.resolveClass(CustomObjectInputStream.java:158)
	at java.base/java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:2045)
	at java.base/java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1909)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2235)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream$FieldValues.<init>(ObjectInputStream.java:2617)
	at java.base/java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2468)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2268)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream$FieldValues.<init>(ObjectInputStream.java:2617)
	at java.base/java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2468)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2268)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:514)
	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:472)
	at org.apache.catalina.session.StandardSession.doReadObject(StandardSession.java:1530)
	at org.apache.catalina.session.StandardSession.readObjectData(StandardSession.java:1000)
	at org.apache.catalina.session.StandardManager.doLoad(StandardManager.java:210)
	at org.apache.catalina.session.StandardManager.load(StandardManager.java:156)
	at org.apache.catalina.session.StandardManager.startInternal(StandardManager.java:346)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4931)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2025-07-01 10:49:01.668 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 10:49:01.745 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} inited
2025-07-01 10:49:01.764 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} inited
2025-07-01 10:49:01.787 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
2025-07-01 10:49:01.788 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closing ...
2025-07-01 10:49:01.789 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed
2025-07-01 10:49:01.790 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closing ...
2025-07-01 10:49:01.790 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed
2025-07-01 10:49:01.791 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 10:49:01.795 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 10:49:01.817 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 24 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ca92cd0f.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ca92cd0f$$FastClassBySpringCGLIB$$6a6f54fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ca92cd0f.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:78)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:144)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:136)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:126)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 46 common frames omitted
2025-07-01 10:49:03.696 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 5420 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 10:49:03.696 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 10:49:03.696 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 10:49:03.816 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 10:49:03.816 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 10:49:03.823 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2025-07-01 10:49:03.854 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$d03dbeb0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 10:49:03.857 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 10:49:03.898 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 10:49:03.898 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 10:49:03.898 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 10:49:03.898 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 10:49:03.899 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 10:49:03.899 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 10:49:03.899 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 10:49:03.899 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 10:49:03.910 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 10:49:03.910 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 213 ms
2025-07-01 10:49:03.912 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 10:49:03.974 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} inited
2025-07-01 10:49:03.992 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} inited
2025-07-01 10:49:04.089 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 10:49:04.090 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 10:49:04.188 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 10:49:04.267 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@118c5a15, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@28c9931d, org.springframework.security.web.context.SecurityContextPersistenceFilter@7f4fb465, org.springframework.security.web.header.HeaderWriterFilter@1acc1090, org.springframework.web.filter.CorsFilter@6da23d74, org.springframework.security.web.authentication.logout.LogoutFilter@11563f97, com.huang.store.security.JwtAuthenticationTokenFilter@769fa14b, com.huang.store.security.CustomAuthenticationFilter@74a29e88, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@59c34841, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@43730282, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3941c2ec, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@e21b368, org.springframework.security.web.session.SessionManagementFilter@718b7b16, org.springframework.security.web.access.ExceptionTranslationFilter@70898137, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@31baa2e4]
2025-07-01 10:49:04.346 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 10:49:04.354 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 10:49:04.357 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 10:49:04.360 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 0.697 seconds (JVM running for 1598.241)
2025-07-01 10:49:33.135 [http-nio-8080-exec-2] INFO  o.a.c.c.ContainerBase.[Tomcat-1].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-01 10:49:33.136 [http-nio-8080-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-01 10:49:33.137 [http-nio-8080-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-01 10:51:42.425 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 10:51:42.426 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:51:42.427 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 10:51:42.430 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 2545059634@qq.com(String)
2025-07-01 10:51:42.432 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 10:51:42.439 [http-nio-8080-exec-3] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:2545059634@qq.com    数据库密码:$2a$10$w8zNNUSDq3MCiLDDuAhYXedA0QGva1Z4.6UxO61Njhsrlo8voc01G
2025-07-01 10:51:42.451 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==>  Preparing: SELECT sg.*, b.bookName as name, b.author, bi.imgSrc as coverImg FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1 WHERE sg.activityId = ? ORDER BY sg.sortOrder ASC, sg.createTime DESC LIMIT ?, ?
2025-07-01 10:51:42.452 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:51:42.452 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT sg.*, b.bookName as name, b.author, bi.imgSrc as coverImg
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1
        WHERE sg.activityId = ?
        ORDER BY sg.sortOrder ASC, sg.createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 10:51:42.452 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==> Parameters: 1(Long), 0(Integer), 10(Integer)
2025-07-01 10:51:42.459 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - <==      Total: 3
2025-07-01 10:51:42.459 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==>  Preparing: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ?
2025-07-01 10:51:42.459 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:51:42.460 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ? ::: DataSources: slave
2025-07-01 10:51:42.461 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==> Parameters: 1(Long)
2025-07-01 10:51:42.463 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - <==      Total: 1
2025-07-01 10:51:56.747 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==>  Preparing: SELECT sg.*, b.bookName as name, b.author, bi.imgSrc as coverImg FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1 WHERE sg.activityId = ? ORDER BY sg.sortOrder ASC, sg.createTime DESC LIMIT ?, ?
2025-07-01 10:51:56.747 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:51:56.748 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT sg.*, b.bookName as name, b.author, bi.imgSrc as coverImg
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1
        WHERE sg.activityId = ?
        ORDER BY sg.sortOrder ASC, sg.createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 10:51:56.748 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==> Parameters: 1(Long), 0(Integer), 10(Integer)
2025-07-01 10:51:56.751 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - <==      Total: 3
2025-07-01 10:51:56.752 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==>  Preparing: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ?
2025-07-01 10:51:56.752 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:51:56.753 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ? ::: DataSources: slave
2025-07-01 10:51:56.754 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==> Parameters: 1(Long)
2025-07-01 10:51:56.755 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - <==      Total: 1
2025-07-01 10:52:07.057 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==>  Preparing: SELECT sg.*, b.bookName as name, b.author, bi.imgSrc as coverImg FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1 WHERE sg.activityId = ? ORDER BY sg.sortOrder ASC, sg.createTime DESC LIMIT ?, ?
2025-07-01 10:52:07.057 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:52:07.060 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT sg.*, b.bookName as name, b.author, bi.imgSrc as coverImg
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1
        WHERE sg.activityId = ?
        ORDER BY sg.sortOrder ASC, sg.createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 10:52:07.063 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==> Parameters: 1(Long), 0(Integer), 10(Integer)
2025-07-01 10:52:07.073 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - <==      Total: 3
2025-07-01 10:52:07.075 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==>  Preparing: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ?
2025-07-01 10:52:07.076 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:52:07.076 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ? ::: DataSources: slave
2025-07-01 10:52:07.077 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==> Parameters: 1(Long)
2025-07-01 10:52:07.078 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - <==      Total: 1
2025-07-01 10:56:30.383 [Thread-9] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-01 10:56:30.384 [Thread-9] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 10:56:30.385 [Thread-9] INFO  o.a.c.c.ContainerBase.[Tomcat-1].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-07-01 10:56:30.396 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1857785591] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 10:56:30.396 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1857785591] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 10:56:30.397 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1805611082] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 10:56:30.397 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1805611082] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 10:56:30.398 [Thread-9] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-01 10:56:30.399 [Thread-9] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-01 10:56:30.403 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} closing ...
2025-07-01 10:56:30.404 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} closed
2025-07-01 10:56:30.404 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} closing ...
2025-07-01 10:56:30.405 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} closed
2025-07-01 10:56:30.480 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 5420 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 10:56:30.480 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 10:56:30.481 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 10:56:30.624 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 10:56:30.624 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 10:56:30.630 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-07-01 10:56:30.736 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 10:56:30.736 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 10:56:30.737 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 10:56:30.737 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 10:56:30.738 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 10:56:30.739 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 10:56:30.740 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 10:56:30.740 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 10:56:30.762 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 10:56:30.762 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 277 ms
2025-07-01 10:56:30.777 [restartedMain] ERROR org.apache.catalina.session.StandardManager - Exception loading sessions from persistent storage
java.lang.ClassNotFoundException: com.huang.store.entity.user.SecurityUser
	at org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedWebappClassLoader.loadClass(TomcatEmbeddedWebappClassLoader.java:72)
	at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1141)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:467)
	at org.apache.catalina.util.CustomObjectInputStream.resolveClass(CustomObjectInputStream.java:158)
	at java.base/java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:2045)
	at java.base/java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1909)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2235)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream$FieldValues.<init>(ObjectInputStream.java:2617)
	at java.base/java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2468)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2268)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream$FieldValues.<init>(ObjectInputStream.java:2617)
	at java.base/java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2468)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2268)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:514)
	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:472)
	at org.apache.catalina.session.StandardSession.doReadObject(StandardSession.java:1530)
	at org.apache.catalina.session.StandardSession.readObjectData(StandardSession.java:1000)
	at org.apache.catalina.session.StandardManager.doLoad(StandardManager.java:210)
	at org.apache.catalina.session.StandardManager.load(StandardManager.java:156)
	at org.apache.catalina.session.StandardManager.startInternal(StandardManager.java:346)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4931)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2025-07-01 10:56:30.838 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 10:56:30.901 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} inited
2025-07-01 10:56:30.917 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} inited
2025-07-01 10:56:30.975 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.ClassFormatError: Truncated class file
2025-07-01 10:56:30.975 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} closing ...
2025-07-01 10:56:30.976 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} closed
2025-07-01 10:56:30.977 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} closing ...
2025-07-01 10:56:30.977 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} closed
2025-07-01 10:56:30.978 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 10:56:30.985 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 10:56:30.987 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.ClassFormatError: Truncated class file
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.ClassFormatError: Truncated class file
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 24 common frames omitted
Caused by: java.lang.ClassFormatError: Truncated class file
	at java.base/java.lang.ClassLoader.defineClass1(Native Method)
	at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1012)
	at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150)
	at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:862)
	at java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:760)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:681)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:467)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:216)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getMethodReturnType(MapperAnnotationBuilder.java:648)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:108)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:144)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:136)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:126)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ca92cd0f.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ca92cd0f$$FastClassBySpringCGLIB$$6a6f54fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ca92cd0f.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
2025-07-01 10:56:32.463 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 5420 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 10:56:32.464 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 10:56:32.464 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 10:56:32.624 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 10:56:32.625 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 10:56:32.635 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2025-07-01 10:56:32.680 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$d03dbeb0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 10:56:32.684 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 10:56:32.723 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 10:56:32.724 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 10:56:32.724 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 10:56:32.724 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 10:56:32.725 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 10:56:32.725 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 10:56:32.726 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 10:56:32.726 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 10:56:32.736 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-2].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 10:56:32.736 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 271 ms
2025-07-01 10:56:32.738 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 10:56:32.801 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-9} inited
2025-07-01 10:56:32.817 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-10} inited
2025-07-01 10:56:32.889 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 10:56:32.889 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 10:56:32.979 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 10:56:33.047 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@791dae40, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@8e34bdb, org.springframework.security.web.context.SecurityContextPersistenceFilter@6a239876, org.springframework.security.web.header.HeaderWriterFilter@4ad4c3d1, org.springframework.web.filter.CorsFilter@4fcd5b96, org.springframework.security.web.authentication.logout.LogoutFilter@5f20775, com.huang.store.security.JwtAuthenticationTokenFilter@40bca23e, com.huang.store.security.CustomAuthenticationFilter@6ee2362f, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@29db4c58, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@97687df, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@65d0176b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@249f0455, org.springframework.security.web.session.SessionManagementFilter@1e61087e, org.springframework.security.web.access.ExceptionTranslationFilter@64d0fcd9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6fc2fca5]
2025-07-01 10:56:33.120 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 10:56:33.127 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 10:56:33.130 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 10:56:33.132 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 0.695 seconds (JVM running for 2047.014)
2025-07-01 10:56:50.694 [http-nio-8080-exec-1] INFO  o.a.c.c.ContainerBase.[Tomcat-2].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-01 10:56:50.694 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-01 10:56:50.695 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-01 10:56:50.699 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzY2NDY4NzgsImV4cCI6MTc1MTMzODQ0Nn0.41ad6nrQYP9MLqmBle6MDVxn--DEutXcJ-6Fiv-JjUAGsNVN51UGwVi3q1QwlahMdGRIzZOZPDfvUpJTkPcZmA
2025-07-01 10:56:53.097 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 10:56:53.097 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:56:53.097 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 10:56:53.098 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 2545059634@qq.com(String)
2025-07-01 10:56:53.101 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 10:56:53.105 [http-nio-8080-exec-6] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:2545059634@qq.com    数据库密码:$2a$10$w8zNNUSDq3MCiLDDuAhYXedA0QGva1Z4.6UxO61Njhsrlo8voc01G
2025-07-01 10:56:53.180 [http-nio-8080-exec-6] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=2545059634@qq.com, password=$2a$10$w8zNNUSDq3MCiLDDuAhYXedA0QGva1Z4.6UxO61Njhsrlo8voc01G, enabled=true, roles=[ROLE_ADMIN]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]
2025-07-01 10:56:53.182 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 10:56:53.182 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:56:53.183 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 10:56:53.183 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 2545059634@qq.com(String)
2025-07-01 10:56:53.185 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 10:56:57.296 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 10:56:57.297 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:56:57.297 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 10:56:57.298 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 10:56:57.299 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 10:56:57.300 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 10:56:57.302 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:56:57.302 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 10:56:57.303 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 10:56:57.306 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 10:56:58.779 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1 WHERE sg.activityId = ? ORDER BY sg.sortOrder ASC, sg.createTime DESC LIMIT ?, ?
2025-07-01 10:56:58.780 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:56:58.780 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1
        WHERE sg.activityId = ?
        ORDER BY sg.sortOrder ASC, sg.createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 10:56:58.785 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==> Parameters: 1(Long), 0(Integer), 10(Integer)
2025-07-01 10:56:58.794 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - <==      Total: 3
2025-07-01 10:56:58.796 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==>  Preparing: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ?
2025-07-01 10:56:58.796 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:56:58.796 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ? ::: DataSources: slave
2025-07-01 10:56:58.798 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==> Parameters: 1(Long)
2025-07-01 10:56:58.799 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - <==      Total: 1
2025-07-01 10:57:03.157 [http-nio-8080-exec-5] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=100
2025-07-01 10:57:03.163 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select * from book limit ?,?
2025-07-01 10:57:03.165 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:57:03.165 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book limit ?,? ::: DataSources: slave
2025-07-01 10:57:03.169 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 100(Integer)
2025-07-01 10:57:03.175 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-01 10:57:03.204 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:57:03.205 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:57:03.207 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:57:03.212 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 10:57:03.217 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:57:03.220 [http-nio-8080-exec-5] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-01 10:57:03.221 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:57:03.257 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:57:03.258 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:57:03.259 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 10:57:03.270 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:57:03.272 [http-nio-8080-exec-5] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-01 10:57:03.274 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:57:03.275 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:57:03.276 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:57:03.276 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 10:57:03.279 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:57:03.286 [http-nio-8080-exec-5] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-01 10:57:03.287 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:57:03.292 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:57:03.292 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:57:03.293 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 10:57:03.297 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:57:03.313 [http-nio-8080-exec-5] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-01 10:57:03.313 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:57:03.320 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:57:03.320 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:57:03.321 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 10:57:03.323 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:57:03.324 [http-nio-8080-exec-5] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-01 10:57:03.327 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-01 10:57:03.327 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:57:03.327 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-01 10:57:03.329 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-01 10:57:03.331 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-01 10:58:27.235 [http-nio-8080-exec-3] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=100
2025-07-01 10:58:27.236 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select * from book limit ?,?
2025-07-01 10:58:27.236 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:58:27.236 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book limit ?,? ::: DataSources: slave
2025-07-01 10:58:27.237 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 100(Integer)
2025-07-01 10:58:27.241 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-01 10:58:27.242 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:58:27.243 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:58:27.243 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:58:27.243 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 10:58:27.245 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:58:27.245 [http-nio-8080-exec-3] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-01 10:58:27.246 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:58:27.247 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:58:27.247 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:58:27.247 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 10:58:27.249 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:58:27.250 [http-nio-8080-exec-3] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-01 10:58:27.250 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:58:27.250 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:58:27.250 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:58:27.251 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 10:58:27.252 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:58:27.253 [http-nio-8080-exec-3] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-01 10:58:27.253 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:58:27.254 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:58:27.254 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:58:27.255 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 10:58:27.256 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:58:27.256 [http-nio-8080-exec-3] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-01 10:58:27.256 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 10:58:27.257 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:58:27.257 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 10:58:27.257 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 10:58:27.258 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 10:58:27.258 [http-nio-8080-exec-3] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-01 10:58:27.258 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-01 10:58:27.258 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 10:58:27.258 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-01 10:58:27.259 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-01 10:58:27.261 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-01 11:00:38.344 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 11:00:38.346 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:00:38.346 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 11:00:38.349 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 11:00:38.351 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 11:00:38.352 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 11:00:38.352 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:00:38.352 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 11:00:38.352 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 11:00:38.353 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 11:00:42.136 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1 WHERE sg.activityId = ? ORDER BY sg.sortOrder ASC, sg.createTime DESC LIMIT ?, ?
2025-07-01 11:00:42.136 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:00:42.137 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1
        WHERE sg.activityId = ?
        ORDER BY sg.sortOrder ASC, sg.createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 11:00:42.137 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==> Parameters: 1(Long), 0(Integer), 10(Integer)
2025-07-01 11:00:42.144 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - <==      Total: 3
2025-07-01 11:00:42.144 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==>  Preparing: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ?
2025-07-01 11:00:42.144 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:00:42.144 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ? ::: DataSources: slave
2025-07-01 11:00:42.145 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==> Parameters: 1(Long)
2025-07-01 11:00:42.146 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - <==      Total: 1
2025-07-01 11:03:26.454 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1 WHERE sg.activityId = ? ORDER BY sg.sortOrder ASC, sg.createTime DESC LIMIT ?, ?
2025-07-01 11:03:26.456 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:03:26.456 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1
        WHERE sg.activityId = ?
        ORDER BY sg.sortOrder ASC, sg.createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 11:03:26.461 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==> Parameters: 1(Long), 0(Integer), 10(Integer)
2025-07-01 11:03:26.466 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - <==      Total: 3
2025-07-01 11:03:26.469 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==>  Preparing: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ?
2025-07-01 11:03:26.469 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:03:26.469 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ? ::: DataSources: slave
2025-07-01 11:03:26.470 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==> Parameters: 1(Long)
2025-07-01 11:03:26.472 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - <==      Total: 1
2025-07-01 11:10:31.449 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 11:10:31.449 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:10:31.449 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 11:10:31.451 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 11:10:31.453 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 11:10:31.454 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 11:10:31.454 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:10:31.454 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 11:10:31.455 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 11:10:31.456 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 11:10:37.989 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 11:10:37.989 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:10:37.990 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 11:10:37.991 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 11:10:37.994 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 11:10:37.996 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 11:10:37.997 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:10:37.997 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 11:10:37.997 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 11:10:37.998 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 11:10:39.509 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1 WHERE sg.activityId = ? ORDER BY sg.sortOrder ASC, sg.createTime DESC LIMIT ?, ?
2025-07-01 11:10:39.509 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:10:39.510 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1
        WHERE sg.activityId = ?
        ORDER BY sg.sortOrder ASC, sg.createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 11:10:39.511 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==> Parameters: 1(Long), 0(Integer), 10(Integer)
2025-07-01 11:10:39.518 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - <==      Total: 3
2025-07-01 11:10:39.520 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==>  Preparing: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ?
2025-07-01 11:10:39.520 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:10:39.521 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ? ::: DataSources: slave
2025-07-01 11:10:39.522 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==> Parameters: 1(Long)
2025-07-01 11:10:39.526 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - <==      Total: 1
2025-07-01 11:12:09.702 [http-nio-8080-exec-3] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=5
2025-07-01 11:12:09.702 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select * from book limit ?,?
2025-07-01 11:12:09.702 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:12:09.703 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book limit ?,? ::: DataSources: slave
2025-07-01 11:12:09.704 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 11:12:09.705 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-01 11:12:09.706 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:12:09.706 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:12:09.706 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:12:09.706 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 11:12:09.708 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:12:09.708 [http-nio-8080-exec-3] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-01 11:12:09.708 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:12:09.708 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:12:09.708 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:12:09.709 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 11:12:09.710 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:12:09.710 [http-nio-8080-exec-3] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-01 11:12:09.711 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:12:09.711 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:12:09.711 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:12:09.712 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 11:12:09.712 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:12:09.712 [http-nio-8080-exec-3] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-01 11:12:09.713 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:12:09.713 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:12:09.713 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:12:09.713 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 11:12:09.715 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:12:09.716 [http-nio-8080-exec-3] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-01 11:12:09.716 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:12:09.716 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:12:09.717 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:12:09.717 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 11:12:09.719 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:12:09.719 [http-nio-8080-exec-3] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-01 11:12:09.719 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-01 11:12:09.720 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:12:09.720 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-01 11:12:09.720 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-01 11:12:09.722 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-01 11:12:31.457 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 11:12:31.458 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:12:31.458 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 11:12:31.458 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 11:12:31.459 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 11:12:31.459 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 11:12:31.459 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:12:31.459 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 11:12:31.459 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 11:12:31.460 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 11:12:34.290 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1 WHERE sg.activityId = ? ORDER BY sg.sortOrder ASC, sg.createTime DESC LIMIT ?, ?
2025-07-01 11:12:34.290 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:12:34.290 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1
        WHERE sg.activityId = ?
        ORDER BY sg.sortOrder ASC, sg.createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 11:12:34.290 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==> Parameters: 1(Long), 0(Integer), 10(Integer)
2025-07-01 11:12:34.295 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - <==      Total: 3
2025-07-01 11:12:34.296 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==>  Preparing: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ?
2025-07-01 11:12:34.296 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:12:34.296 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ? ::: DataSources: slave
2025-07-01 11:12:34.296 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==> Parameters: 1(Long)
2025-07-01 11:12:34.297 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - <==      Total: 1
2025-07-01 11:12:35.505 [http-nio-8080-exec-2] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=100
2025-07-01 11:12:35.506 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select * from book limit ?,?
2025-07-01 11:12:35.506 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:12:35.506 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book limit ?,? ::: DataSources: slave
2025-07-01 11:12:35.506 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 100(Integer)
2025-07-01 11:12:35.511 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-01 11:12:35.512 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:12:35.512 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:12:35.512 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:12:35.512 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 11:12:35.513 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:12:35.514 [http-nio-8080-exec-2] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-01 11:12:35.514 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:12:35.515 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:12:35.515 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:12:35.516 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 11:12:35.517 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:12:35.517 [http-nio-8080-exec-2] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-01 11:12:35.518 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:12:35.518 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:12:35.518 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:12:35.518 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 11:12:35.519 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:12:35.520 [http-nio-8080-exec-2] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-01 11:12:35.520 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:12:35.520 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:12:35.520 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:12:35.520 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 11:12:35.522 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:12:35.523 [http-nio-8080-exec-2] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-01 11:12:35.523 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:12:35.523 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:12:35.523 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:12:35.524 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 11:12:35.525 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:12:35.526 [http-nio-8080-exec-2] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-01 11:12:35.526 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-01 11:12:35.526 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:12:35.526 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-01 11:12:35.526 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-01 11:12:35.527 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-01 11:14:19.402 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1 WHERE sg.activityId = ? ORDER BY sg.sortOrder ASC, sg.createTime DESC LIMIT ?, ?
2025-07-01 11:14:19.403 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:14:19.403 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1
        WHERE sg.activityId = ?
        ORDER BY sg.sortOrder ASC, sg.createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 11:14:19.406 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==> Parameters: 1(Long), 0(Integer), 10(Integer)
2025-07-01 11:14:19.410 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - <==      Total: 3
2025-07-01 11:14:19.412 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==>  Preparing: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ?
2025-07-01 11:14:19.412 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:14:19.413 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ? ::: DataSources: slave
2025-07-01 11:14:19.413 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==> Parameters: 1(Long)
2025-07-01 11:14:19.414 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - <==      Total: 1
2025-07-01 11:14:20.371 [http-nio-8080-exec-6] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=100
2025-07-01 11:14:20.373 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select * from book limit ?,?
2025-07-01 11:14:20.373 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:14:20.373 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book limit ?,? ::: DataSources: slave
2025-07-01 11:14:20.374 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 100(Integer)
2025-07-01 11:14:20.375 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-01 11:14:20.377 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:14:20.377 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:14:20.378 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:14:20.378 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 11:14:20.379 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:14:20.380 [http-nio-8080-exec-6] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-01 11:14:20.381 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:14:20.381 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:14:20.381 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:14:20.382 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 11:14:20.384 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:14:20.385 [http-nio-8080-exec-6] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-01 11:14:20.386 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:14:20.386 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:14:20.386 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:14:20.387 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 11:14:20.388 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:14:20.388 [http-nio-8080-exec-6] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-01 11:14:20.389 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:14:20.389 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:14:20.389 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:14:20.389 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 11:14:20.389 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:14:20.390 [http-nio-8080-exec-6] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-01 11:14:20.391 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:14:20.391 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:14:20.391 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:14:20.391 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 11:14:20.393 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:14:20.393 [http-nio-8080-exec-6] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-01 11:14:20.393 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-01 11:14:20.393 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:14:20.394 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-01 11:14:20.394 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-01 11:14:20.395 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-01 11:17:44.839 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 11:17:44.839 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:17:44.839 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 11:17:44.840 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 11:17:44.844 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 11:17:44.845 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 11:17:44.845 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:17:44.845 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 11:17:44.845 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 11:17:44.846 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 11:17:46.181 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1 WHERE sg.activityId = ? ORDER BY sg.sortOrder ASC, sg.createTime DESC LIMIT ?, ?
2025-07-01 11:17:46.182 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:17:46.183 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1
        WHERE sg.activityId = ?
        ORDER BY sg.sortOrder ASC, sg.createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 11:17:46.184 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==> Parameters: 1(Long), 0(Integer), 10(Integer)
2025-07-01 11:17:46.187 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - <==      Total: 3
2025-07-01 11:17:46.188 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==>  Preparing: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ?
2025-07-01 11:17:46.188 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:17:46.189 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ? ::: DataSources: slave
2025-07-01 11:17:46.190 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==> Parameters: 1(Long)
2025-07-01 11:17:46.192 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - <==      Total: 1
2025-07-01 11:17:47.627 [http-nio-8080-exec-5] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=100
2025-07-01 11:17:47.628 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select * from book limit ?,?
2025-07-01 11:17:47.628 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:17:47.628 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book limit ?,? ::: DataSources: slave
2025-07-01 11:17:47.628 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 100(Integer)
2025-07-01 11:17:47.630 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-01 11:17:47.630 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:17:47.631 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:17:47.631 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:17:47.631 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 11:17:47.632 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:17:47.633 [http-nio-8080-exec-5] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-01 11:17:47.634 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:17:47.634 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:17:47.635 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:17:47.635 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 11:17:47.635 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:17:47.635 [http-nio-8080-exec-5] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-01 11:17:47.636 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:17:47.636 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:17:47.636 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:17:47.636 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 11:17:47.637 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:17:47.637 [http-nio-8080-exec-5] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-01 11:17:47.638 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:17:47.638 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:17:47.638 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:17:47.638 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 11:17:47.639 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:17:47.640 [http-nio-8080-exec-5] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-01 11:17:47.640 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:17:47.640 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:17:47.640 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:17:47.641 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 11:17:47.642 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:17:47.642 [http-nio-8080-exec-5] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-01 11:17:47.643 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-01 11:17:47.643 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:17:47.643 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-01 11:17:47.643 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-01 11:17:47.644 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-01 11:20:54.506 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 11:20:54.507 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:20:54.507 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 11:20:54.509 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 11:20:54.510 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 11:20:54.511 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 11:20:54.511 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:20:54.511 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 11:20:54.512 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 11:20:54.512 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 11:20:56.439 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1 WHERE sg.activityId = ? ORDER BY sg.sortOrder ASC, sg.createTime DESC LIMIT ?, ?
2025-07-01 11:20:56.440 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:20:56.440 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1
        WHERE sg.activityId = ?
        ORDER BY sg.sortOrder ASC, sg.createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 11:20:56.440 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==> Parameters: 1(Long), 0(Integer), 10(Integer)
2025-07-01 11:20:56.443 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - <==      Total: 3
2025-07-01 11:20:56.444 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==>  Preparing: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ?
2025-07-01 11:20:56.444 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:20:56.444 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ? ::: DataSources: slave
2025-07-01 11:20:56.444 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==> Parameters: 1(Long)
2025-07-01 11:20:56.446 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - <==      Total: 1
2025-07-01 11:20:57.607 [http-nio-8080-exec-8] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=100
2025-07-01 11:20:57.608 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select * from book limit ?,?
2025-07-01 11:20:57.608 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:20:57.608 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book limit ?,? ::: DataSources: slave
2025-07-01 11:20:57.608 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 100(Integer)
2025-07-01 11:20:57.610 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-01 11:20:57.611 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:20:57.611 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:20:57.611 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:20:57.611 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 11:20:57.613 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:20:57.614 [http-nio-8080-exec-8] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-01 11:20:57.614 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:20:57.614 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:20:57.614 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:20:57.615 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 11:20:57.616 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:20:57.616 [http-nio-8080-exec-8] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-01 11:20:57.617 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:20:57.617 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:20:57.617 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:20:57.617 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 11:20:57.618 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:20:57.619 [http-nio-8080-exec-8] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-01 11:20:57.620 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:20:57.620 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:20:57.621 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:20:57.621 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 11:20:57.622 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:20:57.622 [http-nio-8080-exec-8] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-01 11:20:57.622 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:20:57.623 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:20:57.623 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:20:57.623 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 11:20:57.624 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:20:57.624 [http-nio-8080-exec-8] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-01 11:20:57.625 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-01 11:20:57.625 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:20:57.625 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-01 11:20:57.626 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-01 11:20:57.628 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-01 11:23:17.279 [http-nio-8080-exec-1] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=5
2025-07-01 11:23:17.280 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 11:23:17.281 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==>  Preparing: select name from publish
2025-07-01 11:23:17.283 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select * from book limit ?,?
2025-07-01 11:23:17.283 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:17.284 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 11:23:17.284 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:17.284 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select name from publish ::: DataSources: slave
2025-07-01 11:23:17.284 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:17.286 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book limit ?,? ::: DataSources: slave
2025-07-01 11:23:17.287 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 11:23:17.294 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 11:23:17.295 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:23:17.297 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:17.296 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==> Parameters: 
2025-07-01 11:23:17.298 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:23:17.302 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - <==      Total: 5
2025-07-01 11:23:17.303 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 11:23:17.307 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-01 11:23:17.308 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:23:17.309 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 11:23:17.311 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:17.316 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:23:17.315 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 11:23:17.319 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 11:23:17.319 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:23:17.321 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:17.322 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:23:17.322 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:23:17.322 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 11:23:17.323 [http-nio-8080-exec-1] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-01 11:23:17.324 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:23:17.324 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 11:23:17.324 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:17.325 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:23:17.325 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:23:17.325 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 11:23:17.325 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:17.327 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:23:17.328 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:23:17.328 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 11:23:17.328 [http-nio-8080-exec-1] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-01 11:23:17.329 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:23:17.329 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:17.329 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:23:17.330 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 11:23:17.330 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 11:23:17.330 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:23:17.331 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:23:17.331 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:17.331 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:23:17.331 [http-nio-8080-exec-1] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-01 11:23:17.332 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 11:23:17.332 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:23:17.332 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:17.332 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:23:17.332 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 11:23:17.333 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 11:23:17.335 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:23:17.338 [http-nio-8080-exec-1] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-01 11:23:17.339 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:23:17.340 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:17.340 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:23:17.342 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 11:23:17.344 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:23:17.345 [http-nio-8080-exec-1] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-01 11:23:17.345 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-01 11:23:17.345 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:17.345 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-01 11:23:17.346 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-01 11:23:17.349 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-01 11:23:34.468 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 11:23:34.818 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:34.599 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==>  Preparing: select name from publish
2025-07-01 11:23:34.908 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 11:23:35.015 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:35.113 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 11:23:35.363 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select name from publish ::: DataSources: slave
2025-07-01 11:23:35.436 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 11:23:35.534 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==> Parameters: 
2025-07-01 11:23:35.628 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:23:35.634 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - <==      Total: 5
2025-07-01 11:23:35.706 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:35.727 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:23:35.813 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 11:23:35.871 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 11:23:35.904 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:23:35.915 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:35.916 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:23:35.920 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 11:23:35.921 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 11:23:35.935 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:23:35.936 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:35.937 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:23:35.939 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 11:23:35.941 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 11:23:35.962 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:23:36.011 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:36.023 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:23:36.025 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 11:23:36.065 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 11:23:36.561 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-01 11:23:36.564 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:36.572 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-01 11:23:36.573 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 1(Integer)
2025-07-01 11:23:36.575 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-01 11:23:36.580 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.BookMapper.getBookImgSrcList - ==>  Preparing: select imgSrc from bookimg where isbn=?
2025-07-01 11:23:36.581 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:36.586 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? ::: DataSources: slave
2025-07-01 11:23:36.587 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.BookMapper.getBookImgSrcList - ==> Parameters: 9787020002207(String)
2025-07-01 11:23:36.600 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.BookMapper.getBookImgSrcList - <==      Total: 2
2025-07-01 11:23:36.610 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:23:36.613 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:36.619 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:23:36.626 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 11:23:36.630 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:23:36.647 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookSort - ==>  Preparing: select * from booksort where id in (select bookSortId from booksortlist where bookId=?)
2025-07-01 11:23:36.656 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:36.656 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where id in (select bookSortId from booksortlist where bookId=?) ::: DataSources: slave
2025-07-01 11:23:36.659 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookSort - ==> Parameters: 1(Integer)
2025-07-01 11:23:36.667 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookSort - <==      Total: 1
2025-07-01 11:23:36.671 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortId - ==>  Preparing: select id from booksort where upperName=? and sortName=?
2025-07-01 11:23:36.678 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:36.678 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select id from booksort where upperName=? and sortName=? ::: DataSources: slave
2025-07-01 11:23:36.681 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortId - ==> Parameters: 无(String), 文学(String)
2025-07-01 11:23:36.685 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortId - <==      Total: 1
2025-07-01 11:23:39.031 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 11:23:39.031 [http-nio-8080-exec-7] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=5
2025-07-01 11:23:39.032 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:39.033 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select * from book limit ?,?
2025-07-01 11:23:39.039 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:39.040 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book limit ?,? ::: DataSources: slave
2025-07-01 11:23:39.034 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 11:23:39.037 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==>  Preparing: select name from publish
2025-07-01 11:23:39.042 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 11:23:39.043 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 11:23:39.043 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:39.046 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select name from publish ::: DataSources: slave
2025-07-01 11:23:39.047 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 11:23:39.052 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-01 11:23:39.055 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:23:39.055 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:39.056 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:23:39.055 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==> Parameters: 
2025-07-01 11:23:39.055 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:23:39.059 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 11:23:39.063 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - <==      Total: 5
2025-07-01 11:23:39.064 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:39.066 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:23:39.068 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 11:23:39.070 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 11:23:39.072 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:23:39.072 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:39.072 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:23:39.073 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:23:39.074 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 11:23:39.081 [http-nio-8080-exec-7] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-01 11:23:39.085 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 11:23:39.086 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:23:39.088 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:23:39.089 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:39.090 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:39.091 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:23:39.091 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:23:39.094 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 11:23:39.103 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 11:23:39.106 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:23:39.109 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 11:23:39.111 [http-nio-8080-exec-7] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-01 11:23:39.116 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:23:39.117 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:23:39.117 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:39.117 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:39.118 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:23:39.118 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:23:39.118 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 11:23:39.119 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 11:23:39.120 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:23:39.120 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 11:23:39.121 [http-nio-8080-exec-7] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-01 11:23:39.122 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:23:39.130 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:39.130 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:23:39.136 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 11:23:39.139 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:23:39.140 [http-nio-8080-exec-7] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-01 11:23:39.140 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:23:39.140 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:39.140 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:23:39.141 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 11:23:39.142 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:23:39.143 [http-nio-8080-exec-7] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-01 11:23:39.143 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-01 11:23:39.143 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:23:39.143 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-01 11:23:39.144 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-01 11:23:39.145 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-01 11:24:06.240 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 11:24:06.243 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:24:06.241 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==>  Preparing: select name from publish
2025-07-01 11:24:06.246 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 11:24:06.248 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:24:06.249 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 11:24:06.249 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select name from publish ::: DataSources: slave
2025-07-01 11:24:06.252 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==> Parameters: 
2025-07-01 11:24:06.253 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 11:24:06.256 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - <==      Total: 5
2025-07-01 11:24:06.256 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:24:06.262 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:24:06.263 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:24:06.265 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 11:24:06.267 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 11:24:06.268 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:24:06.268 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:24:06.269 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:24:06.269 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 11:24:06.270 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 11:24:06.271 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:24:06.271 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:24:06.271 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:24:06.272 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 11:24:06.273 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 11:24:06.274 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:24:06.274 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:24:06.274 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:24:06.275 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 11:24:06.277 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 11:24:07.671 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 11:24:07.676 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:24:07.679 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 11:24:07.677 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==>  Preparing: select name from publish
2025-07-01 11:24:07.682 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 11:24:07.687 [http-nio-8080-exec-6] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=5
2025-07-01 11:24:07.687 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:24:07.699 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select name from publish ::: DataSources: slave
2025-07-01 11:24:07.689 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select * from book limit ?,?
2025-07-01 11:24:07.691 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 11:24:07.700 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==> Parameters: 
2025-07-01 11:24:07.702 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:24:07.707 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:24:07.709 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - <==      Total: 5
2025-07-01 11:24:07.711 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book limit ?,? ::: DataSources: slave
2025-07-01 11:24:07.713 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:24:07.718 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:24:07.719 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 11:24:07.717 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 11:24:07.723 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 11:24:07.723 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-01 11:24:07.724 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:24:07.724 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:24:07.724 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:24:07.724 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:24:07.724 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:24:07.724 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:24:07.724 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 11:24:07.726 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 11:24:07.727 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 11:24:07.727 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:24:07.728 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:24:07.728 [http-nio-8080-exec-6] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-01 11:24:07.728 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:24:07.728 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:24:07.728 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:24:07.728 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:24:07.728 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:24:07.728 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 11:24:07.729 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 11:24:07.729 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:24:07.729 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 11:24:07.730 [http-nio-8080-exec-6] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-01 11:24:07.732 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:24:07.732 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:24:07.733 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:24:07.733 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:24:07.734 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:24:07.733 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:24:07.734 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 11:24:07.734 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 11:24:07.735 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:24:07.735 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 11:24:07.737 [http-nio-8080-exec-6] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-01 11:24:07.739 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:24:07.740 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:24:07.740 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:24:07.740 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 11:24:07.742 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:24:07.743 [http-nio-8080-exec-6] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-01 11:24:07.744 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:24:07.744 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:24:07.744 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:24:07.745 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 11:24:07.746 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:24:07.746 [http-nio-8080-exec-6] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-01 11:24:07.746 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-01 11:24:07.747 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:24:07.747 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-01 11:24:07.747 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-01 11:24:07.748 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-01 11:24:08.731 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getFirstSorts - ==>  Preparing: select * from booksort where level="级别一" limit ?,?
2025-07-01 11:24:08.731 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:24:08.732 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" limit ?,? ::: DataSources: slave
2025-07-01 11:24:08.734 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getFirstSorts - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 11:24:08.739 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getFirstSorts - <==      Total: 4
2025-07-01 11:24:08.742 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getFirstCount - ==>  Preparing: select count(*) from booksort where level="级别一"
2025-07-01 11:24:08.743 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:24:08.745 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select count(*) from booksort where level="级别一" ::: DataSources: slave
2025-07-01 11:24:08.749 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getFirstCount - ==> Parameters: 
2025-07-01 11:24:08.751 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getFirstCount - <==      Total: 1
2025-07-01 11:28:20.971 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzg2MTMxODEsImV4cCI6MTc1MTM0MDQxM30.Pptf9WD-ZnSik42grhxZtZnVH8o9FcZc9WRcKqoAEOFxV862wA7CCV9AWZ_GuNzig3-x4Jc3ArM2jBhSSJVaNw
2025-07-01 11:28:20.979 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getSecondSorts - ==>  Preparing: select * from booksort where upperName=? limit ?,?
2025-07-01 11:28:20.980 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:20.981 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? limit ?,? ::: DataSources: slave
2025-07-01 11:28:20.983 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getSecondSorts - ==> Parameters: 文学(String), 0(Integer), 5(Integer)
2025-07-01 11:28:20.984 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getSecondSorts - <==      Total: 3
2025-07-01 11:28:20.984 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getSecondCount - ==>  Preparing: select count(*) from booksort where upperName=?
2025-07-01 11:28:20.984 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:20.985 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select count(*) from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:28:20.986 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getSecondCount - ==> Parameters: 文学(String)
2025-07-01 11:28:20.987 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getSecondCount - <==      Total: 1
2025-07-01 11:28:29.749 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzg2MTMxODEsImV4cCI6MTc1MTM0MDQxM30.Pptf9WD-ZnSik42grhxZtZnVH8o9FcZc9WRcKqoAEOFxV862wA7CCV9AWZ_GuNzig3-x4Jc3ArM2jBhSSJVaNw
2025-07-01 11:28:29.751 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getFirstSorts - ==>  Preparing: select * from booksort where level="级别一" limit ?,?
2025-07-01 11:28:29.751 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:29.751 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" limit ?,? ::: DataSources: slave
2025-07-01 11:28:29.752 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getFirstSorts - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 11:28:29.755 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getFirstSorts - <==      Total: 4
2025-07-01 11:28:29.755 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getFirstCount - ==>  Preparing: select count(*) from booksort where level="级别一"
2025-07-01 11:28:29.755 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:29.758 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select count(*) from booksort where level="级别一" ::: DataSources: slave
2025-07-01 11:28:29.759 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getFirstCount - ==> Parameters: 
2025-07-01 11:28:29.762 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getFirstCount - <==      Total: 1
2025-07-01 11:28:33.175 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzg2MTMxODEsImV4cCI6MTc1MTM0MDQxM30.Pptf9WD-ZnSik42grhxZtZnVH8o9FcZc9WRcKqoAEOFxV862wA7CCV9AWZ_GuNzig3-x4Jc3ArM2jBhSSJVaNw
2025-07-01 11:28:33.177 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getSecondSorts - ==>  Preparing: select * from booksort where upperName=? limit ?,?
2025-07-01 11:28:33.178 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:33.179 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? limit ?,? ::: DataSources: slave
2025-07-01 11:28:33.179 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getSecondSorts - ==> Parameters: 文学(String), 0(Integer), 5(Integer)
2025-07-01 11:28:33.181 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getSecondSorts - <==      Total: 3
2025-07-01 11:28:33.182 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getSecondCount - ==>  Preparing: select count(*) from booksort where upperName=?
2025-07-01 11:28:33.182 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:33.183 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select count(*) from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:28:33.183 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getSecondCount - ==> Parameters: 文学(String)
2025-07-01 11:28:33.185 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getSecondCount - <==      Total: 1
2025-07-01 11:28:36.668 [http-nio-8080-exec-7] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzg2MTMxODEsImV4cCI6MTc1MTM0MDQxM30.Pptf9WD-ZnSik42grhxZtZnVH8o9FcZc9WRcKqoAEOFxV862wA7CCV9AWZ_GuNzig3-x4Jc3ArM2jBhSSJVaNw
2025-07-01 11:28:36.670 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getFirstSorts - ==>  Preparing: select * from booksort where level="级别一" limit ?,?
2025-07-01 11:28:36.671 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:36.671 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" limit ?,? ::: DataSources: slave
2025-07-01 11:28:36.672 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getFirstSorts - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 11:28:36.676 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getFirstSorts - <==      Total: 4
2025-07-01 11:28:36.677 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getFirstCount - ==>  Preparing: select count(*) from booksort where level="级别一"
2025-07-01 11:28:36.677 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:36.677 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select count(*) from booksort where level="级别一" ::: DataSources: slave
2025-07-01 11:28:36.678 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getFirstCount - ==> Parameters: 
2025-07-01 11:28:36.681 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getFirstCount - <==      Total: 1
2025-07-01 11:28:41.804 [http-nio-8080-exec-10] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzg2MTMxODEsImV4cCI6MTc1MTM0MDQxM30.Pptf9WD-ZnSik42grhxZtZnVH8o9FcZc9WRcKqoAEOFxV862wA7CCV9AWZ_GuNzig3-x4Jc3ArM2jBhSSJVaNw
2025-07-01 11:28:41.822 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.PublishMapper.getPublishByPage - ==>  Preparing: select * from publish limit ?,?
2025-07-01 11:28:41.823 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:41.827 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from publish limit ?,? ::: DataSources: slave
2025-07-01 11:28:41.832 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.PublishMapper.getPublishByPage - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 11:28:41.839 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.PublishMapper.getPublishByPage - <==      Total: 5
2025-07-01 11:28:41.844 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getPublishBookNum - ==>  Preparing: select count(*) from book where publish=?
2025-07-01 11:28:41.849 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:41.849 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select count(*) from book where publish=? ::: DataSources: slave
2025-07-01 11:28:41.851 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getPublishBookNum - ==> Parameters: 人民文学出版社(String)
2025-07-01 11:28:41.853 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getPublishBookNum - <==      Total: 1
2025-07-01 11:28:41.854 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getPublishBookNum - ==>  Preparing: select count(*) from book where publish=?
2025-07-01 11:28:41.856 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:41.857 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select count(*) from book where publish=? ::: DataSources: slave
2025-07-01 11:28:41.858 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getPublishBookNum - ==> Parameters: 机械工业出版社(String)
2025-07-01 11:28:41.860 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getPublishBookNum - <==      Total: 1
2025-07-01 11:28:41.861 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getPublishBookNum - ==>  Preparing: select count(*) from book where publish=?
2025-07-01 11:28:41.864 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:41.865 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select count(*) from book where publish=? ::: DataSources: slave
2025-07-01 11:28:41.865 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getPublishBookNum - ==> Parameters: 清华大学出版社(String)
2025-07-01 11:28:41.866 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getPublishBookNum - <==      Total: 1
2025-07-01 11:28:41.867 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getPublishBookNum - ==>  Preparing: select count(*) from book where publish=?
2025-07-01 11:28:41.868 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:41.868 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select count(*) from book where publish=? ::: DataSources: slave
2025-07-01 11:28:41.872 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getPublishBookNum - ==> Parameters: 电子工业出版社(String)
2025-07-01 11:28:41.873 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getPublishBookNum - <==      Total: 1
2025-07-01 11:28:41.874 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getPublishBookNum - ==>  Preparing: select count(*) from book where publish=?
2025-07-01 11:28:41.874 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:41.874 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select count(*) from book where publish=? ::: DataSources: slave
2025-07-01 11:28:41.874 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getPublishBookNum - ==> Parameters: 中信出版社(String)
2025-07-01 11:28:41.879 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getPublishBookNum - <==      Total: 1
2025-07-01 11:28:41.880 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.PublishMapper.getPublishCount - ==>  Preparing: select count(*) from publish
2025-07-01 11:28:41.881 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:41.886 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select count(*) from publish ::: DataSources: slave
2025-07-01 11:28:41.888 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.PublishMapper.getPublishCount - ==> Parameters: 
2025-07-01 11:28:41.891 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.PublishMapper.getPublishCount - <==      Total: 1
2025-07-01 11:28:43.594 [http-nio-8080-exec-2] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzg2MTMxODEsImV4cCI6MTc1MTM0MDQxM30.Pptf9WD-ZnSik42grhxZtZnVH8o9FcZc9WRcKqoAEOFxV862wA7CCV9AWZ_GuNzig3-x4Jc3ArM2jBhSSJVaNw
2025-07-01 11:28:43.594 [http-nio-8080-exec-8] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzg2MTMxODEsImV4cCI6MTc1MTM0MDQxM30.Pptf9WD-ZnSik42grhxZtZnVH8o9FcZc9WRcKqoAEOFxV862wA7CCV9AWZ_GuNzig3-x4Jc3ArM2jBhSSJVaNw
2025-07-01 11:28:43.595 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzg2MTMxODEsImV4cCI6MTc1MTM0MDQxM30.Pptf9WD-ZnSik42grhxZtZnVH8o9FcZc9WRcKqoAEOFxV862wA7CCV9AWZ_GuNzig3-x4Jc3ArM2jBhSSJVaNw
2025-07-01 11:28:43.597 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 11:28:43.601 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:43.600 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==>  Preparing: select name from publish
2025-07-01 11:28:43.602 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:43.603 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select name from publish ::: DataSources: slave
2025-07-01 11:28:43.602 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 11:28:43.602 [http-nio-8080-exec-1] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=5
2025-07-01 11:28:43.603 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==> Parameters: 
2025-07-01 11:28:43.605 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 11:28:43.608 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 11:28:43.606 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select * from book limit ?,?
2025-07-01 11:28:43.608 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - <==      Total: 5
2025-07-01 11:28:43.609 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:28:43.610 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:43.613 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:43.615 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:28:43.614 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book limit ?,? ::: DataSources: slave
2025-07-01 11:28:43.616 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 11:28:43.616 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 11:28:43.617 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 11:28:43.618 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-01 11:28:43.619 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:28:43.620 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:43.620 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:28:43.621 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:28:43.621 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:43.622 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:28:43.622 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 11:28:43.622 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 11:28:43.624 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:28:43.624 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 11:28:43.624 [http-nio-8080-exec-1] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-01 11:28:43.624 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:28:43.624 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:28:43.625 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:43.626 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:28:43.626 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:43.627 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 11:28:43.627 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:28:43.627 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 11:28:43.628 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:28:43.628 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 11:28:43.628 [http-nio-8080-exec-1] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-01 11:28:43.629 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:28:43.629 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:28:43.629 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:43.629 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:28:43.629 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:43.629 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 11:28:43.629 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:28:43.630 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 11:28:43.630 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:28:43.631 [http-nio-8080-exec-1] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-01 11:28:43.631 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 11:28:43.632 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:28:43.633 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:43.633 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:28:43.634 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 11:28:43.635 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:28:43.635 [http-nio-8080-exec-1] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-01 11:28:43.636 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:28:43.636 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:43.636 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:28:43.637 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 11:28:43.638 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:28:43.639 [http-nio-8080-exec-1] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-01 11:28:43.640 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-01 11:28:43.640 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:43.640 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-01 11:28:43.640 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-01 11:28:43.641 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-01 11:28:54.282 [http-nio-8080-exec-6] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzg2MTMxODEsImV4cCI6MTc1MTM0MDQxM30.Pptf9WD-ZnSik42grhxZtZnVH8o9FcZc9WRcKqoAEOFxV862wA7CCV9AWZ_GuNzig3-x4Jc3ArM2jBhSSJVaNw
2025-07-01 11:28:54.287 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-01 11:28:54.287 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:54.288 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-01 11:28:54.290 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 11:28:54.295 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-01 11:28:54.296 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-01 11:28:54.297 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:54.297 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-01 11:28:54.298 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-01 11:28:54.300 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-01 11:28:57.644 [http-nio-8080-exec-9] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzg2MTMxODEsImV4cCI6MTc1MTM0MDQxM30.Pptf9WD-ZnSik42grhxZtZnVH8o9FcZc9WRcKqoAEOFxV862wA7CCV9AWZ_GuNzig3-x4Jc3ArM2jBhSSJVaNw
2025-07-01 11:28:57.650 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.PublishMapper.getPublishByPage - ==>  Preparing: select * from publish limit ?,?
2025-07-01 11:28:57.650 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:57.651 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from publish limit ?,? ::: DataSources: slave
2025-07-01 11:28:57.652 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.PublishMapper.getPublishByPage - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 11:28:57.657 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.PublishMapper.getPublishByPage - <==      Total: 5
2025-07-01 11:28:57.658 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getPublishBookNum - ==>  Preparing: select count(*) from book where publish=?
2025-07-01 11:28:57.659 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:57.662 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select count(*) from book where publish=? ::: DataSources: slave
2025-07-01 11:28:57.664 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getPublishBookNum - ==> Parameters: 人民文学出版社(String)
2025-07-01 11:28:57.665 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getPublishBookNum - <==      Total: 1
2025-07-01 11:28:57.666 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getPublishBookNum - ==>  Preparing: select count(*) from book where publish=?
2025-07-01 11:28:57.670 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:57.671 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select count(*) from book where publish=? ::: DataSources: slave
2025-07-01 11:28:57.673 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getPublishBookNum - ==> Parameters: 机械工业出版社(String)
2025-07-01 11:28:57.677 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getPublishBookNum - <==      Total: 1
2025-07-01 11:28:57.678 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getPublishBookNum - ==>  Preparing: select count(*) from book where publish=?
2025-07-01 11:28:57.678 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:57.678 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select count(*) from book where publish=? ::: DataSources: slave
2025-07-01 11:28:57.678 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getPublishBookNum - ==> Parameters: 清华大学出版社(String)
2025-07-01 11:28:57.680 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getPublishBookNum - <==      Total: 1
2025-07-01 11:28:57.682 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getPublishBookNum - ==>  Preparing: select count(*) from book where publish=?
2025-07-01 11:28:57.687 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:57.689 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select count(*) from book where publish=? ::: DataSources: slave
2025-07-01 11:28:57.691 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getPublishBookNum - ==> Parameters: 电子工业出版社(String)
2025-07-01 11:28:57.692 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getPublishBookNum - <==      Total: 1
2025-07-01 11:28:57.693 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getPublishBookNum - ==>  Preparing: select count(*) from book where publish=?
2025-07-01 11:28:57.693 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:57.695 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select count(*) from book where publish=? ::: DataSources: slave
2025-07-01 11:28:57.695 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getPublishBookNum - ==> Parameters: 中信出版社(String)
2025-07-01 11:28:57.698 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getPublishBookNum - <==      Total: 1
2025-07-01 11:28:57.698 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.PublishMapper.getPublishCount - ==>  Preparing: select count(*) from publish
2025-07-01 11:28:57.699 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:57.699 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select count(*) from publish ::: DataSources: slave
2025-07-01 11:28:57.699 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.PublishMapper.getPublishCount - ==> Parameters: 
2025-07-01 11:28:57.700 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.PublishMapper.getPublishCount - <==      Total: 1
2025-07-01 11:28:58.332 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzg2MTMxODEsImV4cCI6MTc1MTM0MDQxM30.Pptf9WD-ZnSik42grhxZtZnVH8o9FcZc9WRcKqoAEOFxV862wA7CCV9AWZ_GuNzig3-x4Jc3ArM2jBhSSJVaNw
2025-07-01 11:28:58.345 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getFirstSorts - ==>  Preparing: select * from booksort where level="级别一" limit ?,?
2025-07-01 11:28:58.346 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:58.350 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" limit ?,? ::: DataSources: slave
2025-07-01 11:28:58.351 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getFirstSorts - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 11:28:58.355 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getFirstSorts - <==      Total: 4
2025-07-01 11:28:58.356 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getFirstCount - ==>  Preparing: select count(*) from booksort where level="级别一"
2025-07-01 11:28:58.359 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:58.360 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select count(*) from booksort where level="级别一" ::: DataSources: slave
2025-07-01 11:28:58.361 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getFirstCount - ==> Parameters: 
2025-07-01 11:28:58.366 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getFirstCount - <==      Total: 1
2025-07-01 11:28:59.208 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzg2MTMxODEsImV4cCI6MTc1MTM0MDQxM30.Pptf9WD-ZnSik42grhxZtZnVH8o9FcZc9WRcKqoAEOFxV862wA7CCV9AWZ_GuNzig3-x4Jc3ArM2jBhSSJVaNw
2025-07-01 11:28:59.211 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==>  Preparing: select name from publish
2025-07-01 11:28:59.211 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzg2MTMxODEsImV4cCI6MTc1MTM0MDQxM30.Pptf9WD-ZnSik42grhxZtZnVH8o9FcZc9WRcKqoAEOFxV862wA7CCV9AWZ_GuNzig3-x4Jc3ArM2jBhSSJVaNw
2025-07-01 11:28:59.211 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:59.211 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select name from publish ::: DataSources: slave
2025-07-01 11:28:59.211 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==> Parameters: 
2025-07-01 11:28:59.211 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 11:28:59.212 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - <==      Total: 5
2025-07-01 11:28:59.212 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:59.213 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 11:28:59.213 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 11:28:59.215 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 11:28:59.216 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:28:59.226 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:59.227 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:28:59.227 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 11:28:59.230 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 11:28:59.230 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:28:59.230 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:59.231 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:28:59.231 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 11:28:59.232 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 11:28:59.233 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:28:59.233 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:59.233 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:28:59.233 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 11:28:59.235 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 11:28:59.235 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:28:59.235 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:28:59.237 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:28:59.240 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 11:28:59.242 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 11:29:00.748 [http-nio-8080-exec-10] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzg2MTMxODEsImV4cCI6MTc1MTM0MDQxM30.Pptf9WD-ZnSik42grhxZtZnVH8o9FcZc9WRcKqoAEOFxV862wA7CCV9AWZ_GuNzig3-x4Jc3ArM2jBhSSJVaNw
2025-07-01 11:29:00.749 [http-nio-8080-exec-8] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzg2MTMxODEsImV4cCI6MTc1MTM0MDQxM30.Pptf9WD-ZnSik42grhxZtZnVH8o9FcZc9WRcKqoAEOFxV862wA7CCV9AWZ_GuNzig3-x4Jc3ArM2jBhSSJVaNw
2025-07-01 11:29:00.757 [http-nio-8080-exec-10] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=5
2025-07-01 11:29:00.752 [http-nio-8080-exec-7] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzg2MTMxODEsImV4cCI6MTc1MTM0MDQxM30.Pptf9WD-ZnSik42grhxZtZnVH8o9FcZc9WRcKqoAEOFxV862wA7CCV9AWZ_GuNzig3-x4Jc3ArM2jBhSSJVaNw
2025-07-01 11:29:00.760 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 11:29:00.760 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select * from book limit ?,?
2025-07-01 11:29:00.766 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:00.767 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book limit ?,? ::: DataSources: slave
2025-07-01 11:29:00.764 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==>  Preparing: select name from publish
2025-07-01 11:29:00.764 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:00.769 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 11:29:00.769 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:00.774 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select name from publish ::: DataSources: slave
2025-07-01 11:29:00.770 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 11:29:00.773 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-01 11:29:00.775 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==> Parameters: 
2025-07-01 11:29:00.776 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:29:00.776 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:00.776 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 11:29:00.777 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - <==      Total: 5
2025-07-01 11:29:00.777 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:29:00.780 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 11:29:00.780 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 11:29:00.781 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:29:00.782 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:00.782 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:29:00.782 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:29:00.783 [http-nio-8080-exec-10] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-01 11:29:00.783 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 11:29:00.784 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:29:00.786 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:00.786 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:29:00.787 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 11:29:00.789 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:29:00.789 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 11:29:00.789 [http-nio-8080-exec-10] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-01 11:29:00.789 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:29:00.789 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:29:00.789 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:00.790 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:00.790 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:29:00.790 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:29:00.790 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 11:29:00.790 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 11:29:00.792 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 11:29:00.792 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:29:00.793 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:29:00.793 [http-nio-8080-exec-10] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-01 11:29:00.793 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:00.794 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:29:00.795 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:29:00.795 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:00.797 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:29:00.797 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 11:29:00.797 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 11:29:00.799 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 11:29:00.800 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:29:00.800 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:29:00.800 [http-nio-8080-exec-10] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-01 11:29:00.800 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:00.801 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:29:00.801 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:29:00.801 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:00.801 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:29:00.801 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 11:29:00.801 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 11:29:00.802 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:29:00.802 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 11:29:00.803 [http-nio-8080-exec-10] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-01 11:29:00.803 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-01 11:29:00.803 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:00.803 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-01 11:29:00.804 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-01 11:29:00.804 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-01 11:29:05.526 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzg2MTMxODEsImV4cCI6MTc1MTM0MDQxM30.Pptf9WD-ZnSik42grhxZtZnVH8o9FcZc9WRcKqoAEOFxV862wA7CCV9AWZ_GuNzig3-x4Jc3ArM2jBhSSJVaNw
2025-07-01 11:29:05.526 [http-nio-8080-exec-2] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzg2MTMxODEsImV4cCI6MTc1MTM0MDQxM30.Pptf9WD-ZnSik42grhxZtZnVH8o9FcZc9WRcKqoAEOFxV862wA7CCV9AWZ_GuNzig3-x4Jc3ArM2jBhSSJVaNw
2025-07-01 11:29:05.529 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==>  Preparing: select name from publish
2025-07-01 11:29:05.529 [http-nio-8080-exec-1] INFO  com.huang.store.controller.OrderController - 获取订单列表: page=1, pageSize=5
2025-07-01 11:29:05.529 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:05.530 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select name from publish ::: DataSources: slave
2025-07-01 11:29:05.531 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==> Parameters: 
2025-07-01 11:29:05.534 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - <==      Total: 5
2025-07-01 11:29:05.538 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-01 11:29:05.540 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:05.540 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-01 11:29:05.548 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: false(Boolean), 0(Integer), 5(Integer)
2025-07-01 11:29:05.578 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 3
2025-07-01 11:29:05.579 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE beUserDelete = ?
2025-07-01 11:29:05.579 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:05.579 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  beUserDelete = ? ::: DataSources: slave
2025-07-01 11:29:05.580 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: false(Boolean)
2025-07-01 11:29:05.581 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-01 11:29:09.278 [http-nio-8080-exec-9] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzg2MTMxODEsImV4cCI6MTc1MTM0MDQxM30.Pptf9WD-ZnSik42grhxZtZnVH8o9FcZc9WRcKqoAEOFxV862wA7CCV9AWZ_GuNzig3-x4Jc3ArM2jBhSSJVaNw
2025-07-01 11:29:09.278 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzg2MTMxODEsImV4cCI6MTc1MTM0MDQxM30.Pptf9WD-ZnSik42grhxZtZnVH8o9FcZc9WRcKqoAEOFxV862wA7CCV9AWZ_GuNzig3-x4Jc3ArM2jBhSSJVaNw
2025-07-01 11:29:09.278 [http-nio-8080-exec-6] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzg2MTMxODEsImV4cCI6MTc1MTM0MDQxM30.Pptf9WD-ZnSik42grhxZtZnVH8o9FcZc9WRcKqoAEOFxV862wA7CCV9AWZ_GuNzig3-x4Jc3ArM2jBhSSJVaNw
2025-07-01 11:29:09.282 [http-nio-8080-exec-4] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=5
2025-07-01 11:29:09.284 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 11:29:09.290 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:09.292 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 11:29:09.289 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select * from book limit ?,?
2025-07-01 11:29:09.294 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:09.295 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book limit ?,? ::: DataSources: slave
2025-07-01 11:29:09.290 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==>  Preparing: select name from publish
2025-07-01 11:29:09.298 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:09.298 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select name from publish ::: DataSources: slave
2025-07-01 11:29:09.294 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 11:29:09.296 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 11:29:09.299 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==> Parameters: 
2025-07-01 11:29:09.304 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 11:29:09.307 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - <==      Total: 5
2025-07-01 11:29:09.308 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-01 11:29:09.309 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:29:09.311 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:29:09.318 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:09.319 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:29:09.318 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:09.320 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:29:09.320 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 11:29:09.321 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 11:29:09.322 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:29:09.322 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 11:29:09.323 [http-nio-8080-exec-4] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-01 11:29:09.325 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:29:09.327 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:09.326 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:29:09.328 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:29:09.330 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:09.331 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 11:29:09.332 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:29:09.333 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 11:29:09.334 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 11:29:09.336 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:29:09.338 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:29:09.339 [http-nio-8080-exec-4] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-01 11:29:09.339 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:09.346 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:29:09.345 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:29:09.350 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 11:29:09.350 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:09.351 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:29:09.352 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 11:29:09.352 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 11:29:09.353 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:29:09.353 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:09.353 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:29:09.353 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:29:09.354 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 11:29:09.355 [http-nio-8080-exec-4] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-01 11:29:09.357 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 11:29:09.358 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:29:09.360 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:09.364 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:29:09.365 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 11:29:09.367 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:29:09.368 [http-nio-8080-exec-4] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-01 11:29:09.371 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:29:09.371 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:09.371 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:29:09.371 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 11:29:09.373 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:29:09.373 [http-nio-8080-exec-4] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-01 11:29:09.373 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-01 11:29:09.374 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:09.376 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-01 11:29:09.376 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-01 11:29:09.377 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-01 11:29:16.112 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzg2MTMxODEsImV4cCI6MTc1MTM0MDQxM30.Pptf9WD-ZnSik42grhxZtZnVH8o9FcZc9WRcKqoAEOFxV862wA7CCV9AWZ_GuNzig3-x4Jc3ArM2jBhSSJVaNw
2025-07-01 11:29:16.112 [http-nio-8080-exec-7] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzg2MTMxODEsImV4cCI6MTc1MTM0MDQxM30.Pptf9WD-ZnSik42grhxZtZnVH8o9FcZc9WRcKqoAEOFxV862wA7CCV9AWZ_GuNzig3-x4Jc3ArM2jBhSSJVaNw
2025-07-01 11:29:16.113 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzg2MTMxODEsImV4cCI6MTc1MTM0MDQxM30.Pptf9WD-ZnSik42grhxZtZnVH8o9FcZc9WRcKqoAEOFxV862wA7CCV9AWZ_GuNzig3-x4Jc3ArM2jBhSSJVaNw
2025-07-01 11:29:16.114 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 11:29:16.114 [http-nio-8080-exec-3] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=5
2025-07-01 11:29:16.114 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:16.115 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 11:29:16.114 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select * from book limit ?,?
2025-07-01 11:29:16.114 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==>  Preparing: select name from publish
2025-07-01 11:29:16.115 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 11:29:16.115 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:16.116 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book limit ?,? ::: DataSources: slave
2025-07-01 11:29:16.115 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:16.116 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select name from publish ::: DataSources: slave
2025-07-01 11:29:16.116 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 11:29:16.117 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 11:29:16.118 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:29:16.117 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==> Parameters: 
2025-07-01 11:29:16.120 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-01 11:29:16.121 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:16.122 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:29:16.121 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:29:16.122 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - <==      Total: 5
2025-07-01 11:29:16.122 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 11:29:16.122 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:16.124 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 11:29:16.124 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:29:16.125 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:29:16.126 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:16.126 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 11:29:16.127 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:29:16.129 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 11:29:16.129 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:29:16.130 [http-nio-8080-exec-3] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-01 11:29:16.130 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:29:16.130 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 11:29:16.130 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:16.131 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:29:16.131 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:29:16.131 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 11:29:16.131 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:16.131 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:29:16.131 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 11:29:16.132 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:29:16.133 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 11:29:16.133 [http-nio-8080-exec-3] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-01 11:29:16.133 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:29:16.133 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:29:16.133 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:16.134 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:16.134 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:29:16.134 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:29:16.135 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 11:29:16.135 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 11:29:16.136 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 11:29:16.136 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:29:16.136 [http-nio-8080-exec-3] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-01 11:29:16.141 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:29:16.150 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:16.151 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:29:16.152 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 11:29:16.158 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:29:16.169 [http-nio-8080-exec-3] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-01 11:29:16.169 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:29:16.170 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:16.171 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:29:16.172 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 11:29:16.173 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:29:16.175 [http-nio-8080-exec-3] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-01 11:29:16.175 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-01 11:29:16.175 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:16.175 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-01 11:29:16.176 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-01 11:29:16.177 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-01 11:29:23.406 [http-nio-8080-exec-8] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzg2MTMxODEsImV4cCI6MTc1MTM0MDQxM30.Pptf9WD-ZnSik42grhxZtZnVH8o9FcZc9WRcKqoAEOFxV862wA7CCV9AWZ_GuNzig3-x4Jc3ArM2jBhSSJVaNw
2025-07-01 11:29:23.408 [http-nio-8080-exec-2] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzg2MTMxODEsImV4cCI6MTc1MTM0MDQxM30.Pptf9WD-ZnSik42grhxZtZnVH8o9FcZc9WRcKqoAEOFxV862wA7CCV9AWZ_GuNzig3-x4Jc3ArM2jBhSSJVaNw
2025-07-01 11:29:23.414 [http-nio-8080-exec-10] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzg2MTMxODEsImV4cCI6MTc1MTM0MDQxM30.Pptf9WD-ZnSik42grhxZtZnVH8o9FcZc9WRcKqoAEOFxV862wA7CCV9AWZ_GuNzig3-x4Jc3ArM2jBhSSJVaNw
2025-07-01 11:29:23.420 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==>  Preparing: select name from publish
2025-07-01 11:29:23.430 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:23.434 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select name from publish ::: DataSources: slave
2025-07-01 11:29:23.436 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==> Parameters: 
2025-07-01 11:29:23.437 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 11:29:23.442 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - <==      Total: 5
2025-07-01 11:29:23.447 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:23.448 [http-nio-8080-exec-10] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=5
2025-07-01 11:29:23.448 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 11:29:23.450 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select * from book limit ?,?
2025-07-01 11:29:23.451 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:23.453 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book limit ?,? ::: DataSources: slave
2025-07-01 11:29:23.450 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 11:29:23.455 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 11:29:23.459 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 11:29:23.460 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-01 11:29:23.462 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:29:23.465 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:29:23.467 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:23.467 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:23.467 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:29:23.468 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:29:23.468 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 11:29:23.468 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 11:29:23.471 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:29:23.471 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 11:29:23.472 [http-nio-8080-exec-10] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-01 11:29:23.473 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:29:23.473 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:29:23.474 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:23.474 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:29:23.473 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:23.475 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 11:29:23.475 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:29:23.475 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 11:29:23.476 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:29:23.476 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 11:29:23.477 [http-nio-8080-exec-10] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-01 11:29:23.477 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:29:23.477 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:29:23.477 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:23.477 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:23.477 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:29:23.477 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:29:23.477 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 11:29:23.477 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 11:29:23.478 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:29:23.479 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 11:29:23.479 [http-nio-8080-exec-10] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-01 11:29:23.480 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 11:29:23.481 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:29:23.484 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:23.484 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:29:23.482 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:23.485 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 11:29:23.485 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 11:29:23.487 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:29:23.489 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 11:29:23.490 [http-nio-8080-exec-10] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-01 11:29:23.490 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 11:29:23.490 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:23.490 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 11:29:23.490 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 11:29:23.490 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 11:29:23.492 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 11:29:23.493 [http-nio-8080-exec-10] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-01 11:29:23.494 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-01 11:29:23.495 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:23.496 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-01 11:29:23.496 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-01 11:29:23.497 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-01 11:29:27.010 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzg2MTMxODEsImV4cCI6MTc1MTM0MDQxM30.Pptf9WD-ZnSik42grhxZtZnVH8o9FcZc9WRcKqoAEOFxV862wA7CCV9AWZ_GuNzig3-x4Jc3ArM2jBhSSJVaNw
2025-07-01 11:29:27.018 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 11:29:27.019 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:27.019 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 11:29:27.020 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 11:29:27.025 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 11:29:27.026 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 11:29:27.027 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 11:29:27.027 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 11:29:27.027 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 11:29:27.029 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 12:09:24.294 [http-nio-8080-exec-9] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzg2MTMxODEsImV4cCI6MTc1MTM0MDQxM30.Pptf9WD-ZnSik42grhxZtZnVH8o9FcZc9WRcKqoAEOFxV862wA7CCV9AWZ_GuNzig3-x4Jc3ArM2jBhSSJVaNw
2025-07-01 12:09:24.294 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzg2MTMxODEsImV4cCI6MTc1MTM0MDQxM30.Pptf9WD-ZnSik42grhxZtZnVH8o9FcZc9WRcKqoAEOFxV862wA7CCV9AWZ_GuNzig3-x4Jc3ArM2jBhSSJVaNw
2025-07-01 12:09:24.295 [http-nio-8080-exec-6] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzMzg2MTMxODEsImV4cCI6MTc1MTM0MDQxM30.Pptf9WD-ZnSik42grhxZtZnVH8o9FcZc9WRcKqoAEOFxV862wA7CCV9AWZ_GuNzig3-x4Jc3ArM2jBhSSJVaNw
2025-07-01 12:09:24.298 [http-nio-8080-exec-9] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=5
2025-07-01 12:09:24.302 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 12:09:24.304 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select * from book limit ?,?
2025-07-01 12:09:24.308 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 12:09:24.314 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 12:09:24.312 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 12:09:24.317 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 12:09:24.317 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book limit ?,? ::: DataSources: slave
2025-07-01 12:09:24.320 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 12:09:24.320 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 12:09:24.321 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 12:09:24.322 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 12:09:24.322 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 12:09:24.322 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 12:09:24.323 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-01 12:09:24.324 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 12:09:24.325 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 12:09:24.325 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 12:09:24.326 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 12:09:24.326 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 12:09:24.326 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 12:09:24.327 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 12:09:24.327 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 12:09:24.327 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 12:09:24.328 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 12:09:24.328 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 12:09:24.329 [http-nio-8080-exec-9] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-01 12:09:24.329 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 12:09:24.329 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 12:09:24.329 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 12:09:24.329 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 12:09:24.329 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 12:09:24.329 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 12:09:24.330 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 12:09:24.331 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 12:09:24.333 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 12:09:24.334 [http-nio-8080-exec-9] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-01 12:09:24.334 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 12:09:24.334 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 12:09:24.335 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 12:09:24.336 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 12:09:24.336 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 12:09:24.336 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 12:09:24.336 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 12:09:24.336 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 12:09:24.336 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 12:09:24.338 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 12:09:24.338 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 12:09:24.339 [http-nio-8080-exec-9] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-01 12:09:24.343 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 12:09:24.345 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 12:09:24.345 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 12:09:24.346 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 12:09:24.348 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 12:09:24.348 [http-nio-8080-exec-9] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-01 12:09:24.349 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 12:09:24.349 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 12:09:24.349 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 12:09:24.350 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 12:09:24.351 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 12:09:24.352 [http-nio-8080-exec-9] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-01 12:09:24.353 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-01 12:09:24.353 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 12:09:24.353 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-01 12:09:24.353 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-01 12:09:24.355 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-01 12:09:26.708 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 12:09:26.716 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 12:09:26.717 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 12:09:26.723 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 2545059634@qq.com(String)
2025-07-01 12:09:26.727 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 12:09:26.731 [http-nio-8080-exec-5] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:2545059634@qq.com    数据库密码:$2a$10$w8zNNUSDq3MCiLDDuAhYXedA0QGva1Z4.6UxO61Njhsrlo8voc01G
2025-07-01 12:09:26.846 [http-nio-8080-exec-5] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=2545059634@qq.com, password=$2a$10$w8zNNUSDq3MCiLDDuAhYXedA0QGva1Z4.6UxO61Njhsrlo8voc01G, enabled=true, roles=[ROLE_ADMIN]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]
2025-07-01 12:09:26.903 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 12:09:26.912 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 12:09:26.918 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 12:09:26.927 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 2545059634@qq.com(String)
2025-07-01 12:09:26.933 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 12:09:30.549 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 12:09:30.551 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 12:09:30.554 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 12:09:30.561 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 12:09:30.573 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 12:09:30.585 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 12:09:30.586 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 12:09:30.587 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 12:09:30.589 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 12:09:30.590 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 12:09:32.148 [http-nio-8080-exec-2] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=5
2025-07-01 12:09:32.150 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 12:09:32.152 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select * from book limit ?,?
2025-07-01 12:09:32.153 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==>  Preparing: select name from publish
2025-07-01 12:09:32.152 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 12:09:32.153 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 12:09:32.153 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 12:09:32.154 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 12:09:32.154 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book limit ?,? ::: DataSources: slave
2025-07-01 12:09:32.154 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select name from publish ::: DataSources: slave
2025-07-01 12:09:32.155 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 12:09:32.156 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 12:09:32.158 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==> Parameters: 
2025-07-01 12:09:32.161 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - <==      Total: 5
2025-07-01 12:09:32.161 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 12:09:32.162 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-01 12:09:32.168 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 12:09:32.169 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 12:09:32.169 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 12:09:32.170 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 12:09:32.170 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 12:09:32.171 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 12:09:32.172 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 12:09:32.173 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 12:09:32.174 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 12:09:32.174 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 12:09:32.175 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 12:09:32.176 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 12:09:32.176 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 12:09:32.177 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 12:09:32.177 [http-nio-8080-exec-2] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-01 12:09:32.178 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 12:09:32.178 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 12:09:32.178 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 12:09:32.179 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 12:09:32.179 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 12:09:32.180 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 12:09:32.181 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 12:09:32.181 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 12:09:32.181 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 12:09:32.181 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 12:09:32.183 [http-nio-8080-exec-2] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-01 12:09:32.183 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 12:09:32.183 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 12:09:32.184 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 12:09:32.186 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 12:09:32.256 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 12:09:32.257 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 12:09:32.259 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 12:09:32.258 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 12:09:32.259 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 12:09:32.262 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 12:09:32.264 [http-nio-8080-exec-2] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-01 12:09:32.264 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 12:09:32.265 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 12:09:32.287 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 12:09:32.287 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 12:09:32.289 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 12:09:32.292 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 12:09:32.292 [http-nio-8080-exec-2] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-01 12:09:32.293 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 12:09:32.293 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 12:09:32.293 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 12:09:32.293 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 12:09:32.296 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 12:09:32.296 [http-nio-8080-exec-2] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-01 12:09:32.297 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-01 12:09:32.297 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 12:09:32.297 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-01 12:09:32.298 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-01 12:09:32.299 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-01 12:09:34.458 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 12:09:34.458 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 12:09:34.458 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 12:09:34.458 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 12:09:34.460 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 12:09:34.462 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 12:09:34.464 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 12:09:34.464 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 12:09:34.465 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 12:09:34.466 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 14:05:34.116 [Thread-20] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-01 14:05:34.117 [Thread-20] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 14:05:34.118 [Thread-20] INFO  o.a.c.c.ContainerBase.[Tomcat-2].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-07-01 14:05:34.124 [Thread-20] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1142678799] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 14:05:34.125 [Thread-20] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1142678799] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 14:05:34.126 [Thread-20] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-571764986] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 14:05:34.126 [Thread-20] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-571764986] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 14:05:34.127 [Thread-20] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-nioEventLoop-8-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/sun.nio.ch.WEPoll.wait(Native Method)
 java.base@17.0.8/sun.nio.ch.WEPollSelectorImpl.doSelect(WEPollSelectorImpl.java:111)
 java.base@17.0.8/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:129)
 java.base@17.0.8/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:146)
 app//io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:68)
 app//io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:879)
 app//io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:526)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 14:05:34.128 [Thread-20] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-6-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 14:05:34.130 [Thread-20] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-01 14:05:34.132 [Thread-20] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-01 14:05:34.252 [Thread-20] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-9} closing ...
2025-07-01 14:05:34.257 [Thread-20] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-9} closed
2025-07-01 14:05:34.257 [Thread-20] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-10} closing ...
2025-07-01 14:05:34.260 [Thread-20] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-10} closed
2025-07-01 14:05:34.358 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 5420 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 14:05:34.358 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 14:05:34.358 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 14:05:34.519 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 14:05:34.520 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 14:05:34.522 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 0 Redis repository interfaces.
2025-07-01 14:05:34.557 [restartedMain] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[com.huang.store.mapper]' package. Please check your configuration.
2025-07-01 14:05:34.610 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 14:05:34.611 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 14:05:34.611 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 14:05:34.611 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 14:05:34.612 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 14:05:34.613 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 14:05:34.613 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 14:05:34.613 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 14:05:34.630 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-2].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 14:05:34.630 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 266 ms
2025-07-01 14:05:34.703 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 14:05:34.796 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-11} inited
2025-07-01 14:05:34.816 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-12} inited
2025-07-01 14:05:34.876 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
2025-07-01 14:05:34.878 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-11} closing ...
2025-07-01 14:05:34.879 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-11} closed
2025-07-01 14:05:34.880 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-12} closing ...
2025-07-01 14:05:34.881 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-12} closed
2025-07-01 14:05:34.883 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 14:05:34.889 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 14:05:34.895 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 24 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ca92cd0f.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ca92cd0f$$FastClassBySpringCGLIB$$6a6f54fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ca92cd0f.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:78)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:144)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:136)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:126)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 46 common frames omitted
2025-07-01 14:05:36.340 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 5420 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 14:05:36.341 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 14:05:36.341 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 14:05:36.418 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 14:05:36.418 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 14:05:36.424 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-07-01 14:05:36.452 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$d03dbeb0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 14:05:36.456 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 14:05:36.481 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 14:05:36.481 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 14:05:36.481 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 14:05:36.482 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 14:05:36.482 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 14:05:36.482 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 14:05:36.482 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 14:05:36.482 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 14:05:36.494 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-3].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 14:05:36.494 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 152 ms
2025-07-01 14:05:36.541 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-13} inited
2025-07-01 14:05:36.555 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-14} inited
2025-07-01 14:05:36.578 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController': Unsatisfied dependency expressed through field 'cartService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstCart': Unsatisfied dependency expressed through field 'cartMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\CartMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
2025-07-01 14:05:36.578 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-13} closing ...
2025-07-01 14:05:36.579 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-13} closed
2025-07-01 14:05:36.579 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-14} closing ...
2025-07-01 14:05:36.580 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-14} closed
2025-07-01 14:05:36.580 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 14:05:36.583 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 14:05:36.585 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController': Unsatisfied dependency expressed through field 'cartService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstCart': Unsatisfied dependency expressed through field 'cartMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\CartMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstCart': Unsatisfied dependency expressed through field 'cartMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\CartMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 25 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\CartMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1534)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 39 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	... 50 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 63 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ca92cd0f.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ca92cd0f$$FastClassBySpringCGLIB$$6a6f54fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ca92cd0f.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 64 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.dto.OrderDto'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.dto.OrderDto
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 77 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.dto.OrderDto'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.dto.OrderDto
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:270)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:262)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(XMLMapperBuilder.java:254)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:124)
	... 79 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.dto.OrderDto'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.dto.OrderDto
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 83 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.dto.OrderDto
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 85 common frames omitted
2025-07-01 14:06:26.696 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 5420 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 14:06:26.696 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 14:06:26.696 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 14:06:26.803 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 14:06:26.803 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 14:06:26.806 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2025-07-01 14:06:26.830 [restartedMain] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[com.huang.store.mapper]' package. Please check your configuration.
2025-07-01 14:06:26.870 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 14:06:26.871 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 14:06:26.871 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 14:06:26.871 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 14:06:26.872 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 14:06:26.873 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 14:06:26.873 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 14:06:26.873 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 14:06:26.894 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-4].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 14:06:26.894 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 197 ms
2025-07-01 14:06:26.931 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 14:06:26.964 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-15} inited
2025-07-01 14:06:26.977 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-16} inited
2025-07-01 14:06:26.992 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
2025-07-01 14:06:26.993 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-15} closing ...
2025-07-01 14:06:26.993 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-15} closed
2025-07-01 14:06:26.993 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-16} closing ...
2025-07-01 14:06:26.994 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-16} closed
2025-07-01 14:06:26.994 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 14:06:26.997 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 14:06:26.999 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 24 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ca92cd0f.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ca92cd0f$$FastClassBySpringCGLIB$$6a6f54fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ca92cd0f.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:78)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:144)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:136)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:126)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 46 common frames omitted
2025-07-01 14:06:29.472 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 5420 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 14:06:29.473 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 14:06:29.473 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 14:06:29.588 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 14:06:29.588 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 14:06:29.594 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-07-01 14:06:29.619 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$d03dbeb0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 14:06:29.623 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 14:06:29.643 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 14:06:29.643 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 14:06:29.644 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 14:06:29.644 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 14:06:29.644 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 14:06:29.644 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 14:06:29.645 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 14:06:29.645 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 14:06:29.654 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-5].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 14:06:29.654 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 179 ms
2025-07-01 14:06:29.693 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-17} inited
2025-07-01 14:06:29.706 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-18} inited
2025-07-01 14:06:29.729 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController': Unsatisfied dependency expressed through field 'cartService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstCart': Unsatisfied dependency expressed through field 'cartMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\CartMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
2025-07-01 14:06:29.729 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-17} closing ...
2025-07-01 14:06:29.729 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-17} closed
2025-07-01 14:06:29.730 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-18} closing ...
2025-07-01 14:06:29.730 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-18} closed
2025-07-01 14:06:29.730 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 14:06:29.733 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 14:06:29.735 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController': Unsatisfied dependency expressed through field 'cartService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstCart': Unsatisfied dependency expressed through field 'cartMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\CartMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstCart': Unsatisfied dependency expressed through field 'cartMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\CartMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 25 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\CartMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1534)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 39 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	... 50 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 63 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ca92cd0f.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ca92cd0f$$FastClassBySpringCGLIB$$6a6f54fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ca92cd0f.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 64 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.dto.OrderDto'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.dto.OrderDto
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 77 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.dto.OrderDto'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.dto.OrderDto
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:270)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:262)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(XMLMapperBuilder.java:254)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:124)
	... 79 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.dto.OrderDto'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.dto.OrderDto
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 83 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.dto.OrderDto
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 85 common frames omitted
2025-07-01 14:07:11.716 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 5420 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 14:07:11.716 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 14:07:11.717 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 14:07:11.842 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 14:07:11.843 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 14:07:11.845 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 0 Redis repository interfaces.
2025-07-01 14:07:11.877 [restartedMain] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[com.huang.store.mapper]' package. Please check your configuration.
2025-07-01 14:07:11.910 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 14:07:11.910 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 14:07:11.910 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 14:07:11.910 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 14:07:11.911 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 14:07:11.911 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 14:07:11.911 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 14:07:11.912 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 14:07:11.927 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-6].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 14:07:11.927 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 209 ms
2025-07-01 14:07:11.980 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 14:07:12.033 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-19} inited
2025-07-01 14:07:12.051 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-20} inited
2025-07-01 14:07:12.074 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
2025-07-01 14:07:12.075 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-19} closing ...
2025-07-01 14:07:12.076 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-19} closed
2025-07-01 14:07:12.076 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-20} closing ...
2025-07-01 14:07:12.076 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-20} closed
2025-07-01 14:07:12.078 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 14:07:12.085 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 14:07:12.088 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 24 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ca92cd0f.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ca92cd0f$$FastClassBySpringCGLIB$$6a6f54fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ca92cd0f.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:78)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:144)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:136)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:126)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 46 common frames omitted
2025-07-01 14:07:13.976 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 5420 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 14:07:13.976 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 14:07:13.977 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 14:07:14.108 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 14:07:14.108 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 14:07:14.116 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2025-07-01 14:07:14.158 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$d03dbeb0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 14:07:14.162 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 14:07:14.225 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 14:07:14.225 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 14:07:14.225 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 14:07:14.225 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 14:07:14.226 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 14:07:14.226 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 14:07:14.226 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 14:07:14.226 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 14:07:14.237 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-7].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 14:07:14.237 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 258 ms
2025-07-01 14:07:14.239 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 14:07:14.290 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-21} inited
2025-07-01 14:07:14.304 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-22} inited
2025-07-01 14:07:14.406 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 14:07:14.406 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 14:07:14.503 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 14:07:14.555 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@782396f2, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6c17d420, org.springframework.security.web.context.SecurityContextPersistenceFilter@2c61b9a8, org.springframework.security.web.header.HeaderWriterFilter@465e386f, org.springframework.web.filter.CorsFilter@34a2c4b9, org.springframework.security.web.authentication.logout.LogoutFilter@f3a5807, com.huang.store.security.JwtAuthenticationTokenFilter@75ffccb7, com.huang.store.security.CustomAuthenticationFilter@46a45ad8, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5f4b0486, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1d25d9da, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2a8f1751, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2822c53e, org.springframework.security.web.session.SessionManagementFilter@4c0906a6, org.springframework.security.web.access.ExceptionTranslationFilter@26f2f0fe, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@b06e205]
2025-07-01 14:07:14.631 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 14:07:14.641 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 14:07:14.644 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 14:07:14.647 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 0.704 seconds (JVM running for 13488.559)
2025-07-01 14:07:51.486 [http-nio-8080-exec-4] INFO  o.a.c.c.ContainerBase.[Tomcat-7].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-01 14:07:51.486 [http-nio-8080-exec-4] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-01 14:07:51.487 [http-nio-8080-exec-4] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-01 14:07:51.492 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzNDI5NjY4ODAsImV4cCI6MTc1MTM0NDc2Nn0.Wkmt_6Ub5IKQj4-M9CxVrYRaLUxcRM7F0HruYHtSY-oAWAvPomCzg6LYHIuSyu0qg_WHO-GyLOLQ_FBW8Asheg
2025-07-01 14:07:51.492 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzNDI5NjY4ODAsImV4cCI6MTc1MTM0NDc2Nn0.Wkmt_6Ub5IKQj4-M9CxVrYRaLUxcRM7F0HruYHtSY-oAWAvPomCzg6LYHIuSyu0qg_WHO-GyLOLQ_FBW8Asheg
2025-07-01 14:07:51.492 [http-nio-8080-exec-7] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzNDI5NjY4ODAsImV4cCI6MTc1MTM0NDc2Nn0.Wkmt_6Ub5IKQj4-M9CxVrYRaLUxcRM7F0HruYHtSY-oAWAvPomCzg6LYHIuSyu0qg_WHO-GyLOLQ_FBW8Asheg
2025-07-01 14:07:51.493 [http-nio-8080-exec-6] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzNDI5NjY4ODAsImV4cCI6MTc1MTM0NDc2Nn0.Wkmt_6Ub5IKQj4-M9CxVrYRaLUxcRM7F0HruYHtSY-oAWAvPomCzg6LYHIuSyu0qg_WHO-GyLOLQ_FBW8Asheg
2025-07-01 14:07:51.493 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzNDI5NjY4ODAsImV4cCI6MTc1MTM0NDc2Nn0.Wkmt_6Ub5IKQj4-M9CxVrYRaLUxcRM7F0HruYHtSY-oAWAvPomCzg6LYHIuSyu0qg_WHO-GyLOLQ_FBW8Asheg
2025-07-01 14:07:51.493 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzNDI5NjY4ODAsImV4cCI6MTc1MTM0NDc2Nn0.Wkmt_6Ub5IKQj4-M9CxVrYRaLUxcRM7F0HruYHtSY-oAWAvPomCzg6LYHIuSyu0qg_WHO-GyLOLQ_FBW8Asheg
2025-07-01 14:07:51.495 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-01 14:07:51.495 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:07:51.496 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-01 14:07:51.496 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 14:07:51.496 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:07:51.497 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 14:07:51.496 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 14:07:51.496 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-01 14:07:51.496 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-01 14:07:51.497 [http-nio-8080-exec-5] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-01 14:07:51.497 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 14:07:51.497 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:07:51.497 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 14:07:51.497 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:07:51.497 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:07:51.498 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-01 14:07:51.497 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 14:07:51.498 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-01 14:07:51.499 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:07:51.499 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 14:07:51.500 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-01 14:07:51.500 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-01 14:07:51.501 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:07:51.501 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-01 14:07:51.501 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 14:07:51.503 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 14:07:51.503 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:07:51.503 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:07:51.503 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:07:51.504 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 14:07:51.508 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 14:07:51.509 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 14:07:51.509 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:07:51.509 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 14:07:51.509 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 14:07:51.510 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-01 14:07:51.511 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-01 14:07:51.511 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 14:07:51.512 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:07:51.512 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 14:07:51.512 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-01 14:07:51.512 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-01 14:07:51.512 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-01 14:07:51.512 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 14:07:51.513 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:07:51.513 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 14:07:51.513 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-01 14:07:51.513 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 14:07:51.514 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 14:07:51.515 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:07:51.515 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 14:07:51.515 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:07:51.515 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:07:51.515 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-01 14:07:51.516 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 14:07:51.516 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 14:07:51.516 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 14:07:51.518 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 14:07:51.518 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 14:07:51.518 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:07:51.518 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:07:51.518 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:07:51.519 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 14:07:51.519 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:07:51.519 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:07:51.520 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 14:07:51.520 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:07:51.520 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:07:51.520 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 14:07:51.521 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:07:51.522 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:07:51.522 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:07:51.522 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:07:51.522 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:07:51.522 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:07:51.522 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:07:51.522 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:07:51.523 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 14:07:51.523 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 14:07:51.524 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:07:51.524 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:07:51.524 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:07:51.524 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:07:51.524 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:07:51.524 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 14:07:51.525 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:07:51.526 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:07:51.526 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:07:51.526 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:07:51.526 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 14:07:51.527 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:07:51.528 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:07:51.528 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:07:51.528 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:07:51.528 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 14:07:51.529 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:07:54.652 [http-nio-8080-exec-9] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzNDI5NjY4ODAsImV4cCI6MTc1MTM0NDc2Nn0.Wkmt_6Ub5IKQj4-M9CxVrYRaLUxcRM7F0HruYHtSY-oAWAvPomCzg6LYHIuSyu0qg_WHO-GyLOLQ_FBW8Asheg
2025-07-01 14:07:54.730 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 14:07:54.730 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:07:54.730 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 14:07:54.731 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 2545059634@qq.com(String)
2025-07-01 14:07:54.733 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 14:07:54.737 [http-nio-8080-exec-9] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:2545059634@qq.com    数据库密码:$2a$10$w8zNNUSDq3MCiLDDuAhYXedA0QGva1Z4.6UxO61Njhsrlo8voc01G
2025-07-01 14:07:54.812 [http-nio-8080-exec-9] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=2545059634@qq.com, password=$2a$10$w8zNNUSDq3MCiLDDuAhYXedA0QGva1Z4.6UxO61Njhsrlo8voc01G, enabled=true, roles=[ROLE_ADMIN]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=7621C8F7E8B14C5B3AB03204781065F3], Granted Authorities=[ROLE_ADMIN]]
2025-07-01 14:07:54.813 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 14:07:54.813 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:07:54.813 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 14:07:54.813 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 2545059634@qq.com(String)
2025-07-01 14:07:54.813 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 14:07:58.689 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 14:07:58.690 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:07:58.691 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 14:07:58.692 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 14:07:58.694 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 14:07:58.695 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 14:07:58.696 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:07:58.696 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 14:07:58.698 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 14:07:58.699 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 14:08:00.368 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1 WHERE sg.activityId = ? ORDER BY sg.sortOrder ASC, sg.createTime DESC LIMIT ?, ?
2025-07-01 14:08:00.369 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:08:00.370 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1
        WHERE sg.activityId = ?
        ORDER BY sg.sortOrder ASC, sg.createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 14:08:00.373 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==> Parameters: 1(Long), 0(Integer), 10(Integer)
2025-07-01 14:08:00.377 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - <==      Total: 3
2025-07-01 14:08:00.378 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==>  Preparing: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ?
2025-07-01 14:08:00.379 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:08:00.380 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ? ::: DataSources: slave
2025-07-01 14:08:00.381 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==> Parameters: 1(Long)
2025-07-01 14:08:00.383 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - <==      Total: 1
2025-07-01 14:08:01.324 [http-nio-8080-exec-2] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=100
2025-07-01 14:08:01.325 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select * from book limit ?,?
2025-07-01 14:08:01.325 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:08:01.325 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book limit ?,? ::: DataSources: slave
2025-07-01 14:08:01.326 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 100(Integer)
2025-07-01 14:08:01.328 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-01 14:08:01.328 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:08:01.328 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:08:01.329 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:08:01.329 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 14:08:01.332 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:08:01.332 [http-nio-8080-exec-2] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-01 14:08:01.333 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:08:01.333 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:08:01.333 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:08:01.334 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 14:08:01.338 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:08:01.339 [http-nio-8080-exec-2] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-01 14:08:01.339 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:08:01.339 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:08:01.339 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:08:01.340 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 14:08:01.342 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:08:01.342 [http-nio-8080-exec-2] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-01 14:08:01.344 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:08:01.344 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:08:01.344 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:08:01.345 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 14:08:01.347 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:08:01.348 [http-nio-8080-exec-2] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-01 14:08:01.348 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:08:01.348 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:08:01.349 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:08:01.349 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 14:08:01.350 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:08:01.351 [http-nio-8080-exec-2] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-01 14:08:01.352 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-01 14:08:01.352 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:08:01.353 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-01 14:08:01.354 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-01 14:08:01.356 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-01 14:08:19.682 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 14:08:19.682 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:08:19.682 [http-nio-8080-exec-5] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=5
2025-07-01 14:08:19.684 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==>  Preparing: select name from publish
2025-07-01 14:08:19.686 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 14:08:19.688 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select * from book limit ?,?
2025-07-01 14:08:19.689 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:08:19.688 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:08:19.689 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 14:08:19.690 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book limit ?,? ::: DataSources: slave
2025-07-01 14:08:19.690 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select name from publish ::: DataSources: slave
2025-07-01 14:08:19.692 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 14:08:19.694 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==> Parameters: 
2025-07-01 14:08:19.695 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 14:08:19.698 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-01 14:08:19.699 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:08:19.699 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - <==      Total: 5
2025-07-01 14:08:19.700 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:08:19.701 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:08:19.703 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:08:19.703 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:08:19.704 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:08:19.706 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 14:08:19.706 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 14:08:19.708 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:08:19.708 [http-nio-8080-exec-5] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-01 14:08:19.708 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 14:08:19.709 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:08:19.709 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:08:19.709 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:08:19.709 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:08:19.709 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:08:19.709 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:08:19.709 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 14:08:19.710 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 14:08:19.711 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:08:19.712 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:08:19.712 [http-nio-8080-exec-5] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-01 14:08:19.713 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:08:19.713 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:08:19.713 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:08:19.714 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:08:19.713 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:08:19.714 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 14:08:19.714 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:08:19.715 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 14:08:19.716 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:08:19.716 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:08:19.716 [http-nio-8080-exec-5] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-01 14:08:19.716 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:08:19.717 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:08:19.717 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:08:19.716 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:08:19.719 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 14:08:19.720 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:08:19.721 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:08:19.721 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 14:08:19.721 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:08:19.722 [http-nio-8080-exec-5] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-01 14:08:19.722 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:08:19.722 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:08:19.722 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:08:19.723 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:08:19.723 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 14:08:19.726 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:08:19.727 [http-nio-8080-exec-5] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-01 14:08:19.727 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-01 14:08:19.727 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:08:19.727 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-01 14:08:19.728 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-01 14:08:19.730 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-01 14:14:10.138 [Thread-31] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-01 14:14:10.140 [Thread-31] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 14:14:10.142 [Thread-31] INFO  o.a.c.c.ContainerBase.[Tomcat-7].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-07-01 14:14:10.162 [Thread-31] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-82445942] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 14:14:10.163 [Thread-31] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-82445942] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 14:14:10.164 [Thread-31] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1836763961] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 14:14:10.165 [Thread-31] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1836763961] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 14:14:10.166 [Thread-31] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-01 14:14:10.170 [Thread-31] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-01 14:14:10.175 [Thread-31] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-21} closing ...
2025-07-01 14:14:10.177 [Thread-31] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-21} closed
2025-07-01 14:14:10.178 [Thread-31] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-22} closing ...
2025-07-01 14:14:10.183 [Thread-31] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-22} closed
2025-07-01 14:14:10.302 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 5420 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 14:14:10.303 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 14:14:10.303 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 14:14:10.530 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 14:14:10.531 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 14:14:10.534 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2025-07-01 14:14:10.621 [restartedMain] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[com.huang.store.mapper]' package. Please check your configuration.
2025-07-01 14:14:10.698 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 14:14:10.698 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 14:14:10.698 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 14:14:10.698 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 14:14:10.699 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 14:14:10.700 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 14:14:10.700 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 14:14:10.700 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 14:14:10.724 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-7].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 14:14:10.724 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 413 ms
2025-07-01 14:14:10.744 [restartedMain] ERROR org.apache.catalina.session.StandardManager - Exception loading sessions from persistent storage
java.lang.ClassNotFoundException: com.huang.store.entity.user.SecurityUser
	at org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedWebappClassLoader.loadClass(TomcatEmbeddedWebappClassLoader.java:72)
	at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1141)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:467)
	at org.apache.catalina.util.CustomObjectInputStream.resolveClass(CustomObjectInputStream.java:158)
	at java.base/java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:2045)
	at java.base/java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1909)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2235)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream$FieldValues.<init>(ObjectInputStream.java:2617)
	at java.base/java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2468)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2268)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream$FieldValues.<init>(ObjectInputStream.java:2617)
	at java.base/java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2468)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2268)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:514)
	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:472)
	at org.apache.catalina.session.StandardSession.doReadObject(StandardSession.java:1530)
	at org.apache.catalina.session.StandardSession.readObjectData(StandardSession.java:1000)
	at org.apache.catalina.session.StandardManager.doLoad(StandardManager.java:210)
	at org.apache.catalina.session.StandardManager.load(StandardManager.java:156)
	at org.apache.catalina.session.StandardManager.startInternal(StandardManager.java:346)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4931)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2025-07-01 14:14:10.833 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 14:14:10.919 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-23} inited
2025-07-01 14:14:10.939 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-24} inited
2025-07-01 14:14:11.027 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
2025-07-01 14:14:11.027 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-23} closing ...
2025-07-01 14:14:11.028 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-23} closed
2025-07-01 14:14:11.028 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-24} closing ...
2025-07-01 14:14:11.030 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-24} closed
2025-07-01 14:14:11.030 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 14:14:11.037 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 14:14:11.040 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 24 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ca92cd0f.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ca92cd0f$$FastClassBySpringCGLIB$$6a6f54fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ca92cd0f.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:78)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:144)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:136)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:126)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 46 common frames omitted
2025-07-01 14:14:13.020 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 5420 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 14:14:13.020 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 14:14:13.020 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 14:14:13.304 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 14:14:13.305 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 14:14:13.326 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
2025-07-01 14:14:13.392 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$d03dbeb0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 14:14:13.397 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 14:14:13.487 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 14:14:13.488 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 14:14:13.488 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 14:14:13.488 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 14:14:13.489 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 14:14:13.489 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 14:14:13.490 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 14:14:13.490 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 14:14:13.510 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-8].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 14:14:13.511 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 489 ms
2025-07-01 14:14:13.513 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 14:14:13.634 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-25} inited
2025-07-01 14:14:13.668 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-26} inited
2025-07-01 14:14:13.868 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 14:14:13.870 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 14:14:14.093 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 14:14:14.329 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2a1f3448, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4cfcdd0d, org.springframework.security.web.context.SecurityContextPersistenceFilter@1c595029, org.springframework.security.web.header.HeaderWriterFilter@30a0dbc1, org.springframework.web.filter.CorsFilter@10d6fd48, org.springframework.security.web.authentication.logout.LogoutFilter@6486c70d, com.huang.store.security.JwtAuthenticationTokenFilter@5c65701e, com.huang.store.security.CustomAuthenticationFilter@16a3a74b, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@16f9e09f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@593664aa, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6ffec29e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2cce185c, org.springframework.security.web.session.SessionManagementFilter@5840bd79, org.springframework.security.web.access.ExceptionTranslationFilter@5082b515, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5f5a7f26]
2025-07-01 14:14:14.545 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 14:14:14.574 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 14:14:14.585 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 14:14:14.594 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 1.611 seconds (JVM running for 13908.506)
2025-07-01 14:14:47.339 [http-nio-8080-exec-1] INFO  o.a.c.c.ContainerBase.[Tomcat-8].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-01 14:14:47.339 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-01 14:14:47.340 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-01 14:14:47.347 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 14:14:47.347 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 14:14:47.347 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 14:14:47.347 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:14:47.347 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:14:47.347 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:14:47.347 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 14:14:47.347 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 14:14:47.347 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 14:14:47.348 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 2545059634@qq.com(String)
2025-07-01 14:14:47.351 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 14:14:47.351 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 2545059634@qq.com(String)
2025-07-01 14:14:47.352 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 14:14:47.353 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 2545059634@qq.com(String)
2025-07-01 14:14:47.353 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 14:14:47.356 [http-nio-8080-exec-3] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:2545059634@qq.com    数据库密码:$2a$10$w8zNNUSDq3MCiLDDuAhYXedA0QGva1Z4.6UxO61Njhsrlo8voc01G
2025-07-01 14:14:47.356 [http-nio-8080-exec-2] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:2545059634@qq.com    数据库密码:$2a$10$w8zNNUSDq3MCiLDDuAhYXedA0QGva1Z4.6UxO61Njhsrlo8voc01G
2025-07-01 14:14:47.356 [http-nio-8080-exec-1] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:2545059634@qq.com    数据库密码:$2a$10$w8zNNUSDq3MCiLDDuAhYXedA0QGva1Z4.6UxO61Njhsrlo8voc01G
2025-07-01 14:14:47.365 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==>  Preparing: select name from publish
2025-07-01 14:14:47.365 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 14:14:47.365 [http-nio-8080-exec-3] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=5
2025-07-01 14:14:47.365 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:14:47.365 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:14:47.366 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select name from publish ::: DataSources: slave
2025-07-01 14:14:47.366 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 14:14:47.366 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select b.*, COALESCE(sales_data.total_sales, 0) as sales from book b left join ( select od.bookId, sum(od.num) as total_sales from orderdetail od inner join bookorder bo on od.orderId = bo.orderId where bo.orderStatus in ('已发货', '已收货', '已评价') group by od.bookId ) sales_data on b.id = sales_data.bookId order by b.rank desc, b.id desc limit ?,?
2025-07-01 14:14:47.366 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:14:47.366 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select b.*,
               COALESCE(sales_data.total_sales, 0) as sales
        from book b
        left join (
            select od.bookId, sum(od.num) as total_sales
            from orderdetail od
            inner join bookorder bo on od.orderId = bo.orderId
            where bo.orderStatus in ('已发货', '已收货', '已评价')
            group by od.bookId
        ) sales_data on b.id = sales_data.bookId
        order by b.rank desc, b.id desc
        limit ?,? ::: DataSources: slave
2025-07-01 14:14:47.366 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 14:14:47.366 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==> Parameters: 
2025-07-01 14:14:47.367 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 14:14:47.368 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - <==      Total: 5
2025-07-01 14:14:47.368 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:14:47.368 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:14:47.369 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:14:47.370 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 14:14:47.373 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 14:14:47.374 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:14:47.374 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:14:47.374 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:14:47.375 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 14:14:47.376 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:14:47.376 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:14:47.376 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:14:47.376 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:14:47.377 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 14:14:47.378 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:14:47.380 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:14:47.380 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:14:47.380 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:14:47.381 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 14:14:47.382 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:14:47.384 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 14:14:47.395 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-01 14:14:47.396 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:14:47.397 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:14:47.397 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:14:47.399 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 14:14:47.399 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:14:47.399 [http-nio-8080-exec-3] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-01 14:14:47.399 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:14:47.399 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:14:47.399 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:14:47.400 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 14:14:47.400 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:14:47.401 [http-nio-8080-exec-3] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-01 14:14:47.401 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:14:47.401 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:14:47.401 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:14:47.401 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 14:14:47.402 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:14:47.403 [http-nio-8080-exec-3] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-01 14:14:47.403 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:14:47.403 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:14:47.403 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:14:47.404 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 14:14:47.406 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:14:47.406 [http-nio-8080-exec-3] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-01 14:14:47.406 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:14:47.406 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:14:47.407 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:14:47.407 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 14:14:47.408 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:14:47.408 [http-nio-8080-exec-3] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-01 14:14:47.409 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-01 14:14:47.409 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:14:47.409 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-01 14:14:47.409 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-01 14:14:47.411 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-01 14:15:21.620 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==>  Preparing: select name from publish
2025-07-01 14:15:21.620 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 14:15:21.627 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:15:21.625 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:15:21.628 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 14:15:21.629 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select name from publish ::: DataSources: slave
2025-07-01 14:15:21.629 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 14:15:21.630 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==> Parameters: 
2025-07-01 14:15:21.638 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 14:15:21.642 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:15:21.644 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - <==      Total: 5
2025-07-01 14:15:21.652 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:15:21.661 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:15:21.670 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 14:15:21.673 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 14:15:21.677 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:15:21.677 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:15:21.680 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:15:21.680 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 14:15:21.683 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:15:21.686 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:15:21.686 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:15:21.687 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:15:21.689 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 14:15:21.692 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:15:21.693 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:15:21.694 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:15:21.694 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:15:21.694 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 14:15:21.695 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:15:21.714 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-01 14:15:21.714 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:15:21.714 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-01 14:15:21.715 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 1(Integer)
2025-07-01 14:15:21.718 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-01 14:15:21.719 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.BookMapper.getBookImgSrcList - ==>  Preparing: select imgSrc from bookimg where isbn=?
2025-07-01 14:15:21.719 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:15:21.719 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? ::: DataSources: slave
2025-07-01 14:15:21.720 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.BookMapper.getBookImgSrcList - ==> Parameters: 9787020002207(String)
2025-07-01 14:15:21.721 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.BookMapper.getBookImgSrcList - <==      Total: 2
2025-07-01 14:15:21.722 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:15:21.722 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:15:21.722 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:15:21.723 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 14:15:21.724 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:15:21.726 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookSort - ==>  Preparing: select * from booksort where id in (select bookSortId from booksortlist where bookId=?)
2025-07-01 14:15:21.726 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:15:21.726 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where id in (select bookSortId from booksortlist where bookId=?) ::: DataSources: slave
2025-07-01 14:15:21.727 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookSort - ==> Parameters: 1(Integer)
2025-07-01 14:15:21.729 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookSort - <==      Total: 1
2025-07-01 14:15:21.729 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortId - ==>  Preparing: select id from booksort where upperName=? and sortName=?
2025-07-01 14:15:21.730 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:15:21.730 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select id from booksort where upperName=? and sortName=? ::: DataSources: slave
2025-07-01 14:15:21.731 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortId - ==> Parameters: 无(String), 文学(String)
2025-07-01 14:15:21.734 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortId - <==      Total: 1
2025-07-01 14:15:26.856 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 14:15:26.856 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==>  Preparing: select name from publish
2025-07-01 14:15:26.856 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:15:26.856 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 14:15:26.856 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:15:26.857 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select name from publish ::: DataSources: slave
2025-07-01 14:15:26.857 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 14:15:26.858 [http-nio-8080-exec-9] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=5
2025-07-01 14:15:26.859 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==> Parameters: 
2025-07-01 14:15:26.861 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 14:15:26.866 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:15:26.867 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:15:26.867 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:15:26.863 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select b.*, COALESCE(sales_data.total_sales, 0) as sales from book b left join ( select od.bookId, sum(od.num) as total_sales from orderdetail od inner join bookorder bo on od.orderId = bo.orderId where bo.orderStatus in ('已发货', '已收货', '已评价') group by od.bookId ) sales_data on b.id = sales_data.bookId order by b.rank desc, b.id desc limit ?,?
2025-07-01 14:15:26.866 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - <==      Total: 5
2025-07-01 14:15:26.870 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 14:15:26.872 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:15:26.882 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 14:15:26.884 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select b.*,
               COALESCE(sales_data.total_sales, 0) as sales
        from book b
        left join (
            select od.bookId, sum(od.num) as total_sales
            from orderdetail od
            inner join bookorder bo on od.orderId = bo.orderId
            where bo.orderStatus in ('已发货', '已收货', '已评价')
            group by od.bookId
        ) sales_data on b.id = sales_data.bookId
        order by b.rank desc, b.id desc
        limit ?,? ::: DataSources: slave
2025-07-01 14:15:26.885 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:15:26.889 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:15:26.891 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:15:26.891 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 14:15:26.893 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 14:15:26.895 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:15:26.896 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-01 14:15:26.902 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:15:26.902 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:15:26.903 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:15:26.904 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:15:26.926 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:15:26.926 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:15:26.927 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 14:15:26.927 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 14:15:26.928 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:15:26.929 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:15:26.929 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:15:26.929 [http-nio-8080-exec-9] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-01 14:15:26.929 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:15:26.929 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:15:26.929 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:15:26.929 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:15:26.929 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 14:15:26.929 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:15:26.929 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 14:15:26.929 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:15:26.931 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:15:26.933 [http-nio-8080-exec-9] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-01 14:15:26.935 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:15:26.935 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:15:26.935 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:15:26.935 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 14:15:26.936 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:15:26.936 [http-nio-8080-exec-9] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-01 14:15:26.937 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:15:26.938 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:15:26.939 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:15:26.939 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 14:15:26.940 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:15:26.940 [http-nio-8080-exec-9] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-01 14:15:26.940 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:15:26.941 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:15:26.941 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:15:26.941 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 14:15:26.942 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:15:26.942 [http-nio-8080-exec-9] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-01 14:15:26.942 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-01 14:15:26.943 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:15:26.943 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-01 14:15:26.943 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-01 14:15:26.945 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-01 14:16:16.247 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==>  Preparing: select name from publish
2025-07-01 14:16:16.250 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:16:16.251 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select name from publish ::: DataSources: slave
2025-07-01 14:16:16.252 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 14:16:16.259 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==> Parameters: 
2025-07-01 14:16:16.266 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:16:16.269 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - <==      Total: 5
2025-07-01 14:16:16.271 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 14:16:16.276 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 14:16:16.277 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 14:16:16.280 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:16:16.280 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:16:16.281 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:16:16.281 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 14:16:16.284 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 14:16:16.286 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:16:16.288 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:16:16.289 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:16:16.289 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 14:16:16.290 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:16:16.290 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:16:16.290 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:16:16.291 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:16:16.292 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 14:16:16.296 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:16:16.298 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:16:16.298 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:16:16.299 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:16:16.300 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 14:16:16.302 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:16:17.390 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 14:16:17.391 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:16:17.392 [http-nio-8080-exec-3] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=5
2025-07-01 14:16:17.392 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==>  Preparing: select name from publish
2025-07-01 14:16:17.394 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:16:17.394 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select name from publish ::: DataSources: slave
2025-07-01 14:16:17.394 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==> Parameters: 
2025-07-01 14:16:17.392 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 14:16:17.395 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 14:16:17.392 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select b.*, COALESCE(sales_data.total_sales, 0) as sales from book b left join ( select od.bookId, sum(od.num) as total_sales from orderdetail od inner join bookorder bo on od.orderId = bo.orderId where bo.orderStatus in ('已发货', '已收货', '已评价') group by od.bookId ) sales_data on b.id = sales_data.bookId order by b.rank desc, b.id desc limit ?,?
2025-07-01 14:16:17.395 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - <==      Total: 5
2025-07-01 14:16:17.398 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:16:17.399 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 14:16:17.401 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select b.*,
               COALESCE(sales_data.total_sales, 0) as sales
        from book b
        left join (
            select od.bookId, sum(od.num) as total_sales
            from orderdetail od
            inner join bookorder bo on od.orderId = bo.orderId
            where bo.orderStatus in ('已发货', '已收货', '已评价')
            group by od.bookId
        ) sales_data on b.id = sales_data.bookId
        order by b.rank desc, b.id desc
        limit ?,? ::: DataSources: slave
2025-07-01 14:16:17.402 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:16:17.406 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 14:16:17.407 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:16:17.407 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:16:17.408 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 14:16:17.409 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 14:16:17.410 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:16:17.411 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:16:17.411 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:16:17.412 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 14:16:17.414 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-01 14:16:17.415 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:16:17.415 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:16:17.415 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:16:17.415 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:16:17.415 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:16:17.416 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:16:17.416 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 14:16:17.416 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:16:17.416 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 14:16:17.417 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:16:17.417 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:16:17.418 [http-nio-8080-exec-3] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-01 14:16:17.418 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:16:17.418 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:16:17.418 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:16:17.419 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:16:17.419 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:16:17.419 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 14:16:17.420 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:16:17.420 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 14:16:17.421 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:16:17.422 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:16:17.422 [http-nio-8080-exec-3] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-01 14:16:17.422 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:16:17.423 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:16:17.423 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:16:17.423 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 14:16:17.427 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:16:17.427 [http-nio-8080-exec-3] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-01 14:16:17.427 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:16:17.428 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:16:17.428 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:16:17.428 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 14:16:17.429 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:16:17.429 [http-nio-8080-exec-3] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-01 14:16:17.430 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:16:17.430 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:16:17.430 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:16:17.431 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 14:16:17.433 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:16:17.434 [http-nio-8080-exec-3] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-01 14:16:17.434 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-01 14:16:17.435 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:16:17.435 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-01 14:16:17.435 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-01 14:16:17.436 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-01 14:19:06.954 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 14:19:06.954 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==>  Preparing: select name from publish
2025-07-01 14:19:06.955 [http-nio-8080-exec-7] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=5
2025-07-01 14:19:06.955 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:19:06.955 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:19:06.955 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 14:19:06.955 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select b.*, COALESCE(sales_data.total_sales, 0) as sales from book b left join ( select od.bookId, sum(od.num) as total_sales from orderdetail od inner join bookorder bo on od.orderId = bo.orderId where bo.orderStatus in ('已发货', '已收货', '已评价') group by od.bookId ) sales_data on b.id = sales_data.bookId order by b.rank desc, b.id desc limit ?,?
2025-07-01 14:19:06.955 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select name from publish ::: DataSources: slave
2025-07-01 14:19:06.955 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:19:06.955 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select b.*,
               COALESCE(sales_data.total_sales, 0) as sales
        from book b
        left join (
            select od.bookId, sum(od.num) as total_sales
            from orderdetail od
            inner join bookorder bo on od.orderId = bo.orderId
            where bo.orderStatus in ('已发货', '已收货', '已评价')
            group by od.bookId
        ) sales_data on b.id = sales_data.bookId
        order by b.rank desc, b.id desc
        limit ?,? ::: DataSources: slave
2025-07-01 14:19:06.957 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==> Parameters: 
2025-07-01 14:19:06.957 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 14:19:06.958 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 14:19:06.958 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 14:19:06.958 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - <==      Total: 5
2025-07-01 14:19:06.958 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:19:06.958 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:19:06.958 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:19:06.958 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 14:19:06.960 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 14:19:06.961 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:19:06.961 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:19:06.962 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:19:06.962 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 14:19:06.963 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:19:06.963 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-01 14:19:06.963 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:19:06.963 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:19:06.963 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:19:06.964 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:19:06.964 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:19:06.964 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:19:06.964 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 14:19:06.964 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 14:19:06.964 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:19:06.964 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:19:06.964 [http-nio-8080-exec-7] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-01 14:19:06.964 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:19:06.964 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:19:06.964 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:19:06.964 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:19:06.964 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:19:06.964 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:19:06.964 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 14:19:06.965 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 14:19:06.966 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:19:06.967 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:19:06.967 [http-nio-8080-exec-7] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-01 14:19:06.967 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:19:06.968 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:19:06.968 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:19:06.968 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 14:19:06.969 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:19:06.969 [http-nio-8080-exec-7] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-01 14:19:06.970 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:19:06.970 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:19:06.970 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:19:06.970 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 14:19:06.971 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:19:06.971 [http-nio-8080-exec-7] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-01 14:19:06.972 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:19:06.972 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:19:06.972 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:19:06.972 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 14:19:06.974 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:19:06.974 [http-nio-8080-exec-7] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-01 14:19:06.974 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-01 14:19:06.975 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:19:06.975 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-01 14:19:06.975 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-01 14:19:06.976 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-01 14:20:17.402 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 14:20:17.402 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:20:17.402 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 14:20:17.404 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 14:20:17.407 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 14:20:17.408 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 14:20:17.408 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:20:17.408 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 14:20:17.409 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 14:20:17.410 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 14:22:35.111 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 14:22:35.113 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:22:35.114 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 14:22:35.118 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 1(Long)
2025-07-01 14:22:35.120 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 14:22:46.916 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 14:22:46.918 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:22:46.918 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 14:22:46.920 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 2(Long)
2025-07-01 14:22:46.921 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 14:23:09.929 [http-nio-8080-exec-10] ERROR com.huang.store.exception.GlobalExceptionHandler - 系统异常
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:260)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:442)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:383)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:125)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:67)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:498)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1266)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1048)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2025-07-01 14:23:09.950 [http-nio-8080-exec-10] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported]
2025-07-01 14:23:15.579 [http-nio-8080-exec-8] ERROR com.huang.store.exception.GlobalExceptionHandler - 系统异常
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:260)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:442)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:383)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:125)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:67)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:498)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1266)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1048)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2025-07-01 14:23:15.586 [http-nio-8080-exec-8] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported]
2025-07-01 14:24:04.121 [Thread-62] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-01 14:24:04.121 [Thread-62] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 14:24:04.122 [Thread-62] INFO  o.a.c.c.ContainerBase.[Tomcat-8].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-07-01 14:24:04.129 [Thread-62] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1130808305] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 14:24:04.130 [Thread-62] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1130808305] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 14:24:04.130 [Thread-62] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-808950523] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 14:24:04.131 [Thread-62] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-808950523] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 14:24:04.131 [Thread-62] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-nioEventLoop-13-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/sun.nio.ch.WEPoll.wait(Native Method)
 java.base@17.0.8/sun.nio.ch.WEPollSelectorImpl.doSelect(WEPollSelectorImpl.java:111)
 java.base@17.0.8/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:129)
 java.base@17.0.8/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:146)
 app//io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:68)
 app//io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:879)
 app//io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:526)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 14:24:04.131 [Thread-62] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-11-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 14:24:04.132 [Thread-62] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-01 14:24:04.133 [Thread-62] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-01 14:24:04.236 [Thread-62] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-25} closing ...
2025-07-01 14:24:04.237 [Thread-62] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-25} closed
2025-07-01 14:24:04.237 [Thread-62] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-26} closing ...
2025-07-01 14:24:04.238 [Thread-62] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-26} closed
2025-07-01 14:24:04.304 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 5420 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 14:24:04.304 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 14:24:04.304 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 14:24:04.451 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 14:24:04.451 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 14:24:04.462 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2025-07-01 14:24:04.519 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$d03dbeb0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 14:24:04.526 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 14:24:04.598 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 14:24:04.599 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 14:24:04.599 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 14:24:04.599 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 14:24:04.600 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 14:24:04.600 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 14:24:04.600 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 14:24:04.600 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 14:24:04.613 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-8].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 14:24:04.613 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 305 ms
2025-07-01 14:24:04.615 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 14:24:04.732 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-27} inited
2025-07-01 14:24:04.745 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-28} inited
2025-07-01 14:24:04.761 [restartedMain] ERROR o.s.boot.web.embedded.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'myUserDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\BookMapper.xml]'
2025-07-01 14:24:04.766 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 14:24:04.769 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1900764487] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 14:24:04.769 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1900764487] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 14:24:04.770 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-546342455] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 14:24:04.770 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-546342455] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 14:24:04.770 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2025-07-01 14:24:04.771 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-27} closing ...
2025-07-01 14:24:04.771 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-27} closed
2025-07-01 14:24:04.771 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-28} closing ...
2025-07-01 14:24:04.771 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-28} closed
2025-07-01 14:24:04.773 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 14:24:04.776 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:165)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:142)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'myUserDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\BookMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:405)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4904)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	... 18 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\BookMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 69 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\BookMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 83 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\BookMapper.xml]'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1534)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 97 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\BookMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	... 108 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\BookMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 121 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\BookMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ca92cd0f.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ca92cd0f$$FastClassBySpringCGLIB$$6a6f54fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ca92cd0f.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 122 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\BookMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.book.Book'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.book.Book
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 135 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.book.Book'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.book.Book
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:78)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:144)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:136)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:126)
	... 137 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.book.Book'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.book.Book
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 141 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.book.Book
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 143 common frames omitted
2025-07-01 14:24:07.249 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-01 14:24:07.259 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 20932 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 14:24:07.259 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 14:24:07.260 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 14:24:07.310 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 5420 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 14:24:07.313 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 14:24:07.319 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 14:24:07.392 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-01 14:24:07.392 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-01 14:24:07.579 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 14:24:07.579 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 14:24:07.599 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 0 Redis repository interfaces.
2025-07-01 14:24:07.669 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$d03dbeb0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 14:24:07.679 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 14:24:07.755 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 14:24:07.756 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 14:24:07.756 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 14:24:07.756 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 14:24:07.757 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 14:24:07.757 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 14:24:07.758 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 14:24:07.758 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 14:24:07.780 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-9].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 14:24:07.780 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 451 ms
2025-07-01 14:24:07.784 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 14:24:07.891 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-29} inited
2025-07-01 14:24:07.899 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 14:24:07.902 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 14:24:07.914 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-30} inited
2025-07-01 14:24:07.931 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-07-01 14:24:08.092 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 14:24:08.093 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 14:24:08.163 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$e4f70907] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 14:24:08.176 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 14:24:08.348 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 14:24:08.467 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@22356853, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1f5f1dbf, org.springframework.security.web.context.SecurityContextPersistenceFilter@6884bb6a, org.springframework.security.web.header.HeaderWriterFilter@24943c8f, org.springframework.web.filter.CorsFilter@6973ad64, org.springframework.security.web.authentication.logout.LogoutFilter@efbe986, com.huang.store.security.JwtAuthenticationTokenFilter@691a4ae6, com.huang.store.security.CustomAuthenticationFilter@64d708a6, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3320f7b7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5cfb346a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@598e0b3e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6976f797, org.springframework.security.web.session.SessionManagementFilter@44fbc0cd, org.springframework.security.web.access.ExceptionTranslationFilter@3c411149, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4bcdbb9b]
2025-07-01 14:24:08.556 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 14:24:08.557 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 14:24:08.557 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 14:24:08.557 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 14:24:08.560 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 14:24:08.566 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 14:24:08.567 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 14:24:08.567 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 14:24:08.619 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 14:24:08.619 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1227 ms
2025-07-01 14:24:08.622 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 14:24:08.673 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 14:24:08.693 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 14:24:08.698 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 14:24:08.705 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 1.455 seconds (JVM running for 14502.617)
2025-07-01 14:24:09.360 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-01 14:24:09.402 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-01 14:24:09.757 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 14:24:09.757 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 14:24:10.251 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 14:24:10.382 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@24e2ddff, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@148cb296, org.springframework.security.web.context.SecurityContextPersistenceFilter@41604d62, org.springframework.security.web.header.HeaderWriterFilter@7ab17510, org.springframework.web.filter.CorsFilter@7f442bd2, org.springframework.security.web.authentication.logout.LogoutFilter@3fdaa6b0, com.huang.store.security.JwtAuthenticationTokenFilter@58946adc, com.huang.store.security.CustomAuthenticationFilter@af2fd44, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7ac87808, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@24fa4b0b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@70cb87d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@23da605b, org.springframework.security.web.session.SessionManagementFilter@4f1d7b7a, org.springframework.security.web.access.ExceptionTranslationFilter@6eb48072, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7ded7654]
2025-07-01 14:24:10.691 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2025-07-01 14:24:10.712 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 14:24:10.715 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8080 is already in use
2025-07-01 14:24:10.726 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-01 14:24:10.731 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-01 14:24:10.731 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-01 14:24:10.732 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-01 14:24:10.736 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-01 14:24:10.736 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 14:24:10.743 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-01 14:24:10.743 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-01 14:24:10.749 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 14:24:10.765 [restartedMain] ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2025-07-01 14:24:15.281 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-29} closing ...
2025-07-01 14:24:15.282 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-29} closed
2025-07-01 14:24:15.282 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-30} closing ...
2025-07-01 14:24:15.283 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-30} closed
2025-07-01 14:24:32.687 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-01 14:24:32.698 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 2716 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 14:24:32.698 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 14:24:32.698 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 14:24:32.803 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-01 14:24:32.803 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-01 14:24:33.206 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 14:24:33.208 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 14:24:33.227 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2025-07-01 14:24:33.397 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$70206144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 14:24:33.409 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 14:24:33.714 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 14:24:33.715 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 14:24:33.715 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 14:24:33.715 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 14:24:33.718 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 14:24:33.722 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 14:24:33.723 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 14:24:33.723 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 14:24:33.767 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 14:24:33.767 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 964 ms
2025-07-01 14:24:33.771 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 14:24:34.341 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-01 14:24:34.365 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-01 14:24:34.622 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 14:24:34.622 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 14:24:34.968 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 14:24:35.070 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7792ce02, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6426de3e, org.springframework.security.web.context.SecurityContextPersistenceFilter@427c187f, org.springframework.security.web.header.HeaderWriterFilter@2deae519, org.springframework.web.filter.CorsFilter@250dc20f, org.springframework.security.web.authentication.logout.LogoutFilter@54e69342, com.huang.store.security.JwtAuthenticationTokenFilter@109c39fb, com.huang.store.security.CustomAuthenticationFilter@2abd7600, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2b447f18, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3f40a3c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4666c216, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@661841b4, org.springframework.security.web.session.SessionManagementFilter@3fdaa6b0, org.springframework.security.web.access.ExceptionTranslationFilter@55d0d87a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@67ef81c9]
2025-07-01 14:24:35.288 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 14:24:35.302 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 14:24:35.314 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 14:24:35.320 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 2.914 seconds (JVM running for 3.323)
2025-07-01 14:24:37.788 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-01 14:24:37.788 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-01 14:24:37.789 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-01 14:24:37.876 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 14:24:37.885 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:24:37.886 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 14:24:37.930 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 2545059634@qq.com(String)
2025-07-01 14:24:37.949 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 14:24:37.959 [http-nio-8080-exec-1] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:2545059634@qq.com    数据库密码:$2a$10$w8zNNUSDq3MCiLDDuAhYXedA0QGva1Z4.6UxO61Njhsrlo8voc01G
2025-07-01 14:24:38.028 [http-nio-8080-exec-1] ERROR com.huang.store.exception.GlobalExceptionHandler - 系统异常
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:260)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:442)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:383)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:125)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:67)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:498)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1266)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1048)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2025-07-01 14:24:38.057 [http-nio-8080-exec-1] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported]
2025-07-01 14:24:48.068 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 14:24:48.068 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:24:48.068 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 14:24:48.074 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 14:24:48.080 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 14:24:48.082 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 14:24:48.082 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:24:48.082 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 14:24:48.083 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 14:24:48.086 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 14:24:49.962 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 14:24:49.963 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:24:49.963 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 14:24:49.965 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 1(Long)
2025-07-01 14:24:49.969 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 14:25:04.857 [http-nio-8080-exec-3] ERROR com.huang.store.exception.GlobalExceptionHandler - 系统异常
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:260)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:442)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:383)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:125)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:67)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:498)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1266)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1048)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2025-07-01 14:25:04.860 [http-nio-8080-exec-3] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported]
2025-07-01 14:26:53.422 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 14:26:53.422 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:26:53.422 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 14:26:53.431 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 14:26:53.434 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 14:26:53.435 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 14:26:53.435 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:26:53.435 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 14:26:53.435 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 14:26:53.437 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 14:26:56.958 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 14:26:56.959 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:26:56.959 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 14:26:56.959 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 1(Long)
2025-07-01 14:26:56.963 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 14:27:09.706 [http-nio-8080-exec-4] ERROR com.huang.store.exception.GlobalExceptionHandler - 系统异常
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:260)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:442)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:383)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:125)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:67)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:498)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1266)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1048)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2025-07-01 14:27:09.708 [http-nio-8080-exec-4] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported]
2025-07-01 14:27:20.002 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 14:27:20.002 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:27:20.002 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 14:27:20.002 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 14:27:20.005 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 14:27:20.006 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 14:27:20.006 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:27:20.007 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 14:27:20.007 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 14:27:20.008 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 14:27:34.789 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 14:27:34.789 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:27:34.789 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 14:27:34.789 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 1(Long)
2025-07-01 14:27:34.794 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 14:27:44.543 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeActivityMapper.updateActivity - ==>  Preparing: UPDATE spikeActivity SET activityName = ?, activityDesc = ?, startTime = ?, endTime = ?, status = ?, updateTime = ? WHERE id = ?
2025-07-01 14:27:44.545 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:27:44.545 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: UPDATE spikeActivity SET
            activityName = ?,
            activityDesc = ?,
            startTime = ?,
            endTime = ?,
            status = ?,
            updateTime = ?
        WHERE id = ? ::: DataSources: master
2025-07-01 14:27:44.557 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeActivityMapper.updateActivity - ==> Parameters: 新年特惠秒杀(String), 新年期间限时秒杀活动，精选图书超低价(String), 2025-07-01T14:27:39(LocalDateTime), 2025-07-01T21:00(LocalDateTime), 1(Integer), 2025-07-01T14:27:44.541747900(LocalDateTime), 1(Long)
2025-07-01 14:27:44.580 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeActivityMapper.updateActivity - <==    Updates: 1
2025-07-01 14:27:44.581 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 14:27:44.581 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:27:44.581 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: master
2025-07-01 14:27:44.585 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 1(Long)
2025-07-01 14:27:44.588 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 14:27:44.654 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 14:27:44.654 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:27:44.654 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 14:27:44.656 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 14:27:44.667 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 14:27:44.668 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 14:27:44.668 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:27:44.668 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 14:27:44.669 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 14:27:44.673 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 14:28:01.640 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 14:28:01.640 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:01.640 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 14:28:01.641 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 1(Long)
2025-07-01 14:28:01.644 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 14:28:11.992 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.updateActivity - ==>  Preparing: UPDATE spikeActivity SET activityName = ?, activityDesc = ?, startTime = ?, endTime = ?, status = ?, updateTime = ? WHERE id = ?
2025-07-01 14:28:11.993 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:11.993 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: UPDATE spikeActivity SET
            activityName = ?,
            activityDesc = ?,
            startTime = ?,
            endTime = ?,
            status = ?,
            updateTime = ?
        WHERE id = ? ::: DataSources: master
2025-07-01 14:28:11.995 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.updateActivity - ==> Parameters: 新年特惠秒杀(String), 新年期间限时秒杀活动，精选图书超低价(String), 2025-07-01T14:27:39(LocalDateTime), 2025-07-01T17:00(LocalDateTime), 1(Integer), 2025-07-01T14:28:11.992111600(LocalDateTime), 1(Long)
2025-07-01 14:28:12.003 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.updateActivity - <==    Updates: 1
2025-07-01 14:28:12.004 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 14:28:12.004 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:12.004 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: master
2025-07-01 14:28:12.004 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 1(Long)
2025-07-01 14:28:12.007 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 14:28:12.063 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 14:28:12.063 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:12.063 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 14:28:12.064 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 14:28:12.077 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 14:28:12.083 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 14:28:12.083 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:12.084 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 14:28:12.084 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 14:28:12.089 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 14:28:24.098 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 14:28:24.098 [http-nio-8080-exec-10] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-01 14:28:24.098 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-01 14:28:24.098 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:24.098 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:24.098 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-01 14:28:24.098 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 14:28:24.098 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 14:28:24.098 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:24.098 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 14:28:24.100 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 14:28:24.101 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-01 14:28:24.101 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-01 14:28:24.102 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:24.102 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-01 14:28:24.102 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 14:28:24.104 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 14:28:24.104 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-01 14:28:24.104 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:24.104 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:24.104 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-01 14:28:24.104 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-01 14:28:24.104 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 14:28:24.105 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:24.105 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-01 14:28:24.107 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 14:28:24.111 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:28:24.111 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:24.111 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:28:24.111 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-01 14:28:24.118 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-01 14:28:24.122 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-01 14:28:24.123 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-01 14:28:24.137 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 14:28:24.137 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 14:28:24.140 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-01 14:28:24.140 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 14:28:24.140 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:24.140 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 14:28:24.141 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 14:28:24.141 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-01 14:28:24.142 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 14:28:24.142 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:24.142 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 14:28:24.143 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 14:28:24.144 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 14:28:24.144 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 14:28:24.144 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:28:24.144 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:24.144 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:28:24.144 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-01 14:28:24.145 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 14:28:24.145 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:24.145 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 14:28:24.145 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 14:28:24.146 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 14:28:24.146 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 14:28:24.147 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 14:28:24.147 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:28:24.147 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 14:28:24.147 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:28:24.147 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:24.147 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:28:24.148 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 14:28:24.148 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 14:28:24.149 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:28:24.149 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:24.149 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:28:24.150 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:28:24.151 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 14:28:24.151 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:28:24.151 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:24.151 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:28:24.151 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 14:28:24.152 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:28:24.152 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:28:24.152 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:28:24.152 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:24.152 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:28:24.152 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 14:28:24.153 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:28:24.154 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:28:24.154 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:24.154 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:28:24.155 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 14:28:24.157 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:28:24.157 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:28:24.157 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:24.157 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:28:24.158 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 14:28:24.159 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:28:24.159 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:28:24.159 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:24.159 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:28:24.159 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 14:28:24.160 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:28:36.400 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 14:28:36.400 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:36.400 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 14:28:36.400 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 56464ff@456.com(String)
2025-07-01 14:28:36.402 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 14:28:36.402 [http-nio-8080-exec-8] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:56464ff@456.com    数据库密码:$2a$10$7OBMT05X3FsorQiaTl2aQuxGJpdi4w1dVWZdG8Oy9K7E61SWT9WAy
2025-07-01 14:28:36.470 [http-nio-8080-exec-8] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=56464ff@456.com, password=$2a$10$7OBMT05X3FsorQiaTl2aQuxGJpdi4w1dVWZdG8Oy9K7E61SWT9WAy, enabled=true, roles=[ROLE_USER]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=183A3E7B2B8F0A88828B5567D620B91A], Granted Authorities=[ROLE_USER]]
2025-07-01 14:28:36.479 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 14:28:36.479 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:36.479 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 14:28:36.479 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 56464ff@456.com(String)
2025-07-01 14:28:36.479 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 14:28:37.609 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-01 14:28:37.609 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-01 14:28:37.609 [http-nio-8080-exec-3] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-01 14:28:37.609 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:37.609 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 14:28:37.609 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-01 14:28:37.609 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 14:28:37.609 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 14:28:37.609 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:37.609 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:37.609 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-01 14:28:37.609 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:37.609 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 14:28:37.609 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 14:28:37.609 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:37.609 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-01 14:28:37.609 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 14:28:37.609 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 14:28:37.609 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-01 14:28:37.609 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 14:28:37.609 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:37.609 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-01 14:28:37.611 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-01 14:28:37.612 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-01 14:28:37.612 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:37.612 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-01 14:28:37.613 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-01 14:28:37.613 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 14:28:37.613 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:37.613 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 14:28:37.614 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-01 14:28:37.614 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 14:28:37.615 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 14:28:37.615 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-01 14:28:37.615 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 14:28:37.615 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:28:37.616 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:37.616 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:28:37.616 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 14:28:37.616 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:37.616 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 14:28:37.616 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-01 14:28:37.616 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 14:28:37.616 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 14:28:37.617 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-01 14:28:37.617 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 14:28:37.618 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:28:37.618 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 14:28:37.618 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 14:28:37.618 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:37.618 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:28:37.620 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-01 14:28:37.620 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 14:28:37.620 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 14:28:37.621 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:37.621 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:28:37.621 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:37.621 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:28:37.621 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 14:28:37.621 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 14:28:37.621 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 14:28:37.621 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 14:28:37.622 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 14:28:37.623 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:28:37.623 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 14:28:37.623 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:28:37.624 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:28:37.624 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:28:37.624 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:37.624 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:37.624 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:28:37.624 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:28:37.624 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 14:28:37.624 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 14:28:37.625 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:28:37.625 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:28:37.625 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:28:37.625 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:28:37.625 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:37.625 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:37.625 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:28:37.625 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:28:37.626 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 14:28:37.626 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 14:28:37.627 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:28:37.628 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:28:37.629 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:28:37.629 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:37.629 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:28:37.630 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 14:28:37.631 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:28:37.631 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:28:37.631 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:37.631 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:28:37.632 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 14:28:37.633 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:28:40.733 [http-nio-8080-exec-10] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 14:28:40.733 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:40.733 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 14:28:40.734 [http-nio-8080-exec-10] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 14:28:40.737 [http-nio-8080-exec-10] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 3
2025-07-01 14:28:40.738 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 14:28:40.739 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:40.739 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 14:28:40.748 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 2(Long)
2025-07-01 14:28:40.755 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 14:28:40.761 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 14:28:40.762 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:40.762 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 14:28:40.762 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 1(Long)
2025-07-01 14:28:40.766 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 3
2025-07-01 14:28:40.767 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 14:28:40.767 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:40.767 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 14:28:40.768 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 3(Long)
2025-07-01 14:28:40.775 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 14:28:49.464 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.bookId = ? AND sg.status = 1 ORDER BY sg.createTime DESC
2025-07-01 14:28:49.464 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:49.464 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.bookId = ?
        AND sg.status = 1
        ORDER BY sg.createTime DESC ::: DataSources: slave
2025-07-01 14:28:49.469 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==> Parameters: 4(Integer)
2025-07-01 14:28:49.472 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - <==      Total: 1
2025-07-01 14:28:49.473 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 14:28:49.474 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:49.474 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 14:28:49.475 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 2(Long)
2025-07-01 14:28:49.478 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 14:28:49.479 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - ==>  Preparing: INSERT INTO spikeRecord ( spikeGoodsId, userAccount, spikeTime, result, failReason, ipAddress, userAgent ) VALUES ( ?, ?, ?, ?, ?, ?, ? )
2025-07-01 14:28:49.480 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:49.480 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: INSERT INTO spikeRecord (
            spikeGoodsId, userAccount, spikeTime, result, 
            failReason, ipAddress, userAgent
        ) VALUES (
            ?, ?, ?, ?,
            ?, ?, ?
        ) ::: DataSources: master
2025-07-01 14:28:49.653 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - ==> Parameters: null, 56464ff@456.com(String), 2025-07-01T14:28:49.478771(LocalDateTime), 0(Integer), 该图书的秒杀活动未开始或已结束(String), 0:0:0:0:0:0:0:1(String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0(String)
2025-07-01 14:28:49.677 [http-nio-8080-exec-7] ERROR druid.sql.Statement - {conn-10001, pstmt-20004} execute error. INSERT INTO spikeRecord (
            spikeGoodsId, userAccount, spikeTime, result, 
            failReason, ipAddress, userAgent
        ) VALUES (
            ?, ?, ?, ?,
            ?, ?, ?
        )
java.sql.SQLIntegrityConstraintViolationException: Column 'spikeGoodsId' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:118)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3446)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:639)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:158)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:483)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.MasterSlavePreparedStatement.execute(MasterSlavePreparedStatement.java:118)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy4/jdk.proxy4.$Proxy123.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy109.insertSpikeRecord(Unknown Source)
	at com.huang.store.service.SpikeService.recordSpikeResult(SpikeService.java:309)
	at com.huang.store.service.SpikeService.spikeBookById(SpikeService.java:134)
	at com.huang.store.service.SpikeService$$FastClassBySpringCGLIB$$6c437123.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.huang.store.service.SpikeService$$EnhancerBySpringCGLIB$$659fefa1.spikeBookById(<generated>)
	at com.huang.store.controller.SpikeController.spikeBook(SpikeController.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2025-07-01 14:28:57.529 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.bookId = ? AND sg.status = 1 ORDER BY sg.createTime DESC
2025-07-01 14:28:57.530 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:57.530 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.bookId = ?
        AND sg.status = 1
        ORDER BY sg.createTime DESC ::: DataSources: slave
2025-07-01 14:28:57.531 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==> Parameters: 4(Integer)
2025-07-01 14:28:57.535 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - <==      Total: 1
2025-07-01 14:28:57.535 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 14:28:57.535 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:57.535 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 14:28:57.535 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 2(Long)
2025-07-01 14:28:57.538 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 14:28:57.539 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - ==>  Preparing: INSERT INTO spikeRecord ( spikeGoodsId, userAccount, spikeTime, result, failReason, ipAddress, userAgent ) VALUES ( ?, ?, ?, ?, ?, ?, ? )
2025-07-01 14:28:57.539 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:28:57.539 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: INSERT INTO spikeRecord (
            spikeGoodsId, userAccount, spikeTime, result, 
            failReason, ipAddress, userAgent
        ) VALUES (
            ?, ?, ?, ?,
            ?, ?, ?
        ) ::: DataSources: master
2025-07-01 14:28:57.543 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - ==> Parameters: null, 56464ff@456.com(String), 2025-07-01T14:28:57.539872700(LocalDateTime), 0(Integer), 该图书的秒杀活动未开始或已结束(String), 0:0:0:0:0:0:0:1(String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0(String)
2025-07-01 14:28:57.546 [http-nio-8080-exec-4] ERROR druid.sql.Statement - {conn-10001, pstmt-20005} execute error. INSERT INTO spikeRecord (
            spikeGoodsId, userAccount, spikeTime, result, 
            failReason, ipAddress, userAgent
        ) VALUES (
            ?, ?, ?, ?,
            ?, ?, ?
        )
java.sql.SQLIntegrityConstraintViolationException: Column 'spikeGoodsId' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:118)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3446)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:639)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:158)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:483)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.MasterSlavePreparedStatement.execute(MasterSlavePreparedStatement.java:118)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy4/jdk.proxy4.$Proxy123.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy109.insertSpikeRecord(Unknown Source)
	at com.huang.store.service.SpikeService.recordSpikeResult(SpikeService.java:309)
	at com.huang.store.service.SpikeService.spikeBookById(SpikeService.java:134)
	at com.huang.store.service.SpikeService$$FastClassBySpringCGLIB$$6c437123.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.huang.store.service.SpikeService$$EnhancerBySpringCGLIB$$659fefa1.spikeBookById(<generated>)
	at com.huang.store.controller.SpikeController.spikeBook(SpikeController.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2025-07-01 14:29:28.129 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.bookId = ? AND sg.status = 1 ORDER BY sg.createTime DESC
2025-07-01 14:29:28.129 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:29:28.130 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.bookId = ?
        AND sg.status = 1
        ORDER BY sg.createTime DESC ::: DataSources: slave
2025-07-01 14:29:28.131 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==> Parameters: 1(Integer)
2025-07-01 14:29:28.137 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - <==      Total: 2
2025-07-01 14:29:28.137 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 14:29:28.138 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:29:28.138 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 14:29:28.138 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 1(Long)
2025-07-01 14:29:28.141 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 14:29:28.143 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.id = ?
2025-07-01 14:29:28.143 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:29:28.143 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.id = ? ::: DataSources: slave
2025-07-01 14:29:28.145 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==> Parameters: 1(Long)
2025-07-01 14:29:28.149 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - <==      Total: 1
2025-07-01 14:29:28.149 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeOrderMapper.getUserPurchaseCount - ==>  Preparing: SELECT COALESCE(SUM(quantity), 0) FROM spikeOrder WHERE userAccount = ? AND spikeGoodsId = ? AND status IN (0, 1)
2025-07-01 14:29:28.150 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:29:28.150 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT COALESCE(SUM(quantity), 0)
        FROM spikeOrder 
        WHERE userAccount = ? 
        AND spikeGoodsId = ?
        AND status IN (0, 1) ::: DataSources: slave
2025-07-01 14:29:28.161 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeOrderMapper.getUserPurchaseCount - ==> Parameters: 56464ff@456.com(String), 1(Long)
2025-07-01 14:29:28.166 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeOrderMapper.getUserPurchaseCount - <==      Total: 1
2025-07-01 14:29:29.197 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SpikeGoodsMapper.reduceStock - ==>  Preparing: UPDATE spikeGoods SET spikeStock = spikeStock - ?, soldCount = soldCount + ?, updateTime = NOW() WHERE id = ? AND spikeStock >= ?
2025-07-01 14:29:29.197 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:29:29.197 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: UPDATE spikeGoods
        SET spikeStock = spikeStock - ?,
            soldCount = soldCount + ?,
            updateTime = NOW()
        WHERE id = ?
        AND spikeStock >= ? ::: DataSources: master
2025-07-01 14:29:29.198 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SpikeGoodsMapper.reduceStock - ==> Parameters: 1(Integer), 1(Integer), 1(Long), 1(Integer)
2025-07-01 14:29:29.204 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SpikeGoodsMapper.reduceStock - <==    Updates: 1
2025-07-01 14:29:29.204 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - ==>  Preparing: update book set stock=stock-? where id=? and stock>=?
2025-07-01 14:29:29.204 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:29:29.205 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: update book
            set stock=stock-?
                where id=? and stock>=? ::: DataSources: master
2025-07-01 14:29:29.206 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - ==> Parameters: 1(Integer), 1(Integer), 1(Integer)
2025-07-01 14:29:29.208 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - <==    Updates: 1
2025-07-01 14:29:29.209 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.SpikeGoodsMapper.updateSoldCount - ==>  Preparing: UPDATE spikeGoods SET soldCount = soldCount + ?, updateTime = NOW() WHERE id = ?
2025-07-01 14:29:29.209 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:29:29.209 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: UPDATE spikeGoods 
        SET soldCount = soldCount + ?,
            updateTime = NOW()
        WHERE id = ? ::: DataSources: master
2025-07-01 14:29:29.211 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.SpikeGoodsMapper.updateSoldCount - ==> Parameters: 1(Integer), 1(Long)
2025-07-01 14:29:29.213 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.SpikeGoodsMapper.updateSoldCount - <==    Updates: 1
2025-07-01 14:29:29.216 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.SpikeOrderMapper.insertSpikeOrder - ==>  Preparing: INSERT INTO spikeOrder ( orderId, spikeGoodsId, userAccount, quantity, spikePrice, totalAmount, status, payTime, cancelTime, expireTime, createTime, updateTime ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
2025-07-01 14:29:29.216 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:29:29.217 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: INSERT INTO spikeOrder (
            orderId, spikeGoodsId, userAccount, quantity, spikePrice,
            totalAmount, status, payTime, cancelTime, expireTime,
            createTime, updateTime
        ) VALUES (
            ?, ?, ?, ?, ?,
            ?, ?, ?, ?, ?,
            ?, ?
        ) ::: DataSources: master
2025-07-01 14:29:29.221 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.SpikeOrderMapper.insertSpikeOrder - ==> Parameters: SPIKE1751351369213949(String), 1(Long), 56464ff@456.com(String), 1(Integer), 19.90(BigDecimal), 19.90(BigDecimal), 0(Integer), null, null, 2025-07-01T14:59:29.216121300(LocalDateTime), 2025-07-01T14:29:29.216121300(LocalDateTime), 2025-07-01T14:29:29.216121300(LocalDateTime)
2025-07-01 14:29:29.224 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.SpikeOrderMapper.insertSpikeOrder - <==    Updates: 1
2025-07-01 14:29:29.237 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - ==>  Preparing: INSERT INTO spikeRecord ( spikeGoodsId, userAccount, spikeTime, result, failReason, ipAddress, userAgent ) VALUES ( ?, ?, ?, ?, ?, ?, ? )
2025-07-01 14:29:29.237 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:29:29.237 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: INSERT INTO spikeRecord (
            spikeGoodsId, userAccount, spikeTime, result, 
            failReason, ipAddress, userAgent
        ) VALUES (
            ?, ?, ?, ?,
            ?, ?, ?
        ) ::: DataSources: master
2025-07-01 14:29:29.239 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - ==> Parameters: 1(Long), 56464ff@456.com(String), 2025-07-01T14:29:29.236560900(LocalDateTime), 1(Integer), null, 0:0:0:0:0:0:0:1(String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0(String)
2025-07-01 14:29:29.242 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - <==    Updates: 1
2025-07-01 14:29:29.344 [http-nio-8080-exec-8] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 14:29:29.345 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:29:29.345 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 14:29:29.345 [http-nio-8080-exec-8] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 14:29:29.348 [http-nio-8080-exec-8] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 3
2025-07-01 14:29:29.348 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 14:29:29.349 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:29:29.349 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 14:29:29.349 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 2(Long)
2025-07-01 14:29:29.354 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 14:29:29.356 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 14:29:29.356 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:29:29.357 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 14:29:29.357 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 1(Long)
2025-07-01 14:29:29.372 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 3
2025-07-01 14:29:29.373 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 14:29:29.373 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:29:29.373 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 14:29:29.373 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 3(Long)
2025-07-01 14:29:29.378 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 14:29:33.504 [http-nio-8080-exec-5] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 14:29:33.504 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:29:33.504 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 14:29:33.504 [http-nio-8080-exec-5] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 14:29:33.506 [http-nio-8080-exec-5] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 3
2025-07-01 14:29:33.507 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 14:29:33.507 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:29:33.507 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 14:29:33.508 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 2(Long)
2025-07-01 14:29:33.511 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 14:29:33.511 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 14:29:33.511 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:29:33.511 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 14:29:33.512 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 1(Long)
2025-07-01 14:29:33.515 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 3
2025-07-01 14:29:33.516 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 14:29:33.517 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:29:33.517 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 14:29:33.517 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 3(Long)
2025-07-01 14:29:33.522 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 14:30:27.033 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.bookId = ? AND sg.status = 1 ORDER BY sg.createTime DESC
2025-07-01 14:30:27.033 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:30:27.033 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.bookId = ?
        AND sg.status = 1
        ORDER BY sg.createTime DESC ::: DataSources: slave
2025-07-01 14:30:27.034 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==> Parameters: 2(Integer)
2025-07-01 14:30:27.038 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - <==      Total: 2
2025-07-01 14:30:27.039 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 14:30:27.039 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:30:27.039 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 14:30:27.039 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 1(Long)
2025-07-01 14:30:27.041 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 14:30:27.041 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.id = ?
2025-07-01 14:30:27.041 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:30:27.041 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.id = ? ::: DataSources: slave
2025-07-01 14:30:27.041 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==> Parameters: 2(Long)
2025-07-01 14:30:27.044 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - <==      Total: 1
2025-07-01 14:30:27.044 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeOrderMapper.getUserPurchaseCount - ==>  Preparing: SELECT COALESCE(SUM(quantity), 0) FROM spikeOrder WHERE userAccount = ? AND spikeGoodsId = ? AND status IN (0, 1)
2025-07-01 14:30:27.044 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:30:27.044 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT COALESCE(SUM(quantity), 0)
        FROM spikeOrder 
        WHERE userAccount = ? 
        AND spikeGoodsId = ?
        AND status IN (0, 1) ::: DataSources: slave
2025-07-01 14:30:27.045 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeOrderMapper.getUserPurchaseCount - ==> Parameters: 56464ff@456.com(String), 2(Long)
2025-07-01 14:30:27.047 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeOrderMapper.getUserPurchaseCount - <==      Total: 1
2025-07-01 14:30:27.054 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - ==>  Preparing: INSERT INTO spikeRecord ( spikeGoodsId, userAccount, spikeTime, result, failReason, ipAddress, userAgent ) VALUES ( ?, ?, ?, ?, ?, ?, ? )
2025-07-01 14:30:27.054 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:30:27.054 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: INSERT INTO spikeRecord (
            spikeGoodsId, userAccount, spikeTime, result, 
            failReason, ipAddress, userAgent
        ) VALUES (
            ?, ?, ?, ?,
            ?, ?, ?
        ) ::: DataSources: master
2025-07-01 14:30:27.055 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - ==> Parameters: 2(Long), 56464ff@456.com(String), 2025-07-01T14:30:27.054109700(LocalDateTime), 0(Integer), 超出购买限制(String), 0:0:0:0:0:0:0:1(String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0(String)
2025-07-01 14:30:27.057 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - <==    Updates: 1
2025-07-01 14:30:34.532 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.bookId = ? AND sg.status = 1 ORDER BY sg.createTime DESC
2025-07-01 14:30:34.532 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:30:34.532 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.bookId = ?
        AND sg.status = 1
        ORDER BY sg.createTime DESC ::: DataSources: slave
2025-07-01 14:30:34.534 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==> Parameters: 3(Integer)
2025-07-01 14:30:34.537 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - <==      Total: 1
2025-07-01 14:30:34.538 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 14:30:34.538 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:30:34.538 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 14:30:34.538 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 1(Long)
2025-07-01 14:30:34.541 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 14:30:34.541 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.id = ?
2025-07-01 14:30:34.542 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:30:34.542 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.id = ? ::: DataSources: slave
2025-07-01 14:30:34.542 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==> Parameters: 3(Long)
2025-07-01 14:30:34.546 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - <==      Total: 1
2025-07-01 14:30:34.546 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeOrderMapper.getUserPurchaseCount - ==>  Preparing: SELECT COALESCE(SUM(quantity), 0) FROM spikeOrder WHERE userAccount = ? AND spikeGoodsId = ? AND status IN (0, 1)
2025-07-01 14:30:34.546 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:30:34.546 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT COALESCE(SUM(quantity), 0)
        FROM spikeOrder 
        WHERE userAccount = ? 
        AND spikeGoodsId = ?
        AND status IN (0, 1) ::: DataSources: slave
2025-07-01 14:30:34.547 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeOrderMapper.getUserPurchaseCount - ==> Parameters: 56464ff@456.com(String), 3(Long)
2025-07-01 14:30:34.548 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeOrderMapper.getUserPurchaseCount - <==      Total: 1
2025-07-01 14:30:34.552 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - ==>  Preparing: INSERT INTO spikeRecord ( spikeGoodsId, userAccount, spikeTime, result, failReason, ipAddress, userAgent ) VALUES ( ?, ?, ?, ?, ?, ?, ? )
2025-07-01 14:30:34.553 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:30:34.553 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: INSERT INTO spikeRecord (
            spikeGoodsId, userAccount, spikeTime, result, 
            failReason, ipAddress, userAgent
        ) VALUES (
            ?, ?, ?, ?,
            ?, ?, ?
        ) ::: DataSources: master
2025-07-01 14:30:34.554 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - ==> Parameters: 3(Long), 56464ff@456.com(String), 2025-07-01T14:30:34.552841900(LocalDateTime), 0(Integer), 超出购买限制(String), 0:0:0:0:0:0:0:1(String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0(String)
2025-07-01 14:30:34.557 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - <==    Updates: 1
2025-07-01 14:30:37.646 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.bookId = ? AND sg.status = 1 ORDER BY sg.createTime DESC
2025-07-01 14:30:37.647 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:30:37.647 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.bookId = ?
        AND sg.status = 1
        ORDER BY sg.createTime DESC ::: DataSources: slave
2025-07-01 14:30:37.648 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==> Parameters: 1(Integer)
2025-07-01 14:30:37.653 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - <==      Total: 2
2025-07-01 14:30:37.654 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 14:30:37.654 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:30:37.654 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 14:30:37.654 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 1(Long)
2025-07-01 14:30:37.657 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 14:30:37.657 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.id = ?
2025-07-01 14:30:37.657 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:30:37.657 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.id = ? ::: DataSources: slave
2025-07-01 14:30:37.657 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==> Parameters: 1(Long)
2025-07-01 14:30:37.660 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - <==      Total: 1
2025-07-01 14:30:37.661 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeOrderMapper.getUserPurchaseCount - ==>  Preparing: SELECT COALESCE(SUM(quantity), 0) FROM spikeOrder WHERE userAccount = ? AND spikeGoodsId = ? AND status IN (0, 1)
2025-07-01 14:30:37.661 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:30:37.661 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT COALESCE(SUM(quantity), 0)
        FROM spikeOrder 
        WHERE userAccount = ? 
        AND spikeGoodsId = ?
        AND status IN (0, 1) ::: DataSources: slave
2025-07-01 14:30:37.661 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeOrderMapper.getUserPurchaseCount - ==> Parameters: 56464ff@456.com(String), 1(Long)
2025-07-01 14:30:37.664 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeOrderMapper.getUserPurchaseCount - <==      Total: 1
2025-07-01 14:30:37.668 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - ==>  Preparing: INSERT INTO spikeRecord ( spikeGoodsId, userAccount, spikeTime, result, failReason, ipAddress, userAgent ) VALUES ( ?, ?, ?, ?, ?, ?, ? )
2025-07-01 14:30:37.668 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:30:37.668 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: INSERT INTO spikeRecord (
            spikeGoodsId, userAccount, spikeTime, result, 
            failReason, ipAddress, userAgent
        ) VALUES (
            ?, ?, ?, ?,
            ?, ?, ?
        ) ::: DataSources: master
2025-07-01 14:30:37.670 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - ==> Parameters: 1(Long), 56464ff@456.com(String), 2025-07-01T14:30:37.668701400(LocalDateTime), 0(Integer), 超出购买限制(String), 0:0:0:0:0:0:0:1(String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0(String)
2025-07-01 14:30:37.674 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - <==    Updates: 1
2025-07-01 14:31:00.011 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-01 14:31:00.011 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:00.011 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-01 14:31:00.012 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 14:31:00.012 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-01 14:31:00.012 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:00.013 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-01 14:31:00.014 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-01 14:31:00.014 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-01 14:31:00.014 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-01 14:31:00.015 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:00.015 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-01 14:31:00.016 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-01 14:31:00.016 [http-nio-8080-exec-9] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-01 14:31:00.016 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 14:31:00.014 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:00.016 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-01 14:31:00.011 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 14:31:00.016 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:00.016 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 14:31:00.018 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-01 14:31:00.019 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-01 14:31:00.020 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-01 14:31:00.020 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-01 14:31:00.020 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 14:31:00.020 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:00.020 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 14:31:00.020 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 14:31:00.021 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:00.021 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 14:31:00.021 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 14:31:00.021 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:00.021 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 14:31:00.023 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 14:31:00.024 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 14:31:00.024 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:00.024 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 14:31:00.024 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 14:31:00.024 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 14:31:00.025 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 14:31:00.026 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 14:31:00.026 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:00.026 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 14:31:00.026 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 14:31:00.026 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 14:31:00.027 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:31:00.027 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:00.027 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 14:31:00.027 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:31:00.027 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 14:31:00.028 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-01 14:31:00.029 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 14:31:00.030 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:31:00.030 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:00.030 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:31:00.030 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-01 14:31:00.030 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 14:31:00.030 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 14:31:00.031 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 14:31:00.033 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:31:00.033 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 14:31:00.034 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:31:00.034 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:31:00.034 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:00.034 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:31:00.034 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:00.034 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:31:00.034 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 14:31:00.035 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 14:31:00.036 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:31:00.037 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:31:00.037 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:00.037 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:31:00.037 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:31:00.037 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 14:31:00.037 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:31:00.038 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:00.038 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:31:00.038 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 14:31:00.039 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:31:00.039 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:31:00.039 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:31:00.039 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:00.040 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:31:00.040 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 14:31:00.040 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:31:00.040 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:00.040 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:31:00.040 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 14:31:00.041 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:31:00.042 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:31:00.042 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:00.042 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:31:00.042 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:31:00.043 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 14:31:00.046 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:31:17.968 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 14:31:17.968 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:17.968 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 14:31:17.968 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 2545059634@qq.com(String)
2025-07-01 14:31:17.971 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 14:31:17.971 [http-nio-8080-exec-10] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:2545059634@qq.com    数据库密码:$2a$10$w8zNNUSDq3MCiLDDuAhYXedA0QGva1Z4.6UxO61Njhsrlo8voc01G
2025-07-01 14:31:18.079 [http-nio-8080-exec-10] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=2545059634@qq.com, password=$2a$10$w8zNNUSDq3MCiLDDuAhYXedA0QGva1Z4.6UxO61Njhsrlo8voc01G, enabled=true, roles=[ROLE_ADMIN]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=58750191A66FC569102FE8EE4E14C12D], Granted Authorities=[ROLE_ADMIN]]
2025-07-01 14:31:18.081 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 14:31:18.081 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:18.081 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 14:31:18.081 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 2545059634@qq.com(String)
2025-07-01 14:31:18.083 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 14:31:21.300 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 14:31:21.300 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:21.300 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 14:31:21.301 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 14:31:21.305 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 14:31:21.306 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 14:31:21.306 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:21.306 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 14:31:21.306 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 14:31:21.308 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 14:31:47.679 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 14:31:47.679 [http-nio-8080-exec-6] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=5
2025-07-01 14:31:47.679 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:47.679 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 14:31:47.680 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 14:31:47.680 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==>  Preparing: select name from publish
2025-07-01 14:31:47.680 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:47.680 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select name from publish ::: DataSources: slave
2025-07-01 14:31:47.680 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select b.*, COALESCE(sales_data.total_sales, 0) as sales from book b left join ( select od.bookId, sum(od.num) as total_sales from orderdetail od inner join bookorder bo on od.orderId = bo.orderId where bo.orderStatus in ('已发货', '已收货', '已评价') group by od.bookId ) sales_data on b.id = sales_data.bookId order by b.rank desc, b.id desc limit ?,?
2025-07-01 14:31:47.680 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:47.681 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==> Parameters: 
2025-07-01 14:31:47.681 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select b.*,
               COALESCE(sales_data.total_sales, 0) as sales
        from book b
        left join (
            select od.bookId, sum(od.num) as total_sales
            from orderdetail od
            inner join bookorder bo on od.orderId = bo.orderId
            where bo.orderStatus in ('已发货', '已收货', '已评价')
            group by od.bookId
        ) sales_data on b.id = sales_data.bookId
        order by b.rank desc, b.id desc
        limit ?,? ::: DataSources: slave
2025-07-01 14:31:47.682 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 14:31:47.683 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:31:47.683 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:47.683 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:31:47.683 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - <==      Total: 5
2025-07-01 14:31:47.683 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 14:31:47.685 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 14:31:47.685 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:31:47.686 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:47.686 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:31:47.686 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 14:31:47.688 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:31:47.689 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:31:47.689 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:47.689 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:31:47.689 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 14:31:47.690 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:31:47.691 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:31:47.691 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:47.691 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:31:47.691 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 14:31:47.692 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:31:47.703 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 14:31:47.712 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-01 14:31:47.713 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:31:47.713 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:47.713 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:31:47.714 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 14:31:47.715 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:31:47.716 [http-nio-8080-exec-6] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-01 14:31:47.716 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:31:47.717 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:47.717 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:31:47.717 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 14:31:47.718 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:31:47.719 [http-nio-8080-exec-6] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-01 14:31:47.719 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:31:47.719 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:47.719 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:31:47.719 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 14:31:47.721 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:31:47.721 [http-nio-8080-exec-6] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-01 14:31:47.721 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:31:47.721 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:47.721 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:31:47.721 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 14:31:47.723 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:31:47.723 [http-nio-8080-exec-6] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-01 14:31:47.723 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:31:47.724 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:47.724 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:31:47.724 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 14:31:47.725 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:31:47.726 [http-nio-8080-exec-6] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-01 14:31:47.727 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-01 14:31:47.727 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:47.727 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-01 14:31:47.728 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-01 14:31:47.730 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-01 14:31:55.816 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==>  Preparing: select name from publish
2025-07-01 14:31:55.816 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:55.816 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select name from publish ::: DataSources: slave
2025-07-01 14:31:55.817 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==> Parameters: 
2025-07-01 14:31:55.817 [http-nio-8080-exec-2] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=5
2025-07-01 14:31:55.817 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select b.*, COALESCE(sales_data.total_sales, 0) as sales from book b left join ( select od.bookId, sum(od.num) as total_sales from orderdetail od inner join bookorder bo on od.orderId = bo.orderId where bo.orderStatus in ('已发货', '已收货', '已评价') group by od.bookId ) sales_data on b.id = sales_data.bookId order by b.rank desc, b.id desc limit ?,?
2025-07-01 14:31:55.817 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:55.817 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select b.*,
               COALESCE(sales_data.total_sales, 0) as sales
        from book b
        left join (
            select od.bookId, sum(od.num) as total_sales
            from orderdetail od
            inner join bookorder bo on od.orderId = bo.orderId
            where bo.orderStatus in ('已发货', '已收货', '已评价')
            group by od.bookId
        ) sales_data on b.id = sales_data.bookId
        order by b.rank desc, b.id desc
        limit ?,? ::: DataSources: slave
2025-07-01 14:31:55.817 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 14:31:55.817 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:55.817 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 14:31:55.818 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 14:31:55.818 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - <==      Total: 5
2025-07-01 14:31:55.819 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 14:31:55.820 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 14:31:55.820 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:31:55.821 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:55.821 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:31:55.821 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 14:31:55.822 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 14:31:55.823 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:31:55.823 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:55.823 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:31:55.823 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 14:31:55.824 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:31:55.825 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:31:55.825 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:55.825 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:31:55.825 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 14:31:55.827 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-01 14:31:55.827 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:31:55.827 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:55.827 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:31:55.828 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:31:55.828 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 14:31:55.828 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:31:55.828 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:55.828 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:31:55.828 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 14:31:55.829 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:31:55.829 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:31:55.829 [http-nio-8080-exec-2] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-01 14:31:55.829 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:31:55.829 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:55.829 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:31:55.830 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 14:31:55.831 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:31:55.832 [http-nio-8080-exec-2] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-01 14:31:55.832 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:31:55.832 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:55.832 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:31:55.832 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 14:31:55.834 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:31:55.835 [http-nio-8080-exec-2] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-01 14:31:55.835 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:31:55.835 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:55.835 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:31:55.835 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 14:31:55.837 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:31:55.837 [http-nio-8080-exec-2] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-01 14:31:55.837 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:31:55.837 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:55.837 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:31:55.837 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 14:31:55.839 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:31:55.840 [http-nio-8080-exec-2] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-01 14:31:55.840 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-01 14:31:55.840 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:55.840 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-01 14:31:55.840 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-01 14:31:55.841 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-01 14:31:58.924 [http-nio-8080-exec-10] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=5
2025-07-01 14:31:58.924 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 14:31:58.924 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select b.*, COALESCE(sales_data.total_sales, 0) as sales from book b left join ( select od.bookId, sum(od.num) as total_sales from orderdetail od inner join bookorder bo on od.orderId = bo.orderId where bo.orderStatus in ('已发货', '已收货', '已评价') group by od.bookId ) sales_data on b.id = sales_data.bookId order by b.rank desc, b.id desc limit ?,?
2025-07-01 14:31:58.924 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:58.924 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:58.924 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 14:31:58.924 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select b.*,
               COALESCE(sales_data.total_sales, 0) as sales
        from book b
        left join (
            select od.bookId, sum(od.num) as total_sales
            from orderdetail od
            inner join bookorder bo on od.orderId = bo.orderId
            where bo.orderStatus in ('已发货', '已收货', '已评价')
            group by od.bookId
        ) sales_data on b.id = sales_data.bookId
        order by b.rank desc, b.id desc
        limit ?,? ::: DataSources: slave
2025-07-01 14:31:58.925 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 14:31:58.925 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 14:31:58.925 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==>  Preparing: select name from publish
2025-07-01 14:31:58.925 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:58.925 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select name from publish ::: DataSources: slave
2025-07-01 14:31:58.926 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==> Parameters: 
2025-07-01 14:31:58.926 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 14:31:58.927 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - <==      Total: 5
2025-07-01 14:31:58.927 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:31:58.927 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:58.927 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:31:58.927 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 14:31:58.928 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-01 14:31:58.929 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:31:58.929 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:58.929 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:31:58.929 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 14:31:58.931 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 14:31:58.932 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:31:58.932 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:58.932 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:31:58.932 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 14:31:58.932 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:31:58.933 [http-nio-8080-exec-10] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-01 14:31:58.933 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:31:58.933 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:58.933 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:31:58.933 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 14:31:58.933 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:31:58.934 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:31:58.934 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:58.934 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:31:58.934 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 14:31:58.934 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:31:58.934 [http-nio-8080-exec-10] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-01 14:31:58.935 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:31:58.935 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:58.935 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:31:58.935 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 14:31:58.937 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:31:58.937 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:31:58.937 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:31:58.937 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:58.937 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:31:58.937 [http-nio-8080-exec-10] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-01 14:31:58.937 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 14:31:58.937 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:31:58.938 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:58.938 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:31:58.938 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 14:31:58.940 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:31:58.940 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:31:58.940 [http-nio-8080-exec-10] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-01 14:31:58.940 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:31:58.940 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:58.940 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:31:58.940 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 14:31:58.942 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:31:58.942 [http-nio-8080-exec-10] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-01 14:31:58.943 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-01 14:31:58.945 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:31:58.945 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-01 14:31:58.946 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-01 14:31:58.947 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-01 14:32:01.579 [http-nio-8080-exec-5] INFO  com.huang.store.controller.OrderController - 获取订单列表: page=1, pageSize=5
2025-07-01 14:32:01.580 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==>  Preparing: select name from publish
2025-07-01 14:32:01.580 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:32:01.580 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select name from publish ::: DataSources: slave
2025-07-01 14:32:01.580 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==> Parameters: 
2025-07-01 14:32:01.585 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - <==      Total: 5
2025-07-01 14:32:01.587 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-01 14:32:01.587 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:32:01.587 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-01 14:32:01.590 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: false(Boolean), 0(Integer), 5(Integer)
2025-07-01 14:32:01.597 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 3
2025-07-01 14:32:01.598 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE beUserDelete = ?
2025-07-01 14:32:01.598 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:32:01.598 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  beUserDelete = ? ::: DataSources: slave
2025-07-01 14:32:01.599 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: false(Boolean)
2025-07-01 14:32:01.600 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-01 14:32:07.883 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==>  Preparing: select name from publish
2025-07-01 14:32:07.883 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:32:07.883 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select name from publish ::: DataSources: slave
2025-07-01 14:32:07.883 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==> Parameters: 
2025-07-01 14:32:07.884 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 14:32:07.884 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - <==      Total: 5
2025-07-01 14:32:07.884 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:32:07.884 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 14:32:07.884 [http-nio-8080-exec-3] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=5
2025-07-01 14:32:07.884 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 14:32:07.884 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select b.*, COALESCE(sales_data.total_sales, 0) as sales from book b left join ( select od.bookId, sum(od.num) as total_sales from orderdetail od inner join bookorder bo on od.orderId = bo.orderId where bo.orderStatus in ('已发货', '已收货', '已评价') group by od.bookId ) sales_data on b.id = sales_data.bookId order by b.rank desc, b.id desc limit ?,?
2025-07-01 14:32:07.884 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:32:07.884 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select b.*,
               COALESCE(sales_data.total_sales, 0) as sales
        from book b
        left join (
            select od.bookId, sum(od.num) as total_sales
            from orderdetail od
            inner join bookorder bo on od.orderId = bo.orderId
            where bo.orderStatus in ('已发货', '已收货', '已评价')
            group by od.bookId
        ) sales_data on b.id = sales_data.bookId
        order by b.rank desc, b.id desc
        limit ?,? ::: DataSources: slave
2025-07-01 14:32:07.884 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 14:32:07.885 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 14:32:07.885 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:32:07.886 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:32:07.886 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:32:07.886 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 14:32:07.887 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 14:32:07.888 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:32:07.888 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:32:07.888 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:32:07.888 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 14:32:07.889 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-01 14:32:07.890 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:32:07.890 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:32:07.890 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:32:07.890 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:32:07.890 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:32:07.890 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:32:07.890 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 14:32:07.890 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:32:07.890 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 14:32:07.891 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:32:07.891 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:32:07.891 [http-nio-8080-exec-3] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-01 14:32:07.892 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:32:07.892 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 14:32:07.892 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:32:07.892 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:32:07.892 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:32:07.892 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 14:32:07.892 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 14:32:07.892 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 14:32:07.893 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:32:07.893 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 14:32:07.893 [http-nio-8080-exec-3] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-01 14:32:07.893 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:32:07.893 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:32:07.893 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:32:07.893 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 14:32:07.894 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:32:07.895 [http-nio-8080-exec-3] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-01 14:32:07.895 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:32:07.895 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:32:07.895 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:32:07.895 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 14:32:07.897 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:32:07.897 [http-nio-8080-exec-3] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-01 14:32:07.897 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:32:07.897 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:32:07.897 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:32:07.898 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 14:32:07.899 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:32:07.899 [http-nio-8080-exec-3] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-01 14:32:07.899 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-01 14:32:07.899 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:32:07.899 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-01 14:32:07.899 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-01 14:32:07.900 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-01 14:32:11.102 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 14:32:11.103 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:32:11.103 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 14:32:11.103 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 14:32:11.105 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 14:32:11.105 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 14:32:11.105 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:32:11.105 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 14:32:11.105 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 14:32:11.106 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 14:32:22.692 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 14:32:22.692 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:32:22.692 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 14:32:22.693 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 1(Long)
2025-07-01 14:32:22.695 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 14:33:11.220 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 14:33:11.220 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:33:11.220 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 14:33:11.220 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 2(Long)
2025-07-01 14:33:11.223 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 14:33:14.000 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1 WHERE sg.activityId = ? ORDER BY sg.sortOrder ASC, sg.createTime DESC LIMIT ?, ?
2025-07-01 14:33:14.000 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:33:14.000 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1
        WHERE sg.activityId = ?
        ORDER BY sg.sortOrder ASC, sg.createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 14:33:14.007 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==> Parameters: 1(Long), 0(Integer), 10(Integer)
2025-07-01 14:33:14.014 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - <==      Total: 3
2025-07-01 14:33:14.016 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==>  Preparing: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ?
2025-07-01 14:33:14.016 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:33:14.016 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ? ::: DataSources: slave
2025-07-01 14:33:14.021 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==> Parameters: 1(Long)
2025-07-01 14:33:14.025 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - <==      Total: 1
2025-07-01 14:33:34.538 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.SpikeGoodsMapper.updateSpikeGoods - ==>  Preparing: UPDATE spikeGoods SET activityId = ?, bookId = ?, spikePrice = ?, originalPrice = ?, spikeStock = ?, soldCount = ?, limitPerUser = ?, sortOrder = ?, status = ?, updateTime = ? WHERE id = ?
2025-07-01 14:33:34.539 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:33:34.539 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: UPDATE spikeGoods SET
            activityId = ?,
            bookId = ?,
            spikePrice = ?,
            originalPrice = ?,
            spikeStock = ?,
            soldCount = ?,
            limitPerUser = ?,
            sortOrder = ?,
            status = ?,
            updateTime = ?
        WHERE id = ? ::: DataSources: master
2025-07-01 14:33:34.544 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.SpikeGoodsMapper.updateSpikeGoods - ==> Parameters: 1(Long), 1(Integer), 19.9(BigDecimal), null, 48(Integer), null, null, 1(Integer), null, 2025-07-01T14:33:34.538234500(LocalDateTime), 1(Long)
2025-07-01 14:33:34.547 [http-nio-8080-exec-10] ERROR druid.sql.Statement - {conn-10001, pstmt-20012} execute error. UPDATE spikeGoods SET
            activityId = ?,
            bookId = ?,
            spikePrice = ?,
            originalPrice = ?,
            spikeStock = ?,
            soldCount = ?,
            limitPerUser = ?,
            sortOrder = ?,
            status = ?,
            updateTime = ?
        WHERE id = ?
java.sql.SQLIntegrityConstraintViolationException: Column 'originalPrice' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:118)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3446)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:639)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:158)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:483)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.MasterSlavePreparedStatement.execute(MasterSlavePreparedStatement.java:118)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy4/jdk.proxy4.$Proxy123.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy107.updateSpikeGoods(Unknown Source)
	at com.huang.store.service.SpikeService.updateSpikeGoods(SpikeService.java:509)
	at com.huang.store.service.SpikeService$$FastClassBySpringCGLIB$$6c437123.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.huang.store.service.SpikeService$$EnhancerBySpringCGLIB$$659fefa1.updateSpikeGoods(<generated>)
	at com.huang.store.controller.SpikeController.updateSpikeGoods(SpikeController.java:366)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:558)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2025-07-01 14:38:46.749 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 14:38:46.749 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:38:46.749 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 14:38:46.750 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 14:38:46.752 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 14:38:46.752 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 14:38:46.753 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:38:46.753 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 14:38:46.753 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 14:38:46.754 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 14:38:51.512 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 14:38:51.512 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:38:51.512 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 14:38:51.512 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 1(Long)
2025-07-01 14:38:51.514 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 14:38:54.762 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1 WHERE sg.activityId = ? ORDER BY sg.sortOrder ASC, sg.createTime DESC LIMIT ?, ?
2025-07-01 14:38:54.762 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:38:54.763 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1
        WHERE sg.activityId = ?
        ORDER BY sg.sortOrder ASC, sg.createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 14:38:54.763 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==> Parameters: 1(Long), 0(Integer), 10(Integer)
2025-07-01 14:38:54.769 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - <==      Total: 3
2025-07-01 14:38:54.769 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==>  Preparing: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ?
2025-07-01 14:38:54.769 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:38:54.770 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ? ::: DataSources: slave
2025-07-01 14:38:54.770 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==> Parameters: 1(Long)
2025-07-01 14:38:54.773 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - <==      Total: 1
2025-07-01 14:39:07.428 [http-nio-8080-exec-6] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=100
2025-07-01 14:39:07.429 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select b.*, COALESCE(sales_data.total_sales, 0) as sales from book b left join ( select od.bookId, sum(od.num) as total_sales from orderdetail od inner join bookorder bo on od.orderId = bo.orderId where bo.orderStatus in ('已发货', '已收货', '已评价') group by od.bookId ) sales_data on b.id = sales_data.bookId order by b.rank desc, b.id desc limit ?,?
2025-07-01 14:39:07.429 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:39:07.429 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select b.*,
               COALESCE(sales_data.total_sales, 0) as sales
        from book b
        left join (
            select od.bookId, sum(od.num) as total_sales
            from orderdetail od
            inner join bookorder bo on od.orderId = bo.orderId
            where bo.orderStatus in ('已发货', '已收货', '已评价')
            group by od.bookId
        ) sales_data on b.id = sales_data.bookId
        order by b.rank desc, b.id desc
        limit ?,? ::: DataSources: slave
2025-07-01 14:39:07.429 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 100(Integer)
2025-07-01 14:39:07.437 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-01 14:39:07.438 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:39:07.438 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:39:07.438 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:39:07.438 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 14:39:07.442 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:39:07.442 [http-nio-8080-exec-6] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-01 14:39:07.443 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:39:07.443 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:39:07.443 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:39:07.443 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 14:39:07.447 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:39:07.448 [http-nio-8080-exec-6] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-01 14:39:07.448 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:39:07.448 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:39:07.448 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:39:07.448 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 14:39:07.451 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:39:07.452 [http-nio-8080-exec-6] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-01 14:39:07.453 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:39:07.453 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:39:07.453 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:39:07.453 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 14:39:07.456 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:39:07.457 [http-nio-8080-exec-6] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-01 14:39:07.457 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 14:39:07.457 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:39:07.457 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 14:39:07.457 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 14:39:07.459 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 14:39:07.459 [http-nio-8080-exec-6] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-01 14:39:07.460 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-01 14:39:07.460 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:39:07.460 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-01 14:39:07.460 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-01 14:39:07.462 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-01 14:41:34.303 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.SpikeGoodsMapper.updateSpikeGoods - ==>  Preparing: UPDATE spikeGoods SET activityId = ?, bookId = ?, spikePrice = ?, originalPrice = ?, spikeStock = ?, soldCount = ?, limitPerUser = ?, sortOrder = ?, status = ?, updateTime = ? WHERE id = ?
2025-07-01 14:41:34.303 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:41:34.303 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: UPDATE spikeGoods SET
            activityId = ?,
            bookId = ?,
            spikePrice = ?,
            originalPrice = ?,
            spikeStock = ?,
            soldCount = ?,
            limitPerUser = ?,
            sortOrder = ?,
            status = ?,
            updateTime = ?
        WHERE id = ? ::: DataSources: master
2025-07-01 14:41:34.307 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.SpikeGoodsMapper.updateSpikeGoods - ==> Parameters: 1(Long), 1(Integer), 19.9(BigDecimal), null, 48(Integer), null, 3(Integer), 1(Integer), null, 2025-07-01T14:41:34.303208900(LocalDateTime), 1(Long)
2025-07-01 14:41:34.310 [http-nio-8080-exec-3] ERROR druid.sql.Statement - {conn-10001, pstmt-20014} execute error. UPDATE spikeGoods SET
            activityId = ?,
            bookId = ?,
            spikePrice = ?,
            originalPrice = ?,
            spikeStock = ?,
            soldCount = ?,
            limitPerUser = ?,
            sortOrder = ?,
            status = ?,
            updateTime = ?
        WHERE id = ?
java.sql.SQLIntegrityConstraintViolationException: Column 'originalPrice' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:118)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3446)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:639)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:158)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:483)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.MasterSlavePreparedStatement.execute(MasterSlavePreparedStatement.java:118)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy4/jdk.proxy4.$Proxy123.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy107.updateSpikeGoods(Unknown Source)
	at com.huang.store.service.SpikeService.updateSpikeGoods(SpikeService.java:509)
	at com.huang.store.service.SpikeService$$FastClassBySpringCGLIB$$6c437123.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.huang.store.service.SpikeService$$EnhancerBySpringCGLIB$$659fefa1.updateSpikeGoods(<generated>)
	at com.huang.store.controller.SpikeController.updateSpikeGoods(SpikeController.java:366)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:558)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2025-07-01 14:45:00.424 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-01 14:45:00.424 [Thread-7] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 14:45:00.426 [Thread-7] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-07-01 14:45:00.447 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-321959209] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 14:45:00.448 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-321959209] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 14:45:00.448 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-382778048] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 14:45:00.448 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-382778048] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 14:45:00.448 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-nioEventLoop-4-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/sun.nio.ch.WEPoll.wait(Native Method)
 java.base@17.0.8/sun.nio.ch.WEPollSelectorImpl.doSelect(WEPollSelectorImpl.java:111)
 java.base@17.0.8/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:129)
 java.base@17.0.8/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:146)
 app//io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:68)
 app//io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:879)
 app//io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:526)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 14:45:00.448 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 14:45:00.449 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 14:45:00.449 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 14:45:00.449 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 14:45:00.450 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-5] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 14:45:00.450 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-6] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 14:45:00.451 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-7] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 14:45:00.451 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-8] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 14:45:00.451 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-9] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 14:45:00.452 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-01 14:45:00.454 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-01 14:45:00.576 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-01 14:45:00.578 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-01 14:45:00.578 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-01 14:45:00.580 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-01 14:45:00.744 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 2716 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 14:45:00.744 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 14:45:00.744 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 14:45:00.944 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 14:45:00.944 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 14:45:00.948 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-07-01 14:45:01.009 [restartedMain] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[com.huang.store.mapper]' package. Please check your configuration.
2025-07-01 14:45:01.090 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 14:45:01.091 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 14:45:01.091 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 14:45:01.091 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 14:45:01.092 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 14:45:01.092 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 14:45:01.093 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 14:45:01.093 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 14:45:01.119 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 14:45:01.119 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 366 ms
2025-07-01 14:45:01.133 [restartedMain] ERROR org.apache.catalina.session.StandardManager - Exception loading sessions from persistent storage
java.lang.ClassNotFoundException: com.huang.store.entity.user.SecurityUser
	at org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedWebappClassLoader.loadClass(TomcatEmbeddedWebappClassLoader.java:72)
	at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1141)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:467)
	at org.apache.catalina.util.CustomObjectInputStream.resolveClass(CustomObjectInputStream.java:158)
	at java.base/java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:2045)
	at java.base/java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1909)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2235)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream$FieldValues.<init>(ObjectInputStream.java:2617)
	at java.base/java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2468)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2268)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream$FieldValues.<init>(ObjectInputStream.java:2617)
	at java.base/java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2468)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2268)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:514)
	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:472)
	at org.apache.catalina.session.StandardSession.doReadObject(StandardSession.java:1530)
	at org.apache.catalina.session.StandardSession.readObjectData(StandardSession.java:1000)
	at org.apache.catalina.session.StandardManager.doLoad(StandardManager.java:210)
	at org.apache.catalina.session.StandardManager.load(StandardManager.java:156)
	at org.apache.catalina.session.StandardManager.startInternal(StandardManager.java:346)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4931)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2025-07-01 14:45:01.232 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 14:45:01.317 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} inited
2025-07-01 14:45:01.338 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} inited
2025-07-01 14:45:01.379 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
2025-07-01 14:45:01.379 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closing ...
2025-07-01 14:45:01.379 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed
2025-07-01 14:45:01.380 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closing ...
2025-07-01 14:45:01.380 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed
2025-07-01 14:45:01.381 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 14:45:01.387 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 14:45:01.414 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 24 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$6a756fa3.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$6a756fa3$$FastClassBySpringCGLIB$$24869f99.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$6a756fa3.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:78)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:144)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:136)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:126)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 46 common frames omitted
2025-07-01 14:45:03.342 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 2716 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 14:45:03.342 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 14:45:03.342 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 14:45:03.600 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 14:45:03.600 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 14:45:03.613 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2025-07-01 14:45:03.668 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$70206144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 14:45:03.675 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 14:45:03.767 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 14:45:03.767 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 14:45:03.767 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 14:45:03.767 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 14:45:03.768 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 14:45:03.769 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 14:45:03.770 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 14:45:03.770 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 14:45:03.796 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 14:45:03.796 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 451 ms
2025-07-01 14:45:03.799 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 14:45:03.921 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} inited
2025-07-01 14:45:03.943 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} inited
2025-07-01 14:45:04.152 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 14:45:04.152 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 14:45:04.360 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 14:45:04.359 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-01 14:45:04.377 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 13708 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 14:45:04.378 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 14:45:04.379 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 14:45:04.485 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@184b7490, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2b2c89f1, org.springframework.security.web.context.SecurityContextPersistenceFilter@9ed8cc9, org.springframework.security.web.header.HeaderWriterFilter@4b1f6db2, org.springframework.web.filter.CorsFilter@407b9217, org.springframework.security.web.authentication.logout.LogoutFilter@f89a235, com.huang.store.security.JwtAuthenticationTokenFilter@5795b8f1, com.huang.store.security.CustomAuthenticationFilter@3b7c4288, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@50960ce1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@60c2c04a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5080431d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@34bb08fe, org.springframework.security.web.session.SessionManagementFilter@72b91c9d, org.springframework.security.web.access.ExceptionTranslationFilter@145fb325, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@524ecff]
2025-07-01 14:45:04.510 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-01 14:45:04.511 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-01 14:45:04.722 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 14:45:04.744 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 14:45:04.747 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 14:45:04.751 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 1.458 seconds (JVM running for 1232.755)
2025-07-01 14:45:04.952 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 14:45:04.953 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 14:45:04.975 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2025-07-01 14:45:05.164 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$2dc1cc13] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 14:45:05.177 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 14:45:05.580 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 14:45:05.581 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 14:45:05.581 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 14:45:05.581 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 14:45:05.586 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 14:45:05.593 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 14:45:05.596 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 14:45:05.597 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 14:45:05.651 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 14:45:05.651 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1140 ms
2025-07-01 14:45:05.655 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 14:45:06.415 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-01 14:45:06.440 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-01 14:45:06.730 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 14:45:06.731 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 14:45:07.101 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 14:45:07.212 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4e0aadbf, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5c7bba5e, org.springframework.security.web.context.SecurityContextPersistenceFilter@44cc2e28, org.springframework.security.web.header.HeaderWriterFilter@4894664f, org.springframework.web.filter.CorsFilter@7abef819, org.springframework.security.web.authentication.logout.LogoutFilter@74818527, com.huang.store.security.JwtAuthenticationTokenFilter@2624f04d, com.huang.store.security.CustomAuthenticationFilter@bc32dc4, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3183bbe1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3587d649, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7452f322, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6ef94c6b, org.springframework.security.web.session.SessionManagementFilter@377f427d, org.springframework.security.web.access.ExceptionTranslationFilter@55044775, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1d19d01c]
2025-07-01 14:45:07.478 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2025-07-01 14:45:07.492 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 14:45:07.496 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8080 is already in use
2025-07-01 14:45:07.511 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-01 14:45:07.515 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-01 14:45:07.515 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-01 14:45:07.516 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-01 14:45:07.518 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-01 14:45:07.518 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 14:45:07.526 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-01 14:45:07.527 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-01 14:45:07.531 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 14:45:07.547 [restartedMain] ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2025-07-01 14:45:21.160 [http-nio-8080-exec-1] INFO  o.a.c.c.ContainerBase.[Tomcat-1].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-01 14:45:21.161 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-01 14:45:21.163 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-07-01 14:45:21.172 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 14:45:21.172 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:45:21.172 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 14:45:21.173 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 2545059634@qq.com(String)
2025-07-01 14:45:21.178 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 14:45:21.194 [http-nio-8080-exec-1] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:2545059634@qq.com    数据库密码:$2a$10$w8zNNUSDq3MCiLDDuAhYXedA0QGva1Z4.6UxO61Njhsrlo8voc01G
2025-07-01 14:45:21.216 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 14:45:21.216 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:45:21.216 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 14:45:21.217 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 14:45:21.219 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 14:45:21.221 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 14:45:21.221 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:45:21.221 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 14:45:21.222 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 14:45:21.224 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 14:45:23.064 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1 WHERE sg.activityId = ? ORDER BY sg.sortOrder ASC, sg.createTime DESC LIMIT ?, ?
2025-07-01 14:45:23.065 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:45:23.065 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1
        WHERE sg.activityId = ?
        ORDER BY sg.sortOrder ASC, sg.createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 14:45:23.069 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==> Parameters: 1(Long), 0(Integer), 10(Integer)
2025-07-01 14:45:23.073 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - <==      Total: 3
2025-07-01 14:45:23.074 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==>  Preparing: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ?
2025-07-01 14:45:23.074 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:45:23.074 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ? ::: DataSources: slave
2025-07-01 14:45:23.075 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==> Parameters: 1(Long)
2025-07-01 14:45:23.076 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - <==      Total: 1
2025-07-01 14:45:27.184 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.id = ?
2025-07-01 14:45:27.185 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:45:27.185 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.id = ? ::: DataSources: slave
2025-07-01 14:45:27.186 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==> Parameters: 1(Long)
2025-07-01 14:45:27.188 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - <==      Total: 1
2025-07-01 14:45:32.423 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.id = ?
2025-07-01 14:45:32.423 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:45:32.423 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.id = ? ::: DataSources: slave
2025-07-01 14:45:32.423 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==> Parameters: 1(Long)
2025-07-01 14:45:32.425 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - <==      Total: 1
2025-07-01 14:45:34.673 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.SpikeGoodsMapper.updateSpikeGoods - ==>  Preparing: UPDATE spikeGoods SET activityId = ?, bookId = ?, spikePrice = ?, originalPrice = ?, spikeStock = ?, soldCount = ?, limitPerUser = ?, sortOrder = ?, status = ?, updateTime = ? WHERE id = ?
2025-07-01 14:45:34.673 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:45:34.673 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: UPDATE spikeGoods SET
            activityId = ?,
            bookId = ?,
            spikePrice = ?,
            originalPrice = ?,
            spikeStock = ?,
            soldCount = ?,
            limitPerUser = ?,
            sortOrder = ?,
            status = ?,
            updateTime = ?
        WHERE id = ? ::: DataSources: master
2025-07-01 14:45:34.674 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.SpikeGoodsMapper.updateSpikeGoods - ==> Parameters: 1(Long), 1(Integer), 19.9(BigDecimal), 45(BigDecimal), 48(Integer), null, 3(Integer), 1(Integer), null, 2025-07-01T14:45:34.673451900(LocalDateTime), 1(Long)
2025-07-01 14:45:34.678 [http-nio-8080-exec-5] ERROR druid.sql.Statement - {conn-410001, pstmt-420001} execute error. UPDATE spikeGoods SET
            activityId = ?,
            bookId = ?,
            spikePrice = ?,
            originalPrice = ?,
            spikeStock = ?,
            soldCount = ?,
            limitPerUser = ?,
            sortOrder = ?,
            status = ?,
            updateTime = ?
        WHERE id = ?
java.sql.SQLIntegrityConstraintViolationException: Column 'status' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:118)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3446)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:639)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:158)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:483)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.MasterSlavePreparedStatement.execute(MasterSlavePreparedStatement.java:118)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy4/jdk.proxy4.$Proxy123.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy6/jdk.proxy6.$Proxy173.updateSpikeGoods(Unknown Source)
	at com.huang.store.service.SpikeService.updateSpikeGoods(SpikeService.java:509)
	at com.huang.store.service.SpikeService$$FastClassBySpringCGLIB$$6c437123.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.huang.store.service.SpikeService$$EnhancerBySpringCGLIB$$659fefa1.updateSpikeGoods(<generated>)
	at com.huang.store.controller.SpikeController.updateSpikeGoods(SpikeController.java:366)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:558)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2025-07-01 14:45:48.747 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} closing ...
2025-07-01 14:45:48.747 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} closed
2025-07-01 14:45:48.748 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} closing ...
2025-07-01 14:45:48.748 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} closed
2025-07-01 14:45:52.126 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-01 14:45:52.137 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 24420 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 14:45:52.137 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 14:45:52.137 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 14:45:52.268 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-01 14:45:52.268 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-01 14:45:52.750 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 14:45:52.751 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 14:45:52.767 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2025-07-01 14:45:52.925 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$e4eab209] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 14:45:52.936 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 14:45:53.230 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 14:45:53.230 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 14:45:53.230 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 14:45:53.230 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 14:45:53.233 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 14:45:53.238 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 14:45:53.239 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 14:45:53.239 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 14:45:53.281 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 14:45:53.281 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1012 ms
2025-07-01 14:45:53.284 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 14:45:53.831 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-01 14:45:53.853 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-01 14:45:54.096 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 14:45:54.096 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 14:45:54.442 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 14:45:54.562 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@33a81179, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@77f5a22d, org.springframework.security.web.context.SecurityContextPersistenceFilter@7f187f18, org.springframework.security.web.header.HeaderWriterFilter@1b5d40c, org.springframework.web.filter.CorsFilter@7f5bb975, org.springframework.security.web.authentication.logout.LogoutFilter@6d150dae, com.huang.store.security.JwtAuthenticationTokenFilter@7d7db06e, com.huang.store.security.CustomAuthenticationFilter@7d0242c, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4466785c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4ff9192a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@61b5903e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3e6b9657, org.springframework.security.web.session.SessionManagementFilter@215dcd1c, org.springframework.security.web.access.ExceptionTranslationFilter@3bdb80e9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2e2d948a]
2025-07-01 14:45:54.773 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 14:45:54.793 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 14:45:54.808 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 14:45:54.816 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 3.075 seconds (JVM running for 3.6)
2025-07-01 14:45:58.502 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-01 14:45:58.502 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-01 14:45:58.503 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-01 14:45:58.604 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 14:45:58.617 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:45:58.618 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 14:45:58.643 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 14:45:58.658 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 14:45:58.664 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 14:45:58.664 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:45:58.664 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 14:45:58.665 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 14:45:58.668 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 14:46:00.497 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1 WHERE sg.activityId = ? ORDER BY sg.sortOrder ASC, sg.createTime DESC LIMIT ?, ?
2025-07-01 14:46:00.497 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:46:00.497 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1
        WHERE sg.activityId = ?
        ORDER BY sg.sortOrder ASC, sg.createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 14:46:00.536 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==> Parameters: 1(Long), 0(Integer), 10(Integer)
2025-07-01 14:46:00.542 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - <==      Total: 3
2025-07-01 14:46:00.544 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==>  Preparing: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ?
2025-07-01 14:46:00.544 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:46:00.544 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ? ::: DataSources: slave
2025-07-01 14:46:00.545 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==> Parameters: 1(Long)
2025-07-01 14:46:00.546 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - <==      Total: 1
2025-07-01 14:46:07.569 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.id = ?
2025-07-01 14:46:07.569 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:46:07.569 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.id = ? ::: DataSources: slave
2025-07-01 14:46:07.571 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==> Parameters: 1(Long)
2025-07-01 14:46:07.574 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - <==      Total: 1
2025-07-01 14:46:11.213 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.SpikeGoodsMapper.updateSpikeGoods - ==>  Preparing: UPDATE spikeGoods SET activityId = ?, bookId = ?, spikePrice = ?, originalPrice = ?, spikeStock = ?, soldCount = ?, limitPerUser = ?, sortOrder = ?, status = ?, updateTime = ? WHERE id = ?
2025-07-01 14:46:11.215 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:46:11.215 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: UPDATE spikeGoods SET
            activityId = ?,
            bookId = ?,
            spikePrice = ?,
            originalPrice = ?,
            spikeStock = ?,
            soldCount = ?,
            limitPerUser = ?,
            sortOrder = ?,
            status = ?,
            updateTime = ?
        WHERE id = ? ::: DataSources: master
2025-07-01 14:46:11.229 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.SpikeGoodsMapper.updateSpikeGoods - ==> Parameters: 1(Long), 1(Integer), 19.9(BigDecimal), 45(BigDecimal), 48(Integer), null, 3(Integer), 1(Integer), null, 2025-07-01T14:46:11.210168600(LocalDateTime), 1(Long)
2025-07-01 14:46:11.256 [http-nio-8080-exec-6] ERROR druid.sql.Statement - {conn-10001, pstmt-20001} execute error. UPDATE spikeGoods SET
            activityId = ?,
            bookId = ?,
            spikePrice = ?,
            originalPrice = ?,
            spikeStock = ?,
            soldCount = ?,
            limitPerUser = ?,
            sortOrder = ?,
            status = ?,
            updateTime = ?
        WHERE id = ?
java.sql.SQLIntegrityConstraintViolationException: Column 'status' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:118)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3446)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:639)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:158)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:483)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.MasterSlavePreparedStatement.execute(MasterSlavePreparedStatement.java:118)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy4/jdk.proxy4.$Proxy126.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy107.updateSpikeGoods(Unknown Source)
	at com.huang.store.service.SpikeService.updateSpikeGoods(SpikeService.java:509)
	at com.huang.store.service.SpikeService$$FastClassBySpringCGLIB$$6c437123.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.huang.store.service.SpikeService$$EnhancerBySpringCGLIB$$9fdf5ff7.updateSpikeGoods(<generated>)
	at com.huang.store.controller.SpikeController.updateSpikeGoods(SpikeController.java:366)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:558)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2025-07-01 14:49:00.486 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 14:49:00.487 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:49:00.487 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 14:49:00.497 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 14:49:00.500 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 14:49:00.501 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 14:49:00.501 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:49:00.501 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 14:49:00.501 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 14:49:00.503 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 14:50:55.510 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 14:50:55.510 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:50:55.510 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 14:50:55.512 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 14:50:55.516 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 14:50:55.516 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 14:50:55.516 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:50:55.516 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 14:50:55.516 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 14:50:55.518 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 14:50:56.864 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1 WHERE sg.activityId = ? ORDER BY sg.sortOrder ASC, sg.createTime DESC LIMIT ?, ?
2025-07-01 14:50:56.864 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:50:56.864 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1
        WHERE sg.activityId = ?
        ORDER BY sg.sortOrder ASC, sg.createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 14:50:56.865 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==> Parameters: 1(Long), 0(Integer), 10(Integer)
2025-07-01 14:50:56.872 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - <==      Total: 3
2025-07-01 14:50:56.873 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==>  Preparing: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ?
2025-07-01 14:50:56.874 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:50:56.874 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ? ::: DataSources: slave
2025-07-01 14:50:56.874 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==> Parameters: 1(Long)
2025-07-01 14:50:56.877 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - <==      Total: 1
2025-07-01 14:50:59.786 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.id = ?
2025-07-01 14:50:59.788 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:50:59.788 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.id = ? ::: DataSources: slave
2025-07-01 14:50:59.789 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==> Parameters: 1(Long)
2025-07-01 14:50:59.793 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - <==      Total: 1
2025-07-01 14:51:01.998 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.SpikeGoodsMapper.updateSpikeGoods - ==>  Preparing: UPDATE spikeGoods SET activityId = ?, bookId = ?, spikePrice = ?, originalPrice = ?, spikeStock = ?, soldCount = ?, limitPerUser = ?, sortOrder = ?, status = ?, updateTime = ? WHERE id = ?
2025-07-01 14:51:01.998 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:51:01.998 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: UPDATE spikeGoods SET
            activityId = ?,
            bookId = ?,
            spikePrice = ?,
            originalPrice = ?,
            spikeStock = ?,
            soldCount = ?,
            limitPerUser = ?,
            sortOrder = ?,
            status = ?,
            updateTime = ?
        WHERE id = ? ::: DataSources: master
2025-07-01 14:51:02.003 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.SpikeGoodsMapper.updateSpikeGoods - ==> Parameters: 1(Long), 1(Integer), 19.9(BigDecimal), 45(BigDecimal), 48(Integer), 3(Integer), 3(Integer), 1(Integer), 1(Integer), 2025-07-01T14:51:01.998763300(LocalDateTime), 1(Long)
2025-07-01 14:51:02.008 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.SpikeGoodsMapper.updateSpikeGoods - <==    Updates: 1
2025-07-01 14:51:02.009 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsById - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1 WHERE sg.id = ?
2025-07-01 14:51:02.010 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:51:02.010 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1
        WHERE sg.id = ? ::: DataSources: master
2025-07-01 14:51:02.014 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsById - ==> Parameters: 1(Long)
2025-07-01 14:51:02.018 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsById - <==      Total: 1
2025-07-01 14:51:02.069 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1 WHERE sg.activityId = ? ORDER BY sg.sortOrder ASC, sg.createTime DESC LIMIT ?, ?
2025-07-01 14:51:02.070 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:51:02.070 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1
        WHERE sg.activityId = ?
        ORDER BY sg.sortOrder ASC, sg.createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 14:51:02.071 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==> Parameters: 1(Long), 0(Integer), 10(Integer)
2025-07-01 14:51:02.080 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - <==      Total: 3
2025-07-01 14:51:02.083 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==>  Preparing: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ?
2025-07-01 14:51:02.083 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:51:02.083 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ? ::: DataSources: slave
2025-07-01 14:51:02.084 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==> Parameters: 1(Long)
2025-07-01 14:51:02.086 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - <==      Total: 1
2025-07-01 14:51:08.331 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.id = ?
2025-07-01 14:51:08.332 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:51:08.332 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.id = ? ::: DataSources: slave
2025-07-01 14:51:08.332 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==> Parameters: 2(Long)
2025-07-01 14:51:08.336 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - <==      Total: 1
2025-07-01 14:51:10.847 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.SpikeGoodsMapper.updateSpikeGoods - ==>  Preparing: UPDATE spikeGoods SET activityId = ?, bookId = ?, spikePrice = ?, originalPrice = ?, spikeStock = ?, soldCount = ?, limitPerUser = ?, sortOrder = ?, status = ?, updateTime = ? WHERE id = ?
2025-07-01 14:51:10.847 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:51:10.847 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: UPDATE spikeGoods SET
            activityId = ?,
            bookId = ?,
            spikePrice = ?,
            originalPrice = ?,
            spikeStock = ?,
            soldCount = ?,
            limitPerUser = ?,
            sortOrder = ?,
            status = ?,
            updateTime = ?
        WHERE id = ? ::: DataSources: master
2025-07-01 14:51:10.852 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.SpikeGoodsMapper.updateSpikeGoods - ==> Parameters: 1(Long), 2(Integer), 49.9(BigDecimal), 98(BigDecimal), 29(Integer), 1(Integer), 5(Integer), 2(Integer), 1(Integer), 2025-07-01T14:51:10.846644200(LocalDateTime), 2(Long)
2025-07-01 14:51:10.855 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.SpikeGoodsMapper.updateSpikeGoods - <==    Updates: 1
2025-07-01 14:51:10.855 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsById - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1 WHERE sg.id = ?
2025-07-01 14:51:10.855 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:51:10.855 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1
        WHERE sg.id = ? ::: DataSources: master
2025-07-01 14:51:10.855 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsById - ==> Parameters: 2(Long)
2025-07-01 14:51:10.860 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsById - <==      Total: 1
2025-07-01 14:51:10.892 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1 WHERE sg.activityId = ? ORDER BY sg.sortOrder ASC, sg.createTime DESC LIMIT ?, ?
2025-07-01 14:51:10.892 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:51:10.892 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1
        WHERE sg.activityId = ?
        ORDER BY sg.sortOrder ASC, sg.createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 14:51:10.893 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==> Parameters: 1(Long), 0(Integer), 10(Integer)
2025-07-01 14:51:10.912 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - <==      Total: 3
2025-07-01 14:51:10.913 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==>  Preparing: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ?
2025-07-01 14:51:10.914 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:51:10.914 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ? ::: DataSources: slave
2025-07-01 14:51:10.915 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==> Parameters: 1(Long)
2025-07-01 14:51:10.918 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - <==      Total: 1
2025-07-01 14:51:12.085 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.id = ?
2025-07-01 14:51:12.085 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:51:12.085 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.id = ? ::: DataSources: slave
2025-07-01 14:51:12.086 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==> Parameters: 3(Long)
2025-07-01 14:51:12.089 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - <==      Total: 1
2025-07-01 14:51:14.857 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.SpikeGoodsMapper.updateSpikeGoods - ==>  Preparing: UPDATE spikeGoods SET activityId = ?, bookId = ?, spikePrice = ?, originalPrice = ?, spikeStock = ?, soldCount = ?, limitPerUser = ?, sortOrder = ?, status = ?, updateTime = ? WHERE id = ?
2025-07-01 14:51:14.857 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:51:14.858 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: UPDATE spikeGoods SET
            activityId = ?,
            bookId = ?,
            spikePrice = ?,
            originalPrice = ?,
            spikeStock = ?,
            soldCount = ?,
            limitPerUser = ?,
            sortOrder = ?,
            status = ?,
            updateTime = ?
        WHERE id = ? ::: DataSources: master
2025-07-01 14:51:14.859 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.SpikeGoodsMapper.updateSpikeGoods - ==> Parameters: 1(Long), 3(Integer), 69.9(BigDecimal), 128(BigDecimal), 19(Integer), 1(Integer), 5(Integer), 3(Integer), 1(Integer), 2025-07-01T14:51:14.857886400(LocalDateTime), 3(Long)
2025-07-01 14:51:14.862 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.SpikeGoodsMapper.updateSpikeGoods - <==    Updates: 1
2025-07-01 14:51:14.863 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsById - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1 WHERE sg.id = ?
2025-07-01 14:51:14.863 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:51:14.863 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1
        WHERE sg.id = ? ::: DataSources: master
2025-07-01 14:51:14.863 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsById - ==> Parameters: 3(Long)
2025-07-01 14:51:14.866 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsById - <==      Total: 1
2025-07-01 14:51:14.902 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1 WHERE sg.activityId = ? ORDER BY sg.sortOrder ASC, sg.createTime DESC LIMIT ?, ?
2025-07-01 14:51:14.903 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:51:14.903 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1
        WHERE sg.activityId = ?
        ORDER BY sg.sortOrder ASC, sg.createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 14:51:14.903 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==> Parameters: 1(Long), 0(Integer), 10(Integer)
2025-07-01 14:51:14.913 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - <==      Total: 3
2025-07-01 14:51:14.914 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==>  Preparing: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ?
2025-07-01 14:51:14.914 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:51:14.914 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ? ::: DataSources: slave
2025-07-01 14:51:14.914 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==> Parameters: 1(Long)
2025-07-01 14:51:14.917 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - <==      Total: 1
2025-07-01 14:51:29.449 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 14:51:29.449 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:51:29.449 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 14:51:29.452 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 56464ff@456.com(String)
2025-07-01 14:51:29.459 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 14:51:29.476 [http-nio-8080-exec-8] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:56464ff@456.com    数据库密码:$2a$10$7OBMT05X3FsorQiaTl2aQuxGJpdi4w1dVWZdG8Oy9K7E61SWT9WAy
2025-07-01 14:51:29.671 [http-nio-8080-exec-8] WARN  org.apache.catalina.util.SessionIdGeneratorBase - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [161] milliseconds.
2025-07-01 14:51:29.687 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.bookId = ? AND sg.status = 1 ORDER BY sg.createTime DESC
2025-07-01 14:51:29.687 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:51:29.687 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.bookId = ?
        AND sg.status = 1
        ORDER BY sg.createTime DESC ::: DataSources: slave
2025-07-01 14:51:29.691 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==> Parameters: 2(Integer)
2025-07-01 14:51:29.695 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - <==      Total: 2
2025-07-01 14:51:29.696 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 14:51:29.696 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:51:29.696 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 14:51:29.698 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 1(Long)
2025-07-01 14:51:29.700 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 14:51:29.701 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.id = ?
2025-07-01 14:51:29.701 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:51:29.701 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.id = ? ::: DataSources: slave
2025-07-01 14:51:29.702 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==> Parameters: 2(Long)
2025-07-01 14:51:29.707 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - <==      Total: 1
2025-07-01 14:51:29.708 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeOrderMapper.getUserPurchaseCount - ==>  Preparing: SELECT COALESCE(SUM(quantity), 0) FROM spikeOrder WHERE userAccount = ? AND spikeGoodsId = ? AND status IN (0, 1)
2025-07-01 14:51:29.708 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:51:29.708 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT COALESCE(SUM(quantity), 0)
        FROM spikeOrder 
        WHERE userAccount = ? 
        AND spikeGoodsId = ?
        AND status IN (0, 1) ::: DataSources: slave
2025-07-01 14:51:29.717 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeOrderMapper.getUserPurchaseCount - ==> Parameters: 56464ff@456.com(String), 2(Long)
2025-07-01 14:51:29.719 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeOrderMapper.getUserPurchaseCount - <==      Total: 1
2025-07-01 14:51:30.535 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SpikeGoodsMapper.reduceStock - ==>  Preparing: UPDATE spikeGoods SET spikeStock = spikeStock - ?, soldCount = soldCount + ?, updateTime = NOW() WHERE id = ? AND spikeStock >= ?
2025-07-01 14:51:30.535 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:51:30.535 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: UPDATE spikeGoods
        SET spikeStock = spikeStock - ?,
            soldCount = soldCount + ?,
            updateTime = NOW()
        WHERE id = ?
        AND spikeStock >= ? ::: DataSources: master
2025-07-01 14:51:30.537 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SpikeGoodsMapper.reduceStock - ==> Parameters: 1(Integer), 1(Integer), 2(Long), 1(Integer)
2025-07-01 14:51:30.540 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SpikeGoodsMapper.reduceStock - <==    Updates: 1
2025-07-01 14:51:30.541 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - ==>  Preparing: update book set stock=stock-? where id=? and stock>=?
2025-07-01 14:51:30.541 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:51:30.541 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: update book
            set stock=stock-?
                where id=? and stock>=? ::: DataSources: master
2025-07-01 14:51:30.542 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - ==> Parameters: 1(Integer), 2(Integer), 1(Integer)
2025-07-01 14:51:30.544 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - <==    Updates: 1
2025-07-01 14:51:30.544 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.SpikeGoodsMapper.updateSoldCount - ==>  Preparing: UPDATE spikeGoods SET soldCount = soldCount + ?, updateTime = NOW() WHERE id = ?
2025-07-01 14:51:30.544 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:51:30.544 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: UPDATE spikeGoods 
        SET soldCount = soldCount + ?,
            updateTime = NOW()
        WHERE id = ? ::: DataSources: master
2025-07-01 14:51:30.545 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.SpikeGoodsMapper.updateSoldCount - ==> Parameters: 1(Integer), 2(Long)
2025-07-01 14:51:30.547 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.SpikeGoodsMapper.updateSoldCount - <==    Updates: 1
2025-07-01 14:51:30.550 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.SpikeOrderMapper.insertSpikeOrder - ==>  Preparing: INSERT INTO spikeOrder ( orderId, spikeGoodsId, userAccount, quantity, spikePrice, totalAmount, status, payTime, cancelTime, expireTime, createTime, updateTime ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
2025-07-01 14:51:30.551 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:51:30.551 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: INSERT INTO spikeOrder (
            orderId, spikeGoodsId, userAccount, quantity, spikePrice,
            totalAmount, status, payTime, cancelTime, expireTime,
            createTime, updateTime
        ) VALUES (
            ?, ?, ?, ?, ?,
            ?, ?, ?, ?, ?,
            ?, ?
        ) ::: DataSources: master
2025-07-01 14:51:30.701 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.SpikeOrderMapper.insertSpikeOrder - ==> Parameters: SPIKE1751352690548231(String), 2(Long), 56464ff@456.com(String), 1(Integer), 49.90(BigDecimal), 49.90(BigDecimal), 0(Integer), null, null, 2025-07-01T15:21:30.550727200(LocalDateTime), 2025-07-01T14:51:30.550727200(LocalDateTime), 2025-07-01T14:51:30.550727200(LocalDateTime)
2025-07-01 14:51:30.703 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.SpikeOrderMapper.insertSpikeOrder - <==    Updates: 1
2025-07-01 14:51:30.715 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - ==>  Preparing: INSERT INTO spikeRecord ( spikeGoodsId, userAccount, spikeTime, result, failReason, ipAddress, userAgent ) VALUES ( ?, ?, ?, ?, ?, ?, ? )
2025-07-01 14:51:30.715 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:51:30.715 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: INSERT INTO spikeRecord (
            spikeGoodsId, userAccount, spikeTime, result, 
            failReason, ipAddress, userAgent
        ) VALUES (
            ?, ?, ?, ?,
            ?, ?, ?
        ) ::: DataSources: master
2025-07-01 14:51:30.721 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - ==> Parameters: 2(Long), 56464ff@456.com(String), 2025-07-01T14:51:30.713736(LocalDateTime), 1(Integer), null, 0:0:0:0:0:0:0:1(String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0(String)
2025-07-01 14:51:30.724 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - <==    Updates: 1
2025-07-01 14:51:30.818 [http-nio-8080-exec-7] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 14:51:30.818 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:51:30.818 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 14:51:30.819 [http-nio-8080-exec-7] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 14:51:30.820 [http-nio-8080-exec-7] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 3
2025-07-01 14:51:30.821 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 14:51:30.821 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:51:30.821 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 14:51:30.824 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 2(Long)
2025-07-01 14:51:30.828 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 14:51:30.831 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 14:51:30.831 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:51:30.831 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 14:51:30.831 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 1(Long)
2025-07-01 14:51:30.833 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 3
2025-07-01 14:51:30.834 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 14:51:30.834 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:51:30.834 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 14:51:30.834 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 3(Long)
2025-07-01 14:51:30.838 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 14:51:34.890 [http-nio-8080-exec-9] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 14:51:34.890 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:51:34.890 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 14:51:34.890 [http-nio-8080-exec-9] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 14:51:34.896 [http-nio-8080-exec-9] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 3
2025-07-01 14:51:34.897 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 14:51:34.897 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:51:34.897 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 14:51:34.897 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 2(Long)
2025-07-01 14:51:34.901 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 14:51:34.902 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 14:51:34.902 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:51:34.902 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 14:51:34.903 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 1(Long)
2025-07-01 14:51:34.908 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 3
2025-07-01 14:51:34.908 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 14:51:34.908 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:51:34.908 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 14:51:34.908 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 3(Long)
2025-07-01 14:51:34.911 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 14:52:21.709 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.bookId = ? AND sg.status = 1 ORDER BY sg.createTime DESC
2025-07-01 14:52:21.710 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:52:21.710 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.bookId = ?
        AND sg.status = 1
        ORDER BY sg.createTime DESC ::: DataSources: slave
2025-07-01 14:52:21.711 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==> Parameters: 3(Integer)
2025-07-01 14:52:21.715 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - <==      Total: 1
2025-07-01 14:52:21.715 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 14:52:21.715 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:52:21.715 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 14:52:21.715 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 1(Long)
2025-07-01 14:52:21.717 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 14:52:21.719 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.id = ?
2025-07-01 14:52:21.719 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:52:21.719 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.id = ? ::: DataSources: slave
2025-07-01 14:52:21.719 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==> Parameters: 3(Long)
2025-07-01 14:52:21.724 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - <==      Total: 1
2025-07-01 14:52:21.725 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeOrderMapper.getUserPurchaseCount - ==>  Preparing: SELECT COALESCE(SUM(quantity), 0) FROM spikeOrder WHERE userAccount = ? AND spikeGoodsId = ? AND status IN (0, 1)
2025-07-01 14:52:21.725 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:52:21.725 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT COALESCE(SUM(quantity), 0)
        FROM spikeOrder 
        WHERE userAccount = ? 
        AND spikeGoodsId = ?
        AND status IN (0, 1) ::: DataSources: slave
2025-07-01 14:52:21.725 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeOrderMapper.getUserPurchaseCount - ==> Parameters: 56464ff@456.com(String), 3(Long)
2025-07-01 14:52:21.742 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeOrderMapper.getUserPurchaseCount - <==      Total: 1
2025-07-01 14:52:21.753 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SpikeGoodsMapper.reduceStock - ==>  Preparing: UPDATE spikeGoods SET spikeStock = spikeStock - ?, soldCount = soldCount + ?, updateTime = NOW() WHERE id = ? AND spikeStock >= ?
2025-07-01 14:52:21.753 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:52:21.753 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: UPDATE spikeGoods
        SET spikeStock = spikeStock - ?,
            soldCount = soldCount + ?,
            updateTime = NOW()
        WHERE id = ?
        AND spikeStock >= ? ::: DataSources: master
2025-07-01 14:52:21.756 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SpikeGoodsMapper.reduceStock - ==> Parameters: 1(Integer), 1(Integer), 3(Long), 1(Integer)
2025-07-01 14:52:21.760 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SpikeGoodsMapper.reduceStock - <==    Updates: 1
2025-07-01 14:52:21.761 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - ==>  Preparing: update book set stock=stock-? where id=? and stock>=?
2025-07-01 14:52:21.761 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:52:21.761 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: update book
            set stock=stock-?
                where id=? and stock>=? ::: DataSources: master
2025-07-01 14:52:21.761 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - ==> Parameters: 1(Integer), 3(Integer), 1(Integer)
2025-07-01 14:52:21.765 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - <==    Updates: 1
2025-07-01 14:52:21.765 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.SpikeGoodsMapper.updateSoldCount - ==>  Preparing: UPDATE spikeGoods SET soldCount = soldCount + ?, updateTime = NOW() WHERE id = ?
2025-07-01 14:52:21.765 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:52:21.765 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: UPDATE spikeGoods 
        SET soldCount = soldCount + ?,
            updateTime = NOW()
        WHERE id = ? ::: DataSources: master
2025-07-01 14:52:21.766 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.SpikeGoodsMapper.updateSoldCount - ==> Parameters: 1(Integer), 3(Long)
2025-07-01 14:52:21.770 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.SpikeGoodsMapper.updateSoldCount - <==    Updates: 1
2025-07-01 14:52:21.770 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.SpikeOrderMapper.insertSpikeOrder - ==>  Preparing: INSERT INTO spikeOrder ( orderId, spikeGoodsId, userAccount, quantity, spikePrice, totalAmount, status, payTime, cancelTime, expireTime, createTime, updateTime ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
2025-07-01 14:52:21.770 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:52:21.770 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: INSERT INTO spikeOrder (
            orderId, spikeGoodsId, userAccount, quantity, spikePrice,
            totalAmount, status, payTime, cancelTime, expireTime,
            createTime, updateTime
        ) VALUES (
            ?, ?, ?, ?, ?,
            ?, ?, ?, ?, ?,
            ?, ?
        ) ::: DataSources: master
2025-07-01 14:52:21.771 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.SpikeOrderMapper.insertSpikeOrder - ==> Parameters: SPIKE1751352741770684(String), 3(Long), 56464ff@456.com(String), 1(Integer), 69.90(BigDecimal), 69.90(BigDecimal), 0(Integer), null, null, 2025-07-01T15:22:21.770748400(LocalDateTime), 2025-07-01T14:52:21.770748400(LocalDateTime), 2025-07-01T14:52:21.770748400(LocalDateTime)
2025-07-01 14:52:21.776 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.SpikeOrderMapper.insertSpikeOrder - <==    Updates: 1
2025-07-01 14:52:21.782 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - ==>  Preparing: INSERT INTO spikeRecord ( spikeGoodsId, userAccount, spikeTime, result, failReason, ipAddress, userAgent ) VALUES ( ?, ?, ?, ?, ?, ?, ? )
2025-07-01 14:52:21.782 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:52:21.783 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: INSERT INTO spikeRecord (
            spikeGoodsId, userAccount, spikeTime, result, 
            failReason, ipAddress, userAgent
        ) VALUES (
            ?, ?, ?, ?,
            ?, ?, ?
        ) ::: DataSources: master
2025-07-01 14:52:21.783 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - ==> Parameters: 3(Long), 56464ff@456.com(String), 2025-07-01T14:52:21.782428700(LocalDateTime), 1(Integer), null, 0:0:0:0:0:0:0:1(String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0(String)
2025-07-01 14:52:21.785 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - <==    Updates: 1
2025-07-01 14:52:21.819 [http-nio-8080-exec-1] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 14:52:21.819 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:52:21.819 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 14:52:21.819 [http-nio-8080-exec-1] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 14:52:21.821 [http-nio-8080-exec-1] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 3
2025-07-01 14:52:21.822 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 14:52:21.822 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:52:21.822 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 14:52:21.823 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 2(Long)
2025-07-01 14:52:21.826 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 14:52:21.826 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 14:52:21.826 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:52:21.826 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 14:52:21.826 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 1(Long)
2025-07-01 14:52:21.829 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 3
2025-07-01 14:52:21.830 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 14:52:21.830 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:52:21.830 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 14:52:21.831 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 3(Long)
2025-07-01 14:52:21.833 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 14:52:26.325 [http-nio-8080-exec-2] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 14:52:26.325 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:52:26.325 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 14:52:26.326 [http-nio-8080-exec-2] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 14:52:26.329 [http-nio-8080-exec-2] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 3
2025-07-01 14:52:26.330 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 14:52:26.331 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:52:26.331 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 14:52:26.331 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 2(Long)
2025-07-01 14:52:26.336 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 14:52:26.337 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 14:52:26.337 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:52:26.337 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 14:52:26.337 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 1(Long)
2025-07-01 14:52:26.344 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 3
2025-07-01 14:52:26.345 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 14:52:26.345 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 14:52:26.345 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 14:52:26.345 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 3(Long)
2025-07-01 14:52:26.351 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 15:07:59.312 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzUxMzE2NDcxLCJleHAiOjE3NTEzNTMxMTZ9.xcpdEhyjECnFV9jmJo6Lg9O9DfRUezWJXwMcSyT7hthVajRmMWmEGbkqDG1Afok-rk8DEzz3rg0EA561lIeHMA
2025-07-01 15:07:59.331 [http-nio-8080-exec-5] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 15:07:59.332 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 15:07:59.332 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 15:07:59.344 [http-nio-8080-exec-5] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 15:07:59.348 [http-nio-8080-exec-5] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 3
2025-07-01 15:07:59.350 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 15:07:59.350 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 15:07:59.350 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 15:07:59.350 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 2(Long)
2025-07-01 15:07:59.354 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 15:07:59.354 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 15:07:59.355 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 15:07:59.355 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 15:07:59.355 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 1(Long)
2025-07-01 15:07:59.356 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 3
2025-07-01 15:07:59.356 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 15:07:59.356 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 15:07:59.356 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 15:07:59.356 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 3(Long)
2025-07-01 15:07:59.358 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 15:08:17.667 [http-nio-8080-exec-6] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzUxMzE2NDcxLCJleHAiOjE3NTEzNTMxMTZ9.xcpdEhyjECnFV9jmJo6Lg9O9DfRUezWJXwMcSyT7hthVajRmMWmEGbkqDG1Afok-rk8DEzz3rg0EA561lIeHMA
2025-07-01 15:08:17.668 [http-nio-8080-exec-6] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 15:08:17.668 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 15:08:17.668 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 15:08:17.668 [http-nio-8080-exec-6] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 15:08:17.668 [http-nio-8080-exec-6] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 3
2025-07-01 15:08:17.669 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 15:08:17.669 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 15:08:17.669 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 15:08:17.669 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 2(Long)
2025-07-01 15:08:17.673 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 15:08:17.673 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 15:08:17.673 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 15:08:17.673 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 15:08:17.673 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 1(Long)
2025-07-01 15:08:17.675 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 3
2025-07-01 15:08:17.676 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 15:08:17.676 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 15:08:17.676 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 15:08:17.676 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 3(Long)
2025-07-01 15:08:17.678 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 15:08:17.722 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-01 15:08:17.723 [Thread-7] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 15:08:17.727 [Thread-7] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-07-01 15:08:17.765 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1898332707] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 15:08:17.766 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1898332707] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 15:08:17.766 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1822523216] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 15:08:17.766 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1822523216] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 15:08:17.767 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-nioEventLoop-4-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/sun.nio.ch.WEPoll.wait(Native Method)
 java.base@17.0.8/sun.nio.ch.WEPollSelectorImpl.doSelect(WEPollSelectorImpl.java:111)
 java.base@17.0.8/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:129)
 java.base@17.0.8/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:146)
 app//io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:68)
 app//io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:879)
 app//io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:526)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 15:08:17.768 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 15:08:17.768 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 15:08:17.769 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 15:08:17.769 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 15:08:17.769 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-5] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 15:08:17.769 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-6] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 15:08:17.770 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-7] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 15:08:17.770 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-8] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 15:08:17.770 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-9] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 15:08:17.771 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-10] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 15:08:17.777 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-01 15:08:17.783 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-01 15:08:17.951 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-01 15:08:17.966 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-01 15:08:17.966 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-01 15:08:17.968 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-01 15:08:18.219 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 24420 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 15:08:18.219 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 15:08:18.219 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 15:08:18.654 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 15:08:18.655 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 15:08:18.666 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2025-07-01 15:08:18.723 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$e4eab209] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 15:08:18.729 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 15:08:18.830 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 15:08:18.830 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 15:08:18.830 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 15:08:18.830 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 15:08:18.831 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 15:08:18.832 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 15:08:18.832 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 15:08:18.832 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 15:08:18.843 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 15:08:18.843 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 613 ms
2025-07-01 15:08:18.845 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 15:08:19.038 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} inited
2025-07-01 15:08:19.064 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} inited
2025-07-01 15:08:19.228 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 15:08:19.228 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 15:08:19.406 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 15:08:19.502 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@36be3be0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2b1acb59, org.springframework.security.web.context.SecurityContextPersistenceFilter@4483d355, org.springframework.security.web.header.HeaderWriterFilter@5bc524cc, org.springframework.web.filter.CorsFilter@3199b642, org.springframework.security.web.authentication.logout.LogoutFilter@2af1332b, com.huang.store.security.JwtAuthenticationTokenFilter@ac1e6eb, com.huang.store.security.CustomAuthenticationFilter@3fb339, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@131d2591, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2030ff1a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@63fbc8a1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3a632a90, org.springframework.security.web.session.SessionManagementFilter@500c83dd, org.springframework.security.web.access.ExceptionTranslationFilter@37305677, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@56613f16]
2025-07-01 15:08:19.688 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 15:08:19.712 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 15:08:19.717 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 15:08:19.723 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 1.578 seconds (JVM running for 1348.508)
2025-07-01 15:08:47.278 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closing ...
2025-07-01 15:08:47.279 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed
2025-07-01 15:08:47.279 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closing ...
2025-07-01 15:08:47.279 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed
2025-07-01 15:08:50.156 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-01 15:08:50.165 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 24120 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 15:08:50.165 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 15:08:50.166 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 15:08:50.283 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-01 15:08:50.283 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-01 15:08:50.747 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 15:08:50.749 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 15:08:50.771 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2025-07-01 15:08:50.961 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$4085d941] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 15:08:50.974 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 15:08:51.352 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 15:08:51.353 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 15:08:51.353 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 15:08:51.353 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 15:08:51.358 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 15:08:51.365 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 15:08:51.366 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 15:08:51.366 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 15:08:51.417 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 15:08:51.417 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1134 ms
2025-07-01 15:08:51.421 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 15:08:52.106 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-01 15:08:52.129 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-01 15:08:52.400 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 15:08:52.400 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 15:08:52.769 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 15:08:52.919 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7cc9c048, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@37519bd7, org.springframework.security.web.context.SecurityContextPersistenceFilter@5efb4674, org.springframework.security.web.header.HeaderWriterFilter@38b3fcab, org.springframework.web.filter.CorsFilter@27722b5c, org.springframework.security.web.authentication.logout.LogoutFilter@6cb4c987, com.huang.store.security.JwtAuthenticationTokenFilter@3ea4f3d6, com.huang.store.security.CustomAuthenticationFilter@67675762, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@68a2a4b7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@30fe278c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@70714439, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@44d92c2f, org.springframework.security.web.session.SessionManagementFilter@546e259f, org.springframework.security.web.access.ExceptionTranslationFilter@46fdae5b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6f19a598]
2025-07-01 15:08:53.166 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 15:08:53.182 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 15:08:53.197 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 15:08:53.203 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 3.371 seconds (JVM running for 3.949)
2025-07-01 15:08:54.623 [http-nio-8080-exec-2] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-01 15:08:54.624 [http-nio-8080-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-01 15:08:54.624 [http-nio-8080-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-07-01 15:08:54.686 [http-nio-8080-exec-2] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzUxMzE2NDcxLCJleHAiOjE3NTEzNTMxMTZ9.xcpdEhyjECnFV9jmJo6Lg9O9DfRUezWJXwMcSyT7hthVajRmMWmEGbkqDG1Afok-rk8DEzz3rg0EA561lIeHMA
2025-07-01 15:08:54.745 [http-nio-8080-exec-2] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 15:08:54.760 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 15:08:54.760 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 15:08:54.784 [http-nio-8080-exec-2] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 15:08:54.802 [http-nio-8080-exec-2] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 3
2025-07-01 15:08:54.807 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 15:08:54.807 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 15:08:54.807 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 15:08:54.844 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 2(Long)
2025-07-01 15:08:54.852 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 15:08:54.854 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 15:08:54.854 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 15:08:54.854 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 15:08:54.855 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 1(Long)
2025-07-01 15:08:54.860 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 3
2025-07-01 15:08:54.860 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 15:08:54.860 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 15:08:54.860 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 15:08:54.861 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 3(Long)
2025-07-01 15:08:54.866 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 15:09:13.404 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzUxMzE2NDcxLCJleHAiOjE3NTEzNTMxMTZ9.xcpdEhyjECnFV9jmJo6Lg9O9DfRUezWJXwMcSyT7hthVajRmMWmEGbkqDG1Afok-rk8DEzz3rg0EA561lIeHMA
2025-07-01 15:09:13.423 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.bookId = ? AND sg.status = 1 ORDER BY sg.createTime DESC
2025-07-01 15:09:13.424 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 15:09:13.424 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.bookId = ?
        AND sg.status = 1
        ORDER BY sg.createTime DESC ::: DataSources: slave
2025-07-01 15:09:13.427 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==> Parameters: 3(Integer)
2025-07-01 15:09:13.431 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - <==      Total: 1
2025-07-01 15:09:13.432 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 15:09:13.432 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 15:09:13.432 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 15:09:13.434 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 1(Long)
2025-07-01 15:09:13.436 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 15:09:13.437 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.id = ?
2025-07-01 15:09:13.438 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 15:09:13.438 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.id = ? ::: DataSources: slave
2025-07-01 15:09:13.439 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==> Parameters: 3(Long)
2025-07-01 15:09:13.442 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - <==      Total: 1
2025-07-01 15:09:13.442 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeOrderMapper.getUserPurchaseCount - ==>  Preparing: SELECT COALESCE(SUM(quantity), 0) FROM spikeOrder WHERE userAccount = ? AND spikeGoodsId = ? AND status IN (0, 1)
2025-07-01 15:09:13.443 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 15:09:13.443 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT COALESCE(SUM(quantity), 0)
        FROM spikeOrder 
        WHERE userAccount = ? 
        AND spikeGoodsId = ?
        AND status IN (0, 1) ::: DataSources: slave
2025-07-01 15:09:13.447 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeOrderMapper.getUserPurchaseCount - ==> Parameters: 56464ff@456.com(String), 3(Long)
2025-07-01 15:09:13.453 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeOrderMapper.getUserPurchaseCount - <==      Total: 1
2025-07-01 15:09:13.848 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SpikeGoodsMapper.reduceStock - ==>  Preparing: UPDATE spikeGoods SET spikeStock = spikeStock - ?, soldCount = soldCount + ?, updateTime = NOW() WHERE id = ? AND spikeStock >= ?
2025-07-01 15:09:13.849 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 15:09:13.849 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: UPDATE spikeGoods
        SET spikeStock = spikeStock - ?,
            soldCount = soldCount + ?,
            updateTime = NOW()
        WHERE id = ?
        AND spikeStock >= ? ::: DataSources: master
2025-07-01 15:09:13.854 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SpikeGoodsMapper.reduceStock - ==> Parameters: 1(Integer), 1(Integer), 3(Long), 1(Integer)
2025-07-01 15:09:13.859 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SpikeGoodsMapper.reduceStock - <==    Updates: 1
2025-07-01 15:09:13.861 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - ==>  Preparing: update book set stock=stock-? where id=? and stock>=?
2025-07-01 15:09:13.861 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 15:09:13.861 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: update book
            set stock=stock-?
                where id=? and stock>=? ::: DataSources: master
2025-07-01 15:09:13.862 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - ==> Parameters: 1(Integer), 3(Integer), 1(Integer)
2025-07-01 15:09:13.865 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - <==    Updates: 1
2025-07-01 15:09:13.867 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.SpikeOrderMapper.insertSpikeOrder - ==>  Preparing: INSERT INTO spikeOrder ( orderId, spikeGoodsId, userAccount, quantity, spikePrice, totalAmount, status, payTime, cancelTime, expireTime, createTime, updateTime ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
2025-07-01 15:09:13.867 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 15:09:13.867 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: INSERT INTO spikeOrder (
            orderId, spikeGoodsId, userAccount, quantity, spikePrice,
            totalAmount, status, payTime, cancelTime, expireTime,
            createTime, updateTime
        ) VALUES (
            ?, ?, ?, ?, ?,
            ?, ?, ?, ?, ?,
            ?, ?
        ) ::: DataSources: master
2025-07-01 15:09:13.952 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.SpikeOrderMapper.insertSpikeOrder - ==> Parameters: SPIKE1751353753865969(String), 3(Long), 56464ff@456.com(String), 1(Integer), 69.90(BigDecimal), 69.90(BigDecimal), 0(Integer), null, null, 2025-07-01T15:39:13.866205400(LocalDateTime), 2025-07-01T15:09:13.866205400(LocalDateTime), 2025-07-01T15:09:13.866205400(LocalDateTime)
2025-07-01 15:09:13.960 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.SpikeOrderMapper.insertSpikeOrder - <==    Updates: 1
2025-07-01 15:09:13.970 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - ==>  Preparing: INSERT INTO spikeRecord ( spikeGoodsId, userAccount, spikeTime, result, failReason, ipAddress, userAgent ) VALUES ( ?, ?, ?, ?, ?, ?, ? )
2025-07-01 15:09:13.970 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 15:09:13.970 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: INSERT INTO spikeRecord (
            spikeGoodsId, userAccount, spikeTime, result, 
            failReason, ipAddress, userAgent
        ) VALUES (
            ?, ?, ?, ?,
            ?, ?, ?
        ) ::: DataSources: master
2025-07-01 15:09:13.971 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - ==> Parameters: 3(Long), 56464ff@456.com(String), 2025-07-01T15:09:13.969497400(LocalDateTime), 1(Integer), null, 0:0:0:0:0:0:0:1(String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0(String)
2025-07-01 15:09:13.974 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - <==    Updates: 1
2025-07-01 15:09:14.034 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzUxMzE2NDcxLCJleHAiOjE3NTEzNTMxMTZ9.xcpdEhyjECnFV9jmJo6Lg9O9DfRUezWJXwMcSyT7hthVajRmMWmEGbkqDG1Afok-rk8DEzz3rg0EA561lIeHMA
2025-07-01 15:09:14.035 [http-nio-8080-exec-3] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 15:09:14.035 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 15:09:14.035 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 15:09:14.035 [http-nio-8080-exec-3] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 15:09:14.037 [http-nio-8080-exec-3] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 3
2025-07-01 15:09:14.037 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 15:09:14.037 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 15:09:14.037 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 15:09:14.037 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 2(Long)
2025-07-01 15:09:14.039 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 15:09:14.040 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 15:09:14.040 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 15:09:14.040 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 15:09:14.040 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 1(Long)
2025-07-01 15:09:14.042 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 3
2025-07-01 15:09:14.042 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 15:09:14.043 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 15:09:14.043 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 15:09:14.043 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 3(Long)
2025-07-01 15:09:14.048 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 15:09:18.111 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzUxMzE2NDcxLCJleHAiOjE3NTEzNTMxMTZ9.xcpdEhyjECnFV9jmJo6Lg9O9DfRUezWJXwMcSyT7hthVajRmMWmEGbkqDG1Afok-rk8DEzz3rg0EA561lIeHMA
2025-07-01 15:09:18.114 [http-nio-8080-exec-4] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 15:09:18.114 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 15:09:18.114 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 15:09:18.115 [http-nio-8080-exec-4] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 15:09:18.118 [http-nio-8080-exec-4] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 3
2025-07-01 15:09:18.118 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 15:09:18.119 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 15:09:18.119 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 15:09:18.119 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 2(Long)
2025-07-01 15:09:18.126 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 15:09:18.127 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 15:09:18.127 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 15:09:18.127 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 15:09:18.128 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 1(Long)
2025-07-01 15:09:18.133 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 3
2025-07-01 15:09:18.135 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 15:09:18.135 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 15:09:18.135 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 15:09:18.135 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 3(Long)
2025-07-01 15:09:18.143 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 15:11:35.238 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzUxMzE2NDcxLCJleHAiOjE3NTEzNTMxMTZ9.xcpdEhyjECnFV9jmJo6Lg9O9DfRUezWJXwMcSyT7hthVajRmMWmEGbkqDG1Afok-rk8DEzz3rg0EA561lIeHMA
2025-07-01 15:11:35.239 [http-nio-8080-exec-5] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 15:11:35.239 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 15:11:35.240 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 15:11:35.247 [http-nio-8080-exec-5] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 15:11:35.249 [http-nio-8080-exec-5] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 3
2025-07-01 15:11:35.249 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 15:11:35.249 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 15:11:35.249 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 15:11:35.251 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 2(Long)
2025-07-01 15:11:35.254 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 15:11:35.255 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 15:11:35.255 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 15:11:35.255 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 15:11:35.255 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 1(Long)
2025-07-01 15:11:35.258 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 3
2025-07-01 15:11:35.258 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 15:11:35.258 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 15:11:35.258 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 15:11:35.259 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 3(Long)
2025-07-01 15:11:35.261 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 19:36:33.697 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-01 19:36:33.702 [Thread-7] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 19:36:33.709 [Thread-7] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-07-01 19:36:33.748 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-980025725] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 19:36:33.749 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-980025725] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 19:36:33.749 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1378647246] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 19:36:33.749 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1378647246] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 19:36:33.750 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-nioEventLoop-4-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/sun.nio.ch.WEPoll.wait(Native Method)
 java.base@17.0.8/sun.nio.ch.WEPollSelectorImpl.doSelect(WEPollSelectorImpl.java:111)
 java.base@17.0.8/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:129)
 java.base@17.0.8/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:146)
 app//io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:68)
 app//io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:879)
 app//io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:526)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 19:36:33.751 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 19:36:33.751 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 19:36:33.751 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 19:36:33.752 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 19:36:33.752 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-5] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 19:36:33.756 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-01 19:36:33.762 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-01 19:36:33.923 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-01 19:36:33.964 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-01 19:36:33.964 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-01 19:36:33.968 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-01 19:36:34.131 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 24120 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 19:36:34.131 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 19:36:34.131 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 19:36:34.290 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 19:36:34.290 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 19:36:34.298 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2025-07-01 19:36:34.336 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$4085d941] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 19:36:34.341 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 19:36:34.462 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 19:36:34.462 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 19:36:34.462 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 19:36:34.462 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 19:36:34.471 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 19:36:34.472 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 19:36:34.473 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 19:36:34.473 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 19:36:34.506 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 19:36:34.506 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 372 ms
2025-07-01 19:36:34.513 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 19:36:34.671 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} inited
2025-07-01 19:36:34.689 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} inited
2025-07-01 19:36:34.786 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 19:36:34.786 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 19:36:34.886 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 19:36:34.938 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@ace5131, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@219692f0, org.springframework.security.web.context.SecurityContextPersistenceFilter@1537870c, org.springframework.security.web.header.HeaderWriterFilter@517c4eb9, org.springframework.web.filter.CorsFilter@50c8fc69, org.springframework.security.web.authentication.logout.LogoutFilter@308e0d40, com.huang.store.security.JwtAuthenticationTokenFilter@22de00a, com.huang.store.security.CustomAuthenticationFilter@2df91cea, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@614e16cc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@25056028, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@163ffbb7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@36083d95, org.springframework.security.web.session.SessionManagementFilter@119211c6, org.springframework.security.web.access.ExceptionTranslationFilter@5afd4fe5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@18201392]
2025-07-01 19:36:35.036 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 19:36:35.044 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 19:36:35.046 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 19:36:35.049 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 0.954 seconds (JVM running for 16003.87)
2025-07-01 19:47:09.438 [Thread-9] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-01 19:47:09.438 [Thread-9] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 19:47:09.440 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-454454885] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 19:47:09.440 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-454454885] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 19:47:09.440 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-21337974] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 19:47:09.440 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-21337974] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 19:47:09.441 [Thread-9] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-01 19:47:09.441 [Thread-9] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-01 19:47:09.443 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closing ...
2025-07-01 19:47:09.443 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed
2025-07-01 19:47:09.444 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closing ...
2025-07-01 19:47:09.445 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed
2025-07-01 19:47:09.507 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 24120 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 19:47:09.507 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 19:47:09.507 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 19:47:09.627 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 19:47:09.627 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 19:47:09.634 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2025-07-01 19:47:09.680 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$4085d941] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 19:47:09.685 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 19:47:09.751 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 19:47:09.751 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 19:47:09.751 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 19:47:09.751 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 19:47:09.752 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 19:47:09.752 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 19:47:09.752 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 19:47:09.752 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 19:47:09.769 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 19:47:09.769 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 258 ms
2025-07-01 19:47:09.772 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 19:47:09.873 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} inited
2025-07-01 19:47:09.891 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} inited
2025-07-01 19:47:09.979 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 19:47:09.979 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 19:47:10.122 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 19:47:10.196 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1703a6eb, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@75642fc0, org.springframework.security.web.context.SecurityContextPersistenceFilter@44b687e0, org.springframework.security.web.header.HeaderWriterFilter@33651cd, org.springframework.web.filter.CorsFilter@9f00663, org.springframework.security.web.authentication.logout.LogoutFilter@33991d91, com.huang.store.security.JwtAuthenticationTokenFilter@2e02d89f, com.huang.store.security.CustomAuthenticationFilter@543a478c, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@79355682, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1e763926, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2fffab1c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@389ce4e8, org.springframework.security.web.session.SessionManagementFilter@7e07a97c, org.springframework.security.web.access.ExceptionTranslationFilter@307d4cfc, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2eefba48]
2025-07-01 19:47:10.290 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 19:47:10.298 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 19:47:10.300 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 19:47:10.302 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 0.822 seconds (JVM running for 16639.123)
2025-07-01 20:12:55.301 [Thread-15] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:12:55.301 [Thread-15] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 20:12:55.303 [Thread-15] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-71563807] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 20:12:55.303 [Thread-15] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-71563807] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 20:12:55.304 [Thread-15] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-2116205944] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 20:12:55.305 [Thread-15] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-2116205944] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 20:12:55.306 [Thread-15] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-01 20:12:55.308 [Thread-15] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-01 20:12:55.311 [Thread-15] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} closing ...
2025-07-01 20:12:55.313 [Thread-15] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} closed
2025-07-01 20:12:55.313 [Thread-15] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} closing ...
2025-07-01 20:12:55.314 [Thread-15] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} closed
2025-07-01 20:12:55.408 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 24120 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 20:12:55.409 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 20:12:55.409 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 20:12:55.608 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 20:12:55.608 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 20:12:55.610 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2025-07-01 20:12:55.662 [restartedMain] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[com.huang.store.mapper]' package. Please check your configuration.
2025-07-01 20:12:55.726 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 20:12:55.726 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 20:12:55.726 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 20:12:55.726 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 20:12:55.728 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 20:12:55.728 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:12:55.728 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 20:12:55.728 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 20:12:55.747 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 20:12:55.747 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 332 ms
2025-07-01 20:12:55.819 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 20:12:55.880 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} inited
2025-07-01 20:12:55.901 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} inited
2025-07-01 20:12:55.926 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
2025-07-01 20:12:55.926 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} closing ...
2025-07-01 20:12:55.927 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} closed
2025-07-01 20:12:55.927 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} closing ...
2025-07-01 20:12:55.928 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} closed
2025-07-01 20:12:55.928 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 20:12:55.933 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 20:12:55.964 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 24 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$3adae7a0.CGLIB$sqlSessionFactory$1(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$3adae7a0$$FastClassBySpringCGLIB$$3c2de41a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$3adae7a0.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:78)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:144)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:136)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:126)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 46 common frames omitted
2025-07-01 20:12:58.438 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 24120 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 20:12:58.438 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 20:12:58.438 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 20:12:58.554 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 20:12:58.554 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 20:12:58.558 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-07-01 20:12:58.596 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$4085d941] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:12:58.604 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:12:58.625 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 20:12:58.625 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 20:12:58.625 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 20:12:58.625 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 20:12:58.626 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 20:12:58.626 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:12:58.626 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 20:12:58.626 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 20:12:58.639 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 20:12:58.639 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 198 ms
2025-07-01 20:12:58.682 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-9} inited
2025-07-01 20:12:58.695 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-10} inited
2025-07-01 20:12:58.726 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController': Unsatisfied dependency expressed through field 'cartService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstCart': Unsatisfied dependency expressed through field 'cartMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\CartMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
2025-07-01 20:12:58.726 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-9} closing ...
2025-07-01 20:12:58.726 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-9} closed
2025-07-01 20:12:58.727 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-10} closing ...
2025-07-01 20:12:58.727 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-10} closed
2025-07-01 20:12:58.727 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 20:12:58.731 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 20:12:58.735 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController': Unsatisfied dependency expressed through field 'cartService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstCart': Unsatisfied dependency expressed through field 'cartMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\CartMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstCart': Unsatisfied dependency expressed through field 'cartMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\CartMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 25 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\CartMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1534)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 39 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	... 50 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 63 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$3adae7a0.CGLIB$sqlSessionFactory$1(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$3adae7a0$$FastClassBySpringCGLIB$$3c2de41a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$3adae7a0.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 64 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.dto.OrderDto'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.dto.OrderDto
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 77 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.dto.OrderDto'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.dto.OrderDto
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:270)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:262)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(XMLMapperBuilder.java:254)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:124)
	... 79 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.dto.OrderDto'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.dto.OrderDto
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 83 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.dto.OrderDto
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 85 common frames omitted
2025-07-01 20:16:41.232 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 24120 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 20:16:41.232 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 20:16:41.232 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 20:16:41.327 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 20:16:41.327 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 20:16:41.329 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 0 Redis repository interfaces.
2025-07-01 20:16:41.350 [restartedMain] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[com.huang.store.mapper]' package. Please check your configuration.
2025-07-01 20:16:41.376 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 20:16:41.377 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 20:16:41.377 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 20:16:41.377 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 20:16:41.377 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 20:16:41.377 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:16:41.377 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 20:16:41.378 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 20:16:41.391 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-2].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 20:16:41.391 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 158 ms
2025-07-01 20:16:41.430 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 20:16:41.490 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-11} inited
2025-07-01 20:16:41.505 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-12} inited
2025-07-01 20:16:41.523 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
2025-07-01 20:16:41.524 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-11} closing ...
2025-07-01 20:16:41.524 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-11} closed
2025-07-01 20:16:41.524 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-12} closing ...
2025-07-01 20:16:41.525 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-12} closed
2025-07-01 20:16:41.525 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 20:16:41.528 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 20:16:41.530 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 24 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$3adae7a0.CGLIB$sqlSessionFactory$1(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$3adae7a0$$FastClassBySpringCGLIB$$3c2de41a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$3adae7a0.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:78)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:144)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:136)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:126)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 46 common frames omitted
2025-07-01 20:16:43.791 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 24120 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 20:16:43.791 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 20:16:43.791 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 20:16:43.881 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 20:16:43.881 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 20:16:43.887 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-07-01 20:16:43.915 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$4085d941] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:16:43.919 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:16:43.952 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 20:16:43.952 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 20:16:43.952 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 20:16:43.952 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 20:16:43.952 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 20:16:43.952 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:16:43.952 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 20:16:43.952 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 20:16:43.966 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-3].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 20:16:43.966 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 174 ms
2025-07-01 20:16:43.967 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 20:16:44.017 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-13} inited
2025-07-01 20:16:44.030 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-14} inited
2025-07-01 20:16:44.102 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 20:16:44.102 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 20:16:44.190 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 20:16:44.243 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6d23c6fc, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@46d2b2a1, org.springframework.security.web.context.SecurityContextPersistenceFilter@376ac806, org.springframework.security.web.header.HeaderWriterFilter@336df625, org.springframework.web.filter.CorsFilter@41e5b3a4, org.springframework.security.web.authentication.logout.LogoutFilter@6adfbb11, com.huang.store.security.JwtAuthenticationTokenFilter@7098249f, com.huang.store.security.CustomAuthenticationFilter@5c13ebd2, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@27689f56, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@733ff6fa, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2f3fea66, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@d371da3, org.springframework.security.web.session.SessionManagementFilter@7f1ae3b8, org.springframework.security.web.access.ExceptionTranslationFilter@27dc69b8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@50dd9101]
2025-07-01 20:16:44.322 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 20:16:44.329 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 20:16:44.331 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 20:16:44.334 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 0.561 seconds (JVM running for 18413.155)
2025-07-01 20:17:03.048 [Thread-21] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:17:03.048 [Thread-21] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 20:17:03.050 [Thread-21] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-657758482] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 20:17:03.051 [Thread-21] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-657758482] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 20:17:03.051 [Thread-21] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-416030850] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 20:17:03.051 [Thread-21] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-416030850] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 20:17:03.051 [Thread-21] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-01 20:17:03.052 [Thread-21] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-01 20:17:03.055 [Thread-21] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-13} closing ...
2025-07-01 20:17:03.056 [Thread-21] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-13} closed
2025-07-01 20:17:03.056 [Thread-21] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-14} closing ...
2025-07-01 20:17:03.057 [Thread-21] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-14} closed
2025-07-01 20:17:03.123 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 24120 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 20:17:03.123 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 20:17:03.123 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 20:17:03.252 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 20:17:03.252 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 20:17:03.257 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-07-01 20:17:03.343 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 20:17:03.343 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 20:17:03.343 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 20:17:03.343 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 20:17:03.344 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 20:17:03.344 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:17:03.344 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 20:17:03.344 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 20:17:03.360 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-3].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 20:17:03.360 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 236 ms
2025-07-01 20:17:03.413 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 20:17:03.462 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-15} inited
2025-07-01 20:17:03.477 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-16} inited
2025-07-01 20:17:03.520 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
2025-07-01 20:17:03.520 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-15} closing ...
2025-07-01 20:17:03.521 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-15} closed
2025-07-01 20:17:03.522 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-16} closing ...
2025-07-01 20:17:03.522 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-16} closed
2025-07-01 20:17:03.523 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 20:17:03.526 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 20:17:03.529 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 24 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$3adae7a0.CGLIB$sqlSessionFactory$1(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$3adae7a0$$FastClassBySpringCGLIB$$3c2de41a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$3adae7a0.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.dto.OrderDto'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.dto.OrderDto
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.dto.OrderDto'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.dto.OrderDto
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:270)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:262)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(XMLMapperBuilder.java:254)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:124)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.dto.OrderDto'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.dto.OrderDto
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.dto.OrderDto
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 46 common frames omitted
2025-07-01 20:17:04.985 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 24120 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 20:17:04.985 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 20:17:04.985 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 20:17:05.095 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 20:17:05.096 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 20:17:05.102 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-07-01 20:17:05.126 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$4085d941] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:17:05.129 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:17:05.161 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 20:17:05.162 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 20:17:05.162 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 20:17:05.162 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 20:17:05.162 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 20:17:05.162 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:17:05.162 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 20:17:05.162 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 20:17:05.172 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-4].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 20:17:05.172 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 186 ms
2025-07-01 20:17:05.173 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 20:17:05.225 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-17} inited
2025-07-01 20:17:05.238 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-18} inited
2025-07-01 20:17:05.305 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 20:17:05.305 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 20:17:05.395 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 20:17:05.444 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@46f7ea93, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@47089fa9, org.springframework.security.web.context.SecurityContextPersistenceFilter@5955a7e8, org.springframework.security.web.header.HeaderWriterFilter@5a13c695, org.springframework.web.filter.CorsFilter@6f2f8533, org.springframework.security.web.authentication.logout.LogoutFilter@24d5ff22, com.huang.store.security.JwtAuthenticationTokenFilter@1a385088, com.huang.store.security.CustomAuthenticationFilter@3b9836d7, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@21cbc5fa, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5e36aca5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1ad5fe98, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4244b9dd, org.springframework.security.web.session.SessionManagementFilter@259df927, org.springframework.security.web.access.ExceptionTranslationFilter@fc83, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@79e990b1]
2025-07-01 20:17:05.536 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 20:17:05.543 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 20:17:05.545 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 20:17:05.548 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 0.582 seconds (JVM running for 18434.369)
2025-07-01 20:17:05.823 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-01 20:17:05.839 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 14976 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 20:17:05.839 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 20:17:05.840 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 20:17:05.963 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-01 20:17:05.964 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-01 20:17:06.405 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 20:17:06.407 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 20:17:06.436 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-07-01 20:17:06.625 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$194d8efa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:17:06.637 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:17:07.027 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 20:17:07.028 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 20:17:07.029 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 20:17:07.029 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 20:17:07.044 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 20:17:07.050 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:17:07.053 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 20:17:07.054 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 20:17:07.109 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 20:17:07.109 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1145 ms
2025-07-01 20:17:07.113 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 20:17:07.837 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-01 20:17:07.869 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-01 20:17:08.139 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 20:17:08.140 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 20:17:08.517 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 20:17:08.629 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6a7f10a5, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6a1f5f6c, org.springframework.security.web.context.SecurityContextPersistenceFilter@5cf33c11, org.springframework.security.web.header.HeaderWriterFilter@44a15107, org.springframework.web.filter.CorsFilter@48856776, org.springframework.security.web.authentication.logout.LogoutFilter@74a0290c, com.huang.store.security.JwtAuthenticationTokenFilter@6c0b410e, com.huang.store.security.CustomAuthenticationFilter@438efb9, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5e807e73, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@63ac7906, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7e87d397, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@62ace290, org.springframework.security.web.session.SessionManagementFilter@549ce155, org.springframework.security.web.access.ExceptionTranslationFilter@66376050, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@605991b7]
2025-07-01 20:17:08.827 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2025-07-01 20:17:08.842 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 20:17:08.845 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8080 is already in use
2025-07-01 20:17:08.862 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-01 20:17:08.866 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-01 20:17:08.866 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-01 20:17:08.867 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-01 20:17:08.870 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:17:08.870 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 20:17:08.879 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-01 20:17:08.879 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-01 20:17:08.884 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 20:17:08.901 [restartedMain] ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2025-07-01 20:17:19.180 [Thread-42] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:17:19.180 [Thread-42] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 20:17:19.182 [Thread-42] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-763779645] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 20:17:19.182 [Thread-42] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-763779645] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 20:17:19.182 [Thread-42] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-825559797] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 20:17:19.183 [Thread-42] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-825559797] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 20:17:19.183 [Thread-42] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-01 20:17:19.184 [Thread-42] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-01 20:17:19.187 [Thread-42] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-17} closing ...
2025-07-01 20:17:19.188 [Thread-42] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-17} closed
2025-07-01 20:17:19.188 [Thread-42] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-18} closing ...
2025-07-01 20:17:19.189 [Thread-42] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-18} closed
2025-07-01 20:17:19.251 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 24120 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 20:17:19.251 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 20:17:19.251 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 20:17:19.369 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 20:17:19.369 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 20:17:19.378 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2025-07-01 20:17:19.409 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$4085d941] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:17:19.412 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:17:19.452 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 20:17:19.452 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 20:17:19.452 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 20:17:19.452 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 20:17:19.452 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 20:17:19.453 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:17:19.453 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 20:17:19.453 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 20:17:19.462 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-4].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 20:17:19.462 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 209 ms
2025-07-01 20:17:19.464 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 20:17:19.545 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-19} inited
2025-07-01 20:17:19.558 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-20} inited
2025-07-01 20:17:19.652 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 20:17:19.652 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 20:17:19.705 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'spikeController': Unsatisfied dependency expressed through field 'spikeService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.huang.store.service.SpikeService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2025-07-01 20:17:19.706 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-19} closing ...
2025-07-01 20:17:19.706 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-19} closed
2025-07-01 20:17:19.706 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-20} closing ...
2025-07-01 20:17:19.706 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-20} closed
2025-07-01 20:17:19.707 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 20:17:19.710 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 20:17:19.713 [restartedMain] ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field spikeService in com.huang.store.controller.SpikeController required a bean of type 'com.huang.store.service.SpikeService' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'com.huang.store.service.SpikeService' in your configuration.

2025-07-01 20:17:49.291 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-01 20:17:49.304 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 19284 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 20:17:49.305 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 20:17:49.305 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 20:17:49.444 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-01 20:17:49.444 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-01 20:17:49.882 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 20:17:49.885 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 20:17:49.909 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2025-07-01 20:17:50.139 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$afdd2266] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:17:50.155 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:17:50.549 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 20:17:50.550 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 20:17:50.550 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 20:17:50.550 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 20:17:50.554 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 20:17:50.560 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:17:50.562 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 20:17:50.562 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 20:17:50.623 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 20:17:50.623 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1178 ms
2025-07-01 20:17:50.628 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 20:17:51.262 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-01 20:17:51.290 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-01 20:17:51.574 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 20:17:51.575 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 20:17:51.957 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 20:17:52.071 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7abef819, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6ef94c6b, org.springframework.security.web.context.SecurityContextPersistenceFilter@4894664f, org.springframework.security.web.header.HeaderWriterFilter@2a0f8027, org.springframework.web.filter.CorsFilter@7505735e, org.springframework.security.web.authentication.logout.LogoutFilter@147f5d7e, com.huang.store.security.JwtAuthenticationTokenFilter@5c50fa8, com.huang.store.security.CustomAuthenticationFilter@66153fb9, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@41761267, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@377f427d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3587d649, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@74ad8eea, org.springframework.security.web.session.SessionManagementFilter@4ad85e72, org.springframework.security.web.access.ExceptionTranslationFilter@600820ac, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7f923cba]
2025-07-01 20:17:52.280 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 20:17:52.297 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 20:17:52.324 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 20:17:52.331 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 3.369 seconds (JVM running for 3.622)
2025-07-01 20:19:45.807 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-01 20:19:45.815 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 7888 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 20:19:45.815 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 20:19:45.815 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 20:19:45.922 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-01 20:19:45.922 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-01 20:19:46.349 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 20:19:46.350 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 20:19:46.373 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2025-07-01 20:19:46.564 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$f64f6b4e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:19:46.579 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:19:46.887 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 20:19:46.888 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 20:19:46.888 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 20:19:46.888 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 20:19:46.891 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 20:19:46.897 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:19:46.898 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 20:19:46.898 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 20:19:46.947 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 20:19:46.947 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1025 ms
2025-07-01 20:19:46.950 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 20:19:47.550 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-01 20:19:47.571 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-01 20:19:47.804 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 20:19:47.804 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 20:19:48.158 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 20:19:48.262 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5cee43b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@32a675b2, org.springframework.security.web.context.SecurityContextPersistenceFilter@522b3598, org.springframework.security.web.header.HeaderWriterFilter@4e8cea3e, org.springframework.web.filter.CorsFilter@f2dc296, org.springframework.security.web.authentication.logout.LogoutFilter@227caacd, com.huang.store.security.JwtAuthenticationTokenFilter@10453629, com.huang.store.security.CustomAuthenticationFilter@5e5191bf, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@550ef93c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@58bd72ed, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@53471357, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3779e9ef, org.springframework.security.web.session.SessionManagementFilter@1841eb9b, org.springframework.security.web.access.ExceptionTranslationFilter@33b370e5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2f15a736]
2025-07-01 20:19:48.496 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 20:19:48.510 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 20:19:48.521 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 20:19:48.528 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 2.993 seconds (JVM running for 3.477)
2025-07-01 20:28:13.982 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-01 20:28:13.983 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-01 20:28:13.985 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-07-01 20:28:14.080 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzUxMzE2NDcxLCJleHAiOjE3NTEzNTMxMTZ9.xcpdEhyjECnFV9jmJo6Lg9O9DfRUezWJXwMcSyT7hthVajRmMWmEGbkqDG1Afok-rk8DEzz3rg0EA561lIeHMA
2025-07-01 20:28:27.739 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 20:28:27.751 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:28:27.752 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 20:28:27.806 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 56464ff@456.com(String)
2025-07-01 20:28:27.822 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 20:28:27.832 [http-nio-8080-exec-5] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:56464ff@456.com    数据库密码:$2a$10$7OBMT05X3FsorQiaTl2aQuxGJpdi4w1dVWZdG8Oy9K7E61SWT9WAy
2025-07-01 20:28:27.904 [http-nio-8080-exec-5] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=56464ff@456.com, password=$2a$10$7OBMT05X3FsorQiaTl2aQuxGJpdi4w1dVWZdG8Oy9K7E61SWT9WAy, enabled=true, roles=[ROLE_USER]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]
2025-07-01 20:28:27.928 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 20:28:27.928 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:28:27.928 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 20:28:27.929 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 56464ff@456.com(String)
2025-07-01 20:28:27.931 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 20:28:29.081 [http-nio-8080-exec-2] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 20:28:29.081 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:28:29.081 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 20:28:29.085 [http-nio-8080-exec-2] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 20:28:29.091 [http-nio-8080-exec-2] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 3
2025-07-01 20:28:29.093 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 20:28:29.093 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:28:29.093 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 20:28:29.101 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 2(Long)
2025-07-01 20:28:29.107 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 20:28:29.110 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 20:28:29.110 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:28:29.110 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 20:28:29.111 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 1(Long)
2025-07-01 20:28:29.114 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 3
2025-07-01 20:28:29.114 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 20:28:29.114 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:28:29.114 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 20:28:29.114 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 3(Long)
2025-07-01 20:28:29.117 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 20:28:32.998 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.bookId = ? AND sg.status = 1 ORDER BY sg.createTime DESC
2025-07-01 20:28:32.999 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:28:32.999 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.bookId = ?
        AND sg.status = 1
        ORDER BY sg.createTime DESC ::: DataSources: slave
2025-07-01 20:28:33.003 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==> Parameters: 5(Integer)
2025-07-01 20:28:33.007 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - <==      Total: 1
2025-07-01 20:28:33.009 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 20:28:33.009 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:28:33.009 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 20:28:33.011 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 2(Long)
2025-07-01 20:28:33.013 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 20:28:33.015 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - ==>  Preparing: INSERT INTO spikeRecord ( spikeGoodsId, userAccount, spikeTime, result, failReason, ipAddress, userAgent ) VALUES ( ?, ?, ?, ?, ?, ?, ? )
2025-07-01 20:28:33.016 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:28:33.017 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: INSERT INTO spikeRecord (
            spikeGoodsId, userAccount, spikeTime, result, 
            failReason, ipAddress, userAgent
        ) VALUES (
            ?, ?, ?, ?,
            ?, ?, ?
        ) ::: DataSources: master
2025-07-01 20:28:33.210 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - ==> Parameters: null, 56464ff@456.com(String), 2025-07-01T20:28:33.014348300(LocalDateTime), 0(Integer), 该图书的秒杀活动未开始或已结束(String), 0:0:0:0:0:0:0:1(String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0(String)
2025-07-01 20:28:33.243 [http-nio-8080-exec-4] ERROR druid.sql.Statement - {conn-10001, pstmt-20002} execute error. INSERT INTO spikeRecord (
            spikeGoodsId, userAccount, spikeTime, result, 
            failReason, ipAddress, userAgent
        ) VALUES (
            ?, ?, ?, ?,
            ?, ?, ?
        )
java.sql.SQLIntegrityConstraintViolationException: Column 'spikeGoodsId' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:118)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3446)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:639)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:158)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:483)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.MasterSlavePreparedStatement.execute(MasterSlavePreparedStatement.java:118)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy4/jdk.proxy4.$Proxy123.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy109.insertSpikeRecord(Unknown Source)
	at com.huang.store.service.SpikeService.recordSpikeResult(SpikeService.java:354)
	at com.huang.store.service.SpikeService.spikeBookById(SpikeService.java:146)
	at com.huang.store.service.SpikeService$$FastClassBySpringCGLIB$$6c437123.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.huang.store.service.SpikeService$$EnhancerBySpringCGLIB$$a86a97bd.spikeBookById(<generated>)
	at com.huang.store.controller.SpikeController.spikeBook(SpikeController.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2025-07-01 20:28:38.137 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.bookId = ? AND sg.status = 1 ORDER BY sg.createTime DESC
2025-07-01 20:28:38.137 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:28:38.137 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.bookId = ?
        AND sg.status = 1
        ORDER BY sg.createTime DESC ::: DataSources: slave
2025-07-01 20:28:38.138 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==> Parameters: 2(Integer)
2025-07-01 20:28:38.144 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - <==      Total: 2
2025-07-01 20:28:38.145 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 20:28:38.146 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:28:38.146 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 20:28:38.146 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 1(Long)
2025-07-01 20:28:38.149 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 20:28:38.150 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 20:28:38.151 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:28:38.151 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 20:28:38.151 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 3(Long)
2025-07-01 20:28:38.155 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 20:28:38.155 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - ==>  Preparing: INSERT INTO spikeRecord ( spikeGoodsId, userAccount, spikeTime, result, failReason, ipAddress, userAgent ) VALUES ( ?, ?, ?, ?, ?, ?, ? )
2025-07-01 20:28:38.156 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:28:38.156 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: INSERT INTO spikeRecord (
            spikeGoodsId, userAccount, spikeTime, result, 
            failReason, ipAddress, userAgent
        ) VALUES (
            ?, ?, ?, ?,
            ?, ?, ?
        ) ::: DataSources: master
2025-07-01 20:28:38.159 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - ==> Parameters: null, 56464ff@456.com(String), 2025-07-01T20:28:38.155557200(LocalDateTime), 0(Integer), 该图书的秒杀活动未开始或已结束(String), 0:0:0:0:0:0:0:1(String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0(String)
2025-07-01 20:28:38.163 [http-nio-8080-exec-3] ERROR druid.sql.Statement - {conn-10001, pstmt-20003} execute error. INSERT INTO spikeRecord (
            spikeGoodsId, userAccount, spikeTime, result, 
            failReason, ipAddress, userAgent
        ) VALUES (
            ?, ?, ?, ?,
            ?, ?, ?
        )
java.sql.SQLIntegrityConstraintViolationException: Column 'spikeGoodsId' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:118)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3446)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:639)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:158)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:483)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.MasterSlavePreparedStatement.execute(MasterSlavePreparedStatement.java:118)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy4/jdk.proxy4.$Proxy123.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy109.insertSpikeRecord(Unknown Source)
	at com.huang.store.service.SpikeService.recordSpikeResult(SpikeService.java:354)
	at com.huang.store.service.SpikeService.spikeBookById(SpikeService.java:146)
	at com.huang.store.service.SpikeService$$FastClassBySpringCGLIB$$6c437123.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.huang.store.service.SpikeService$$EnhancerBySpringCGLIB$$a86a97bd.spikeBookById(<generated>)
	at com.huang.store.controller.SpikeController.spikeBook(SpikeController.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2025-07-01 20:28:46.485 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.bookId = ? AND sg.status = 1 ORDER BY sg.createTime DESC
2025-07-01 20:28:46.486 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:28:46.486 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.bookId = ?
        AND sg.status = 1
        ORDER BY sg.createTime DESC ::: DataSources: slave
2025-07-01 20:28:46.487 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==> Parameters: 2(Integer)
2025-07-01 20:28:46.492 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - <==      Total: 2
2025-07-01 20:28:46.493 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 20:28:46.493 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:28:46.493 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 20:28:46.493 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 1(Long)
2025-07-01 20:28:46.496 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 20:28:46.497 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 20:28:46.497 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:28:46.497 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 20:28:46.498 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 3(Long)
2025-07-01 20:28:46.502 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 20:28:46.503 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - ==>  Preparing: INSERT INTO spikeRecord ( spikeGoodsId, userAccount, spikeTime, result, failReason, ipAddress, userAgent ) VALUES ( ?, ?, ?, ?, ?, ?, ? )
2025-07-01 20:28:46.503 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:28:46.503 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: INSERT INTO spikeRecord (
            spikeGoodsId, userAccount, spikeTime, result, 
            failReason, ipAddress, userAgent
        ) VALUES (
            ?, ?, ?, ?,
            ?, ?, ?
        ) ::: DataSources: master
2025-07-01 20:28:46.506 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - ==> Parameters: null, 56464ff@456.com(String), 2025-07-01T20:28:46.503484900(LocalDateTime), 0(Integer), 该图书的秒杀活动未开始或已结束(String), 0:0:0:0:0:0:0:1(String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0(String)
2025-07-01 20:28:46.509 [http-nio-8080-exec-6] ERROR druid.sql.Statement - {conn-10001, pstmt-20004} execute error. INSERT INTO spikeRecord (
            spikeGoodsId, userAccount, spikeTime, result, 
            failReason, ipAddress, userAgent
        ) VALUES (
            ?, ?, ?, ?,
            ?, ?, ?
        )
java.sql.SQLIntegrityConstraintViolationException: Column 'spikeGoodsId' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:118)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3446)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:639)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:158)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:483)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.MasterSlavePreparedStatement.execute(MasterSlavePreparedStatement.java:118)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy4/jdk.proxy4.$Proxy123.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy109.insertSpikeRecord(Unknown Source)
	at com.huang.store.service.SpikeService.recordSpikeResult(SpikeService.java:354)
	at com.huang.store.service.SpikeService.spikeBookById(SpikeService.java:146)
	at com.huang.store.service.SpikeService$$FastClassBySpringCGLIB$$6c437123.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.huang.store.service.SpikeService$$EnhancerBySpringCGLIB$$a86a97bd.spikeBookById(<generated>)
	at com.huang.store.controller.SpikeController.spikeBook(SpikeController.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2025-07-01 20:29:03.603 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.bookId = ? AND sg.status = 1 ORDER BY sg.createTime DESC
2025-07-01 20:29:03.604 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:29:03.604 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.bookId = ?
        AND sg.status = 1
        ORDER BY sg.createTime DESC ::: DataSources: slave
2025-07-01 20:29:03.605 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==> Parameters: 2(Integer)
2025-07-01 20:29:03.610 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - <==      Total: 2
2025-07-01 20:29:03.610 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 20:29:03.611 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:29:03.611 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 20:29:03.611 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 1(Long)
2025-07-01 20:29:03.615 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 20:29:03.616 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 20:29:03.616 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:29:03.617 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 20:29:03.617 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 3(Long)
2025-07-01 20:29:03.620 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 20:29:03.620 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - ==>  Preparing: INSERT INTO spikeRecord ( spikeGoodsId, userAccount, spikeTime, result, failReason, ipAddress, userAgent ) VALUES ( ?, ?, ?, ?, ?, ?, ? )
2025-07-01 20:29:03.620 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:29:03.620 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: INSERT INTO spikeRecord (
            spikeGoodsId, userAccount, spikeTime, result, 
            failReason, ipAddress, userAgent
        ) VALUES (
            ?, ?, ?, ?,
            ?, ?, ?
        ) ::: DataSources: master
2025-07-01 20:29:03.621 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - ==> Parameters: null, 56464ff@456.com(String), 2025-07-01T20:29:03.620029300(LocalDateTime), 0(Integer), 该图书的秒杀活动未开始或已结束(String), 0:0:0:0:0:0:0:1(String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0(String)
2025-07-01 20:29:03.624 [http-nio-8080-exec-7] ERROR druid.sql.Statement - {conn-10001, pstmt-20005} execute error. INSERT INTO spikeRecord (
            spikeGoodsId, userAccount, spikeTime, result, 
            failReason, ipAddress, userAgent
        ) VALUES (
            ?, ?, ?, ?,
            ?, ?, ?
        )
java.sql.SQLIntegrityConstraintViolationException: Column 'spikeGoodsId' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:118)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3446)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:639)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:158)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:483)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.MasterSlavePreparedStatement.execute(MasterSlavePreparedStatement.java:118)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy4/jdk.proxy4.$Proxy123.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy109.insertSpikeRecord(Unknown Source)
	at com.huang.store.service.SpikeService.recordSpikeResult(SpikeService.java:354)
	at com.huang.store.service.SpikeService.spikeBookById(SpikeService.java:146)
	at com.huang.store.service.SpikeService$$FastClassBySpringCGLIB$$6c437123.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.huang.store.service.SpikeService$$EnhancerBySpringCGLIB$$a86a97bd.spikeBookById(<generated>)
	at com.huang.store.controller.SpikeController.spikeBook(SpikeController.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2025-07-01 20:31:41.981 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:31:41.981 [Thread-7] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 20:31:41.982 [Thread-7] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-07-01 20:31:42.014 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-915798884] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 20:31:42.015 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-915798884] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 20:31:42.015 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1487012135] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 20:31:42.016 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1487012135] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 20:31:42.017 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-01 20:31:42.019 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-01 20:31:42.057 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-01 20:31:42.063 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-01 20:31:42.063 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-01 20:31:42.064 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-01 20:31:42.196 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 7888 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 20:31:42.197 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 20:31:42.197 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 20:31:42.694 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 20:31:42.694 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 20:31:42.716 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 0 Redis repository interfaces.
2025-07-01 20:31:42.850 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$f64f6b4e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:31:42.863 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:31:42.990 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 20:31:42.990 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 20:31:42.990 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 20:31:42.990 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 20:31:42.991 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 20:31:42.992 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:31:42.993 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 20:31:42.993 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 20:31:43.018 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 20:31:43.018 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 811 ms
2025-07-01 20:31:43.023 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 20:31:43.223 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} inited
2025-07-01 20:31:43.261 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} inited
2025-07-01 20:31:43.534 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 20:31:43.535 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 20:31:43.685 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'spikeController': Unsatisfied dependency expressed through field 'spikeService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.huang.store.service.SpikeService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2025-07-01 20:31:43.687 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closing ...
2025-07-01 20:31:43.689 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed
2025-07-01 20:31:43.690 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closing ...
2025-07-01 20:31:43.692 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed
2025-07-01 20:31:43.693 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 20:31:43.706 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 20:31:43.772 [restartedMain] ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field spikeService in com.huang.store.controller.SpikeController required a bean of type 'com.huang.store.service.SpikeService' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'com.huang.store.service.SpikeService' in your configuration.

2025-07-01 20:32:37.883 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 7888 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 20:32:37.883 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 20:32:37.883 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 20:32:38.248 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 20:32:38.248 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 20:32:38.257 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-07-01 20:32:38.339 [restartedMain] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[com.huang.store.mapper]' package. Please check your configuration.
2025-07-01 20:32:38.460 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 20:32:38.461 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 20:32:38.461 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 20:32:38.462 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 20:32:38.462 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 20:32:38.463 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:32:38.463 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 20:32:38.464 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 20:32:38.502 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 20:32:38.503 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 614 ms
2025-07-01 20:32:38.521 [restartedMain] ERROR org.apache.catalina.session.StandardManager - Exception loading sessions from persistent storage
java.lang.ClassNotFoundException: com.huang.store.entity.user.SecurityUser
	at org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedWebappClassLoader.loadClass(TomcatEmbeddedWebappClassLoader.java:72)
	at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1141)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:467)
	at org.apache.catalina.util.CustomObjectInputStream.resolveClass(CustomObjectInputStream.java:158)
	at java.base/java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:2045)
	at java.base/java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1909)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2235)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream$FieldValues.<init>(ObjectInputStream.java:2617)
	at java.base/java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2468)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2268)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream$FieldValues.<init>(ObjectInputStream.java:2617)
	at java.base/java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2468)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2268)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:514)
	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:472)
	at org.apache.catalina.session.StandardSession.doReadObject(StandardSession.java:1530)
	at org.apache.catalina.session.StandardSession.readObjectData(StandardSession.java:1000)
	at org.apache.catalina.session.StandardManager.doLoad(StandardManager.java:210)
	at org.apache.catalina.session.StandardManager.load(StandardManager.java:156)
	at org.apache.catalina.session.StandardManager.startInternal(StandardManager.java:346)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4931)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2025-07-01 20:32:38.655 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 20:32:38.821 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} inited
2025-07-01 20:32:38.863 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} inited
2025-07-01 20:32:38.906 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
2025-07-01 20:32:38.906 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} closing ...
2025-07-01 20:32:38.907 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} closed
2025-07-01 20:32:38.907 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} closing ...
2025-07-01 20:32:38.911 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} closed
2025-07-01 20:32:38.913 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 20:32:38.919 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 20:32:38.926 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 24 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$f0a479ad.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$f0a479ad$$FastClassBySpringCGLIB$$c64af030.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$f0a479ad.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:78)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:144)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:136)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:126)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 46 common frames omitted
2025-07-01 20:32:43.512 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 7888 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 20:32:43.512 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 20:32:43.512 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 20:32:43.615 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\entity\dto\OrderDto.class]; nested exception is java.lang.ArrayIndexOutOfBoundsException: Index 6 out of bounds for length 0
2025-07-01 20:32:43.622 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\entity\dto\OrderDto.class]; nested exception is java.lang.ArrayIndexOutOfBoundsException: Index 6 out of bounds for length 0
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:457)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:316)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)
	at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:128)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:295)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:249)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:206)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:174)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:331)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:756)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:572)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.lang.ArrayIndexOutOfBoundsException: Index 6 out of bounds for length 0
	at org.springframework.asm.ClassReader.readShort(ClassReader.java:3615)
	at org.springframework.asm.ClassReader.<init>(ClassReader.java:197)
	at org.springframework.asm.ClassReader.<init>(ClassReader.java:180)
	at org.springframework.asm.ClassReader.<init>(ClassReader.java:166)
	at org.springframework.asm.ClassReader.<init>(ClassReader.java:287)
	at org.springframework.core.type.classreading.SimpleMetadataReader.getClassReader(SimpleMetadataReader.java:57)
	at org.springframework.core.type.classreading.SimpleMetadataReader.<init>(SimpleMetadataReader.java:48)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:103)
	at org.springframework.core.type.classreading.CachingMetadataReaderFactory.getMetadataReader(CachingMetadataReaderFactory.java:123)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:429)
	... 25 common frames omitted
2025-07-01 20:32:49.476 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 7888 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 20:32:49.476 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 20:32:49.476 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 20:32:50.366 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 20:32:50.367 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 20:32:50.389 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 0 Redis repository interfaces.
2025-07-01 20:32:50.496 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$f64f6b4e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:32:50.504 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:32:50.591 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 20:32:50.591 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 20:32:50.591 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 20:32:50.591 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 20:32:50.592 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 20:32:50.593 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:32:50.593 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 20:32:50.593 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 20:32:50.622 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-2].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 20:32:50.622 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1139 ms
2025-07-01 20:32:50.626 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 20:32:50.757 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} inited
2025-07-01 20:32:50.782 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} inited
2025-07-01 20:32:50.989 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 20:32:50.989 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 20:32:51.285 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 20:32:51.426 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4e7ac7b0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6f0adec5, org.springframework.security.web.context.SecurityContextPersistenceFilter@14bc2718, org.springframework.security.web.header.HeaderWriterFilter@5be0bb35, org.springframework.web.filter.CorsFilter@3383e8a8, org.springframework.security.web.authentication.logout.LogoutFilter@6a3a26a6, com.huang.store.security.JwtAuthenticationTokenFilter@33b0b0c0, com.huang.store.security.CustomAuthenticationFilter@3b6c343f, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@bb3aa99, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@265c64e5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@783b4a08, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1837c229, org.springframework.security.web.session.SessionManagementFilter@5c4f514, org.springframework.security.web.access.ExceptionTranslationFilter@78094b69, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@29a6a987]
2025-07-01 20:32:51.731 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 20:32:51.758 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 20:32:51.762 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 20:32:51.767 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 2.368 seconds (JVM running for 786.717)
2025-07-01 20:33:23.382 [Thread-9] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:33:23.383 [Thread-9] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 20:33:23.386 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-578429832] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 20:33:23.387 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-578429832] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 20:33:23.387 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1124974952] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 20:33:23.388 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1124974952] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 20:33:23.389 [Thread-9] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-01 20:33:23.391 [Thread-9] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-01 20:33:23.397 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} closing ...
2025-07-01 20:33:23.398 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} closed
2025-07-01 20:33:23.398 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} closing ...
2025-07-01 20:33:23.399 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} closed
2025-07-01 20:33:23.573 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 7888 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 20:33:23.573 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 20:33:23.573 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 20:33:23.950 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 20:33:23.951 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 20:33:23.955 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-07-01 20:33:24.030 [restartedMain] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[com.huang.store.mapper]' package. Please check your configuration.
2025-07-01 20:33:24.135 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 20:33:24.135 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 20:33:24.136 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 20:33:24.136 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 20:33:24.136 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 20:33:24.137 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:33:24.138 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 20:33:24.138 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 20:33:24.170 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-2].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 20:33:24.170 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 593 ms
2025-07-01 20:33:24.412 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 20:33:24.534 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-9} inited
2025-07-01 20:33:24.565 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-10} inited
2025-07-01 20:33:24.629 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
2025-07-01 20:33:24.629 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-9} closing ...
2025-07-01 20:33:24.633 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-9} closed
2025-07-01 20:33:24.633 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-10} closing ...
2025-07-01 20:33:24.635 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-10} closed
2025-07-01 20:33:24.636 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 20:33:24.648 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 20:33:24.656 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 24 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$f0a479ad.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$f0a479ad$$FastClassBySpringCGLIB$$c64af030.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$f0a479ad.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:78)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:144)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:136)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:126)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 46 common frames omitted
2025-07-01 20:33:35.384 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 7888 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 20:33:35.384 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 20:33:35.385 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 20:33:35.736 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 20:33:35.736 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 20:33:35.775 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 37 ms. Found 0 Redis repository interfaces.
2025-07-01 20:33:35.911 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$f64f6b4e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:33:35.925 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:33:36.037 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 20:33:36.038 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 20:33:36.038 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 20:33:36.038 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 20:33:36.038 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 20:33:36.039 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:33:36.039 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 20:33:36.039 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 20:33:36.069 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-3].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 20:33:36.069 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 683 ms
2025-07-01 20:33:36.073 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 20:33:36.250 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-11} inited
2025-07-01 20:33:36.278 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-12} inited
2025-07-01 20:33:36.531 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 20:33:36.531 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 20:33:36.835 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 20:33:37.050 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@56858fd0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@629256a3, org.springframework.security.web.context.SecurityContextPersistenceFilter@24e3586, org.springframework.security.web.header.HeaderWriterFilter@76a76753, org.springframework.web.filter.CorsFilter@61c89fed, org.springframework.security.web.authentication.logout.LogoutFilter@7b5ecb3c, com.huang.store.security.JwtAuthenticationTokenFilter@6c6af90d, com.huang.store.security.CustomAuthenticationFilter@6434d988, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1cf7e19a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4d7def65, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@ad8466, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1861b9f, org.springframework.security.web.session.SessionManagementFilter@1b726316, org.springframework.security.web.access.ExceptionTranslationFilter@948d69c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@fe791b6]
2025-07-01 20:33:37.357 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 20:33:37.378 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 20:33:37.383 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 20:33:37.390 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 2.056 seconds (JVM running for 832.339)
2025-07-01 20:33:56.146 [Thread-29] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:33:56.146 [Thread-29] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 20:33:56.150 [Thread-29] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1838545653] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 20:33:56.150 [Thread-29] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1838545653] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 20:33:56.151 [Thread-29] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-74315828] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 20:33:56.152 [Thread-29] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-74315828] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 20:33:56.153 [Thread-29] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-01 20:33:56.155 [Thread-29] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-01 20:33:56.160 [Thread-29] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-11} closing ...
2025-07-01 20:33:56.161 [Thread-29] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-11} closed
2025-07-01 20:33:56.161 [Thread-29] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-12} closing ...
2025-07-01 20:33:56.162 [Thread-29] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-12} closed
2025-07-01 20:33:56.403 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 7888 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 20:33:56.403 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 20:33:56.403 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 20:33:56.905 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 20:33:56.905 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 20:33:56.910 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-07-01 20:33:57.017 [restartedMain] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[com.huang.store.mapper]' package. Please check your configuration.
2025-07-01 20:33:57.169 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 20:33:57.170 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 20:33:57.170 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 20:33:57.170 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 20:33:57.171 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 20:33:57.174 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:33:57.175 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 20:33:57.175 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 20:33:57.223 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-3].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 20:33:57.224 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 771 ms
2025-07-01 20:33:57.606 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 20:33:57.985 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-13} inited
2025-07-01 20:33:58.065 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-14} inited
2025-07-01 20:33:58.135 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
2025-07-01 20:33:58.136 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-13} closing ...
2025-07-01 20:33:58.138 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-13} closed
2025-07-01 20:33:58.139 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-14} closing ...
2025-07-01 20:33:58.140 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-14} closed
2025-07-01 20:33:58.141 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 20:33:58.147 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 20:33:58.154 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 24 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$f0a479ad.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$f0a479ad$$FastClassBySpringCGLIB$$c64af030.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$f0a479ad.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:78)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:144)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:136)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:126)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 46 common frames omitted
2025-07-01 20:34:03.178 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 7888 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 20:34:03.178 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 20:34:03.178 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 20:34:03.955 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 20:34:03.955 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 20:34:03.987 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 32 ms. Found 0 Redis repository interfaces.
2025-07-01 20:34:04.216 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$f64f6b4e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:34:04.233 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:34:04.385 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 20:34:04.385 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 20:34:04.385 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 20:34:04.385 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 20:34:04.386 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 20:34:04.389 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:34:04.389 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 20:34:04.390 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 20:34:04.421 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-4].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 20:34:04.421 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1232 ms
2025-07-01 20:34:04.427 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 20:34:04.591 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-15} inited
2025-07-01 20:34:04.622 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-16} inited
2025-07-01 20:34:04.981 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 20:34:04.983 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 20:34:06.109 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 20:34:06.476 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1ca076ec, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@59764264, org.springframework.security.web.context.SecurityContextPersistenceFilter@298cc4f5, org.springframework.security.web.header.HeaderWriterFilter@7f61bdbd, org.springframework.web.filter.CorsFilter@222a3639, org.springframework.security.web.authentication.logout.LogoutFilter@49255559, com.huang.store.security.JwtAuthenticationTokenFilter@1ce7f8e2, com.huang.store.security.CustomAuthenticationFilter@27bb2060, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@328f91bf, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@506d7e18, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2293bdfd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@79f3525b, org.springframework.security.web.session.SessionManagementFilter@4c1d1d7a, org.springframework.security.web.access.ExceptionTranslationFilter@62e37f7b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4eafd789]
2025-07-01 20:34:06.759 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 20:34:06.776 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 20:34:06.781 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 20:34:06.786 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 3.825 seconds (JVM running for 861.735)
2025-07-01 20:34:07.702 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-01 20:34:07.736 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 18284 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 20:34:07.739 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 20:34:07.739 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 20:34:07.955 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-01 20:34:07.955 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-01 20:34:08.714 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 20:34:08.719 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 20:34:08.758 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
2025-07-01 20:34:09.059 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$194d8efa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:34:09.081 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:34:09.791 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 20:34:09.793 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 20:34:09.794 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 20:34:09.795 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 20:34:09.800 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 20:34:09.811 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:34:09.831 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 20:34:09.859 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 20:34:09.959 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 20:34:09.959 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2003 ms
2025-07-01 20:34:09.965 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 20:34:11.123 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-01 20:34:11.168 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-01 20:34:11.629 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 20:34:11.630 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 20:34:12.336 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 20:34:12.523 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3efb1a9e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@17a62a79, org.springframework.security.web.context.SecurityContextPersistenceFilter@e5ac7be, org.springframework.security.web.header.HeaderWriterFilter@6afe628e, org.springframework.web.filter.CorsFilter@62b4c132, org.springframework.security.web.authentication.logout.LogoutFilter@2abd8f28, com.huang.store.security.JwtAuthenticationTokenFilter@6c0b410e, com.huang.store.security.CustomAuthenticationFilter@438efb9, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3aafbab6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@228f2737, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5cf2b5b9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7068b26, org.springframework.security.web.session.SessionManagementFilter@1040bf8a, org.springframework.security.web.access.ExceptionTranslationFilter@1f8b12f1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@482cdcae]
2025-07-01 20:34:12.871 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2025-07-01 20:34:12.897 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 20:34:12.906 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8080 is already in use
2025-07-01 20:34:12.932 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-01 20:34:12.969 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-01 20:34:12.969 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-01 20:34:12.970 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-01 20:34:12.976 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:34:12.976 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 20:34:12.984 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-01 20:34:12.986 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-01 20:34:12.994 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 20:34:13.012 [restartedMain] ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2025-07-01 20:35:25.302 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-01 20:35:25.328 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 27144 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 20:35:25.329 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 20:35:25.330 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 20:35:25.503 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-01 20:35:25.503 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-01 20:35:26.184 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 20:35:26.189 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 20:35:26.236 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 30 ms. Found 0 Redis repository interfaces.
2025-07-01 20:35:26.537 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$f0b3fd8f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:35:26.559 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:35:27.119 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 20:35:27.121 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 20:35:27.121 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 20:35:27.121 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 20:35:27.127 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 20:35:27.137 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:35:27.144 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 20:35:27.191 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 20:35:27.322 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 20:35:27.323 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1820 ms
2025-07-01 20:35:27.329 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 20:35:28.345 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-01 20:35:28.391 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-01 20:35:28.743 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 20:35:28.743 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 20:35:29.344 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 20:35:29.527 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@995d2bd, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5b59f681, org.springframework.security.web.context.SecurityContextPersistenceFilter@4a948d15, org.springframework.security.web.header.HeaderWriterFilter@3d2dc4f6, org.springframework.web.filter.CorsFilter@4ba4f0e8, org.springframework.security.web.authentication.logout.LogoutFilter@19a40c2d, com.huang.store.security.JwtAuthenticationTokenFilter@31f22974, com.huang.store.security.CustomAuthenticationFilter@55f4aba6, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4f2c4583, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7c03c103, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@c7e7587, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@568c2bad, org.springframework.security.web.session.SessionManagementFilter@19707a1b, org.springframework.security.web.access.ExceptionTranslationFilter@177a2424, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@462dadf1]
2025-07-01 20:35:29.841 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 20:35:29.865 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 20:35:29.904 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 20:35:29.916 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 5.093 seconds (JVM running for 5.486)
2025-07-01 20:37:05.516 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-01 20:37:05.517 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-01 20:37:05.523 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 5 ms
2025-07-01 20:37:05.789 [http-nio-8080-exec-1] WARN  org.apache.catalina.util.SessionIdGeneratorBase - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [201] milliseconds.
2025-07-01 20:39:13.772 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:39:13.772 [Thread-7] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 20:39:13.773 [Thread-7] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-07-01 20:39:13.798 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1186472240] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 20:39:13.798 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1186472240] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 20:39:13.799 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-17552867] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 20:39:13.799 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-17552867] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 20:39:13.800 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-01 20:39:13.802 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-01 20:39:13.816 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-01 20:39:13.820 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-01 20:39:13.820 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-01 20:39:13.821 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-01 20:39:13.879 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 27144 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 20:39:13.879 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 20:39:13.879 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 20:39:13.994 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 20:39:13.995 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 20:39:14.002 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2025-07-01 20:39:14.035 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$f0b3fd8f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:39:14.039 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:39:14.082 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 20:39:14.082 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 20:39:14.082 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 20:39:14.082 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 20:39:14.083 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 20:39:14.083 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:39:14.084 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 20:39:14.084 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 20:39:14.097 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 20:39:14.097 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 216 ms
2025-07-01 20:39:14.100 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 20:39:14.169 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} inited
2025-07-01 20:39:14.186 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} inited
2025-07-01 20:39:14.288 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 20:39:14.288 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 20:39:14.340 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'spikeController' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\controller\SpikeController.class]: Post-processing of merged bean definition failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.huang.store.controller.SpikeController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@73449749]
2025-07-01 20:39:14.342 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closing ...
2025-07-01 20:39:14.343 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed
2025-07-01 20:39:14.343 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closing ...
2025-07-01 20:39:14.344 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed
2025-07-01 20:39:14.344 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 20:39:14.350 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 20:39:14.372 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'spikeController' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\controller\SpikeController.class]: Post-processing of merged bean definition failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.huang.store.controller.SpikeController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@73449749]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.lang.IllegalStateException: Failed to introspect Class [com.huang.store.controller.SpikeController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@73449749]
	at org.springframework.util.ReflectionUtils.getDeclaredFields(ReflectionUtils.java:735)
	at org.springframework.util.ReflectionUtils.doWithLocalFields(ReflectionUtils.java:667)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.buildResourceMetadata(CommonAnnotationBeanPostProcessor.java:377)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.findResourceMetadata(CommonAnnotationBeanPostProcessor.java:358)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessMergedBeanDefinition(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyMergedBeanDefinitionPostProcessors(AbstractAutowireCapableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	... 20 common frames omitted
Caused by: java.lang.NoClassDefFoundError: com/huang/store/service/SpikeService
	at java.base/java.lang.Class.getDeclaredFields0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredFields(Class.java:3297)
	at java.base/java.lang.Class.getDeclaredFields(Class.java:2371)
	at org.springframework.util.ReflectionUtils.getDeclaredFields(ReflectionUtils.java:730)
	... 26 common frames omitted
Caused by: java.lang.ClassNotFoundException: com.huang.store.service.SpikeService
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:144)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	... 30 common frames omitted
2025-07-01 20:39:16.600 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-01 20:39:16.610 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 19408 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 20:39:16.610 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 20:39:16.610 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 20:39:16.735 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-01 20:39:16.736 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-01 20:39:16.932 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 27144 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 20:39:16.932 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 20:39:16.933 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 20:39:17.185 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 20:39:17.186 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 20:39:17.205 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
2025-07-01 20:39:17.266 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$f0b3fd8f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:39:17.275 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:39:17.291 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 20:39:17.292 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 20:39:17.314 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2025-07-01 20:39:17.346 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 20:39:17.347 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 20:39:17.347 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 20:39:17.347 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 20:39:17.348 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 20:39:17.349 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:39:17.349 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 20:39:17.350 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 20:39:17.373 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 20:39:17.374 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 439 ms
2025-07-01 20:39:17.377 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 20:39:17.491 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} inited
2025-07-01 20:39:17.513 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} inited
2025-07-01 20:39:17.519 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$a70fd09c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:39:17.536 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:39:17.713 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 20:39:17.713 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 20:39:17.878 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 20:39:17.879 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 20:39:17.879 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 20:39:17.879 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 20:39:17.882 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 20:39:17.888 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:39:17.889 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 20:39:17.889 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 20:39:17.928 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 20:39:17.937 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 20:39:17.937 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1201 ms
2025-07-01 20:39:17.941 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 20:39:18.090 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@629f71f3, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@30b407b3, org.springframework.security.web.context.SecurityContextPersistenceFilter@27209865, org.springframework.security.web.header.HeaderWriterFilter@43341654, org.springframework.web.filter.CorsFilter@74bd172, org.springframework.security.web.authentication.logout.LogoutFilter@56a3cea, com.huang.store.security.JwtAuthenticationTokenFilter@c94d26d, com.huang.store.security.CustomAuthenticationFilter@174d1676, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@19b78eae, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@14cdee6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@62a9ee2d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@69dfa9aa, org.springframework.security.web.session.SessionManagementFilter@473c9817, org.springframework.security.web.access.ExceptionTranslationFilter@6dc9706f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@78bd7ba]
2025-07-01 20:39:18.299 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 20:39:18.314 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 20:39:18.319 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 20:39:18.324 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 1.439 seconds (JVM running for 233.894)
2025-07-01 20:39:18.567 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-01 20:39:18.592 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-01 20:39:18.840 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 20:39:18.840 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 20:39:19.219 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 20:39:19.347 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@25368985, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5df83a5d, org.springframework.security.web.context.SecurityContextPersistenceFilter@e238908, org.springframework.security.web.header.HeaderWriterFilter@4776bde, org.springframework.web.filter.CorsFilter@3998b1e1, org.springframework.security.web.authentication.logout.LogoutFilter@55d81b30, com.huang.store.security.JwtAuthenticationTokenFilter@bbd0136, com.huang.store.security.CustomAuthenticationFilter@6a0e3dbd, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6265084d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@45a10175, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3f369a99, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@b133504, org.springframework.security.web.session.SessionManagementFilter@30dd813d, org.springframework.security.web.access.ExceptionTranslationFilter@6383b59f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@11d4c11c]
2025-07-01 20:39:19.662 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2025-07-01 20:39:19.688 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 20:39:19.692 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8080 is already in use
2025-07-01 20:39:19.705 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-01 20:39:19.708 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-01 20:39:19.708 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-01 20:39:19.709 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-01 20:39:19.711 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:39:19.711 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 20:39:19.714 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-01 20:39:19.714 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-01 20:39:19.718 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 20:39:19.729 [restartedMain] ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2025-07-01 20:39:28.778 [http-nio-8080-exec-1] INFO  o.a.c.c.ContainerBase.[Tomcat-1].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-01 20:39:28.778 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-01 20:39:28.780 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-01 20:39:29.047 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 20:39:29.089 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:39:29.093 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 20:39:29.335 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 56464ff@456.com(String)
2025-07-01 20:39:29.389 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 20:39:29.426 [http-nio-8080-exec-1] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:56464ff@456.com    数据库密码:$2a$10$7OBMT05X3FsorQiaTl2aQuxGJpdi4w1dVWZdG8Oy9K7E61SWT9WAy
2025-07-01 20:39:29.509 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.bookId = ? AND sg.status = 1 ORDER BY sg.createTime DESC
2025-07-01 20:39:29.512 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:39:29.513 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.bookId = ?
        AND sg.status = 1
        ORDER BY sg.createTime DESC ::: DataSources: slave
2025-07-01 20:39:29.543 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==> Parameters: 2(Integer)
2025-07-01 20:39:29.562 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - <==      Total: 2
2025-07-01 20:39:29.565 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 20:39:29.565 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:39:29.566 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 20:39:29.569 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 1(Long)
2025-07-01 20:39:29.575 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 20:39:29.576 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 20:39:29.576 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:39:29.576 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 20:39:29.577 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 3(Long)
2025-07-01 20:39:29.581 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 20:39:40.079 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} closing ...
2025-07-01 20:39:40.080 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} closed
2025-07-01 20:39:40.081 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} closing ...
2025-07-01 20:39:40.083 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} closed
2025-07-01 20:39:46.644 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-01 20:39:46.652 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 25460 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 20:39:46.652 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 20:39:46.652 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 20:39:46.754 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-01 20:39:46.755 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-01 20:39:47.171 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 20:39:47.173 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 20:39:47.191 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2025-07-01 20:39:47.352 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$88bb740d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:39:47.365 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:39:47.681 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 20:39:47.682 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 20:39:47.682 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 20:39:47.682 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 20:39:47.686 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 20:39:47.691 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:39:47.691 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 20:39:47.691 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 20:39:47.737 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 20:39:47.737 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 982 ms
2025-07-01 20:39:47.740 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 20:39:48.308 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-01 20:39:48.327 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-01 20:39:48.557 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 20:39:48.557 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 20:39:48.896 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 20:39:49.001 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@66b37a1f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@47ce72c9, org.springframework.security.web.context.SecurityContextPersistenceFilter@2f3dc194, org.springframework.security.web.header.HeaderWriterFilter@67fc8606, org.springframework.web.filter.CorsFilter@18f34dbb, org.springframework.security.web.authentication.logout.LogoutFilter@5b4fa351, com.huang.store.security.JwtAuthenticationTokenFilter@462ea444, com.huang.store.security.CustomAuthenticationFilter@37e174f, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@138cf7fe, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2043d856, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7bddb77d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6c686325, org.springframework.security.web.session.SessionManagementFilter@22cb0b92, org.springframework.security.web.access.ExceptionTranslationFilter@70cb87d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@63e1ca9b]
2025-07-01 20:39:49.232 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 20:39:49.247 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 20:39:49.259 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 20:39:49.265 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 2.874 seconds (JVM running for 3.293)
2025-07-01 20:39:53.737 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-01 20:39:53.737 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-01 20:39:53.740 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-07-01 20:39:53.844 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 20:39:53.858 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:39:53.860 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 20:39:53.909 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 56464ff@456.com(String)
2025-07-01 20:39:53.923 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 20:39:53.933 [http-nio-8080-exec-1] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:56464ff@456.com    数据库密码:$2a$10$7OBMT05X3FsorQiaTl2aQuxGJpdi4w1dVWZdG8Oy9K7E61SWT9WAy
2025-07-01 20:39:54.026 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.bookId = ? AND sg.status = 1 ORDER BY sg.createTime DESC
2025-07-01 20:39:54.026 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:39:54.026 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.bookId = ?
        AND sg.status = 1
        ORDER BY sg.createTime DESC ::: DataSources: slave
2025-07-01 20:39:54.031 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==> Parameters: 2(Integer)
2025-07-01 20:39:54.035 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - <==      Total: 2
2025-07-01 20:39:54.036 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 20:39:54.036 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:39:54.036 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 20:39:54.037 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 1(Long)
2025-07-01 20:39:54.039 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 20:39:54.039 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 20:39:54.039 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:39:54.039 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 20:39:54.039 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 3(Long)
2025-07-01 20:39:54.040 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 20:40:09.117 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.bookId = ? AND sg.status = 1 ORDER BY sg.createTime DESC
2025-07-01 20:40:09.117 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:40:09.117 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.bookId = ?
        AND sg.status = 1
        ORDER BY sg.createTime DESC ::: DataSources: slave
2025-07-01 20:40:09.118 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==> Parameters: 3(Integer)
2025-07-01 20:40:09.122 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - <==      Total: 1
2025-07-01 20:40:09.123 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 20:40:09.123 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:40:09.124 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 20:40:09.124 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 1(Long)
2025-07-01 20:40:09.128 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 20:40:32.346 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 20:40:32.346 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:40:32.346 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 20:40:32.347 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 56464ff@456.com(String)
2025-07-01 20:40:32.348 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 20:40:32.348 [http-nio-8080-exec-5] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:56464ff@456.com    数据库密码:$2a$10$7OBMT05X3FsorQiaTl2aQuxGJpdi4w1dVWZdG8Oy9K7E61SWT9WAy
2025-07-01 20:40:32.417 [http-nio-8080-exec-5] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=56464ff@456.com, password=$2a$10$7OBMT05X3FsorQiaTl2aQuxGJpdi4w1dVWZdG8Oy9K7E61SWT9WAy, enabled=true, roles=[ROLE_USER]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=BA3DEE950CE0871862D246DA73C65FBC], Granted Authorities=[ROLE_USER]]
2025-07-01 20:40:32.437 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 20:40:32.438 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:40:32.438 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 20:40:32.438 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 56464ff@456.com(String)
2025-07-01 20:40:32.440 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 20:40:33.556 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-01 20:40:33.557 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:40:33.557 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-01 20:40:33.559 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 20:40:33.559 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:40:33.559 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 20:40:33.560 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 20:40:33.561 [http-nio-8080-exec-8] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-01 20:40:33.563 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 20:40:33.564 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:40:33.564 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 20:40:33.564 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-01 20:40:33.564 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-01 20:40:33.564 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:40:33.564 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-01 20:40:33.564 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:40:33.564 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-01 20:40:33.564 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 20:40:33.565 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:40:33.565 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 20:40:33.565 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-01 20:40:33.565 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-01 20:40:33.565 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:40:33.565 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-01 20:40:33.566 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 20:40:33.571 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 20:40:33.572 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 20:40:33.572 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-01 20:40:33.572 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:40:33.572 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 20:40:33.573 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-01 20:40:33.576 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 20:40:33.579 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-01 20:40:33.581 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-01 20:40:33.581 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 20:40:33.581 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:40:33.581 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 20:40:33.582 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 20:40:33.584 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 20:40:33.585 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 20:40:33.585 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-01 20:40:33.586 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:40:33.586 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 20:40:33.586 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 20:40:33.586 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:40:33.586 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 20:40:33.586 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 20:40:33.587 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-01 20:40:33.588 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-01 20:40:33.589 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 20:40:33.589 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 20:40:33.590 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 20:40:33.591 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 20:40:33.591 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:40:33.591 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 20:40:33.591 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 20:40:33.592 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 20:40:33.593 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 20:40:33.594 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 20:40:33.594 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 20:40:33.595 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:40:33.595 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 20:40:33.595 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 20:40:33.596 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 20:40:33.596 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 20:40:33.597 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 20:40:33.597 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:40:33.597 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 20:40:33.598 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 20:40:33.600 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 20:40:33.602 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 20:40:33.602 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 20:40:33.602 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:40:33.602 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 20:40:33.602 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 20:40:33.602 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:40:33.602 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 20:40:33.602 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 20:40:33.602 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 20:40:33.604 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 20:40:33.604 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 20:40:33.604 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:40:33.604 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 20:40:33.604 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 20:40:33.605 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 20:40:33.607 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 20:40:33.607 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 20:40:33.607 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:40:33.607 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 20:40:33.608 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 20:40:33.609 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 20:40:33.610 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 20:40:33.610 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:40:33.610 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 20:40:33.610 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 20:40:33.611 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 20:40:36.016 [http-nio-8080-exec-6] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 20:40:36.016 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:40:36.016 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 20:40:36.018 [http-nio-8080-exec-6] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 20:40:36.024 [http-nio-8080-exec-6] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 3
2025-07-01 20:40:36.026 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 20:40:36.026 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:40:36.026 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 20:40:36.029 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 2(Long)
2025-07-01 20:40:36.035 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 20:40:36.040 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 20:40:36.041 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:40:36.041 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 20:40:36.041 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 1(Long)
2025-07-01 20:40:36.046 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 3
2025-07-01 20:40:36.047 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 20:40:36.047 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:40:36.047 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 20:40:36.047 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 3(Long)
2025-07-01 20:40:36.056 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 20:40:40.179 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.bookId = ? AND sg.status = 1 ORDER BY sg.createTime DESC
2025-07-01 20:40:40.180 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:40:40.180 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.bookId = ?
        AND sg.status = 1
        ORDER BY sg.createTime DESC ::: DataSources: slave
2025-07-01 20:40:40.183 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==> Parameters: 5(Integer)
2025-07-01 20:40:40.195 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - <==      Total: 1
2025-07-01 20:40:40.195 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 20:40:40.195 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:40:40.195 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 20:40:40.197 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 2(Long)
2025-07-01 20:40:40.200 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 20:40:44.185 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.bookId = ? AND sg.status = 1 ORDER BY sg.createTime DESC
2025-07-01 20:40:44.185 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:40:44.185 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.bookId = ?
        AND sg.status = 1
        ORDER BY sg.createTime DESC ::: DataSources: slave
2025-07-01 20:40:44.187 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==> Parameters: 2(Integer)
2025-07-01 20:40:44.194 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - <==      Total: 2
2025-07-01 20:40:44.195 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 20:40:44.195 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:40:44.195 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 20:40:44.195 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 1(Long)
2025-07-01 20:40:44.196 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 20:40:44.196 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 20:40:44.196 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:40:44.196 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 20:40:44.197 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 3(Long)
2025-07-01 20:40:44.200 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 20:40:57.861 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.bookId = ? AND sg.status = 1 ORDER BY sg.createTime DESC
2025-07-01 20:40:57.862 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:40:57.862 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.bookId = ?
        AND sg.status = 1
        ORDER BY sg.createTime DESC ::: DataSources: slave
2025-07-01 20:40:57.864 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==> Parameters: 2(Integer)
2025-07-01 20:40:57.869 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - <==      Total: 2
2025-07-01 20:40:57.870 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 20:40:57.870 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:40:57.870 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 20:40:57.871 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 1(Long)
2025-07-01 20:40:57.873 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 20:40:57.874 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 20:40:57.874 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:40:57.874 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 20:40:57.874 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 3(Long)
2025-07-01 20:40:57.877 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 20:41:40.227 [http-nio-8080-exec-9] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-01 20:41:40.227 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 20:41:40.227 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-01 20:41:40.227 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:41:40.227 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:41:40.227 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-01 20:41:40.227 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-01 20:41:40.227 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 20:41:40.227 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:41:40.227 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-01 20:41:40.228 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 20:41:40.228 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 20:41:40.228 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:41:40.228 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 20:41:40.229 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-01 20:41:40.229 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:41:40.229 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-01 20:41:40.231 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-01 20:41:40.232 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 20:41:40.232 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:41:40.232 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 20:41:40.232 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-01 20:41:40.232 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:41:40.232 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-01 20:41:40.232 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 20:41:40.233 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 20:41:40.233 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 20:41:40.233 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:41:40.233 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 20:41:40.233 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-01 20:41:40.236 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-01 20:41:40.236 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-01 20:41:40.236 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 20:41:40.236 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:41:40.236 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 20:41:40.237 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-01 20:41:40.238 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-01 20:41:40.238 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 20:41:40.239 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-01 20:41:40.240 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 20:41:40.238 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 20:41:40.242 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-01 20:41:40.242 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 20:41:40.243 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 20:41:40.243 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:41:40.243 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 20:41:40.243 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 20:41:40.243 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 20:41:40.243 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 20:41:40.244 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:41:40.244 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 20:41:40.244 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 20:41:40.244 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 20:41:40.245 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 20:41:40.245 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 20:41:40.245 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:41:40.245 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 20:41:40.245 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 20:41:40.245 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 20:41:40.246 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:41:40.246 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 20:41:40.246 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 20:41:40.246 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 20:41:40.246 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 20:41:40.247 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 20:41:40.247 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 20:41:40.247 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:41:40.247 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 20:41:40.247 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 20:41:40.248 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 20:41:40.248 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 20:41:40.248 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:41:40.248 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 20:41:40.248 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 20:41:40.249 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 20:41:40.249 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 20:41:40.249 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:41:40.249 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 20:41:40.249 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 20:41:40.250 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 20:41:40.251 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 20:41:40.251 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:41:40.251 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 20:41:40.251 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 20:41:40.251 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 20:41:40.252 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 20:41:40.254 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 20:41:40.254 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:41:40.254 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 20:41:40.254 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 20:41:40.256 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 20:41:40.257 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 20:41:40.257 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:41:40.257 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 20:41:40.257 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 20:41:40.259 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 20:41:42.243 [http-nio-8080-exec-6] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 20:41:42.243 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:41:42.243 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 20:41:42.244 [http-nio-8080-exec-6] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 20:41:42.251 [http-nio-8080-exec-6] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 3
2025-07-01 20:41:42.252 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 20:41:42.252 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:41:42.252 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 20:41:42.254 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 2(Long)
2025-07-01 20:41:42.265 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 20:41:42.266 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 20:41:42.267 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:41:42.267 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 20:41:42.267 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 1(Long)
2025-07-01 20:41:42.273 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 3
2025-07-01 20:41:42.273 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 20:41:42.274 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:41:42.274 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 20:41:42.274 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 3(Long)
2025-07-01 20:41:42.281 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 20:41:46.637 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzNTE0NzgwNzksImV4cCI6MTc1MTM1MzI3OH0.ohCacO4_DL7FUUekZpk215fJHZfU9SV6x_VUwT-7AR_JTNwjomwq6arLujG07AugYlI4wF220VjWBnrjKReo1g
2025-07-01 20:45:29.674 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 20:45:29.674 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:45:29.674 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 20:45:29.676 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 2545059634@qq.com(String)
2025-07-01 20:45:29.680 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 20:45:29.681 [http-nio-8080-exec-10] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:2545059634@qq.com    数据库密码:$2a$10$w8zNNUSDq3MCiLDDuAhYXedA0QGva1Z4.6UxO61Njhsrlo8voc01G
2025-07-01 20:45:29.795 [http-nio-8080-exec-10] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=2545059634@qq.com, password=$2a$10$w8zNNUSDq3MCiLDDuAhYXedA0QGva1Z4.6UxO61Njhsrlo8voc01G, enabled=true, roles=[ROLE_ADMIN]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]
2025-07-01 20:45:29.797 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 20:45:29.797 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:45:29.798 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 20:45:29.798 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 2545059634@qq.com(String)
2025-07-01 20:45:29.800 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 20:45:33.651 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 20:45:33.652 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:45:33.652 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 20:45:33.653 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 20:45:33.656 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-01 20:45:33.658 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 20:45:33.658 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:45:33.658 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 20:45:33.659 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 20:45:33.660 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 20:45:35.478 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeActivityMapper.updateActivityStatus - ==>  Preparing: UPDATE spikeActivity SET status = ?, updateTime = NOW() WHERE id = ?
2025-07-01 20:45:35.479 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:45:35.479 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: UPDATE spikeActivity SET
            status = ?,
            updateTime = NOW()
        WHERE id = ? ::: DataSources: master
2025-07-01 20:45:35.491 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeActivityMapper.updateActivityStatus - ==> Parameters: 1(Integer), 2(Long)
2025-07-01 20:45:35.498 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeActivityMapper.updateActivityStatus - <==    Updates: 1
2025-07-01 20:45:36.183 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeActivityMapper.updateActivityStatus - ==>  Preparing: UPDATE spikeActivity SET status = ?, updateTime = NOW() WHERE id = ?
2025-07-01 20:45:36.183 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:45:36.183 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: UPDATE spikeActivity SET
            status = ?,
            updateTime = NOW()
        WHERE id = ? ::: DataSources: master
2025-07-01 20:45:36.184 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeActivityMapper.updateActivityStatus - ==> Parameters: 1(Integer), 3(Long)
2025-07-01 20:45:36.187 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeActivityMapper.updateActivityStatus - <==    Updates: 1
2025-07-01 20:45:56.010 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.bookId = ? AND sg.status = 1 ORDER BY sg.createTime DESC
2025-07-01 20:45:56.010 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:45:56.010 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.bookId = ?
        AND sg.status = 1
        ORDER BY sg.createTime DESC ::: DataSources: slave
2025-07-01 20:45:56.014 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==> Parameters: 2(Integer)
2025-07-01 20:45:56.019 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - <==      Total: 2
2025-07-01 20:45:56.020 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 20:45:56.020 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:45:56.020 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 20:45:56.021 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 1(Long)
2025-07-01 20:45:56.025 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 20:45:56.027 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 20:45:56.027 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:45:56.027 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 20:45:56.027 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 3(Long)
2025-07-01 20:45:56.029 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 20:45:56.030 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.id = ?
2025-07-01 20:45:56.030 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:45:56.030 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.id = ? ::: DataSources: slave
2025-07-01 20:45:56.033 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==> Parameters: 7(Long)
2025-07-01 20:45:56.036 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - <==      Total: 1
2025-07-01 20:45:56.037 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeOrderMapper.getUserPurchaseCount - ==>  Preparing: SELECT COALESCE(SUM(quantity), 0) FROM spikeOrder WHERE userAccount = ? AND spikeGoodsId = ? AND status IN (0, 1)
2025-07-01 20:45:56.038 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:45:56.038 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT COALESCE(SUM(quantity), 0)
        FROM spikeOrder 
        WHERE userAccount = ? 
        AND spikeGoodsId = ?
        AND status IN (0, 1) ::: DataSources: slave
2025-07-01 20:45:56.046 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeOrderMapper.getUserPurchaseCount - ==> Parameters: 56464ff@456.com(String), 7(Long)
2025-07-01 20:45:56.052 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeOrderMapper.getUserPurchaseCount - <==      Total: 1
2025-07-01 20:45:56.858 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SpikeGoodsMapper.reduceStock - ==>  Preparing: UPDATE spikeGoods SET spikeStock = spikeStock - ?, soldCount = soldCount + ?, updateTime = NOW() WHERE id = ? AND spikeStock >= ?
2025-07-01 20:45:56.858 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:45:56.858 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: UPDATE spikeGoods
        SET spikeStock = spikeStock - ?,
            soldCount = soldCount + ?,
            updateTime = NOW()
        WHERE id = ?
        AND spikeStock >= ? ::: DataSources: master
2025-07-01 20:45:56.861 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SpikeGoodsMapper.reduceStock - ==> Parameters: 1(Integer), 1(Integer), 7(Long), 1(Integer)
2025-07-01 20:45:56.865 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SpikeGoodsMapper.reduceStock - <==    Updates: 1
2025-07-01 20:45:56.865 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - ==>  Preparing: update book set stock=stock-? where id=? and stock>=?
2025-07-01 20:45:56.866 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:45:56.866 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: update book
            set stock=stock-?
                where id=? and stock>=? ::: DataSources: master
2025-07-01 20:45:56.866 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - ==> Parameters: 1(Integer), 2(Integer), 1(Integer)
2025-07-01 20:45:56.869 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - <==    Updates: 1
2025-07-01 20:45:56.873 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.addOrder - ==>  Preparing: insert into bookorder(orderId,account,addressId,orderTime,shipTime,getTime,evaluateTime,closeTime,orderStatus,logisticsNum,confirmTime) values (?,?,?,?,?,?,?,?,?,?,?)
2025-07-01 20:45:56.874 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:45:56.874 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: insert into bookorder(orderId,account,addressId,orderTime,shipTime,getTime,evaluateTime,closeTime,orderStatus,logisticsNum,confirmTime)
            values (?,?,?,?,?,?,?,?,?,?,?) ::: DataSources: master
2025-07-01 20:45:57.126 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.addOrder - ==> Parameters: SPIKE1751373956869252(String), 56464ff@456.com(String), 1(Integer), 2025-07-01 20:45:56.873(Timestamp), null, null, null, null, 待付款(String), null, null
2025-07-01 20:45:57.134 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.addOrder - <==    Updates: 1
2025-07-01 20:45:57.140 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.OrderMapper.batchAddOrderDetail - ==>  Preparing: insert into orderdetail(orderId,bookId,num,price) values (?,?,?,?)
2025-07-01 20:45:57.140 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:45:57.141 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: insert into orderdetail(orderId,bookId,num,price)
        values
          
            (?,?,?,?) ::: DataSources: master
2025-07-01 20:45:57.144 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.OrderMapper.batchAddOrderDetail - ==> Parameters: SPIKE1751373956869252(String), 2(Integer), 1(Integer), 59.9(Double)
2025-07-01 20:45:57.147 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.OrderMapper.batchAddOrderDetail - <==    Updates: 1
2025-07-01 20:45:57.148 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.ExpenseMapper.addExpense - ==>  Preparing: insert into expense(orderId,productTotalMoney,freight,coupon,activityDiscount,allPrice,finallyPrice) values (?,?,?,?,?,?,?)
2025-07-01 20:45:57.148 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:45:57.148 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: insert into expense(orderId,productTotalMoney,freight,coupon,activityDiscount,allPrice,finallyPrice)
            values (?,?,?,?,?,?,?) ::: DataSources: master
2025-07-01 20:45:57.152 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.ExpenseMapper.addExpense - ==> Parameters: SPIKE1751373956869252(String), 59.9(Double), 0.0(Double), 0(Integer), 38.1(Double), 98.0(Double), 59.9(Double)
2025-07-01 20:45:57.155 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.ExpenseMapper.addExpense - <==    Updates: 1
2025-07-01 20:45:57.168 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - ==>  Preparing: INSERT INTO spikeRecord ( spikeGoodsId, userAccount, spikeTime, result, failReason, ipAddress, userAgent ) VALUES ( ?, ?, ?, ?, ?, ?, ? )
2025-07-01 20:45:57.168 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:45:57.168 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: INSERT INTO spikeRecord (
            spikeGoodsId, userAccount, spikeTime, result, 
            failReason, ipAddress, userAgent
        ) VALUES (
            ?, ?, ?, ?,
            ?, ?, ?
        ) ::: DataSources: master
2025-07-01 20:45:57.169 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - ==> Parameters: 7(Long), 56464ff@456.com(String), 2025-07-01T20:45:57.167049900(LocalDateTime), 1(Integer), null, 0:0:0:0:0:0:0:1(String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0(String)
2025-07-01 20:45:57.174 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - <==    Updates: 1
2025-07-01 20:45:57.236 [http-nio-8080-exec-9] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 20:45:57.236 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:45:57.236 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 20:45:57.236 [http-nio-8080-exec-9] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 20:45:57.237 [http-nio-8080-exec-9] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 3
2025-07-01 20:45:57.238 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 20:45:57.238 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:45:57.238 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 20:45:57.238 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 2(Long)
2025-07-01 20:45:57.241 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 20:45:57.241 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 20:45:57.241 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:45:57.241 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 20:45:57.241 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 1(Long)
2025-07-01 20:45:57.246 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 3
2025-07-01 20:45:57.247 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 20:45:57.247 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 20:45:57.247 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 20:45:57.247 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 3(Long)
2025-07-01 20:45:57.251 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 20:53:59.746 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:53:59.746 [Thread-7] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 20:53:59.748 [Thread-7] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-07-01 20:53:59.763 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-321919284] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 20:53:59.763 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-321919284] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 20:53:59.764 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1376716376] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 20:53:59.764 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1376716376] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 20:53:59.765 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-nioEventLoop-4-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/sun.nio.ch.WEPoll.wait(Native Method)
 java.base@17.0.8/sun.nio.ch.WEPollSelectorImpl.doSelect(WEPollSelectorImpl.java:111)
 java.base@17.0.8/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:129)
 java.base@17.0.8/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:146)
 app//io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:68)
 app//io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:879)
 app//io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:526)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 20:53:59.765 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 20:53:59.766 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 20:53:59.766 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 20:53:59.767 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 20:53:59.767 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-5] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 20:53:59.768 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-01 20:53:59.770 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-01 20:53:59.893 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-01 20:53:59.895 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-01 20:53:59.895 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-01 20:53:59.898 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-01 20:54:00.022 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 25460 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 20:54:00.022 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 20:54:00.022 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 20:54:00.372 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 20:54:00.373 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 20:54:00.384 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2025-07-01 20:54:00.557 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 20:54:00.557 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 20:54:00.557 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 20:54:00.557 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 20:54:00.558 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 20:54:00.558 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:54:00.558 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 20:54:00.558 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 20:54:00.586 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 20:54:00.586 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 547 ms
2025-07-01 20:54:00.604 [restartedMain] ERROR org.apache.catalina.session.StandardManager - Exception loading sessions from persistent storage
java.lang.ClassNotFoundException: com.huang.store.entity.user.SecurityUser
	at org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedWebappClassLoader.loadClass(TomcatEmbeddedWebappClassLoader.java:72)
	at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1141)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:467)
	at org.apache.catalina.util.CustomObjectInputStream.resolveClass(CustomObjectInputStream.java:158)
	at java.base/java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:2045)
	at java.base/java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1909)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2235)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream$FieldValues.<init>(ObjectInputStream.java:2617)
	at java.base/java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2468)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2268)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream$FieldValues.<init>(ObjectInputStream.java:2617)
	at java.base/java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2468)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2268)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:514)
	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:472)
	at org.apache.catalina.session.StandardSession.doReadObject(StandardSession.java:1530)
	at org.apache.catalina.session.StandardSession.readObjectData(StandardSession.java:1000)
	at org.apache.catalina.session.StandardManager.doLoad(StandardManager.java:210)
	at org.apache.catalina.session.StandardManager.load(StandardManager.java:156)
	at org.apache.catalina.session.StandardManager.startInternal(StandardManager.java:346)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4931)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2025-07-01 20:54:00.693 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 20:54:00.789 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} inited
2025-07-01 20:54:00.811 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} inited
2025-07-01 20:54:00.914 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\PublishMapper.xml]'
2025-07-01 20:54:00.914 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closing ...
2025-07-01 20:54:00.914 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed
2025-07-01 20:54:00.915 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closing ...
2025-07-01 20:54:00.916 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed
2025-07-01 20:54:00.916 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 20:54:00.924 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 20:54:00.955 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\PublishMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\PublishMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 24 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\PublishMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8310826c.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8310826c$$FastClassBySpringCGLIB$$6866eaef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8310826c.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\PublishMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.book.Publish'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.book.Publish
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.book.Publish'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.book.Publish
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:78)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:144)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:136)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:126)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.book.Publish'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.book.Publish
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.book.Publish
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 46 common frames omitted
2025-07-01 20:55:28.107 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 25460 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 20:55:28.107 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 20:55:28.107 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 20:55:28.280 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 20:55:28.280 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 20:55:28.284 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-07-01 20:55:28.335 [restartedMain] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[com.huang.store.mapper]' package. Please check your configuration.
2025-07-01 20:55:28.429 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 20:55:28.429 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 20:55:28.429 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 20:55:28.429 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 20:55:28.432 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 20:55:28.434 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:55:28.435 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 20:55:28.436 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 20:55:28.482 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 20:55:28.482 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 371 ms
2025-07-01 20:55:28.572 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 20:55:28.652 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} inited
2025-07-01 20:55:28.674 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} inited
2025-07-01 20:55:28.703 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
2025-07-01 20:55:28.703 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} closing ...
2025-07-01 20:55:28.704 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} closed
2025-07-01 20:55:28.704 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} closing ...
2025-07-01 20:55:28.704 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} closed
2025-07-01 20:55:28.705 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 20:55:28.710 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 20:55:28.713 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 24 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8310826c.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8310826c$$FastClassBySpringCGLIB$$6866eaef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8310826c.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:78)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:144)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:136)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:126)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 46 common frames omitted
2025-07-01 20:55:30.284 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 25460 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 20:55:30.284 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 20:55:30.284 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 20:55:30.714 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 20:55:30.715 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 20:55:30.735 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.
2025-07-01 20:55:30.829 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$88bb740d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:55:30.837 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:55:30.910 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 20:55:30.910 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 20:55:30.910 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 20:55:30.910 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 20:55:30.912 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 20:55:30.912 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:55:30.912 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 20:55:30.912 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 20:55:30.947 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-2].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 20:55:30.947 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 662 ms
2025-07-01 20:55:30.950 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 20:55:31.103 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} inited
2025-07-01 20:55:31.136 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} inited
2025-07-01 20:55:31.358 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 20:55:31.359 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 20:55:31.421 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderController': Unsatisfied dependency expressed through field 'orderService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.huang.store.service.imp.OrderService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true), @org.springframework.beans.factory.annotation.Qualifier("orderService")}
2025-07-01 20:55:31.424 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} closing ...
2025-07-01 20:55:31.427 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} closed
2025-07-01 20:55:31.427 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} closing ...
2025-07-01 20:55:31.428 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} closed
2025-07-01 20:55:31.429 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 20:55:31.436 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 20:55:31.446 [restartedMain] ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field orderService in com.huang.store.controller.OrderController required a bean of type 'com.huang.store.service.imp.OrderService' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)
	- @org.springframework.beans.factory.annotation.Qualifier("orderService")


Action:

Consider defining a bean of type 'com.huang.store.service.imp.OrderService' in your configuration.

2025-07-01 20:59:23.097 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 25460 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 20:59:23.097 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 20:59:23.097 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 20:59:23.316 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 20:59:23.316 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 20:59:23.319 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-07-01 20:59:23.387 [restartedMain] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[com.huang.store.mapper]' package. Please check your configuration.
2025-07-01 20:59:23.454 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 20:59:23.454 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 20:59:23.454 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 20:59:23.454 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 20:59:23.455 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 20:59:23.455 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:59:23.455 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 20:59:23.455 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 20:59:23.478 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-3].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 20:59:23.478 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 379 ms
2025-07-01 20:59:23.544 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 20:59:23.612 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-9} inited
2025-07-01 20:59:23.633 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-10} inited
2025-07-01 20:59:23.661 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
2025-07-01 20:59:23.661 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-9} closing ...
2025-07-01 20:59:23.662 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-9} closed
2025-07-01 20:59:23.662 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-10} closing ...
2025-07-01 20:59:23.662 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-10} closed
2025-07-01 20:59:23.663 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 20:59:23.669 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 20:59:23.673 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 24 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8310826c.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8310826c$$FastClassBySpringCGLIB$$6866eaef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8310826c.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:78)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:144)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:136)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:126)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 46 common frames omitted
2025-07-01 20:59:25.630 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 25460 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 20:59:25.630 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 20:59:25.630 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 20:59:25.893 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 20:59:25.893 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 20:59:25.916 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23 ms. Found 0 Redis repository interfaces.
2025-07-01 20:59:26.036 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$88bb740d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:59:26.047 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:59:26.181 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 20:59:26.182 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 20:59:26.182 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 20:59:26.183 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 20:59:26.184 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 20:59:26.184 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:59:26.184 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 20:59:26.184 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 20:59:26.204 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-4].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 20:59:26.205 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 572 ms
2025-07-01 20:59:26.207 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 20:59:26.362 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-11} inited
2025-07-01 20:59:26.386 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-12} inited
2025-07-01 20:59:26.584 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 20:59:26.584 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 20:59:26.671 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderController': Unsatisfied dependency expressed through field 'orderService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.huang.store.service.imp.OrderService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true), @org.springframework.beans.factory.annotation.Qualifier("orderService")}
2025-07-01 20:59:26.674 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-11} closing ...
2025-07-01 20:59:26.675 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-11} closed
2025-07-01 20:59:26.675 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-12} closing ...
2025-07-01 20:59:26.676 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-12} closed
2025-07-01 20:59:26.676 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 20:59:26.682 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 20:59:26.685 [restartedMain] ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field orderService in com.huang.store.controller.OrderController required a bean of type 'com.huang.store.service.imp.OrderService' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)
	- @org.springframework.beans.factory.annotation.Qualifier("orderService")


Action:

Consider defining a bean of type 'com.huang.store.service.imp.OrderService' in your configuration.

2025-07-01 20:59:37.538 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 25460 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 20:59:37.538 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 20:59:37.538 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 20:59:37.808 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 20:59:37.808 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 20:59:37.813 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-07-01 20:59:37.887 [restartedMain] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[com.huang.store.mapper]' package. Please check your configuration.
2025-07-01 20:59:38.214 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 20:59:38.216 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 20:59:38.217 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 20:59:38.218 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 20:59:38.218 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 20:59:38.218 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:59:38.219 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 20:59:38.219 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 20:59:38.265 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-5].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 20:59:38.265 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 724 ms
2025-07-01 20:59:38.345 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 20:59:38.414 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-13} inited
2025-07-01 20:59:38.434 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-14} inited
2025-07-01 20:59:38.462 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
2025-07-01 20:59:38.462 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-13} closing ...
2025-07-01 20:59:38.462 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-13} closed
2025-07-01 20:59:38.462 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-14} closing ...
2025-07-01 20:59:38.463 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-14} closed
2025-07-01 20:59:38.464 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 20:59:38.469 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 20:59:38.474 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 24 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8310826c.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8310826c$$FastClassBySpringCGLIB$$6866eaef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8310826c.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:78)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:144)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:136)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:126)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 46 common frames omitted
2025-07-01 20:59:40.477 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 25460 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 20:59:40.478 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 20:59:40.478 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 20:59:40.773 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 20:59:40.773 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 20:59:40.793 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 0 Redis repository interfaces.
2025-07-01 20:59:40.908 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$88bb740d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:59:40.920 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 20:59:41.022 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 20:59:41.022 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 20:59:41.022 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 20:59:41.022 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 20:59:41.023 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 20:59:41.024 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 20:59:41.024 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 20:59:41.024 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 20:59:41.057 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-6].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 20:59:41.057 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 577 ms
2025-07-01 20:59:41.059 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 20:59:41.175 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-15} inited
2025-07-01 20:59:41.206 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-16} inited
2025-07-01 20:59:41.377 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 20:59:41.377 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 20:59:41.471 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderController': Unsatisfied dependency expressed through field 'orderService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.huang.store.service.imp.OrderService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true), @org.springframework.beans.factory.annotation.Qualifier("orderService")}
2025-07-01 20:59:41.474 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-15} closing ...
2025-07-01 20:59:41.476 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-15} closed
2025-07-01 20:59:41.476 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-16} closing ...
2025-07-01 20:59:41.478 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-16} closed
2025-07-01 20:59:41.480 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 20:59:41.488 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 20:59:41.496 [restartedMain] ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field orderService in com.huang.store.controller.OrderController required a bean of type 'com.huang.store.service.imp.OrderService' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)
	- @org.springframework.beans.factory.annotation.Qualifier("orderService")


Action:

Consider defining a bean of type 'com.huang.store.service.imp.OrderService' in your configuration.

2025-07-01 21:01:23.315 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 25460 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 21:01:23.315 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 21:01:23.315 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 21:01:23.519 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 21:01:23.519 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 21:01:23.524 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-07-01 21:01:23.574 [restartedMain] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[com.huang.store.mapper]' package. Please check your configuration.
2025-07-01 21:01:23.634 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 21:01:23.634 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 21:01:23.634 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 21:01:23.634 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 21:01:23.635 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 21:01:23.635 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 21:01:23.636 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 21:01:23.636 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 21:01:23.658 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-7].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 21:01:23.658 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 341 ms
2025-07-01 21:01:23.739 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 21:01:23.838 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-17} inited
2025-07-01 21:01:23.863 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-18} inited
2025-07-01 21:01:23.894 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
2025-07-01 21:01:23.894 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-17} closing ...
2025-07-01 21:01:23.894 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-17} closed
2025-07-01 21:01:23.894 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-18} closing ...
2025-07-01 21:01:23.895 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-18} closed
2025-07-01 21:01:23.896 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 21:01:23.900 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 21:01:23.905 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 24 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8310826c.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8310826c$$FastClassBySpringCGLIB$$6866eaef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8310826c.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:78)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:144)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:136)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:126)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 46 common frames omitted
2025-07-01 21:01:25.981 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 25460 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 21:01:25.981 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 21:01:25.981 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 21:01:26.277 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 21:01:26.277 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 21:01:26.301 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 0 Redis repository interfaces.
2025-07-01 21:01:26.414 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$88bb740d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 21:01:26.426 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 21:01:26.549 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 21:01:26.549 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 21:01:26.549 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 21:01:26.549 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 21:01:26.550 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 21:01:26.550 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 21:01:26.550 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 21:01:26.550 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 21:01:26.574 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-8].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 21:01:26.574 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 591 ms
2025-07-01 21:01:26.577 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 21:01:26.716 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-19} inited
2025-07-01 21:01:26.747 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-20} inited
2025-07-01 21:01:26.995 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 21:01:26.995 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 21:01:27.265 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 21:01:27.459 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2cc4ca26, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@61ed980d, org.springframework.security.web.context.SecurityContextPersistenceFilter@701a5b09, org.springframework.security.web.header.HeaderWriterFilter@18339216, org.springframework.web.filter.CorsFilter@4a9717f2, org.springframework.security.web.authentication.logout.LogoutFilter@6c2b65b8, com.huang.store.security.JwtAuthenticationTokenFilter@62db3f8a, com.huang.store.security.CustomAuthenticationFilter@593cec47, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6dd1bd8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7b834d96, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7fa4c3d2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3cebfd6d, org.springframework.security.web.session.SessionManagementFilter@1c25af72, org.springframework.security.web.access.ExceptionTranslationFilter@1a423a16, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@63adc278]
2025-07-01 21:01:27.775 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 21:01:27.790 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 21:01:27.793 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 21:01:27.797 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 1.884 seconds (JVM running for 1301.825)
2025-07-01 21:01:38.659 [Thread-9] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-01 21:01:38.659 [Thread-9] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 21:01:38.661 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1392677305] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 21:01:38.662 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1392677305] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 21:01:38.662 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-529485184] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 21:01:38.662 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-529485184] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 21:01:38.662 [Thread-9] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-01 21:01:38.663 [Thread-9] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-01 21:01:38.666 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-19} closing ...
2025-07-01 21:01:38.668 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-19} closed
2025-07-01 21:01:38.669 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-20} closing ...
2025-07-01 21:01:38.670 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-20} closed
2025-07-01 21:01:38.779 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 25460 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 21:01:38.780 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 21:01:38.780 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 21:01:38.978 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 21:01:38.978 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 21:01:38.982 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-07-01 21:01:39.029 [restartedMain] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[com.huang.store.mapper]' package. Please check your configuration.
2025-07-01 21:01:39.094 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 21:01:39.094 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 21:01:39.095 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 21:01:39.095 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 21:01:39.095 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 21:01:39.095 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 21:01:39.096 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 21:01:39.096 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 21:01:39.118 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-8].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 21:01:39.118 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 337 ms
2025-07-01 21:01:39.189 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 21:01:39.259 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-21} inited
2025-07-01 21:01:39.279 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-22} inited
2025-07-01 21:01:39.310 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
2025-07-01 21:01:39.310 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-21} closing ...
2025-07-01 21:01:39.311 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-21} closed
2025-07-01 21:01:39.311 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-22} closing ...
2025-07-01 21:01:39.312 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-22} closed
2025-07-01 21:01:39.313 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 21:01:39.319 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 21:01:39.323 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 24 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8310826c.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8310826c$$FastClassBySpringCGLIB$$6866eaef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8310826c.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:78)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:144)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:136)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:126)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 46 common frames omitted
2025-07-01 21:01:41.715 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 25460 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 21:01:41.715 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 21:01:41.715 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 21:01:42.015 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 21:01:42.015 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 21:01:42.034 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
2025-07-01 21:01:42.130 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$88bb740d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 21:01:42.136 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 21:01:42.210 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 21:01:42.210 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 21:01:42.210 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 21:01:42.210 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 21:01:42.211 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 21:01:42.212 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 21:01:42.212 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 21:01:42.212 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 21:01:42.240 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-9].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 21:01:42.240 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 524 ms
2025-07-01 21:01:42.247 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 21:01:42.383 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-23} inited
2025-07-01 21:01:42.401 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-24} inited
2025-07-01 21:01:42.509 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-01 21:01:42.525 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 16684 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 21:01:42.525 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 21:01:42.526 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 21:01:42.544 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 21:01:42.544 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 21:01:42.662 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-01 21:01:42.662 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-01 21:01:42.747 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 21:01:42.888 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@695de539, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@20edbaef, org.springframework.security.web.context.SecurityContextPersistenceFilter@4a0f0a50, org.springframework.security.web.header.HeaderWriterFilter@1213f3af, org.springframework.web.filter.CorsFilter@32afab6e, org.springframework.security.web.authentication.logout.LogoutFilter@71ca9061, com.huang.store.security.JwtAuthenticationTokenFilter@3ffac6e8, com.huang.store.security.CustomAuthenticationFilter@3a505ac, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@61f67f5a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@48b3294, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@9882721, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4387daef, org.springframework.security.web.session.SessionManagementFilter@66559641, org.springframework.security.web.access.ExceptionTranslationFilter@62158bfe, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7c1db2a2]
2025-07-01 21:01:43.121 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 21:01:43.151 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 21:01:43.157 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 21:01:43.164 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 21:01:43.164 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 1.504 seconds (JVM running for 1317.192)
2025-07-01 21:01:43.167 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 21:01:43.209 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.
2025-07-01 21:01:43.401 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$e3dc1c02] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 21:01:43.414 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 21:01:43.863 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 21:01:43.864 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 21:01:43.864 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 21:01:43.865 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 21:01:43.881 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 21:01:43.887 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 21:01:43.891 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 21:01:43.891 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 21:01:43.945 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 21:01:43.946 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1283 ms
2025-07-01 21:01:43.950 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 21:01:44.722 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-01 21:01:44.749 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-01 21:01:45.054 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 21:01:45.054 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 21:01:45.500 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 21:01:45.618 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1b635c23, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@14408d77, org.springframework.security.web.context.SecurityContextPersistenceFilter@96df066, org.springframework.security.web.header.HeaderWriterFilter@40379ae1, org.springframework.web.filter.CorsFilter@4b0758b2, org.springframework.security.web.authentication.logout.LogoutFilter@5cf33c11, com.huang.store.security.JwtAuthenticationTokenFilter@60f72c1, com.huang.store.security.CustomAuthenticationFilter@68c045d3, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@624914fd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@f3799eb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@24f78bf0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@42ec6361, org.springframework.security.web.session.SessionManagementFilter@531de973, org.springframework.security.web.access.ExceptionTranslationFilter@3dcfb4a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@13a374e8]
2025-07-01 21:01:45.837 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2025-07-01 21:01:45.851 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 21:01:45.855 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8080 is already in use
2025-07-01 21:01:45.865 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-01 21:01:45.869 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-01 21:01:45.870 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-01 21:01:45.870 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-01 21:01:45.873 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-01 21:01:45.874 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 21:01:45.883 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-01 21:01:45.884 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-01 21:01:45.889 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 21:01:45.901 [restartedMain] ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2025-07-01 21:02:44.224 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-01 21:02:44.237 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 12852 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 21:02:44.238 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 21:02:44.238 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 21:02:44.356 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-01 21:02:44.356 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-01 21:02:44.864 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 21:02:44.865 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 21:02:44.889 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-07-01 21:02:45.074 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$b1c4813] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 21:02:45.087 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 21:02:45.482 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 21:02:45.483 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 21:02:45.483 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 21:02:45.483 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 21:02:45.487 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 21:02:45.492 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 21:02:45.495 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 21:02:45.495 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 21:02:45.546 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 21:02:45.546 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1189 ms
2025-07-01 21:02:45.550 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 21:02:46.201 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-01 21:02:46.230 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-01 21:02:46.513 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 21:02:46.514 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 21:02:46.897 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 21:02:47.016 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2d533835, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4d8a986f, org.springframework.security.web.context.SecurityContextPersistenceFilter@42121ffd, org.springframework.security.web.header.HeaderWriterFilter@4a26856, org.springframework.web.filter.CorsFilter@39f2d096, org.springframework.security.web.authentication.logout.LogoutFilter@38d05b41, com.huang.store.security.JwtAuthenticationTokenFilter@349b5440, com.huang.store.security.CustomAuthenticationFilter@2bda1c41, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@52928d0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@50270d61, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@59f31937, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@620892d1, org.springframework.security.web.session.SessionManagementFilter@33365bcd, org.springframework.security.web.access.ExceptionTranslationFilter@398b9271, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2d72a1e0]
2025-07-01 21:02:47.268 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 21:02:47.286 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 21:02:47.309 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 21:02:47.317 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 3.412 seconds (JVM running for 3.67)
2025-07-01 21:03:26.967 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-01 21:03:26.967 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-01 21:03:26.968 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-01 21:04:25.867 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 21:04:25.884 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:04:25.885 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 21:04:25.944 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 56464ff@456.com(String)
2025-07-01 21:04:25.965 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 21:04:25.975 [http-nio-8080-exec-2] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:56464ff@456.com    数据库密码:$2a$10$7OBMT05X3FsorQiaTl2aQuxGJpdi4w1dVWZdG8Oy9K7E61SWT9WAy
2025-07-01 21:04:25.998 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.OrderMapper.findOrderDtoByOrderId - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.orderId = ?
2025-07-01 21:04:25.998 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:04:25.998 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
        WHERE o.orderId = ? ::: DataSources: slave
2025-07-01 21:04:26.006 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.OrderMapper.findOrderDtoByOrderId - ==> Parameters: SPIKE1751373956869252(String)
2025-07-01 21:04:26.015 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.OrderMapper.findOrderDtoByOrderId - <==      Total: 1
2025-07-01 21:04:26.016 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:04:26.017 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:04:26.017 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:04:26.019 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751373956869252(String)
2025-07-01 21:04:26.023 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:04:26.024 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.ExpenseMapper.findExpenseByOrderId - ==>  Preparing: select orderId, productTotalMoney, freight, coupon, activityDiscount, allPrice, finallyPrice from expense where orderId = ?
2025-07-01 21:04:26.024 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:04:26.024 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select orderId, productTotalMoney, freight, coupon, activityDiscount, allPrice, finallyPrice
        from expense
        where orderId = ? ::: DataSources: slave
2025-07-01 21:04:26.025 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.ExpenseMapper.findExpenseByOrderId - ==> Parameters: SPIKE1751373956869252(String)
2025-07-01 21:04:26.027 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.ExpenseMapper.findExpenseByOrderId - <==      Total: 1
2025-07-01 21:04:26.028 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.AddressMapper.addressList - ==>  Preparing: select * from address where account=? and off=false
2025-07-01 21:04:26.028 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:04:26.028 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from address where account=? and off=false ::: DataSources: slave
2025-07-01 21:04:26.029 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.AddressMapper.addressList - ==> Parameters: 56464ff@456.com(String)
2025-07-01 21:04:26.031 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.AddressMapper.addressList - <==      Total: 2
2025-07-01 21:07:23.909 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-01 21:07:23.910 [Thread-7] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 21:07:23.911 [Thread-7] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-07-01 21:07:23.922 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1303065298] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 21:07:23.923 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1303065298] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 21:07:23.923 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1491895519] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 21:07:23.924 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1491895519] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 21:07:23.925 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-01 21:07:23.927 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-01 21:07:23.940 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-01 21:07:23.943 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-01 21:07:23.944 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-01 21:07:23.945 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-01 21:07:24.013 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 12852 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 21:07:24.014 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 21:07:24.014 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 21:07:24.188 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 21:07:24.189 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 21:07:24.192 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2025-07-01 21:07:24.248 [restartedMain] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[com.huang.store.mapper]' package. Please check your configuration.
2025-07-01 21:07:24.342 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 21:07:24.342 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 21:07:24.342 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 21:07:24.342 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 21:07:24.344 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 21:07:24.345 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 21:07:24.346 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 21:07:24.346 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 21:07:24.368 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 21:07:24.369 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 350 ms
2025-07-01 21:07:24.391 [restartedMain] ERROR org.apache.catalina.session.StandardManager - Exception loading sessions from persistent storage
java.lang.ClassNotFoundException: com.huang.store.entity.user.SecurityUser
	at org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedWebappClassLoader.loadClass(TomcatEmbeddedWebappClassLoader.java:72)
	at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1141)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:467)
	at org.apache.catalina.util.CustomObjectInputStream.resolveClass(CustomObjectInputStream.java:158)
	at java.base/java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:2045)
	at java.base/java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1909)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2235)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream$FieldValues.<init>(ObjectInputStream.java:2617)
	at java.base/java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2468)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2268)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream$FieldValues.<init>(ObjectInputStream.java:2617)
	at java.base/java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2468)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2268)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:514)
	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:472)
	at org.apache.catalina.session.StandardSession.doReadObject(StandardSession.java:1530)
	at org.apache.catalina.session.StandardSession.readObjectData(StandardSession.java:1000)
	at org.apache.catalina.session.StandardManager.doLoad(StandardManager.java:210)
	at org.apache.catalina.session.StandardManager.load(StandardManager.java:156)
	at org.apache.catalina.session.StandardManager.startInternal(StandardManager.java:346)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4931)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2025-07-01 21:07:24.469 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 21:07:24.573 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} inited
2025-07-01 21:07:24.601 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} inited
2025-07-01 21:07:24.635 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
2025-07-01 21:07:24.636 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closing ...
2025-07-01 21:07:24.637 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed
2025-07-01 21:07:24.637 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closing ...
2025-07-01 21:07:24.639 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed
2025-07-01 21:07:24.639 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 21:07:24.647 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 21:07:24.681 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 24 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$5715672.CGLIB$sqlSessionFactory$1(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$5715672$$FastClassBySpringCGLIB$$212e839d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$5715672.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:78)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:144)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:136)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:126)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 46 common frames omitted
2025-07-01 21:07:26.550 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 12852 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 21:07:26.550 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 21:07:26.550 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 21:07:26.663 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 21:07:26.663 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 21:07:26.669 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2025-07-01 21:07:26.702 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$b1c4813] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 21:07:26.706 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 21:07:26.747 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 21:07:26.748 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 21:07:26.748 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 21:07:26.748 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 21:07:26.748 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 21:07:26.749 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 21:07:26.749 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 21:07:26.749 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 21:07:26.761 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 21:07:26.761 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 209 ms
2025-07-01 21:07:26.763 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 21:07:26.829 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} inited
2025-07-01 21:07:26.845 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} inited
2025-07-01 21:07:26.934 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 21:07:26.934 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 21:07:27.038 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 21:07:27.096 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@454f799, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@660e1b36, org.springframework.security.web.context.SecurityContextPersistenceFilter@517952cb, org.springframework.security.web.header.HeaderWriterFilter@76b63f40, org.springframework.web.filter.CorsFilter@36889900, org.springframework.security.web.authentication.logout.LogoutFilter@222a9bb2, com.huang.store.security.JwtAuthenticationTokenFilter@58f25577, com.huang.store.security.CustomAuthenticationFilter@35d56e80, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@517d24ca, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3ea855c9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@79a33163, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1a22c166, org.springframework.security.web.session.SessionManagementFilter@18e49bfd, org.springframework.security.web.access.ExceptionTranslationFilter@7922d38e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@79177705]
2025-07-01 21:07:27.197 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 21:07:27.204 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 21:07:27.209 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 21:07:27.211 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 0.683 seconds (JVM running for 283.564)
2025-07-01 21:08:07.195 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-01 21:08:07.213 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 19860 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 21:08:07.213 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 21:08:07.214 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 21:08:07.355 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-01 21:08:07.355 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-01 21:08:07.800 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 21:08:07.802 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 21:08:07.826 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-07-01 21:08:08.095 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$194d8efa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 21:08:08.107 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 21:08:08.516 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 21:08:08.517 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 21:08:08.517 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 21:08:08.517 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 21:08:08.521 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 21:08:08.529 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 21:08:08.532 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 21:08:08.532 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 21:08:08.587 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 21:08:08.587 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1231 ms
2025-07-01 21:08:08.592 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 21:08:09.335 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-01 21:08:09.360 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-01 21:08:09.625 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 21:08:09.625 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 21:08:10.058 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 21:08:10.208 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@ed2c109, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1f33f09c, org.springframework.security.web.context.SecurityContextPersistenceFilter@9c4a1fb, org.springframework.security.web.header.HeaderWriterFilter@66904a55, org.springframework.web.filter.CorsFilter@12f6c216, org.springframework.security.web.authentication.logout.LogoutFilter@6c8dc7d7, com.huang.store.security.JwtAuthenticationTokenFilter@649876f5, com.huang.store.security.CustomAuthenticationFilter@6392bb15, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@26b87dd5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1d2899c5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3c68c4f6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6a9e0040, org.springframework.security.web.session.SessionManagementFilter@3d6746d8, org.springframework.security.web.access.ExceptionTranslationFilter@1ee14077, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@59837454]
2025-07-01 21:08:10.431 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 21:08:10.445 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 21:08:10.463 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 21:08:10.471 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 3.634 seconds (JVM running for 3.921)
2025-07-01 21:08:23.520 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-01 21:08:23.521 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-01 21:08:23.523 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-07-01 21:08:23.698 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 21:08:23.733 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:08:23.734 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 21:08:23.823 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 56464ff@456.com(String)
2025-07-01 21:08:23.855 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 21:08:23.879 [http-nio-8080-exec-1] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:56464ff@456.com    数据库密码:$2a$10$7OBMT05X3FsorQiaTl2aQuxGJpdi4w1dVWZdG8Oy9K7E61SWT9WAy
2025-07-01 21:08:24.019 [http-nio-8080-exec-1] WARN  org.apache.catalina.util.SessionIdGeneratorBase - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [108] milliseconds.
2025-07-01 21:08:24.075 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.OrderMapper.findOrderDtoByOrderId - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.orderId = ?
2025-07-01 21:08:24.076 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:08:24.077 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
        WHERE o.orderId = ? ::: DataSources: slave
2025-07-01 21:08:24.096 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.OrderMapper.findOrderDtoByOrderId - ==> Parameters: SPIKE1751373956869252(String)
2025-07-01 21:08:24.114 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.OrderMapper.findOrderDtoByOrderId - <==      Total: 1
2025-07-01 21:08:24.115 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:08:24.116 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:08:24.116 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:08:24.121 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751373956869252(String)
2025-07-01 21:08:24.133 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:08:24.141 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.ExpenseMapper.findExpenseByOrderId - ==>  Preparing: select orderId, productTotalMoney, freight, coupon, activityDiscount, allPrice, finallyPrice from expense where orderId = ?
2025-07-01 21:08:24.142 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:08:24.142 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select orderId, productTotalMoney, freight, coupon, activityDiscount, allPrice, finallyPrice
        from expense
        where orderId = ? ::: DataSources: slave
2025-07-01 21:08:24.144 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.ExpenseMapper.findExpenseByOrderId - ==> Parameters: SPIKE1751373956869252(String)
2025-07-01 21:08:24.147 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.ExpenseMapper.findExpenseByOrderId - <==      Total: 1
2025-07-01 21:08:24.149 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.AddressMapper.addressList - ==>  Preparing: select * from address where account=? and off=false
2025-07-01 21:08:24.150 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:08:24.150 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from address where account=? and off=false ::: DataSources: slave
2025-07-01 21:08:24.152 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.AddressMapper.addressList - ==> Parameters: 56464ff@456.com(String)
2025-07-01 21:08:24.155 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.AddressMapper.addressList - <==      Total: 2
2025-07-01 21:08:29.012 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.OrderMapper.findOrderDtoByOrderId - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.orderId = ?
2025-07-01 21:08:29.017 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:08:29.018 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
        WHERE o.orderId = ? ::: DataSources: slave
2025-07-01 21:08:29.022 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.OrderMapper.findOrderDtoByOrderId - ==> Parameters: SPIKE1751373956869252(String)
2025-07-01 21:08:29.030 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.OrderMapper.findOrderDtoByOrderId - <==      Total: 1
2025-07-01 21:08:29.062 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:08:29.068 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:08:29.068 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:08:29.073 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751373956869252(String)
2025-07-01 21:08:29.082 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:08:29.084 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.ExpenseMapper.findExpenseByOrderId - ==>  Preparing: select orderId, productTotalMoney, freight, coupon, activityDiscount, allPrice, finallyPrice from expense where orderId = ?
2025-07-01 21:08:29.086 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:08:29.087 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select orderId, productTotalMoney, freight, coupon, activityDiscount, allPrice, finallyPrice
        from expense
        where orderId = ? ::: DataSources: slave
2025-07-01 21:08:29.088 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.ExpenseMapper.findExpenseByOrderId - ==> Parameters: SPIKE1751373956869252(String)
2025-07-01 21:08:29.093 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.ExpenseMapper.findExpenseByOrderId - <==      Total: 1
2025-07-01 21:08:29.095 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.AddressMapper.addressList - ==>  Preparing: select * from address where account=? and off=false
2025-07-01 21:08:29.095 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:08:29.096 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from address where account=? and off=false ::: DataSources: slave
2025-07-01 21:08:29.096 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.AddressMapper.addressList - ==> Parameters: 56464ff@456.com(String)
2025-07-01 21:08:29.103 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.AddressMapper.addressList - <==      Total: 2
2025-07-01 21:08:56.348 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.OrderMapper.findOrderDtoByOrderId - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.orderId = ?
2025-07-01 21:08:56.349 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:08:56.349 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
        WHERE o.orderId = ? ::: DataSources: slave
2025-07-01 21:08:56.350 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.OrderMapper.findOrderDtoByOrderId - ==> Parameters: SPIKE1751373956869252(String)
2025-07-01 21:08:56.352 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.OrderMapper.findOrderDtoByOrderId - <==      Total: 1
2025-07-01 21:08:56.353 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:08:56.354 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:08:56.354 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:08:56.355 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751373956869252(String)
2025-07-01 21:08:56.358 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:08:56.358 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.ExpenseMapper.findExpenseByOrderId - ==>  Preparing: select orderId, productTotalMoney, freight, coupon, activityDiscount, allPrice, finallyPrice from expense where orderId = ?
2025-07-01 21:08:56.358 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:08:56.358 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select orderId, productTotalMoney, freight, coupon, activityDiscount, allPrice, finallyPrice
        from expense
        where orderId = ? ::: DataSources: slave
2025-07-01 21:08:56.358 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.ExpenseMapper.findExpenseByOrderId - ==> Parameters: SPIKE1751373956869252(String)
2025-07-01 21:08:56.360 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.ExpenseMapper.findExpenseByOrderId - <==      Total: 1
2025-07-01 21:08:56.362 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.AddressMapper.addressList - ==>  Preparing: select * from address where account=? and off=false
2025-07-01 21:08:56.363 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:08:56.363 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from address where account=? and off=false ::: DataSources: slave
2025-07-01 21:08:56.363 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.AddressMapper.addressList - ==> Parameters: 56464ff@456.com(String)
2025-07-01 21:08:56.365 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.AddressMapper.addressList - <==      Total: 2
2025-07-01 21:08:58.950 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - ==>  Preparing: update book set stock=stock-? where id=? and stock>=?
2025-07-01 21:08:58.951 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:08:58.951 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: update book
            set stock=stock-?
                where id=? and stock>=? ::: DataSources: master
2025-07-01 21:08:58.954 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - ==> Parameters: 1(Integer), 2(Integer), 1(Integer)
2025-07-01 21:08:58.962 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - <==    Updates: 1
2025-07-01 21:08:58.970 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.addOrder - ==>  Preparing: insert into bookorder(orderId,account,addressId,orderTime,shipTime,getTime,evaluateTime,closeTime,orderStatus,logisticsNum,confirmTime) values (?,?,?,?,?,?,?,?,?,?,?)
2025-07-01 21:08:58.970 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:08:58.970 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: insert into bookorder(orderId,account,addressId,orderTime,shipTime,getTime,evaluateTime,closeTime,orderStatus,logisticsNum,confirmTime)
            values (?,?,?,?,?,?,?,?,?,?,?) ::: DataSources: master
2025-07-01 21:08:59.044 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.addOrder - ==> Parameters: 20250701210858965375(String), 56464ff@456.com(String), 4(Integer), 2025-07-01 21:08:58.65(Timestamp), null, null, null, null, 已付款(String), null, null
2025-07-01 21:08:59.051 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.addOrder - <==    Updates: 1
2025-07-01 21:08:59.067 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.OrderMapper.batchAddOrderDetail - ==>  Preparing: insert into orderdetail(orderId,bookId,num,price) values (?,?,?,?)
2025-07-01 21:08:59.067 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:08:59.067 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: insert into orderdetail(orderId,bookId,num,price)
        values
          
            (?,?,?,?) ::: DataSources: master
2025-07-01 21:08:59.068 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.OrderMapper.batchAddOrderDetail - ==> Parameters: 20250701210858965375(String), 2(Integer), 1(Integer), 59.9(Double)
2025-07-01 21:08:59.070 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.OrderMapper.batchAddOrderDetail - <==    Updates: 1
2025-07-01 21:08:59.071 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.ExpenseMapper.addExpense - ==>  Preparing: insert into expense(orderId,productTotalMoney,freight,coupon,activityDiscount,allPrice,finallyPrice) values (?,?,?,?,?,?,?)
2025-07-01 21:08:59.071 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:08:59.072 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: insert into expense(orderId,productTotalMoney,freight,coupon,activityDiscount,allPrice,finallyPrice)
            values (?,?,?,?,?,?,?) ::: DataSources: master
2025-07-01 21:08:59.073 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.ExpenseMapper.addExpense - ==> Parameters: 20250701210858965375(String), 59.9(Double), 0.0(Double), 0(Integer), 38.1(Double), 98.0(Double), 59.9(Double)
2025-07-01 21:08:59.075 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.ExpenseMapper.addExpense - <==    Updates: 1
2025-07-01 21:09:00.193 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-01 21:09:00.195 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:00.195 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-01 21:09:00.205 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), false(Boolean), 0(Integer), 5(Integer)
2025-07-01 21:09:00.261 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 5
2025-07-01 21:09:00.267 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:00.272 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:00.280 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:00.282 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701210858965375(String)
2025-07-01 21:09:00.295 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:00.323 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:00.323 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:00.323 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:00.325 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:09:00.338 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:00.343 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:00.344 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:00.344 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:00.349 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751373956869252(String)
2025-07-01 21:09:00.353 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:00.357 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:00.358 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:00.358 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:00.359 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:09:00.361 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:00.365 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:00.365 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:00.365 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:00.366 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751353753865969(String)
2025-07-01 21:09:00.371 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:00.373 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:00.373 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:00.377 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:00.378 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 21:09:00.382 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:00.384 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:00.385 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:00.385 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:00.386 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751352741770684(String)
2025-07-01 21:09:00.389 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:00.392 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:00.392 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:00.393 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:00.393 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 21:09:00.395 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:00.400 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:00.401 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:00.401 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:00.405 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751352690548231(String)
2025-07-01 21:09:00.408 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:00.410 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:00.415 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:00.418 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:00.420 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:09:00.422 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:00.427 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND beUserDelete = ?
2025-07-01 21:09:00.427 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:00.427 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-01 21:09:00.429 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), false(Boolean)
2025-07-01 21:09:00.435 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-01 21:09:11.248 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-01 21:09:11.248 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:11.248 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-01 21:09:11.252 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), false(Boolean), 0(Integer), 5(Integer)
2025-07-01 21:09:11.266 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 5
2025-07-01 21:09:11.268 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:11.269 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:11.269 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:11.272 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701210858965375(String)
2025-07-01 21:09:11.276 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:11.289 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:11.289 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:11.293 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:11.295 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:09:11.296 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:11.302 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:11.304 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:11.307 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:11.309 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751373956869252(String)
2025-07-01 21:09:11.315 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:11.318 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:11.324 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:11.325 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:11.325 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:09:11.329 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:11.331 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:11.331 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:11.336 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:11.337 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751353753865969(String)
2025-07-01 21:09:11.344 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:11.350 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:11.351 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:11.351 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:11.352 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 21:09:11.357 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:11.364 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:11.364 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:11.366 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:11.379 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751352741770684(String)
2025-07-01 21:09:11.394 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:11.400 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:11.401 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:11.404 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:11.406 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 21:09:11.411 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:11.414 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:11.415 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:11.415 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:11.416 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751352690548231(String)
2025-07-01 21:09:11.425 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:11.428 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:11.428 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:11.429 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:11.430 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:09:11.439 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:11.447 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND beUserDelete = ?
2025-07-01 21:09:11.448 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:11.449 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-01 21:09:11.450 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), false(Boolean)
2025-07-01 21:09:11.459 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-01 21:09:15.741 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.findOrderDto - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.id = ?
2025-07-01 21:09:15.742 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:15.744 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
        WHERE o.id = ? ::: DataSources: slave
2025-07-01 21:09:15.747 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.findOrderDto - ==> Parameters: 12(Integer)
2025-07-01 21:09:15.752 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.findOrderDto - <==      Total: 1
2025-07-01 21:09:15.756 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:15.759 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:15.760 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:15.761 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751373956869252(String)
2025-07-01 21:09:15.764 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:15.767 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:15.767 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:15.767 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:15.769 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751373956869252(String)
2025-07-01 21:09:15.774 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:15.776 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:15.776 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:15.776 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:15.777 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:09:15.780 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:27.815 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-01 21:09:27.816 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:27.816 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-01 21:09:27.820 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), false(Boolean), 0(Integer), 5(Integer)
2025-07-01 21:09:27.828 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 5
2025-07-01 21:09:27.829 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:27.830 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:27.830 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:27.831 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701210858965375(String)
2025-07-01 21:09:27.837 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:27.838 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:27.838 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:27.839 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:27.840 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:09:27.842 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:27.843 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:27.843 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:27.843 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:27.844 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751373956869252(String)
2025-07-01 21:09:27.845 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:27.847 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:27.848 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:27.848 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:27.849 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:09:27.850 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:27.851 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:27.851 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:27.852 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:27.852 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751353753865969(String)
2025-07-01 21:09:27.855 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:27.857 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:27.857 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:27.857 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:27.858 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 21:09:27.859 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:27.860 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:27.860 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:27.861 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:27.862 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751352741770684(String)
2025-07-01 21:09:27.864 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:27.864 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:27.865 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:27.865 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:27.865 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 21:09:27.866 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:27.867 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:27.868 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:27.868 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:27.869 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751352690548231(String)
2025-07-01 21:09:27.870 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:27.872 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:27.872 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:27.872 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:27.872 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:09:27.875 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:27.876 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND beUserDelete = ?
2025-07-01 21:09:27.876 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:27.876 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-01 21:09:27.877 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), false(Boolean)
2025-07-01 21:09:27.879 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-01 21:09:32.599 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.findOrderDto - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.id = ?
2025-07-01 21:09:32.599 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:32.599 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
        WHERE o.id = ? ::: DataSources: slave
2025-07-01 21:09:32.600 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.findOrderDto - ==> Parameters: 13(Integer)
2025-07-01 21:09:32.604 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.findOrderDto - <==      Total: 1
2025-07-01 21:09:32.605 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:32.605 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:32.606 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:32.607 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701210858965375(String)
2025-07-01 21:09:32.610 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:32.612 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:32.612 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:32.613 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:32.613 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701210858965375(String)
2025-07-01 21:09:32.615 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:32.616 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:32.616 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:32.616 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:32.618 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:09:32.620 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:35.638 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-01 21:09:35.640 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:35.701 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-01 21:09:35.712 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), false(Boolean), 0(Integer), 5(Integer)
2025-07-01 21:09:35.720 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 5
2025-07-01 21:09:35.722 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:35.723 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:35.724 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:35.920 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701210858965375(String)
2025-07-01 21:09:35.933 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:35.934 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:35.934 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:35.934 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:35.935 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:09:35.936 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:35.939 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:35.939 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:35.939 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:35.939 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751373956869252(String)
2025-07-01 21:09:35.942 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:35.944 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:35.945 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:35.945 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:35.945 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:09:35.946 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:35.948 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:35.948 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:35.948 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:35.948 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751353753865969(String)
2025-07-01 21:09:35.951 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:35.952 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:35.952 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:35.952 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:35.953 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 21:09:35.954 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:35.955 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:35.955 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:35.955 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:35.956 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751352741770684(String)
2025-07-01 21:09:35.960 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:35.962 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:35.964 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:35.967 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:35.968 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 21:09:35.970 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:35.973 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:35.974 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:35.974 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:35.975 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751352690548231(String)
2025-07-01 21:09:35.977 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:35.978 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:35.978 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:35.979 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:35.980 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:09:35.982 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:35.988 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND beUserDelete = ?
2025-07-01 21:09:35.990 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:35.990 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-01 21:09:35.991 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), false(Boolean)
2025-07-01 21:09:35.993 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-01 21:09:42.567 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-01 21:09:42.571 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:42.571 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-01 21:09:42.573 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), false(Boolean), 0(Integer), 5(Integer)
2025-07-01 21:09:42.579 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 5
2025-07-01 21:09:42.580 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:42.580 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:42.580 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:42.580 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701210858965375(String)
2025-07-01 21:09:42.582 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:42.585 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:42.585 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:42.585 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:42.586 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:09:42.588 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:42.589 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:42.590 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:42.590 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:42.591 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751373956869252(String)
2025-07-01 21:09:42.594 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:42.595 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:42.595 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:42.597 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:42.598 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:09:42.599 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:42.600 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:42.600 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:42.601 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:42.601 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751353753865969(String)
2025-07-01 21:09:42.603 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:42.607 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:42.607 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:42.607 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:42.607 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 21:09:42.609 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:42.610 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:42.610 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:42.611 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:42.612 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751352741770684(String)
2025-07-01 21:09:42.614 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:42.615 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:42.615 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:42.615 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:42.615 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 21:09:42.616 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:42.616 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:42.616 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:42.617 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:42.618 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751352690548231(String)
2025-07-01 21:09:42.619 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:42.620 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:42.620 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:42.621 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:42.621 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:09:42.622 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:42.623 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND beUserDelete = ?
2025-07-01 21:09:42.623 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:42.623 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-01 21:09:42.625 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), false(Boolean)
2025-07-01 21:09:42.627 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-01 21:09:43.983 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-01 21:09:43.983 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:43.984 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-01 21:09:43.995 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean), 0(Integer), 5(Integer)
2025-07-01 21:09:43.998 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 0
2025-07-01 21:09:43.999 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-01 21:09:43.999 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:44.000 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-01 21:09:44.002 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean)
2025-07-01 21:09:44.004 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-01 21:09:44.644 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-01 21:09:44.647 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:44.648 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-01 21:09:44.649 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), false(Boolean), 0(Integer), 5(Integer)
2025-07-01 21:09:44.651 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 5
2025-07-01 21:09:44.655 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:44.655 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:44.655 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:44.656 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701210858965375(String)
2025-07-01 21:09:44.658 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:44.661 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:44.661 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:44.661 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:44.661 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:09:44.663 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:44.663 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:44.664 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:44.664 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:44.665 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751373956869252(String)
2025-07-01 21:09:44.668 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:44.670 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:44.671 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:44.671 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:44.671 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:09:44.673 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:44.675 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:44.677 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:44.677 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:44.679 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751353753865969(String)
2025-07-01 21:09:44.681 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:44.683 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:44.683 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:44.683 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:44.684 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 21:09:44.685 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:44.686 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:44.686 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:44.690 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:44.690 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751352741770684(String)
2025-07-01 21:09:44.692 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:44.695 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:44.695 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:44.695 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:44.696 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 21:09:44.698 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:44.699 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:44.699 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:44.699 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:44.702 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751352690548231(String)
2025-07-01 21:09:44.703 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:44.704 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:44.705 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:44.705 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:44.706 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:09:44.707 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:44.709 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND beUserDelete = ?
2025-07-01 21:09:44.710 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:44.710 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-01 21:09:44.711 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), false(Boolean)
2025-07-01 21:09:44.712 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-01 21:09:50.570 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-01 21:09:50.571 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:50.572 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-01 21:09:50.575 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), false(Boolean), 0(Integer), 5(Integer)
2025-07-01 21:09:50.582 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 5
2025-07-01 21:09:50.585 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:50.585 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:50.586 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:50.586 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701210858965375(String)
2025-07-01 21:09:50.588 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:50.591 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:50.591 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:50.591 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:50.592 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:09:50.593 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:50.594 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:50.594 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:50.594 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:50.595 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751373956869252(String)
2025-07-01 21:09:50.597 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:50.598 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:50.598 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:50.598 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:50.599 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:09:50.600 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:50.600 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:50.601 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:50.601 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:50.601 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751353753865969(String)
2025-07-01 21:09:50.603 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:50.605 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:50.605 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:50.605 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:50.606 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 21:09:50.607 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:50.608 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:50.608 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:50.608 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:50.609 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751352741770684(String)
2025-07-01 21:09:50.611 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:50.612 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:50.612 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:50.612 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:50.613 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 21:09:50.614 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:50.615 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:09:50.615 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:50.615 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:09:50.615 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751352690548231(String)
2025-07-01 21:09:50.616 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:09:50.619 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:09:50.619 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:50.620 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:09:50.620 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:09:50.621 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:09:50.622 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND beUserDelete = ?
2025-07-01 21:09:50.622 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:50.622 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-01 21:09:50.622 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), false(Boolean)
2025-07-01 21:09:50.623 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-01 21:09:51.198 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-01 21:09:51.198 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:51.199 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-01 21:09:51.204 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean), 0(Integer), 5(Integer)
2025-07-01 21:09:51.207 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 0
2025-07-01 21:09:51.209 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-01 21:09:51.209 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:51.209 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-01 21:09:51.210 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean)
2025-07-01 21:09:51.213 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-01 21:09:51.723 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-01 21:09:51.724 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:51.725 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-01 21:09:51.727 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), true(Boolean), 0(Integer), 5(Integer)
2025-07-01 21:09:51.731 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 0
2025-07-01 21:09:51.733 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND beUserDelete = ?
2025-07-01 21:09:51.733 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:51.734 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-01 21:09:51.736 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), true(Boolean)
2025-07-01 21:09:51.738 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-01 21:09:52.317 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-01 21:09:52.322 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:52.322 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-01 21:09:52.324 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean), 0(Integer), 5(Integer)
2025-07-01 21:09:52.326 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 0
2025-07-01 21:09:52.328 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-01 21:09:52.328 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:52.328 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-01 21:09:52.328 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean)
2025-07-01 21:09:52.338 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-01 21:09:52.753 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-01 21:09:52.753 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:52.753 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-01 21:09:52.755 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean), 0(Integer), 5(Integer)
2025-07-01 21:09:52.758 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 0
2025-07-01 21:09:52.759 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-01 21:09:52.759 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:09:52.760 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-01 21:09:52.761 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean)
2025-07-01 21:09:52.764 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-01 21:10:02.818 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 21:10:02.820 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:02.824 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 21:10:02.824 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-01 21:10:02.824 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:02.825 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-01 21:10:02.821 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-01 21:10:02.829 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:02.822 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 21:10:02.822 [http-nio-8080-exec-1] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-01 21:10:02.824 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-01 21:10:02.829 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 21:10:02.830 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-01 21:10:02.831 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:02.836 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 21:10:02.831 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 21:10:02.836 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:02.837 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 21:10:02.832 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:02.837 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 21:10:02.837 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-01 21:10:02.838 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 21:10:02.839 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:02.839 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 21:10:02.839 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 21:10:02.842 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-01 21:10:02.843 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-01 21:10:02.844 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:02.845 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-01 21:10:02.843 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-01 21:10:02.850 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-01 21:10:02.851 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 21:10:02.851 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:02.852 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 21:10:02.851 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 21:10:02.857 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 21:10:02.857 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-01 21:10:02.858 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 21:10:02.859 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:02.859 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 21:10:02.859 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 21:10:02.862 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-01 21:10:02.863 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 21:10:02.865 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-01 21:10:02.866 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 21:10:02.866 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-01 21:10:02.866 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:02.866 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 21:10:02.867 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 21:10:02.869 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-01 21:10:02.873 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 21:10:02.875 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 21:10:02.878 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 21:10:02.879 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:10:02.880 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 21:10:02.881 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 21:10:02.881 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:02.883 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 21:10:02.884 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:02.884 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 21:10:02.883 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 21:10:02.884 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:10:02.885 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 21:10:02.886 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 21:10:02.889 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 21:10:02.890 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 21:10:02.891 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:10:02.891 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:02.892 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:10:02.892 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 21:10:02.892 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:02.892 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:10:02.892 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:10:02.892 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 21:10:02.894 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:10:02.895 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:10:02.896 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:02.896 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 21:10:02.896 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:10:02.897 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 21:10:02.897 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 21:10:02.897 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:02.897 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 21:10:02.897 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 21:10:02.898 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:10:02.898 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 21:10:02.899 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:10:02.899 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:02.899 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:10:02.899 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 21:10:02.901 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:10:02.904 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:10:02.906 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:02.906 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:10:02.907 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 21:10:02.909 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:10:05.780 [http-nio-8080-exec-10] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 21:10:05.781 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:05.781 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 21:10:05.783 [http-nio-8080-exec-10] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 21:10:05.790 [http-nio-8080-exec-10] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 3
2025-07-01 21:10:05.793 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 21:10:05.793 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:05.794 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 21:10:05.803 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 2(Long)
2025-07-01 21:10:05.817 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 21:10:05.823 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 21:10:05.823 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:05.823 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 21:10:05.824 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 1(Long)
2025-07-01 21:10:05.829 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 3
2025-07-01 21:10:05.829 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 21:10:05.830 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:05.830 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 21:10:05.831 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 3(Long)
2025-07-01 21:10:05.834 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 21:10:14.817 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.bookId = ? AND sg.status = 1 ORDER BY sg.createTime DESC
2025-07-01 21:10:14.817 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:14.818 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.bookId = ?
        AND sg.status = 1
        ORDER BY sg.createTime DESC ::: DataSources: slave
2025-07-01 21:10:14.823 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==> Parameters: 1(Integer)
2025-07-01 21:10:14.829 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - <==      Total: 2
2025-07-01 21:10:14.831 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 21:10:14.831 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:14.832 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 21:10:14.834 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 1(Long)
2025-07-01 21:10:14.837 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 21:10:14.839 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 21:10:14.841 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:14.841 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 21:10:14.842 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 3(Long)
2025-07-01 21:10:14.845 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 21:10:14.846 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.id = ?
2025-07-01 21:10:14.847 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:14.848 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.id = ? ::: DataSources: slave
2025-07-01 21:10:14.849 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==> Parameters: 6(Long)
2025-07-01 21:10:14.852 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - <==      Total: 1
2025-07-01 21:10:14.854 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeOrderMapper.getUserPurchaseCount - ==>  Preparing: SELECT COALESCE(SUM(quantity), 0) FROM spikeOrder WHERE userAccount = ? AND spikeGoodsId = ? AND status IN (0, 1)
2025-07-01 21:10:14.855 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:14.856 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT COALESCE(SUM(quantity), 0)
        FROM spikeOrder 
        WHERE userAccount = ? 
        AND spikeGoodsId = ?
        AND status IN (0, 1) ::: DataSources: slave
2025-07-01 21:10:14.859 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeOrderMapper.getUserPurchaseCount - ==> Parameters: 56464ff@456.com(String), 6(Long)
2025-07-01 21:10:14.863 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeOrderMapper.getUserPurchaseCount - <==      Total: 1
2025-07-01 21:10:14.871 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SpikeGoodsMapper.reduceStock - ==>  Preparing: UPDATE spikeGoods SET spikeStock = spikeStock - ?, soldCount = soldCount + ?, updateTime = NOW() WHERE id = ? AND spikeStock >= ?
2025-07-01 21:10:14.871 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:14.871 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: UPDATE spikeGoods
        SET spikeStock = spikeStock - ?,
            soldCount = soldCount + ?,
            updateTime = NOW()
        WHERE id = ?
        AND spikeStock >= ? ::: DataSources: master
2025-07-01 21:10:14.888 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SpikeGoodsMapper.reduceStock - ==> Parameters: 1(Integer), 1(Integer), 6(Long), 1(Integer)
2025-07-01 21:10:14.893 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SpikeGoodsMapper.reduceStock - <==    Updates: 1
2025-07-01 21:10:14.894 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - ==>  Preparing: update book set stock=stock-? where id=? and stock>=?
2025-07-01 21:10:14.894 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:14.894 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: update book
            set stock=stock-?
                where id=? and stock>=? ::: DataSources: master
2025-07-01 21:10:14.894 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - ==> Parameters: 1(Integer), 1(Integer), 1(Integer)
2025-07-01 21:10:14.897 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - <==    Updates: 1
2025-07-01 21:10:14.903 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.addOrder - ==>  Preparing: insert into bookorder(orderId,account,addressId,orderTime,shipTime,getTime,evaluateTime,closeTime,orderStatus,logisticsNum,confirmTime) values (?,?,?,?,?,?,?,?,?,?,?)
2025-07-01 21:10:14.906 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:14.907 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: insert into bookorder(orderId,account,addressId,orderTime,shipTime,getTime,evaluateTime,closeTime,orderStatus,logisticsNum,confirmTime)
            values (?,?,?,?,?,?,?,?,?,?,?) ::: DataSources: master
2025-07-01 21:10:14.908 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.addOrder - ==> Parameters: SPIKE1751375414899509(String), 56464ff@456.com(String), 1(Integer), 2025-07-01 21:10:14.902(Timestamp), null, null, null, null, 待付款(String), null, null
2025-07-01 21:10:14.914 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.addOrder - <==    Updates: 1
2025-07-01 21:10:14.915 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.OrderMapper.batchAddOrderDetail - ==>  Preparing: insert into orderdetail(orderId,bookId,num,price) values (?,?,?,?)
2025-07-01 21:10:14.919 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:14.920 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: insert into orderdetail(orderId,bookId,num,price)
        values
          
            (?,?,?,?) ::: DataSources: master
2025-07-01 21:10:14.926 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.OrderMapper.batchAddOrderDetail - ==> Parameters: SPIKE1751375414899509(String), 1(Integer), 1(Integer), 22.9(Double)
2025-07-01 21:10:14.928 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.OrderMapper.batchAddOrderDetail - <==    Updates: 1
2025-07-01 21:10:14.929 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.ExpenseMapper.addExpense - ==>  Preparing: insert into expense(orderId,productTotalMoney,freight,coupon,activityDiscount,allPrice,finallyPrice) values (?,?,?,?,?,?,?)
2025-07-01 21:10:14.929 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:14.929 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: insert into expense(orderId,productTotalMoney,freight,coupon,activityDiscount,allPrice,finallyPrice)
            values (?,?,?,?,?,?,?) ::: DataSources: master
2025-07-01 21:10:14.932 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.ExpenseMapper.addExpense - ==> Parameters: SPIKE1751375414899509(String), 45.0(Double), 0.0(Double), 0(Integer), 22.1(Double), 45.0(Double), 22.9(Double)
2025-07-01 21:10:14.935 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.ExpenseMapper.addExpense - <==    Updates: 1
2025-07-01 21:10:14.942 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - ==>  Preparing: INSERT INTO spikeRecord ( spikeGoodsId, userAccount, spikeTime, result, failReason, ipAddress, userAgent ) VALUES ( ?, ?, ?, ?, ?, ?, ? )
2025-07-01 21:10:14.943 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:14.943 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: INSERT INTO spikeRecord (
            spikeGoodsId, userAccount, spikeTime, result, 
            failReason, ipAddress, userAgent
        ) VALUES (
            ?, ?, ?, ?,
            ?, ?, ?
        ) ::: DataSources: master
2025-07-01 21:10:14.944 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - ==> Parameters: 6(Long), 56464ff@456.com(String), 2025-07-01T21:10:14.942041600(LocalDateTime), 1(Integer), null, 0:0:0:0:0:0:0:1(String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0(String)
2025-07-01 21:10:14.952 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - <==    Updates: 1
2025-07-01 21:10:15.072 [http-nio-8080-exec-9] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 21:10:15.074 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:15.074 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 21:10:15.075 [http-nio-8080-exec-9] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 21:10:15.079 [http-nio-8080-exec-9] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 3
2025-07-01 21:10:15.081 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 21:10:15.081 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:15.082 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 21:10:15.084 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 2(Long)
2025-07-01 21:10:15.089 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 21:10:15.091 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 21:10:15.091 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:15.092 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 21:10:15.093 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 1(Long)
2025-07-01 21:10:15.095 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 3
2025-07-01 21:10:15.099 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 21:10:15.100 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:15.100 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 21:10:15.101 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 3(Long)
2025-07-01 21:10:15.117 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 21:10:16.683 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.OrderMapper.findOrderDtoByOrderId - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.orderId = ?
2025-07-01 21:10:16.684 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:16.684 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
        WHERE o.orderId = ? ::: DataSources: slave
2025-07-01 21:10:16.688 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.OrderMapper.findOrderDtoByOrderId - ==> Parameters: SPIKE1751375414899509(String)
2025-07-01 21:10:16.691 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.OrderMapper.findOrderDtoByOrderId - <==      Total: 1
2025-07-01 21:10:16.692 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:10:16.693 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:16.693 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:10:16.694 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751375414899509(String)
2025-07-01 21:10:16.696 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:10:16.697 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.ExpenseMapper.findExpenseByOrderId - ==>  Preparing: select orderId, productTotalMoney, freight, coupon, activityDiscount, allPrice, finallyPrice from expense where orderId = ?
2025-07-01 21:10:16.698 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:16.698 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select orderId, productTotalMoney, freight, coupon, activityDiscount, allPrice, finallyPrice
        from expense
        where orderId = ? ::: DataSources: slave
2025-07-01 21:10:16.699 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.ExpenseMapper.findExpenseByOrderId - ==> Parameters: SPIKE1751375414899509(String)
2025-07-01 21:10:16.700 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.ExpenseMapper.findExpenseByOrderId - <==      Total: 1
2025-07-01 21:10:16.702 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.AddressMapper.addressList - ==>  Preparing: select * from address where account=? and off=false
2025-07-01 21:10:16.703 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:10:16.703 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from address where account=? and off=false ::: DataSources: slave
2025-07-01 21:10:16.704 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.AddressMapper.addressList - ==> Parameters: 56464ff@456.com(String)
2025-07-01 21:10:16.706 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.AddressMapper.addressList - <==      Total: 2
2025-07-01 21:14:55.908 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-01 21:14:55.909 [Thread-7] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 21:14:55.910 [Thread-7] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-07-01 21:14:55.943 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-564784104] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 21:14:55.943 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-564784104] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 21:14:55.944 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-877838134] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 21:14:55.945 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-877838134] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 21:14:55.946 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-nioEventLoop-4-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/sun.nio.ch.WEPoll.wait(Native Method)
 java.base@17.0.8/sun.nio.ch.WEPollSelectorImpl.doSelect(WEPollSelectorImpl.java:111)
 java.base@17.0.8/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:129)
 java.base@17.0.8/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:146)
 app//io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:68)
 app//io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:879)
 app//io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:526)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 21:14:55.947 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 21:14:55.948 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 21:14:55.949 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 21:14:55.950 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 21:14:55.951 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-5] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 21:14:55.952 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-6] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 21:14:55.953 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-7] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 21:14:55.955 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-8] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 21:14:55.956 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-9] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 21:14:55.956 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-01 21:14:55.958 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-01 21:14:56.082 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-01 21:14:56.086 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-01 21:14:56.087 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-01 21:14:56.089 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-01 21:14:56.180 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 19860 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 21:14:56.180 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 21:14:56.180 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 21:14:56.361 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 21:14:56.361 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 21:14:56.365 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2025-07-01 21:14:56.419 [restartedMain] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[com.huang.store.mapper]' package. Please check your configuration.
2025-07-01 21:14:56.502 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 21:14:56.502 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 21:14:56.502 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 21:14:56.502 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 21:14:56.502 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 21:14:56.503 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 21:14:56.503 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 21:14:56.503 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 21:14:56.520 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 21:14:56.521 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 334 ms
2025-07-01 21:14:56.543 [restartedMain] ERROR org.apache.catalina.session.StandardManager - Exception loading sessions from persistent storage
java.lang.ClassNotFoundException: com.huang.store.entity.user.SecurityUser
	at org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedWebappClassLoader.loadClass(TomcatEmbeddedWebappClassLoader.java:72)
	at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1141)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:467)
	at org.apache.catalina.util.CustomObjectInputStream.resolveClass(CustomObjectInputStream.java:158)
	at java.base/java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:2045)
	at java.base/java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1909)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2235)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream$FieldValues.<init>(ObjectInputStream.java:2617)
	at java.base/java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2468)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2268)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream$FieldValues.<init>(ObjectInputStream.java:2617)
	at java.base/java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2468)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2268)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:514)
	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:472)
	at org.apache.catalina.session.StandardSession.doReadObject(StandardSession.java:1530)
	at org.apache.catalina.session.StandardSession.readObjectData(StandardSession.java:1000)
	at org.apache.catalina.session.StandardManager.doLoad(StandardManager.java:210)
	at org.apache.catalina.session.StandardManager.load(StandardManager.java:156)
	at org.apache.catalina.session.StandardManager.startInternal(StandardManager.java:346)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4931)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2025-07-01 21:14:56.616 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 21:14:56.690 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} inited
2025-07-01 21:14:56.711 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} inited
2025-07-01 21:14:56.742 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
2025-07-01 21:14:56.742 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closing ...
2025-07-01 21:14:56.743 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed
2025-07-01 21:14:56.743 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closing ...
2025-07-01 21:14:56.745 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed
2025-07-01 21:14:56.746 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 21:14:56.752 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 21:14:56.774 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 24 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$13a29d59.CGLIB$sqlSessionFactory$1(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$13a29d59$$FastClassBySpringCGLIB$$e344ad70.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$13a29d59.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:78)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:144)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:136)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:126)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 46 common frames omitted
2025-07-01 21:14:58.672 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 19860 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 21:14:58.673 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 21:14:58.673 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 21:14:58.790 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 21:14:58.790 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 21:14:58.796 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2025-07-01 21:14:58.829 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$194d8efa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 21:14:58.833 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 21:14:58.874 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 21:14:58.874 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 21:14:58.874 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 21:14:58.874 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 21:14:58.875 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 21:14:58.875 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 21:14:58.875 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 21:14:58.876 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 21:14:58.889 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 21:14:58.889 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 214 ms
2025-07-01 21:14:58.892 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 21:14:58.962 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} inited
2025-07-01 21:14:58.977 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} inited
2025-07-01 21:14:59.075 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 21:14:59.075 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 21:14:59.178 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 21:14:59.235 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4b627249, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3d26dc10, org.springframework.security.web.context.SecurityContextPersistenceFilter@7ad485e1, org.springframework.security.web.header.HeaderWriterFilter@861b6db, org.springframework.web.filter.CorsFilter@46e50447, org.springframework.security.web.authentication.logout.LogoutFilter@1db350d4, com.huang.store.security.JwtAuthenticationTokenFilter@2d769a11, com.huang.store.security.CustomAuthenticationFilter@50a0745c, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@26c7c570, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@41cba379, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@449912f5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6326cb6d, org.springframework.security.web.session.SessionManagementFilter@4268bc00, org.springframework.security.web.access.ExceptionTranslationFilter@488e655f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@252131b0]
2025-07-01 21:14:59.329 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 21:14:59.340 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 21:14:59.345 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 21:14:59.348 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 0.715 seconds (JVM running for 412.797)
2025-07-01 21:15:24.108 [Thread-9] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-01 21:15:24.109 [Thread-9] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 21:15:24.111 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1438417452] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 21:15:24.111 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1438417452] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 21:15:24.113 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1150542896] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 21:15:24.114 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1150542896] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 21:15:24.115 [Thread-9] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-01 21:15:24.116 [Thread-9] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-01 21:15:24.119 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} closing ...
2025-07-01 21:15:24.123 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} closed
2025-07-01 21:15:24.123 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} closing ...
2025-07-01 21:15:24.124 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} closed
2025-07-01 21:15:24.207 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 19860 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 21:15:24.207 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 21:15:24.207 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 21:15:24.318 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 21:15:24.318 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 21:15:24.319 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 0 Redis repository interfaces.
2025-07-01 21:15:24.342 [restartedMain] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[com.huang.store.mapper]' package. Please check your configuration.
2025-07-01 21:15:24.379 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 21:15:24.380 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 21:15:24.380 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 21:15:24.380 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 21:15:24.381 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 21:15:24.381 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 21:15:24.382 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 21:15:24.382 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 21:15:24.395 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 21:15:24.396 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 187 ms
2025-07-01 21:15:24.436 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 21:15:24.476 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} inited
2025-07-01 21:15:24.491 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} inited
2025-07-01 21:15:24.510 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
2025-07-01 21:15:24.510 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} closing ...
2025-07-01 21:15:24.511 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} closed
2025-07-01 21:15:24.511 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} closing ...
2025-07-01 21:15:24.511 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} closed
2025-07-01 21:15:24.512 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 21:15:24.516 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 21:15:24.518 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 24 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$13a29d59.CGLIB$sqlSessionFactory$1(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$13a29d59$$FastClassBySpringCGLIB$$e344ad70.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$13a29d59.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:78)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:144)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:136)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:126)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 46 common frames omitted
2025-07-01 21:15:26.990 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 19860 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 21:15:26.990 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 21:15:26.990 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 21:15:27.129 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 21:15:27.129 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 21:15:27.136 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2025-07-01 21:15:27.170 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$194d8efa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 21:15:27.173 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 21:15:27.208 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 21:15:27.209 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 21:15:27.209 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 21:15:27.209 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 21:15:27.211 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 21:15:27.211 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 21:15:27.211 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 21:15:27.211 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 21:15:27.226 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-2].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 21:15:27.226 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 235 ms
2025-07-01 21:15:27.228 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 21:15:27.297 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-9} inited
2025-07-01 21:15:27.323 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-10} inited
2025-07-01 21:15:27.423 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 21:15:27.423 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 21:15:27.518 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 21:15:27.572 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@29a8f3, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6a877670, org.springframework.security.web.context.SecurityContextPersistenceFilter@4e1f37f9, org.springframework.security.web.header.HeaderWriterFilter@62aa96a6, org.springframework.web.filter.CorsFilter@537b620d, org.springframework.security.web.authentication.logout.LogoutFilter@afa13c7, com.huang.store.security.JwtAuthenticationTokenFilter@29479d07, com.huang.store.security.CustomAuthenticationFilter@16f0eab7, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@41eade0f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@78e13cd1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4e489acd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@70d8f4a0, org.springframework.security.web.session.SessionManagementFilter@5ea5ae76, org.springframework.security.web.access.ExceptionTranslationFilter@7c595231, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6cb8f260]
2025-07-01 21:15:27.650 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 21:15:27.657 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 21:15:27.658 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 21:15:27.661 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 0.697 seconds (JVM running for 441.111)
2025-07-01 21:16:21.818 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-01 21:16:21.859 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 13700 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 21:16:21.859 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 21:16:21.862 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 21:16:22.011 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-01 21:16:22.011 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-01 21:16:22.495 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 21:16:22.496 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 21:16:22.524 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
2025-07-01 21:16:22.734 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$194d8efa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 21:16:22.749 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 21:16:23.170 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 21:16:23.171 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 21:16:23.171 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 21:16:23.171 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 21:16:23.176 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 21:16:23.184 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 21:16:23.186 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 21:16:23.186 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 21:16:23.247 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 21:16:23.247 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1235 ms
2025-07-01 21:16:23.249 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 21:16:24.027 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-01 21:16:24.055 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-01 21:16:24.340 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 21:16:24.340 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 21:16:24.767 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 21:16:24.897 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4caffbe8, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5c979c38, org.springframework.security.web.context.SecurityContextPersistenceFilter@3c68c4f6, org.springframework.security.web.header.HeaderWriterFilter@1d2899c5, org.springframework.web.filter.CorsFilter@71eb0129, org.springframework.security.web.authentication.logout.LogoutFilter@c371596, com.huang.store.security.JwtAuthenticationTokenFilter@649876f5, com.huang.store.security.CustomAuthenticationFilter@6392bb15, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2a2a3609, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3ca47ca8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@28a01df7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6cb4d86c, org.springframework.security.web.session.SessionManagementFilter@774d3860, org.springframework.security.web.access.ExceptionTranslationFilter@9c4a1fb, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@15dca4b9]
2025-07-01 21:16:25.135 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 21:16:25.152 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 21:16:25.174 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 21:16:25.182 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 3.77 seconds (JVM running for 4.068)
2025-07-01 21:17:19.701 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-01 21:17:19.701 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-01 21:17:19.702 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-01 21:17:57.699 [http-nio-8080-exec-2] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzczNjMyNDE4LCJleHAiOjE3NTEzNzU0MzJ9.3f7VYpMxCwdIXxPMleDX6aT_hnTTix33VyRXJKomcstK68oTSAehSbC4C8nm1wtv7ggkba0hOJKaZTSKyWcxgA
2025-07-01 21:18:12.583 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 21:18:12.613 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:12.613 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 21:18:12.734 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 56464ff@456.com(String)
2025-07-01 21:18:12.767 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 21:18:12.788 [http-nio-8080-exec-3] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:56464ff@456.com    数据库密码:$2a$10$7OBMT05X3FsorQiaTl2aQuxGJpdi4w1dVWZdG8Oy9K7E61SWT9WAy
2025-07-01 21:18:12.891 [http-nio-8080-exec-3] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=56464ff@456.com, password=$2a$10$7OBMT05X3FsorQiaTl2aQuxGJpdi4w1dVWZdG8Oy9K7E61SWT9WAy, enabled=true, roles=[ROLE_USER]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]
2025-07-01 21:18:12.933 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 21:18:12.933 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:12.933 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 21:18:12.934 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 56464ff@456.com(String)
2025-07-01 21:18:12.935 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 21:18:14.089 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.OrderMapper.findOrderDtoByOrderId - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.orderId = ?
2025-07-01 21:18:14.091 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:14.091 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
        WHERE o.orderId = ? ::: DataSources: slave
2025-07-01 21:18:14.101 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.OrderMapper.findOrderDtoByOrderId - ==> Parameters: SPIKE1751375414899509(String)
2025-07-01 21:18:14.107 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.OrderMapper.findOrderDtoByOrderId - <==      Total: 1
2025-07-01 21:18:14.109 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:18:14.112 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:14.114 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:18:14.119 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751375414899509(String)
2025-07-01 21:18:14.127 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:18:14.128 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.ExpenseMapper.findExpenseByOrderId - ==>  Preparing: select orderId, productTotalMoney, freight, coupon, activityDiscount, allPrice, finallyPrice from expense where orderId = ?
2025-07-01 21:18:14.129 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:14.129 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select orderId, productTotalMoney, freight, coupon, activityDiscount, allPrice, finallyPrice
        from expense
        where orderId = ? ::: DataSources: slave
2025-07-01 21:18:14.131 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.ExpenseMapper.findExpenseByOrderId - ==> Parameters: SPIKE1751375414899509(String)
2025-07-01 21:18:14.133 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.ExpenseMapper.findExpenseByOrderId - <==      Total: 1
2025-07-01 21:18:14.135 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.AddressMapper.addressList - ==>  Preparing: select * from address where account=? and off=false
2025-07-01 21:18:14.135 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:14.136 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from address where account=? and off=false ::: DataSources: slave
2025-07-01 21:18:14.138 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.AddressMapper.addressList - ==> Parameters: 56464ff@456.com(String)
2025-07-01 21:18:14.140 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.AddressMapper.addressList - <==      Total: 2
2025-07-01 21:18:14.142 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:18:14.142 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:14.142 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:18:14.145 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 21:18:14.149 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:18:28.565 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - ==>  Preparing: update book set stock=stock-? where id=? and stock>=?
2025-07-01 21:18:28.568 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:28.568 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: update book
            set stock=stock-?
                where id=? and stock>=? ::: DataSources: master
2025-07-01 21:18:28.579 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - ==> Parameters: 1(Integer), 1(Integer), 1(Integer)
2025-07-01 21:18:28.591 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - <==    Updates: 1
2025-07-01 21:18:28.610 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.addOrder - ==>  Preparing: insert into bookorder(orderId,account,addressId,orderTime,shipTime,getTime,evaluateTime,closeTime,orderStatus,logisticsNum,confirmTime) values (?,?,?,?,?,?,?,?,?,?,?)
2025-07-01 21:18:28.622 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:28.623 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: insert into bookorder(orderId,account,addressId,orderTime,shipTime,getTime,evaluateTime,closeTime,orderStatus,logisticsNum,confirmTime)
            values (?,?,?,?,?,?,?,?,?,?,?) ::: DataSources: master
2025-07-01 21:18:28.872 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.addOrder - ==> Parameters: 20250701211827858439(String), 56464ff@456.com(String), 5(Integer), 2025-07-01 21:18:27.775(Timestamp), null, null, null, null, 已付款(String), null, null
2025-07-01 21:18:28.887 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.addOrder - <==    Updates: 1
2025-07-01 21:18:28.909 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.OrderMapper.batchAddOrderDetail - ==>  Preparing: insert into orderdetail(orderId,bookId,num,price) values (?,?,?,?)
2025-07-01 21:18:28.909 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:28.910 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: insert into orderdetail(orderId,bookId,num,price)
        values
          
            (?,?,?,?) ::: DataSources: master
2025-07-01 21:18:28.912 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.OrderMapper.batchAddOrderDetail - ==> Parameters: 20250701211827858439(String), 1(Integer), 1(Integer), 22.9(Double)
2025-07-01 21:18:28.917 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.OrderMapper.batchAddOrderDetail - <==    Updates: 1
2025-07-01 21:18:28.920 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.ExpenseMapper.addExpense - ==>  Preparing: insert into expense(orderId,productTotalMoney,freight,coupon,activityDiscount,allPrice,finallyPrice) values (?,?,?,?,?,?,?)
2025-07-01 21:18:28.920 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:28.920 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: insert into expense(orderId,productTotalMoney,freight,coupon,activityDiscount,allPrice,finallyPrice)
            values (?,?,?,?,?,?,?) ::: DataSources: master
2025-07-01 21:18:28.923 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.ExpenseMapper.addExpense - ==> Parameters: 20250701211827858439(String), 45.0(Double), 0.0(Double), 0(Integer), 22.1(Double), 45.0(Double), 22.9(Double)
2025-07-01 21:18:28.936 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.ExpenseMapper.addExpense - <==    Updates: 1
2025-07-01 21:18:30.014 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-01 21:18:30.016 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:30.017 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-01 21:18:30.027 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), false(Boolean), 0(Integer), 5(Integer)
2025-07-01 21:18:30.040 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 5
2025-07-01 21:18:30.041 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:18:30.041 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:30.042 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:18:30.044 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701211827858439(String)
2025-07-01 21:18:30.047 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:18:30.080 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:18:30.080 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:30.081 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:18:30.082 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 21:18:30.084 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:18:30.086 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:18:30.087 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:30.087 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:18:30.088 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751375414899509(String)
2025-07-01 21:18:30.092 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:18:30.095 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:18:30.095 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:30.095 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:18:30.096 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 21:18:30.098 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:18:30.101 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:18:30.102 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:30.102 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:18:30.102 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701210858965375(String)
2025-07-01 21:18:30.106 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:18:30.109 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:18:30.109 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:30.109 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:18:30.109 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:18:30.110 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:18:30.114 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:18:30.116 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:30.117 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:18:30.117 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751373956869252(String)
2025-07-01 21:18:30.121 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:18:30.123 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:18:30.123 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:30.123 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:18:30.123 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:18:30.126 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:18:30.128 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:18:30.129 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:30.129 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:18:30.129 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751353753865969(String)
2025-07-01 21:18:30.131 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:18:30.132 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:18:30.133 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:30.133 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:18:30.134 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 21:18:30.137 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:18:30.138 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND beUserDelete = ?
2025-07-01 21:18:30.139 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:30.139 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-01 21:18:30.142 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), false(Boolean)
2025-07-01 21:18:30.144 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-01 21:18:35.582 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.findOrderDto - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.id = ?
2025-07-01 21:18:35.583 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:35.583 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
        WHERE o.id = ? ::: DataSources: slave
2025-07-01 21:18:35.588 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.findOrderDto - ==> Parameters: 15(Integer)
2025-07-01 21:18:35.591 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.findOrderDto - <==      Total: 1
2025-07-01 21:18:35.593 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:18:35.594 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:35.594 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:18:35.595 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701211827858439(String)
2025-07-01 21:18:35.597 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:18:35.599 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:18:35.600 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:35.601 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:18:35.602 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701211827858439(String)
2025-07-01 21:18:35.606 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:18:35.607 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:18:35.608 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:35.609 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:18:35.609 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 21:18:35.610 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:18:43.534 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-01 21:18:43.534 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:43.535 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-01 21:18:43.541 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), false(Boolean), 0(Integer), 5(Integer)
2025-07-01 21:18:43.552 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 5
2025-07-01 21:18:43.553 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:18:43.554 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:43.554 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:18:43.555 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701211827858439(String)
2025-07-01 21:18:43.557 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:18:43.565 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:18:43.566 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:43.566 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:18:43.567 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 21:18:43.568 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:18:43.569 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:18:43.570 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:43.571 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:18:43.572 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751375414899509(String)
2025-07-01 21:18:43.574 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:18:43.575 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:18:43.576 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:43.576 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:18:43.579 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 21:18:43.583 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:18:43.588 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:18:43.588 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:43.589 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:18:43.589 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701210858965375(String)
2025-07-01 21:18:43.591 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:18:43.593 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:18:43.593 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:43.593 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:18:43.594 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:18:43.595 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:18:43.596 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:18:43.596 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:43.596 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:18:43.597 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751373956869252(String)
2025-07-01 21:18:43.600 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:18:43.602 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:18:43.602 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:43.602 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:18:43.603 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:18:43.605 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:18:43.607 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:18:43.607 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:43.607 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:18:43.608 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751353753865969(String)
2025-07-01 21:18:43.609 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:18:43.610 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:18:43.610 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:43.611 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:18:43.611 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 21:18:43.614 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:18:43.615 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND beUserDelete = ?
2025-07-01 21:18:43.616 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:43.616 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-01 21:18:43.616 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), false(Boolean)
2025-07-01 21:18:43.617 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-01 21:18:46.282 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.findOrderDto - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.id = ?
2025-07-01 21:18:46.283 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:46.284 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
        WHERE o.id = ? ::: DataSources: slave
2025-07-01 21:18:46.284 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.findOrderDto - ==> Parameters: 13(Integer)
2025-07-01 21:18:46.289 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.findOrderDto - <==      Total: 1
2025-07-01 21:18:46.291 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:18:46.292 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:46.294 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:18:46.295 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701210858965375(String)
2025-07-01 21:18:46.297 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:18:46.299 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:18:46.299 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:46.300 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:18:46.301 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701210858965375(String)
2025-07-01 21:18:46.303 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:18:46.304 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:18:46.304 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:46.305 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:18:46.305 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:18:46.309 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:18:48.526 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-01 21:18:48.527 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:48.528 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-01 21:18:48.531 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), false(Boolean), 0(Integer), 5(Integer)
2025-07-01 21:18:48.544 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 5
2025-07-01 21:18:48.548 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:18:48.548 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:48.549 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:18:48.550 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701211827858439(String)
2025-07-01 21:18:48.556 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:18:48.558 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:18:48.558 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:48.558 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:18:48.559 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 21:18:48.560 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:18:48.561 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:18:48.561 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:48.562 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:18:48.563 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751375414899509(String)
2025-07-01 21:18:48.566 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:18:48.567 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:18:48.568 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:48.568 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:18:48.568 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 21:18:48.569 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:18:48.570 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:18:48.571 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:48.571 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:18:48.571 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701210858965375(String)
2025-07-01 21:18:48.573 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:18:48.575 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:18:48.575 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:48.575 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:18:48.576 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:18:48.577 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:18:48.578 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:18:48.579 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:48.579 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:18:48.579 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751373956869252(String)
2025-07-01 21:18:48.581 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:18:48.582 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:18:48.583 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:48.584 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:18:48.584 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:18:48.586 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:18:48.587 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:18:48.588 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:48.588 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:18:48.588 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751353753865969(String)
2025-07-01 21:18:48.590 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:18:48.592 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:18:48.592 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:48.592 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:18:48.593 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 21:18:48.595 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:18:48.595 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND beUserDelete = ?
2025-07-01 21:18:48.596 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:48.596 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-01 21:18:48.596 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), false(Boolean)
2025-07-01 21:18:48.598 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-01 21:18:53.648 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.findOrderDto - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.id = ?
2025-07-01 21:18:53.649 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:53.649 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
        WHERE o.id = ? ::: DataSources: slave
2025-07-01 21:18:53.652 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.findOrderDto - ==> Parameters: 11(Integer)
2025-07-01 21:18:53.657 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.findOrderDto - <==      Total: 1
2025-07-01 21:18:53.657 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:18:53.658 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:53.658 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:18:53.661 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751353753865969(String)
2025-07-01 21:18:53.665 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:18:53.667 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:18:53.667 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:53.668 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:18:53.669 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751353753865969(String)
2025-07-01 21:18:53.670 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:18:53.671 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:18:53.671 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:53.671 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:18:53.671 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 21:18:53.673 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:18:58.774 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-01 21:18:58.775 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:58.775 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-01 21:18:58.777 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), false(Boolean), 0(Integer), 5(Integer)
2025-07-01 21:18:58.784 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 5
2025-07-01 21:18:58.785 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:18:58.785 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:58.785 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:18:58.786 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701211827858439(String)
2025-07-01 21:18:58.789 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:18:58.789 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:18:58.790 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:58.790 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:18:58.790 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 21:18:58.792 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:18:58.794 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:18:58.795 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:58.795 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:18:58.796 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751375414899509(String)
2025-07-01 21:18:58.798 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:18:58.802 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:18:58.802 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:58.802 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:18:58.803 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 21:18:58.804 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:18:58.805 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:18:58.805 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:58.805 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:18:58.810 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701210858965375(String)
2025-07-01 21:18:58.811 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:18:58.812 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:18:58.813 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:58.814 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:18:58.815 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:18:58.816 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:18:58.817 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:18:58.817 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:58.817 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:18:58.818 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751373956869252(String)
2025-07-01 21:18:58.819 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:18:58.820 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:18:58.821 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:58.821 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:18:58.821 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:18:58.823 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:18:58.823 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:18:58.823 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:58.824 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:18:58.824 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751353753865969(String)
2025-07-01 21:18:58.828 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:18:58.829 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:18:58.829 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:58.829 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:18:58.830 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 21:18:58.831 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:18:58.832 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND beUserDelete = ?
2025-07-01 21:18:58.832 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:18:58.833 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-01 21:18:58.833 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), false(Boolean)
2025-07-01 21:18:58.835 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-01 21:19:00.686 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.findOrderDto - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.id = ?
2025-07-01 21:19:00.687 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:00.687 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
        WHERE o.id = ? ::: DataSources: slave
2025-07-01 21:19:00.690 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.findOrderDto - ==> Parameters: 11(Integer)
2025-07-01 21:19:00.693 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.findOrderDto - <==      Total: 1
2025-07-01 21:19:00.694 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:19:00.695 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:00.697 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:19:00.698 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751353753865969(String)
2025-07-01 21:19:00.700 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:19:00.703 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:19:00.703 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:00.703 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:19:00.704 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751353753865969(String)
2025-07-01 21:19:00.706 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:19:00.707 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:19:00.707 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:00.707 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:19:00.708 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 21:19:00.710 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:19:03.420 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-01 21:19:03.421 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:03.422 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-01 21:19:03.426 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), false(Boolean), 0(Integer), 5(Integer)
2025-07-01 21:19:03.435 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 5
2025-07-01 21:19:03.438 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:19:03.440 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:03.440 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:19:03.442 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701211827858439(String)
2025-07-01 21:19:03.444 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:19:03.447 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:19:03.447 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:03.447 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:19:03.448 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 21:19:03.449 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:19:03.449 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:19:03.450 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:03.450 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:19:03.451 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751375414899509(String)
2025-07-01 21:19:03.456 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:19:03.457 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:19:03.458 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:03.460 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:19:03.461 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 21:19:03.463 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:19:03.464 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:19:03.464 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:03.465 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:19:03.467 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701210858965375(String)
2025-07-01 21:19:03.469 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:19:03.471 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:19:03.471 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:03.471 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:19:03.472 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:19:03.475 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:19:03.477 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:19:03.477 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:03.477 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:19:03.478 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751373956869252(String)
2025-07-01 21:19:03.481 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:19:03.483 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:19:03.483 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:03.483 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:19:03.484 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:19:03.485 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:19:03.486 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:19:03.486 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:03.486 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:19:03.489 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751353753865969(String)
2025-07-01 21:19:03.491 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:19:03.492 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:19:03.492 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:03.492 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:19:03.492 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 21:19:03.495 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:19:03.496 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND beUserDelete = ?
2025-07-01 21:19:03.496 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:03.496 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-01 21:19:03.497 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), false(Boolean)
2025-07-01 21:19:03.498 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-01 21:19:05.574 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.OrderMapper.findOrderDtoByOrderId - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.orderId = ?
2025-07-01 21:19:05.575 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:05.575 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
        WHERE o.orderId = ? ::: DataSources: slave
2025-07-01 21:19:05.579 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.OrderMapper.findOrderDtoByOrderId - ==> Parameters: SPIKE1751375414899509(String)
2025-07-01 21:19:05.584 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.OrderMapper.findOrderDtoByOrderId - <==      Total: 1
2025-07-01 21:19:05.585 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 21:19:05.586 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:05.586 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 21:19:05.589 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751375414899509(String)
2025-07-01 21:19:05.593 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 21:19:05.594 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.ExpenseMapper.findExpenseByOrderId - ==>  Preparing: select orderId, productTotalMoney, freight, coupon, activityDiscount, allPrice, finallyPrice from expense where orderId = ?
2025-07-01 21:19:05.595 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:05.595 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select orderId, productTotalMoney, freight, coupon, activityDiscount, allPrice, finallyPrice
        from expense
        where orderId = ? ::: DataSources: slave
2025-07-01 21:19:05.596 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.ExpenseMapper.findExpenseByOrderId - ==> Parameters: SPIKE1751375414899509(String)
2025-07-01 21:19:05.598 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.ExpenseMapper.findExpenseByOrderId - <==      Total: 1
2025-07-01 21:19:05.602 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.AddressMapper.addressList - ==>  Preparing: select * from address where account=? and off=false
2025-07-01 21:19:05.602 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:05.603 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from address where account=? and off=false ::: DataSources: slave
2025-07-01 21:19:05.603 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.AddressMapper.addressList - ==> Parameters: 56464ff@456.com(String)
2025-07-01 21:19:05.605 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.AddressMapper.addressList - <==      Total: 2
2025-07-01 21:19:05.611 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:19:05.614 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:05.614 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:19:05.617 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 21:19:05.619 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:19:08.418 [http-nio-8080-exec-1] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-01 21:19:08.422 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 21:19:08.427 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-01 21:19:08.427 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 21:19:08.428 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-01 21:19:08.429 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 21:19:08.429 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:08.429 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:08.432 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-01 21:19:08.430 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:08.433 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 21:19:08.430 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:08.434 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-01 21:19:08.430 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:08.431 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-01 21:19:08.432 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 21:19:08.434 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-01 21:19:08.434 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 21:19:08.435 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:08.436 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-01 21:19:08.437 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-01 21:19:08.441 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 21:19:08.441 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:08.441 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 21:19:08.443 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 21:19:08.448 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 21:19:08.449 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 21:19:08.450 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 21:19:08.450 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:08.451 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 21:19:08.453 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-01 21:19:08.454 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 21:19:08.455 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-01 21:19:08.455 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:08.456 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 21:19:08.457 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 21:19:08.460 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-01 21:19:08.460 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 21:19:08.462 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 21:19:08.463 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 21:19:08.463 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 21:19:08.467 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-01 21:19:08.469 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:08.470 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 21:19:08.470 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-01 21:19:08.476 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:19:08.471 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 21:19:08.471 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 21:19:08.476 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 21:19:08.476 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:08.476 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:08.477 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 21:19:08.477 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-01 21:19:08.478 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 21:19:08.478 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:19:08.479 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-01 21:19:08.480 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 21:19:08.483 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 21:19:08.484 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-01 21:19:08.485 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:19:08.485 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 21:19:08.486 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:19:08.487 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 21:19:08.490 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:08.490 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:08.490 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:19:08.491 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 21:19:08.491 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:19:08.491 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 21:19:08.493 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:19:08.493 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 21:19:08.494 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:19:08.495 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:08.495 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:19:08.495 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 21:19:08.496 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 21:19:08.496 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:08.496 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 21:19:08.496 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 21:19:08.497 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:19:08.498 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 21:19:08.498 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:19:08.498 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 21:19:08.498 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:08.499 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:08.499 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:19:08.499 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 21:19:08.499 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 21:19:08.499 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 21:19:08.501 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:19:08.502 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 21:19:08.503 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:19:08.505 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:08.506 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:19:08.507 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 21:19:08.509 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:19:11.777 [http-nio-8080-exec-3] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 21:19:11.780 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:11.780 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 21:19:11.781 [http-nio-8080-exec-3] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 21:19:11.787 [http-nio-8080-exec-3] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 3
2025-07-01 21:19:11.788 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 21:19:11.788 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:11.788 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 21:19:11.791 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 2(Long)
2025-07-01 21:19:11.794 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 21:19:11.796 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 21:19:11.796 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:11.796 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 21:19:11.796 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 1(Long)
2025-07-01 21:19:11.801 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 3
2025-07-01 21:19:11.801 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 21:19:11.802 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:19:11.802 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 21:19:11.802 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 3(Long)
2025-07-01 21:19:11.806 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 21:27:01.332 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-01 21:27:01.334 [Thread-7] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 21:27:01.336 [Thread-7] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-07-01 21:27:01.370 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-564784104] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 21:27:01.370 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-564784104] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 21:27:01.371 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-877838134] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 21:27:01.372 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-877838134] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 21:27:01.372 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-nioEventLoop-4-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/sun.nio.ch.WEPoll.wait(Native Method)
 java.base@17.0.8/sun.nio.ch.WEPollSelectorImpl.doSelect(WEPollSelectorImpl.java:111)
 java.base@17.0.8/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:129)
 java.base@17.0.8/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:146)
 app//io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:68)
 app//io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:879)
 app//io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:526)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 21:27:01.373 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 21:27:01.374 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 21:27:01.377 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 21:27:01.378 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-01 21:27:01.379 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-01 21:27:01.381 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-01 21:27:01.506 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-01 21:27:01.511 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-01 21:27:01.512 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-01 21:27:01.514 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-01 21:27:01.622 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 13700 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 21:27:01.622 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 21:27:01.623 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 21:27:01.935 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 21:27:01.939 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 21:27:01.954 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-07-01 21:27:02.050 [restartedMain] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[com.huang.store.mapper]' package. Please check your configuration.
2025-07-01 21:27:02.154 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 21:27:02.155 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 21:27:02.155 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 21:27:02.155 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 21:27:02.156 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 21:27:02.157 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 21:27:02.157 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 21:27:02.157 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 21:27:02.180 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 21:27:02.180 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 550 ms
2025-07-01 21:27:02.203 [restartedMain] ERROR org.apache.catalina.session.StandardManager - Exception loading sessions from persistent storage
java.lang.ClassNotFoundException: com.huang.store.entity.user.SecurityUser
	at org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedWebappClassLoader.loadClass(TomcatEmbeddedWebappClassLoader.java:72)
	at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1141)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:467)
	at org.apache.catalina.util.CustomObjectInputStream.resolveClass(CustomObjectInputStream.java:158)
	at java.base/java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:2045)
	at java.base/java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1909)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2235)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream$FieldValues.<init>(ObjectInputStream.java:2617)
	at java.base/java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2468)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2268)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream$FieldValues.<init>(ObjectInputStream.java:2617)
	at java.base/java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2468)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2268)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:514)
	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:472)
	at org.apache.catalina.session.StandardSession.doReadObject(StandardSession.java:1530)
	at org.apache.catalina.session.StandardSession.readObjectData(StandardSession.java:1000)
	at org.apache.catalina.session.StandardManager.doLoad(StandardManager.java:210)
	at org.apache.catalina.session.StandardManager.load(StandardManager.java:156)
	at org.apache.catalina.session.StandardManager.startInternal(StandardManager.java:346)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4931)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2025-07-01 21:27:02.273 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 21:27:02.351 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} inited
2025-07-01 21:27:02.368 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} inited
2025-07-01 21:27:02.406 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\BookMapper.xml]'
2025-07-01 21:27:02.407 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closing ...
2025-07-01 21:27:02.407 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed
2025-07-01 21:27:02.407 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closing ...
2025-07-01 21:27:02.408 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed
2025-07-01 21:27:02.409 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 21:27:02.418 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 21:27:02.442 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\BookMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\BookMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 24 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\BookMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$13a29d59.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$13a29d59$$FastClassBySpringCGLIB$$e344ad70.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$13a29d59.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\BookMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.book.Book'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.book.Book
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.book.Book'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.book.Book
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:78)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:144)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:136)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:126)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.book.Book'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.book.Book
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.book.Book
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 46 common frames omitted
2025-07-01 21:27:03.936 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 13700 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 21:27:03.936 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 21:27:03.936 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 21:27:04.051 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 21:27:04.051 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 21:27:04.057 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2025-07-01 21:27:04.095 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$194d8efa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 21:27:04.099 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 21:27:04.140 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 21:27:04.140 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 21:27:04.140 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 21:27:04.140 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 21:27:04.141 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 21:27:04.141 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 21:27:04.141 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 21:27:04.141 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 21:27:04.151 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 21:27:04.151 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 214 ms
2025-07-01 21:27:04.154 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 21:27:04.219 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} inited
2025-07-01 21:27:04.234 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} inited
2025-07-01 21:27:04.352 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 21:27:04.352 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 21:27:04.458 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 21:27:04.518 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@713dfda, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4f22d6cf, org.springframework.security.web.context.SecurityContextPersistenceFilter@42be2311, org.springframework.security.web.header.HeaderWriterFilter@673e29a0, org.springframework.web.filter.CorsFilter@540ec3e9, org.springframework.security.web.authentication.logout.LogoutFilter@103ff960, com.huang.store.security.JwtAuthenticationTokenFilter@629235af, com.huang.store.security.CustomAuthenticationFilter@48767cca, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3f8b75f1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2712db2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@14946775, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3980c531, org.springframework.security.web.session.SessionManagementFilter@6e6b3c44, org.springframework.security.web.access.ExceptionTranslationFilter@4700e1fd, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@576f055c]
2025-07-01 21:27:04.612 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 21:27:04.619 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 21:27:04.621 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 21:27:04.624 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 0.734 seconds (JVM running for 643.51)
2025-07-01 21:27:56.691 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-01 21:27:56.709 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 1968 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 21:27:56.711 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 21:27:56.716 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 21:27:56.939 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-01 21:27:56.939 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-01 21:27:57.716 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 21:27:57.719 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 21:27:57.756 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 0 Redis repository interfaces.
2025-07-01 21:27:58.028 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$194d8efa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 21:27:58.051 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 21:27:58.702 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 21:27:58.703 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 21:27:58.704 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 21:27:58.704 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 21:27:58.725 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 21:27:58.734 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 21:27:58.739 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 21:27:58.739 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 21:27:58.810 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 21:27:58.810 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1869 ms
2025-07-01 21:27:58.815 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 21:27:59.709 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-01 21:27:59.737 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-01 21:28:00.060 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 21:28:00.060 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 21:28:00.589 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 21:28:00.724 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1f33f09c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@12f6c216, org.springframework.security.web.context.SecurityContextPersistenceFilter@e12679d, org.springframework.security.web.header.HeaderWriterFilter@29115975, org.springframework.web.filter.CorsFilter@6a9e0040, org.springframework.security.web.authentication.logout.LogoutFilter@6f21bd4a, com.huang.store.security.JwtAuthenticationTokenFilter@649876f5, com.huang.store.security.CustomAuthenticationFilter@6392bb15, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@64db8c82, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5b2a9187, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@22f87523, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@72dc4e93, org.springframework.security.web.session.SessionManagementFilter@4e9bb64c, org.springframework.security.web.access.ExceptionTranslationFilter@1ccde850, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3b4380df]
2025-07-01 21:28:00.966 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 21:28:00.982 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 21:28:01.010 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 21:28:01.019 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 4.957 seconds (JVM running for 6.886)
2025-07-01 21:28:35.632 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-01 21:28:35.633 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-01 21:28:35.635 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-07-01 21:28:35.792 [http-nio-8080-exec-1] WARN  org.apache.catalina.util.SessionIdGeneratorBase - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [107] milliseconds.
2025-07-01 21:33:02.857 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzNzM5Mjk3OTUsImV4cCI6MTc1MTM3NTcyOX0.Dk0YpgWN7XSnD-0q9qP75jXXC6NDI5jF_vYXYzLEYRz8-F7riXRPbHxWNHiarH-O5p2BFfEanOKsQEQUtlu6mw
2025-07-01 21:33:18.772 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 21:33:18.830 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:33:18.830 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 21:33:19.056 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 2545059634@qq.com(String)
2025-07-01 21:33:19.113 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 21:33:19.134 [http-nio-8080-exec-4] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:2545059634@qq.com    数据库密码:$2a$10$w8zNNUSDq3MCiLDDuAhYXedA0QGva1Z4.6UxO61Njhsrlo8voc01G
2025-07-01 21:33:19.312 [http-nio-8080-exec-4] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=2545059634@qq.com, password=$2a$10$w8zNNUSDq3MCiLDDuAhYXedA0QGva1Z4.6UxO61Njhsrlo8voc01G, enabled=true, roles=[ROLE_ADMIN]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]
2025-07-01 21:33:19.383 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 21:33:19.384 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:33:19.384 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 21:33:19.385 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 2545059634@qq.com(String)
2025-07-01 21:33:19.388 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 21:33:25.264 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 21:33:25.264 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:33:25.265 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 21:33:25.277 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 21:33:25.293 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 5
2025-07-01 21:33:25.295 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 21:33:25.295 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:33:25.295 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 21:33:25.299 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 21:33:25.304 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 21:33:33.826 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 21:33:33.827 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:33:33.829 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 21:33:33.830 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 5(Integer), 5(Integer)
2025-07-01 21:33:33.836 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 1
2025-07-01 21:33:33.838 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 21:33:33.842 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:33:33.843 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 21:33:33.844 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 21:33:33.848 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 21:33:35.404 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 21:33:35.406 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:33:35.408 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 21:33:35.409 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 21:33:35.414 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 5
2025-07-01 21:33:35.415 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 21:33:35.416 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:33:35.416 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 21:33:35.417 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 21:33:35.420 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 21:33:40.933 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 21:33:40.934 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:33:40.934 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 21:33:40.936 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 56464ff@456.com(String)
2025-07-01 21:33:40.939 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 21:33:40.943 [http-nio-8080-exec-7] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:56464ff@456.com    数据库密码:$2a$10$7OBMT05X3FsorQiaTl2aQuxGJpdi4w1dVWZdG8Oy9K7E61SWT9WAy
2025-07-01 21:33:40.953 [http-nio-8080-exec-7] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 21:33:40.954 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:33:40.954 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 21:33:40.956 [http-nio-8080-exec-7] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 21:33:40.966 [http-nio-8080-exec-7] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 6
2025-07-01 21:33:40.970 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 21:33:40.971 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:33:40.971 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 21:33:40.982 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 3(Long)
2025-07-01 21:33:40.995 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 21:33:41.003 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 21:33:41.010 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:33:41.011 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 21:33:41.019 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 4(Long)
2025-07-01 21:33:41.024 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-01 21:33:41.025 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 21:33:41.026 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:33:41.027 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 21:33:41.029 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 5(Long)
2025-07-01 21:33:41.034 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-01 21:33:59.369 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1 WHERE sg.activityId = ? ORDER BY sg.sortOrder ASC, sg.createTime DESC LIMIT ?, ?
2025-07-01 21:33:59.371 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:33:59.372 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1
        WHERE sg.activityId = ?
        ORDER BY sg.sortOrder ASC, sg.createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 21:33:59.378 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==> Parameters: 4(Long), 0(Integer), 10(Integer)
2025-07-01 21:33:59.386 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - <==      Total: 0
2025-07-01 21:33:59.390 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==>  Preparing: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ?
2025-07-01 21:33:59.391 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:33:59.392 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ? ::: DataSources: slave
2025-07-01 21:33:59.399 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==> Parameters: 4(Long)
2025-07-01 21:33:59.402 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - <==      Total: 1
2025-07-01 21:39:58.425 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-01 21:39:58.431 [Thread-7] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 21:39:58.444 [Thread-7] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-07-01 21:39:58.499 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-564784104] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 21:39:58.501 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-564784104] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 21:39:58.501 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-877838134] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 21:39:58.502 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-877838134] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 21:39:58.504 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-01 21:39:58.512 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-01 21:39:58.545 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-01 21:39:58.554 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-01 21:39:58.555 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-01 21:39:58.556 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-01 21:39:58.735 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 1968 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 21:39:58.736 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 21:39:58.737 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 21:39:58.982 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 21:39:58.984 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 21:39:58.988 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-07-01 21:39:59.072 [restartedMain] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[com.huang.store.mapper]' package. Please check your configuration.
2025-07-01 21:39:59.174 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 21:39:59.174 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 21:39:59.174 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 21:39:59.175 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 21:39:59.176 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 21:39:59.176 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 21:39:59.177 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 21:39:59.177 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 21:39:59.207 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 21:39:59.207 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 461 ms
2025-07-01 21:39:59.234 [restartedMain] ERROR org.apache.catalina.session.StandardManager - Exception loading sessions from persistent storage
java.lang.ClassNotFoundException: com.huang.store.entity.user.SecurityUser
	at org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedWebappClassLoader.loadClass(TomcatEmbeddedWebappClassLoader.java:72)
	at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1141)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:467)
	at org.apache.catalina.util.CustomObjectInputStream.resolveClass(CustomObjectInputStream.java:158)
	at java.base/java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:2045)
	at java.base/java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1909)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2235)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream$FieldValues.<init>(ObjectInputStream.java:2617)
	at java.base/java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2468)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2268)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream$FieldValues.<init>(ObjectInputStream.java:2617)
	at java.base/java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2468)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2268)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:514)
	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:472)
	at org.apache.catalina.session.StandardSession.doReadObject(StandardSession.java:1530)
	at org.apache.catalina.session.StandardSession.readObjectData(StandardSession.java:1000)
	at org.apache.catalina.session.StandardManager.doLoad(StandardManager.java:210)
	at org.apache.catalina.session.StandardManager.load(StandardManager.java:156)
	at org.apache.catalina.session.StandardManager.startInternal(StandardManager.java:346)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4931)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2025-07-01 21:39:59.335 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 21:39:59.517 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} inited
2025-07-01 21:39:59.550 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} inited
2025-07-01 21:39:59.600 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
2025-07-01 21:39:59.600 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closing ...
2025-07-01 21:39:59.603 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed
2025-07-01 21:39:59.603 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closing ...
2025-07-01 21:39:59.605 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed
2025-07-01 21:39:59.606 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 21:39:59.616 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 21:39:59.651 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 24 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$13a29d59.CGLIB$sqlSessionFactory$1(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$13a29d59$$FastClassBySpringCGLIB$$e344ad70.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$13a29d59.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:78)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:144)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:136)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:126)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 46 common frames omitted
2025-07-01 21:40:02.093 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 1968 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 21:40:02.094 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 21:40:02.094 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 21:40:02.488 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 21:40:02.490 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 21:40:02.578 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 87 ms. Found 0 Redis repository interfaces.
2025-07-01 21:40:02.681 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$194d8efa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 21:40:02.688 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 21:40:02.762 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 21:40:02.762 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 21:40:02.762 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 21:40:02.763 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 21:40:02.763 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 21:40:02.764 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 21:40:02.764 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 21:40:02.764 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 21:40:02.787 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 21:40:02.787 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 689 ms
2025-07-01 21:40:02.791 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 21:40:02.926 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} inited
2025-07-01 21:40:02.953 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} inited
2025-07-01 21:40:03.153 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 21:40:03.154 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 21:40:03.528 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 21:40:03.745 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5845bf50, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@86e6241, org.springframework.security.web.context.SecurityContextPersistenceFilter@1be85432, org.springframework.security.web.header.HeaderWriterFilter@78c90c4f, org.springframework.web.filter.CorsFilter@66436e92, org.springframework.security.web.authentication.logout.LogoutFilter@411f8218, com.huang.store.security.JwtAuthenticationTokenFilter@5899f49c, com.huang.store.security.CustomAuthenticationFilter@51818e75, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@67cfe02c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@14bca382, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@24a76e2e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1718f755, org.springframework.security.web.session.SessionManagementFilter@2c7c290e, org.springframework.security.web.access.ExceptionTranslationFilter@e202f72, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@410ea68a]
2025-07-01 21:40:04.124 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 21:40:04.151 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 21:40:04.158 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 21:40:04.169 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 2.18 seconds (JVM running for 730.035)
2025-07-01 21:40:50.453 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-01 21:40:50.473 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 24028 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 21:40:50.475 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 21:40:50.476 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 21:40:50.622 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-01 21:40:50.623 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-01 21:40:51.204 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 21:40:51.297 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 21:40:51.380 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
2025-07-01 21:40:51.638 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$e6882629] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 21:40:51.654 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 21:40:52.183 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 21:40:52.184 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 21:40:52.186 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 21:40:52.186 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 21:40:52.191 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 21:40:52.199 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 21:40:52.202 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 21:40:52.203 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 21:40:52.270 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 21:40:52.270 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1647 ms
2025-07-01 21:40:52.274 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 21:40:53.117 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-01 21:40:53.148 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-01 21:40:53.460 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 21:40:53.460 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 21:40:53.925 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 21:40:54.074 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@30095561, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2b28b71c, org.springframework.security.web.context.SecurityContextPersistenceFilter@1040bf8a, org.springframework.security.web.header.HeaderWriterFilter@6c3a3c57, org.springframework.web.filter.CorsFilter@eb9d3ac, org.springframework.security.web.authentication.logout.LogoutFilter@29115975, com.huang.store.security.JwtAuthenticationTokenFilter@3d4a2bd1, com.huang.store.security.CustomAuthenticationFilter@9656c4c, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@482cdcae, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@57f785, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4564540e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@20fe1a4a, org.springframework.security.web.session.SessionManagementFilter@7fced463, org.springframework.security.web.access.ExceptionTranslationFilter@4b657803, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6761f59d]
2025-07-01 21:40:54.325 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 21:40:54.356 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 21:40:54.383 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 21:40:54.392 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 4.368 seconds (JVM running for 4.733)
2025-07-01 21:41:34.588 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-01 21:41:34.588 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-01 21:41:34.592 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-07-01 21:41:34.854 [http-nio-8080-exec-1] WARN  org.apache.catalina.util.SessionIdGeneratorBase - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [190] milliseconds.
2025-07-01 21:46:52.809 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 21:46:52.835 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:46:52.836 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 21:46:52.909 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 56464ff@456.com(String)
2025-07-01 21:46:52.931 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 21:46:52.943 [http-nio-8080-exec-4] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:56464ff@456.com    数据库密码:$2a$10$7OBMT05X3FsorQiaTl2aQuxGJpdi4w1dVWZdG8Oy9K7E61SWT9WAy
2025-07-01 21:46:52.964 [http-nio-8080-exec-4] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 21:46:52.965 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:46:52.965 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 21:46:52.969 [http-nio-8080-exec-4] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 21:46:52.975 [http-nio-8080-exec-4] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 6
2025-07-01 21:46:52.977 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 21:46:52.977 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:46:52.977 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 21:46:52.984 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 3(Long)
2025-07-01 21:46:52.992 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-01 21:46:52.993 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-01 21:46:52.993 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:46:52.993 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-01 21:46:52.994 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 1(Integer)
2025-07-01 21:46:52.996 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-01 21:46:52.997 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:46:52.997 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:46:52.997 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:46:53.000 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 21:46:53.003 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:46:53.003 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-01 21:46:53.003 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:46:53.004 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-01 21:46:53.005 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 2(Integer)
2025-07-01 21:46:53.007 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-01 21:46:53.008 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 21:46:53.008 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:46:53.008 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 21:46:53.009 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 21:46:53.010 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 21:46:53.013 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 21:46:53.013 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:46:53.013 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 21:46:53.014 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 4(Long)
2025-07-01 21:46:53.015 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-01 21:46:53.016 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 21:46:53.016 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 21:46:53.016 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 21:46:53.016 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 5(Long)
2025-07-01 21:46:53.019 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-01 22:03:13.878 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-01 22:03:13.879 [Thread-7] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 22:03:13.884 [Thread-7] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-07-01 22:03:13.916 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-343130632] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 22:03:13.916 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-343130632] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 22:03:13.917 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1844254314] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 22:03:13.917 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1844254314] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 22:03:13.920 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-01 22:03:13.922 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-01 22:03:13.947 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-01 22:03:13.955 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-01 22:03:13.955 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-01 22:03:13.957 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-01 22:03:14.089 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 24028 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 22:03:14.089 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 22:03:14.089 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 22:03:14.291 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 22:03:14.293 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 22:03:14.296 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2025-07-01 22:03:14.364 [restartedMain] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[com.huang.store.mapper]' package. Please check your configuration.
2025-07-01 22:03:14.491 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 22:03:14.491 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 22:03:14.491 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 22:03:14.492 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 22:03:14.497 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 22:03:14.498 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 22:03:14.498 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 22:03:14.499 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 22:03:14.534 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 22:03:14.534 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 437 ms
2025-07-01 22:03:14.558 [restartedMain] ERROR org.apache.catalina.session.StandardManager - Exception loading sessions from persistent storage
java.lang.ClassNotFoundException: com.huang.store.entity.user.SecurityUser
	at org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedWebappClassLoader.loadClass(TomcatEmbeddedWebappClassLoader.java:72)
	at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1141)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:467)
	at org.apache.catalina.util.CustomObjectInputStream.resolveClass(CustomObjectInputStream.java:158)
	at java.base/java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:2045)
	at java.base/java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1909)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2235)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream$FieldValues.<init>(ObjectInputStream.java:2617)
	at java.base/java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2468)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2268)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream$FieldValues.<init>(ObjectInputStream.java:2617)
	at java.base/java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2468)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2268)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:514)
	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:472)
	at org.apache.catalina.session.StandardSession.doReadObject(StandardSession.java:1530)
	at org.apache.catalina.session.StandardSession.readObjectData(StandardSession.java:1000)
	at org.apache.catalina.session.StandardManager.doLoad(StandardManager.java:210)
	at org.apache.catalina.session.StandardManager.load(StandardManager.java:156)
	at org.apache.catalina.session.StandardManager.startInternal(StandardManager.java:346)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4931)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2025-07-01 22:03:14.642 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 22:03:14.720 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} inited
2025-07-01 22:03:14.742 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} inited
2025-07-01 22:03:14.772 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
2025-07-01 22:03:14.773 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closing ...
2025-07-01 22:03:14.774 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed
2025-07-01 22:03:14.774 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closing ...
2025-07-01 22:03:14.775 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed
2025-07-01 22:03:14.776 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 22:03:14.782 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 22:03:14.811 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 24 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e0dd3488.CGLIB$sqlSessionFactory$1(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e0dd3488$$FastClassBySpringCGLIB$$662acbfa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e0dd3488.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:78)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:144)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:136)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:126)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 46 common frames omitted
2025-07-01 22:08:15.845 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 24028 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 22:08:15.845 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 22:08:15.845 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 22:08:15.941 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 22:08:15.941 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 22:08:15.946 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-07-01 22:08:15.972 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$e6882629] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 22:08:15.975 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 22:08:15.999 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 22:08:15.999 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 22:08:15.999 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 22:08:15.999 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 22:08:16.000 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 22:08:16.000 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 22:08:16.001 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 22:08:16.002 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 22:08:16.016 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 22:08:16.016 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 168 ms
2025-07-01 22:08:16.067 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} inited
2025-07-01 22:08:16.082 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} inited
2025-07-01 22:08:16.115 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController': Unsatisfied dependency expressed through field 'cartService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstCart': Unsatisfied dependency expressed through field 'cartMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\CartMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
2025-07-01 22:08:16.115 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} closing ...
2025-07-01 22:08:16.120 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} closed
2025-07-01 22:08:16.120 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} closing ...
2025-07-01 22:08:16.121 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} closed
2025-07-01 22:08:16.121 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 22:08:16.124 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 22:08:16.126 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController': Unsatisfied dependency expressed through field 'cartService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstCart': Unsatisfied dependency expressed through field 'cartMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\CartMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstCart': Unsatisfied dependency expressed through field 'cartMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\CartMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 25 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\CartMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1534)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 39 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	... 50 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 63 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e0dd3488.CGLIB$sqlSessionFactory$1(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e0dd3488$$FastClassBySpringCGLIB$$662acbfa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e0dd3488.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 64 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.dto.OrderDto'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.dto.OrderDto
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 77 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.dto.OrderDto'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.dto.OrderDto
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:270)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:262)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(XMLMapperBuilder.java:254)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:124)
	... 79 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.dto.OrderDto'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.dto.OrderDto
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 83 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.dto.OrderDto
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 85 common frames omitted
2025-07-01 22:08:55.017 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 24028 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 22:08:55.017 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 22:08:55.017 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 22:08:55.170 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 22:08:55.170 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 22:08:55.173 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2025-07-01 22:08:55.215 [restartedMain] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[com.huang.store.mapper]' package. Please check your configuration.
2025-07-01 22:08:55.267 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 22:08:55.267 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 22:08:55.268 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 22:08:55.268 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 22:08:55.268 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 22:08:55.269 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 22:08:55.270 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 22:08:55.270 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 22:08:55.290 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-2].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 22:08:55.290 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 271 ms
2025-07-01 22:08:55.349 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 22:08:55.424 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} inited
2025-07-01 22:08:55.446 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} inited
2025-07-01 22:08:55.470 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
2025-07-01 22:08:55.470 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} closing ...
2025-07-01 22:08:55.471 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} closed
2025-07-01 22:08:55.472 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} closing ...
2025-07-01 22:08:55.473 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} closed
2025-07-01 22:08:55.473 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 22:08:55.477 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 22:08:55.481 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 24 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e0dd3488.CGLIB$sqlSessionFactory$1(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e0dd3488$$FastClassBySpringCGLIB$$662acbfa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e0dd3488.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:78)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:144)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:136)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:126)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 46 common frames omitted
2025-07-01 22:08:56.954 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 24028 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 22:08:56.954 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 22:08:56.954 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 22:08:57.070 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 22:08:57.070 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 22:08:57.075 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-07-01 22:08:57.099 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$e6882629] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 22:08:57.102 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 22:08:57.122 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 22:08:57.122 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 22:08:57.122 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 22:08:57.122 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 22:08:57.123 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 22:08:57.123 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 22:08:57.124 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 22:08:57.124 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 22:08:57.135 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-3].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 22:08:57.135 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 179 ms
2025-07-01 22:08:57.188 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-9} inited
2025-07-01 22:08:57.205 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-10} inited
2025-07-01 22:08:57.234 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController': Unsatisfied dependency expressed through field 'cartService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstCart': Unsatisfied dependency expressed through field 'cartMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\CartMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
2025-07-01 22:08:57.234 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-9} closing ...
2025-07-01 22:08:57.235 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-9} closed
2025-07-01 22:08:57.236 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-10} closing ...
2025-07-01 22:08:57.236 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-10} closed
2025-07-01 22:08:57.237 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 22:08:57.240 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 22:08:57.242 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController': Unsatisfied dependency expressed through field 'cartService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstCart': Unsatisfied dependency expressed through field 'cartMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\CartMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstCart': Unsatisfied dependency expressed through field 'cartMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\CartMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 25 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\CartMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1534)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 39 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	... 50 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 63 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e0dd3488.CGLIB$sqlSessionFactory$1(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e0dd3488$$FastClassBySpringCGLIB$$662acbfa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e0dd3488.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 64 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\OrderMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.dto.OrderDto'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.dto.OrderDto
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 77 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.dto.OrderDto'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.dto.OrderDto
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:270)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:262)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(XMLMapperBuilder.java:254)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:124)
	... 79 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.dto.OrderDto'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.dto.OrderDto
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 83 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.dto.OrderDto
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 85 common frames omitted
2025-07-01 22:10:42.203 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 24028 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 22:10:42.203 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 22:10:42.204 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 22:10:42.318 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 22:10:42.319 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 22:10:42.321 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2025-07-01 22:10:42.343 [restartedMain] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[com.huang.store.mapper]' package. Please check your configuration.
2025-07-01 22:10:42.370 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 22:10:42.371 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 22:10:42.371 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 22:10:42.371 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 22:10:42.371 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 22:10:42.372 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 22:10:42.372 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 22:10:42.372 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 22:10:42.384 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-4].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 22:10:42.384 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 179 ms
2025-07-01 22:10:42.420 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 22:10:42.462 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-11} inited
2025-07-01 22:10:42.483 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-12} inited
2025-07-01 22:10:42.505 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
2025-07-01 22:10:42.505 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-11} closing ...
2025-07-01 22:10:42.506 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-11} closed
2025-07-01 22:10:42.506 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-12} closing ...
2025-07-01 22:10:42.507 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-12} closed
2025-07-01 22:10:42.508 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 22:10:42.511 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 22:10:42.514 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 24 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e0dd3488.CGLIB$sqlSessionFactory$1(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e0dd3488$$FastClassBySpringCGLIB$$662acbfa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e0dd3488.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:78)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:144)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:136)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:126)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 46 common frames omitted
2025-07-01 22:10:44.805 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 24028 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 22:10:44.806 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 22:10:44.806 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 22:10:44.919 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 22:10:44.919 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 22:10:44.929 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2025-07-01 22:10:44.964 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$e6882629] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 22:10:44.969 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 22:10:45.014 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 22:10:45.014 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 22:10:45.014 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 22:10:45.014 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 22:10:45.016 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 22:10:45.016 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 22:10:45.016 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 22:10:45.017 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 22:10:45.035 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-5].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 22:10:45.035 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 228 ms
2025-07-01 22:10:45.038 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 22:10:45.140 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-13} inited
2025-07-01 22:10:45.158 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-14} inited
2025-07-01 22:10:45.216 [restartedMain] ERROR o.s.boot.web.embedded.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'myUserDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeOrderMapper.xml]'
2025-07-01 22:10:45.217 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 22:10:45.220 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1318776758] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 22:10:45.220 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1318776758] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 22:10:45.221 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-401749825] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 22:10:45.222 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-401749825] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 22:10:45.224 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2025-07-01 22:10:45.225 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-13} closing ...
2025-07-01 22:10:45.226 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-13} closed
2025-07-01 22:10:45.226 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-14} closing ...
2025-07-01 22:10:45.228 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-14} closed
2025-07-01 22:10:45.232 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 22:10:45.237 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:165)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:142)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'myUserDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeOrderMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:405)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4904)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	... 18 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeOrderMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 69 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeOrderMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 83 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeOrderMapper.xml]'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1534)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 97 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeOrderMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	... 108 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeOrderMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 121 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeOrderMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e0dd3488.CGLIB$sqlSessionFactory$1(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e0dd3488$$FastClassBySpringCGLIB$$662acbfa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e0dd3488.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 122 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeOrderMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.spike.SpikeOrder'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.spike.SpikeOrder
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 135 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.spike.SpikeOrder'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.spike.SpikeOrder
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:270)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:262)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(XMLMapperBuilder.java:254)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:124)
	... 137 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.spike.SpikeOrder'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.spike.SpikeOrder
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 141 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.spike.SpikeOrder
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 143 common frames omitted
2025-07-01 22:11:25.886 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-01 22:11:25.904 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 24916 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 22:11:25.904 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 22:11:25.905 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 22:11:26.029 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-01 22:11:26.029 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-01 22:11:26.477 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 22:11:26.481 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 22:11:26.504 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-07-01 22:11:26.707 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$5b5186d6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 22:11:26.719 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 22:11:27.154 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 22:11:27.155 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 22:11:27.156 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 22:11:27.156 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 22:11:27.160 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 22:11:27.168 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 22:11:27.171 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 22:11:27.171 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 22:11:27.232 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 22:11:27.232 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1203 ms
2025-07-01 22:11:27.234 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 22:11:28.004 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-01 22:11:28.032 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-01 22:11:28.220 [restartedMain] ERROR o.s.boot.web.embedded.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'myUserDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeOrderMapper.xml]'
2025-07-01 22:11:28.238 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 22:11:28.242 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-2112967487] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 22:11:28.242 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-2112967487] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 22:11:28.244 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1578525178] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 22:11:28.245 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1578525178] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 22:11:28.246 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2025-07-01 22:11:28.246 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-01 22:11:28.249 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-01 22:11:28.249 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-01 22:11:28.251 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-01 22:11:28.258 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 22:11:28.272 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:165)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:142)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'myUserDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeOrderMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:405)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4904)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	... 18 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeOrderMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 69 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeOrderMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 83 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeOrderMapper.xml]'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1534)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 97 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeOrderMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	... 108 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeOrderMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 121 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeOrderMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$55a69535.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$55a69535$$FastClassBySpringCGLIB$$eccd84c1.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$55a69535.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 122 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikeOrderMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.spike.SpikeOrder'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.spike.SpikeOrder
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 135 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.spike.SpikeOrder'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.spike.SpikeOrder
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:270)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:262)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(XMLMapperBuilder.java:254)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:124)
	... 137 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.spike.SpikeOrder'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.spike.SpikeOrder
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 141 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.spike.SpikeOrder
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 143 common frames omitted
2025-07-01 22:12:18.126 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-01 22:12:18.142 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 22360 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 22:12:18.143 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 22:12:18.144 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 22:12:18.255 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-01 22:12:18.255 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-01 22:12:18.712 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 22:12:18.713 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 22:12:18.740 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2025-07-01 22:12:18.960 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$910eba6b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 22:12:18.975 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 22:12:19.364 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 22:12:19.365 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 22:12:19.365 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 22:12:19.365 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 22:12:19.370 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 22:12:19.376 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 22:12:19.378 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 22:12:19.378 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 22:12:19.431 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 22:12:19.431 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1175 ms
2025-07-01 22:12:19.435 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 22:12:20.120 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-01 22:12:20.150 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-01 22:12:20.422 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 22:12:20.423 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 22:12:20.827 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 22:12:20.946 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@20fe1a4a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5aa6f169, org.springframework.security.web.context.SecurityContextPersistenceFilter@4564540e, org.springframework.security.web.header.HeaderWriterFilter@57f785, org.springframework.web.filter.CorsFilter@34d83d76, org.springframework.security.web.authentication.logout.LogoutFilter@5b2a9187, com.huang.store.security.JwtAuthenticationTokenFilter@9656c4c, com.huang.store.security.CustomAuthenticationFilter@4fd87e86, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@9abb7ee, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@19d5b358, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4097561a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@74bcbcf2, org.springframework.security.web.session.SessionManagementFilter@1b739510, org.springframework.security.web.access.ExceptionTranslationFilter@1040bf8a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1448c8e1]
2025-07-01 22:12:21.199 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 22:12:21.218 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 22:12:21.246 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 22:12:21.255 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 3.467 seconds (JVM running for 3.744)
2025-07-01 22:13:38.300 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-01 22:13:38.300 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-01 22:13:38.301 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-01 22:15:57.678 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc1ODkyODkzLCJleHAiOjE3NTEzNzc2OTJ9.yG4JMPqUzETaW2PkXIAzpb5u6eM3y8v3fjb9Pv9J8QE0NvBBre7fWLZu5OIF_oX14EI8ThokJZ1eenjtaB67mg
2025-07-01 22:16:12.569 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 22:16:12.599 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:16:12.600 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 22:16:12.786 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 56464ff@456.com(String)
2025-07-01 22:16:12.814 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 22:16:12.839 [http-nio-8080-exec-6] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:56464ff@456.com    数据库密码:$2a$10$7OBMT05X3FsorQiaTl2aQuxGJpdi4w1dVWZdG8Oy9K7E61SWT9WAy
2025-07-01 22:16:12.997 [http-nio-8080-exec-6] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=56464ff@456.com, password=$2a$10$7OBMT05X3FsorQiaTl2aQuxGJpdi4w1dVWZdG8Oy9K7E61SWT9WAy, enabled=true, roles=[ROLE_USER]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]
2025-07-01 22:16:13.055 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 22:16:13.056 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:16:13.056 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 22:16:13.057 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 56464ff@456.com(String)
2025-07-01 22:16:13.060 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 22:16:14.204 [http-nio-8080-exec-7] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 22:16:14.205 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:16:14.205 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 22:16:14.213 [http-nio-8080-exec-7] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 22:16:14.222 [http-nio-8080-exec-7] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 6
2025-07-01 22:16:14.227 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:16:14.228 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:16:14.228 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:16:14.237 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 4(Long)
2025-07-01 22:16:14.248 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-01 22:16:14.251 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:16:14.252 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:16:14.252 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:16:14.253 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 5(Long)
2025-07-01 22:16:14.255 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-01 22:16:14.258 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:16:14.259 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:16:14.260 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:16:14.261 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 6(Long)
2025-07-01 22:16:14.265 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-01 22:31:49.400 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-01 22:31:49.401 [Thread-7] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 22:31:49.403 [Thread-7] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-07-01 22:31:49.432 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1221555881] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 22:31:49.433 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1221555881] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 22:31:49.434 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-821945215] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 22:31:49.434 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-821945215] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 22:31:49.436 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-01 22:31:49.439 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-01 22:31:49.471 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-01 22:31:49.477 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-01 22:31:49.477 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-01 22:31:49.480 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-01 22:31:49.591 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 22360 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 22:31:49.591 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 22:31:49.591 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 22:31:49.770 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 22:31:49.771 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 22:31:49.773 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 0 Redis repository interfaces.
2025-07-01 22:31:49.817 [restartedMain] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[com.huang.store.mapper]' package. Please check your configuration.
2025-07-01 22:31:49.887 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 22:31:49.887 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 22:31:49.889 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 22:31:49.889 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 22:31:49.890 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 22:31:49.890 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 22:31:49.891 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 22:31:49.891 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 22:31:49.911 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 22:31:49.912 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 312 ms
2025-07-01 22:31:49.933 [restartedMain] ERROR org.apache.catalina.session.StandardManager - Exception loading sessions from persistent storage
java.lang.ClassNotFoundException: com.huang.store.entity.user.SecurityUser
	at org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedWebappClassLoader.loadClass(TomcatEmbeddedWebappClassLoader.java:72)
	at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1141)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:467)
	at org.apache.catalina.util.CustomObjectInputStream.resolveClass(CustomObjectInputStream.java:158)
	at java.base/java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:2045)
	at java.base/java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1909)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2235)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream$FieldValues.<init>(ObjectInputStream.java:2617)
	at java.base/java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2468)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2268)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream$FieldValues.<init>(ObjectInputStream.java:2617)
	at java.base/java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2468)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2268)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:514)
	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:472)
	at org.apache.catalina.session.StandardSession.doReadObject(StandardSession.java:1530)
	at org.apache.catalina.session.StandardSession.readObjectData(StandardSession.java:1000)
	at org.apache.catalina.session.StandardManager.doLoad(StandardManager.java:210)
	at org.apache.catalina.session.StandardManager.load(StandardManager.java:156)
	at org.apache.catalina.session.StandardManager.startInternal(StandardManager.java:346)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4931)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2025-07-01 22:31:50.011 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 22:31:50.103 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} inited
2025-07-01 22:31:50.125 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} inited
2025-07-01 22:31:50.170 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\BookMapper.xml]'
2025-07-01 22:31:50.170 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closing ...
2025-07-01 22:31:50.171 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed
2025-07-01 22:31:50.171 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closing ...
2025-07-01 22:31:50.173 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed
2025-07-01 22:31:50.174 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 22:31:50.182 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 22:31:50.213 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\BookMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\BookMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 24 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\BookMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8b63c8ca.CGLIB$sqlSessionFactory$1(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8b63c8ca$$FastClassBySpringCGLIB$$2771f568.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8b63c8ca.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\BookMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.book.Book'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.book.Book
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.book.Book'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.book.Book
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:78)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:144)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:136)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:126)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.book.Book'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.book.Book
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.book.Book
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 46 common frames omitted
2025-07-01 22:31:51.689 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 22360 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 22:31:51.689 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 22:31:51.689 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 22:31:51.815 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 22:31:51.815 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 22:31:51.824 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2025-07-01 22:31:51.855 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$910eba6b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 22:31:51.858 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 22:31:51.899 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 22:31:51.900 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 22:31:51.900 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 22:31:51.900 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 22:31:51.901 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 22:31:51.902 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 22:31:51.902 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 22:31:51.902 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 22:31:51.914 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 22:31:51.914 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 223 ms
2025-07-01 22:31:51.917 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 22:31:51.981 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} inited
2025-07-01 22:31:51.996 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} inited
2025-07-01 22:31:52.055 [restartedMain] ERROR o.s.boot.web.embedded.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'myUserDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikePurchaseRecordMapper.xml]'
2025-07-01 22:31:52.058 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 22:31:52.060 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1153808825] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 22:31:52.060 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1153808825] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 22:31:52.061 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1487303301] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 22:31:52.061 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1487303301] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 22:31:52.062 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2025-07-01 22:31:52.063 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} closing ...
2025-07-01 22:31:52.064 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} closed
2025-07-01 22:31:52.064 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} closing ...
2025-07-01 22:31:52.064 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} closed
2025-07-01 22:31:52.066 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 22:31:52.068 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:165)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:142)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'myUserDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikePurchaseRecordMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:405)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4904)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	... 18 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikePurchaseRecordMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 69 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikePurchaseRecordMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 83 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikePurchaseRecordMapper.xml]'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1534)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 97 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikePurchaseRecordMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	... 108 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikePurchaseRecordMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 121 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikePurchaseRecordMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8b63c8ca.CGLIB$sqlSessionFactory$1(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8b63c8ca$$FastClassBySpringCGLIB$$2771f568.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8b63c8ca.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 122 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikePurchaseRecordMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.spike.SpikePurchaseRecord'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.spike.SpikePurchaseRecord
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 135 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.spike.SpikePurchaseRecord'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.spike.SpikePurchaseRecord
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:270)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:262)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(XMLMapperBuilder.java:254)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:124)
	... 137 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.spike.SpikePurchaseRecord'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.spike.SpikePurchaseRecord
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 141 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.spike.SpikePurchaseRecord
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 143 common frames omitted
2025-07-01 22:32:17.186 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-01 22:32:17.203 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 1688 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 22:32:17.204 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 22:32:17.205 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 22:32:17.336 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-01 22:32:17.336 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-01 22:32:17.792 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 22:32:17.793 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 22:32:17.814 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2025-07-01 22:32:18.009 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$afdd2266] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 22:32:18.022 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 22:32:18.467 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 22:32:18.468 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 22:32:18.468 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 22:32:18.468 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 22:32:18.473 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 22:32:18.480 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 22:32:18.482 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 22:32:18.483 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 22:32:18.546 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 22:32:18.546 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1210 ms
2025-07-01 22:32:18.551 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 22:32:19.390 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-01 22:32:19.418 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-01 22:32:19.605 [restartedMain] ERROR o.s.boot.web.embedded.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'myUserDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikePurchaseRecordMapper.xml]'
2025-07-01 22:32:19.638 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-01 22:32:19.644 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1303065298] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 22:32:19.645 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1303065298] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 22:32:19.645 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1491895519] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-01 22:32:19.646 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1491895519] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-01 22:32:19.647 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2025-07-01 22:32:19.647 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-01 22:32:19.650 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-01 22:32:19.650 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-01 22:32:19.652 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-01 22:32:19.659 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-01 22:32:19.676 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:165)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:142)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'myUserDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikePurchaseRecordMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:405)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4904)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	... 18 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikePurchaseRecordMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 69 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikePurchaseRecordMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 83 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikePurchaseRecordMapper.xml]'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1534)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 97 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikePurchaseRecordMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	... 108 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikePurchaseRecordMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 121 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikePurchaseRecordMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$aa3230c5.CGLIB$sqlSessionFactory$1(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$aa3230c5$$FastClassBySpringCGLIB$$9059587c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$aa3230c5.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 122 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\SpikePurchaseRecordMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.spike.SpikePurchaseRecord'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.spike.SpikePurchaseRecord
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 135 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.spike.SpikePurchaseRecord'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.spike.SpikePurchaseRecord
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:270)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:262)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(XMLMapperBuilder.java:254)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:124)
	... 137 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.spike.SpikePurchaseRecord'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.spike.SpikePurchaseRecord
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 141 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.spike.SpikePurchaseRecord
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 143 common frames omitted
2025-07-01 22:32:57.239 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-01 22:32:57.258 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 5156 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 22:32:57.258 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 22:32:57.259 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 22:32:57.371 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-01 22:32:57.371 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-01 22:32:57.808 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 22:32:57.810 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 22:32:57.833 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2025-07-01 22:32:58.015 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$6a3ff841] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 22:32:58.029 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 22:32:58.408 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 22:32:58.409 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 22:32:58.409 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 22:32:58.409 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 22:32:58.413 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 22:32:58.419 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 22:32:58.420 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 22:32:58.421 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 22:32:58.474 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 22:32:58.474 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1103 ms
2025-07-01 22:32:58.477 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 22:32:59.106 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-01 22:32:59.135 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-01 22:32:59.401 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 22:32:59.401 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 22:32:59.782 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 22:32:59.926 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@34802934, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@df6606d, org.springframework.security.web.context.SecurityContextPersistenceFilter@8e69223, org.springframework.security.web.header.HeaderWriterFilter@60872924, org.springframework.web.filter.CorsFilter@13ca6172, org.springframework.security.web.authentication.logout.LogoutFilter@22840220, com.huang.store.security.JwtAuthenticationTokenFilter@6c0b410e, com.huang.store.security.CustomAuthenticationFilter@438efb9, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7f1a8622, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3d5e4802, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@398b9271, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4d230186, org.springframework.security.web.session.SessionManagementFilter@14ac42c, org.springframework.security.web.access.ExceptionTranslationFilter@1e9e9dcc, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@160835b4]
2025-07-01 22:33:00.156 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 22:33:00.171 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 22:33:00.197 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 22:33:00.205 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 3.288 seconds (JVM running for 3.552)
2025-07-01 22:33:59.835 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-01 22:33:59.835 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-01 22:33:59.836 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-07-01 22:35:05.427 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 22:35:05.441 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:35:05.441 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 22:35:05.504 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 56464ff@456.com(String)
2025-07-01 22:35:05.518 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 22:35:05.530 [http-nio-8080-exec-4] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:56464ff@456.com    数据库密码:$2a$10$7OBMT05X3FsorQiaTl2aQuxGJpdi4w1dVWZdG8Oy9K7E61SWT9WAy
2025-07-01 22:35:05.551 [http-nio-8080-exec-4] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 22:35:05.551 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:35:05.551 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 22:35:05.555 [http-nio-8080-exec-4] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 22:35:05.563 [http-nio-8080-exec-4] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 6
2025-07-01 22:35:05.565 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:35:05.565 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:35:05.566 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:35:05.572 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 4(Long)
2025-07-01 22:35:05.576 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-01 22:35:05.577 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:35:05.578 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:35:05.578 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:35:05.579 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 5(Long)
2025-07-01 22:35:05.580 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-01 22:35:05.580 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:35:05.580 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:35:05.580 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:35:05.581 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 6(Long)
2025-07-01 22:35:05.585 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-01 22:35:17.271 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTEzNzY3OTkzMTUsImV4cCI6MTc1MTM3ODU5OX0.IOQBhK2ZhS8Ey5nrdHbXVXKlAm31325EYvm86ak0tUnif0vh-rh7KZ-40asX00OFG7ULB-8VQ0eerzyD1wdrgA
2025-07-01 22:35:19.953 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 22:35:19.954 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:35:19.955 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 22:35:19.958 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 2545059634@qq.com(String)
2025-07-01 22:35:19.962 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 22:35:19.964 [http-nio-8080-exec-5] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:2545059634@qq.com    数据库密码:$2a$10$w8zNNUSDq3MCiLDDuAhYXedA0QGva1Z4.6UxO61Njhsrlo8voc01G
2025-07-01 22:35:20.113 [http-nio-8080-exec-5] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=2545059634@qq.com, password=$2a$10$w8zNNUSDq3MCiLDDuAhYXedA0QGva1Z4.6UxO61Njhsrlo8voc01G, enabled=true, roles=[ROLE_ADMIN]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]
2025-07-01 22:35:20.152 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 22:35:20.155 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:35:20.156 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 22:35:20.159 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 2545059634@qq.com(String)
2025-07-01 22:35:20.168 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 22:35:24.010 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 22:35:24.011 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:35:24.011 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 22:35:24.016 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 22:35:24.024 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 5
2025-07-01 22:35:24.032 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 22:35:24.032 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:35:24.038 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 22:35:24.045 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 22:35:24.049 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 22:35:25.692 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1 WHERE sg.activityId = ? ORDER BY sg.sortOrder ASC, sg.createTime DESC LIMIT ?, ?
2025-07-01 22:35:25.695 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:35:25.698 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1
        WHERE sg.activityId = ?
        ORDER BY sg.sortOrder ASC, sg.createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 22:35:25.712 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==> Parameters: 4(Long), 0(Integer), 10(Integer)
2025-07-01 22:35:25.731 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - <==      Total: 0
2025-07-01 22:35:25.734 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==>  Preparing: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ?
2025-07-01 22:35:25.736 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:35:25.737 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ? ::: DataSources: slave
2025-07-01 22:35:25.739 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==> Parameters: 4(Long)
2025-07-01 22:35:25.744 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - <==      Total: 1
2025-07-01 22:35:27.983 [http-nio-8080-exec-8] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=100
2025-07-01 22:35:27.989 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select b.*, COALESCE(sales_data.total_sales, 0) as sales from book b left join ( select od.bookId, sum(od.num) as total_sales from orderdetail od inner join bookorder bo on od.orderId = bo.orderId where bo.orderStatus in ('已发货', '已收货', '已评价') group by od.bookId ) sales_data on b.id = sales_data.bookId order by b.rank desc, b.id desc limit ?,?
2025-07-01 22:35:27.991 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:35:27.994 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select b.*,
               COALESCE(sales_data.total_sales, 0) as sales
        from book b
        left join (
            select od.bookId, sum(od.num) as total_sales
            from orderdetail od
            inner join bookorder bo on od.orderId = bo.orderId
            where bo.orderStatus in ('已发货', '已收货', '已评价')
            group by od.bookId
        ) sales_data on b.id = sales_data.bookId
        order by b.rank desc, b.id desc
        limit ?,? ::: DataSources: slave
2025-07-01 22:35:28.059 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 100(Integer)
2025-07-01 22:35:28.074 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-01 22:35:28.093 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:35:28.094 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:35:28.095 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:35:28.102 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 22:35:28.112 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:35:28.114 [http-nio-8080-exec-8] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-01 22:35:28.114 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:35:28.114 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:35:28.115 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:35:28.115 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 22:35:28.119 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:35:28.121 [http-nio-8080-exec-8] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-01 22:35:28.122 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:35:28.122 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:35:28.123 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:35:28.124 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 22:35:28.128 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:35:28.128 [http-nio-8080-exec-8] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-01 22:35:28.129 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:35:28.129 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:35:28.131 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:35:28.133 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 22:35:28.136 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:35:28.141 [http-nio-8080-exec-8] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-01 22:35:28.142 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:35:28.143 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:35:28.143 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:35:28.144 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 22:35:28.148 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:35:28.149 [http-nio-8080-exec-8] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-01 22:35:28.150 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-01 22:35:28.150 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:35:28.152 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-01 22:35:28.154 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-01 22:35:28.156 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-01 22:36:01.184 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-01 22:36:01.184 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:01.185 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-01 22:36:01.188 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 1(Integer)
2025-07-01 22:36:01.190 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-01 22:36:01.191 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.SpikeGoodsMapper.insertSpikeGoods - ==>  Preparing: INSERT INTO spikeGoods ( activityId, bookId, spikePrice, originalPrice, spikeStock, soldCount, limitPerUser, sortOrder, status, createTime, updateTime ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
2025-07-01 22:36:01.193 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:01.194 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: INSERT INTO spikeGoods (
            activityId, bookId, spikePrice, originalPrice, spikeStock,
            soldCount, limitPerUser, sortOrder, status, createTime, updateTime
        ) VALUES (
            ?, ?, ?, ?, ?,
            ?, ?, ?, ?, ?, ?
        ) ::: DataSources: master
2025-07-01 22:36:01.354 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.SpikeGoodsMapper.insertSpikeGoods - ==> Parameters: 4(Long), 1(Integer), 10(BigDecimal), 45.0(BigDecimal), 20(Integer), 0(Integer), 5(Integer), 1(Integer), 1(Integer), 2025-07-01T22:36:01.191678(LocalDateTime), 2025-07-01T22:36:01.191678(LocalDateTime)
2025-07-01 22:36:01.366 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.SpikeGoodsMapper.insertSpikeGoods - <==    Updates: 1
2025-07-01 22:36:01.404 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1 WHERE sg.activityId = ? ORDER BY sg.sortOrder ASC, sg.createTime DESC LIMIT ?, ?
2025-07-01 22:36:01.405 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:01.405 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1
        WHERE sg.activityId = ?
        ORDER BY sg.sortOrder ASC, sg.createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 22:36:01.406 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==> Parameters: 4(Long), 0(Integer), 10(Integer)
2025-07-01 22:36:01.411 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - <==      Total: 1
2025-07-01 22:36:01.418 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==>  Preparing: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ?
2025-07-01 22:36:01.419 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:01.419 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ? ::: DataSources: slave
2025-07-01 22:36:01.420 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==> Parameters: 4(Long)
2025-07-01 22:36:01.425 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - <==      Total: 1
2025-07-01 22:36:10.477 [http-nio-8080-exec-1] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 22:36:10.478 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:10.479 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 22:36:10.482 [http-nio-8080-exec-1] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 22:36:10.495 [http-nio-8080-exec-1] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 6
2025-07-01 22:36:10.496 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:36:10.498 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:10.501 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:36:10.502 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 4(Long)
2025-07-01 22:36:10.507 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 1
2025-07-01 22:36:10.511 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-01 22:36:10.511 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:10.513 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-01 22:36:10.515 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 1(Integer)
2025-07-01 22:36:10.517 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-01 22:36:10.520 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:36:10.521 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:10.521 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:36:10.521 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 22:36:10.523 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:36:10.527 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:36:10.528 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:10.528 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:36:10.529 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 5(Long)
2025-07-01 22:36:10.532 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-01 22:36:10.533 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:36:10.534 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:10.536 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:36:10.539 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 6(Long)
2025-07-01 22:36:10.541 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-01 22:36:42.851 [http-nio-8080-exec-6] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-01 22:36:42.858 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-01 22:36:42.862 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:42.860 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-01 22:36:42.860 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 22:36:42.862 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 22:36:42.862 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 22:36:42.862 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-01 22:36:42.863 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-01 22:36:42.863 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:42.864 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:42.868 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 22:36:42.864 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:42.865 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:42.865 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:42.868 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-01 22:36:42.868 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 22:36:42.868 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 22:36:42.869 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 22:36:42.869 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-01 22:36:42.875 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-01 22:36:42.877 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-01 22:36:42.877 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:42.878 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-01 22:36:42.882 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 22:36:42.887 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 22:36:42.889 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 22:36:42.890 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:42.890 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 22:36:42.890 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 22:36:42.893 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-01 22:36:42.894 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 22:36:42.898 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:42.900 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 22:36:42.895 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-01 22:36:42.897 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 22:36:42.904 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-01 22:36:42.906 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 22:36:42.910 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-01 22:36:42.913 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-01 22:36:42.913 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 22:36:42.917 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 22:36:42.925 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-01 22:36:42.932 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:42.937 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 22:36:42.933 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 22:36:42.936 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 22:36:42.939 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 22:36:42.940 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-01 22:36:42.942 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 22:36:42.943 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 22:36:42.943 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 22:36:42.944 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:42.945 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 22:36:42.945 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:42.945 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 22:36:42.947 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 22:36:42.948 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 22:36:42.949 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 22:36:42.954 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 22:36:42.955 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 22:36:42.955 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 22:36:42.955 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:42.955 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:36:42.955 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 22:36:42.955 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:42.955 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:36:42.956 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 22:36:42.957 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 22:36:42.958 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 22:36:42.958 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:36:42.958 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 22:36:42.959 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:36:42.960 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:42.960 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:42.960 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 22:36:42.960 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:36:42.961 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 22:36:42.961 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 22:36:42.962 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:36:42.962 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 22:36:42.963 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:36:42.964 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:42.964 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:36:42.965 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 22:36:42.967 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:36:42.968 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:36:42.968 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:42.968 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:36:42.969 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 22:36:42.970 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:36:42.971 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:36:42.972 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:42.972 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:36:42.972 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 22:36:42.974 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:36:45.036 [http-nio-8080-exec-4] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 22:36:45.037 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:45.037 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 22:36:45.037 [http-nio-8080-exec-4] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 22:36:45.041 [http-nio-8080-exec-4] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 6
2025-07-01 22:36:45.042 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:36:45.042 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:45.042 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:36:45.044 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 4(Long)
2025-07-01 22:36:45.046 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 1
2025-07-01 22:36:45.047 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-01 22:36:45.047 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:45.047 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-01 22:36:45.048 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 1(Integer)
2025-07-01 22:36:45.052 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-01 22:36:45.054 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:36:45.054 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:45.055 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:36:45.055 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 22:36:45.056 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:36:45.057 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:36:45.057 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:45.057 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:36:45.057 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 5(Long)
2025-07-01 22:36:45.060 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-01 22:36:45.062 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:36:45.062 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:45.062 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:36:45.063 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 6(Long)
2025-07-01 22:36:45.066 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-01 22:36:49.938 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.CartMapper.getCartsByPage - ==>  Preparing: select book.id,author,bookName,isbn,publish, birthday,marketPrice,price,stock,description,put,num,addTime,account from book join cart on book.id = cart.id where account=? limit ?,?
2025-07-01 22:36:49.939 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:49.939 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select book.id,author,bookName,isbn,publish,
                birthday,marketPrice,price,stock,description,put,num,addTime,account
         from book join cart on book.id = cart.id
         where account=? limit ?,? ::: DataSources: slave
2025-07-01 22:36:49.942 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.CartMapper.getCartsByPage - ==> Parameters: 56464ff@456.com(String), 0(Integer), 10(Integer)
2025-07-01 22:36:49.953 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.CartMapper.getCartsByPage - <==      Total: 0
2025-07-01 22:36:51.034 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-01 22:36:51.035 [http-nio-8080-exec-5] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-01 22:36:51.036 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-01 22:36:51.040 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 22:36:51.043 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:51.043 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 22:36:51.040 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:51.042 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-01 22:36:51.042 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 22:36:51.042 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 22:36:51.043 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:51.044 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 22:36:51.044 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-01 22:36:51.045 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:51.046 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:51.050 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 22:36:51.048 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:51.048 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-01 22:36:51.050 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-01 22:36:51.050 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 22:36:51.050 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 22:36:51.050 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 22:36:51.052 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 22:36:51.054 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 22:36:51.055 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-01 22:36:51.057 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 22:36:51.062 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-01 22:36:51.061 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 22:36:51.061 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-01 22:36:51.062 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 22:36:51.063 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-01 22:36:51.062 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 22:36:51.062 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-01 22:36:51.063 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:51.072 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 22:36:51.063 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:51.075 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 22:36:51.070 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:51.070 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-01 22:36:51.072 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-01 22:36:51.075 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 22:36:51.078 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 22:36:51.078 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 22:36:51.079 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 22:36:51.079 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:51.080 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-01 22:36:51.081 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-01 22:36:51.080 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 22:36:51.080 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:51.081 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 22:36:51.083 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 22:36:51.084 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-01 22:36:51.084 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 22:36:51.085 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 22:36:51.085 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 22:36:51.086 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 22:36:51.086 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:51.090 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 22:36:51.091 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 22:36:51.091 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 22:36:51.092 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:36:51.092 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:51.092 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:36:51.092 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 22:36:51.092 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 22:36:51.093 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 22:36:51.093 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:51.093 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 22:36:51.094 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 22:36:51.094 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:36:51.095 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:36:51.095 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:51.096 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:36:51.096 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 22:36:51.098 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 22:36:51.099 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 22:36:51.099 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:36:51.099 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:51.099 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 22:36:51.099 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:36:51.100 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 22:36:51.100 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:51.100 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:36:51.101 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 22:36:51.101 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 22:36:51.103 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:36:51.104 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:36:51.104 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:51.104 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:36:51.106 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 22:36:51.107 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:36:51.108 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:36:51.108 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:51.108 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:36:51.110 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 22:36:51.112 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:36:54.057 [http-nio-8080-exec-3] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 22:36:54.058 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:54.058 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 22:36:54.059 [http-nio-8080-exec-3] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 22:36:54.063 [http-nio-8080-exec-3] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 6
2025-07-01 22:36:54.064 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:36:54.065 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:54.065 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:36:54.066 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 4(Long)
2025-07-01 22:36:54.070 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 1
2025-07-01 22:36:54.072 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-01 22:36:54.072 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:54.072 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-01 22:36:54.072 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 1(Integer)
2025-07-01 22:36:54.075 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-01 22:36:54.076 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:36:54.077 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:54.077 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:36:54.077 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 22:36:54.079 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:36:54.080 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:36:54.080 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:54.080 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:36:54.081 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 5(Long)
2025-07-01 22:36:54.083 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-01 22:36:54.084 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:36:54.084 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:36:54.084 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:36:54.085 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 6(Long)
2025-07-01 22:36:54.087 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-01 22:44:04.700 [http-nio-8080-exec-9] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 22:44:04.700 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:44:04.700 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 22:44:04.702 [http-nio-8080-exec-9] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 22:44:04.703 [http-nio-8080-exec-9] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 6
2025-07-01 22:44:04.704 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:44:04.704 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:44:04.704 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:44:04.704 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 4(Long)
2025-07-01 22:44:04.706 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 1
2025-07-01 22:44:04.707 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-01 22:44:04.707 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:44:04.707 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-01 22:44:04.707 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 1(Integer)
2025-07-01 22:44:04.707 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-01 22:44:04.708 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:44:04.708 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:44:04.708 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:44:04.708 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 22:44:04.710 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:44:04.710 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:44:04.710 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:44:04.711 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:44:04.711 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 5(Long)
2025-07-01 22:44:04.713 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-01 22:44:04.714 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:44:04.714 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:44:04.714 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:44:04.715 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 6(Long)
2025-07-01 22:44:04.716 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-01 22:45:17.947 [http-nio-8080-exec-1] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 22:45:17.947 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:45:17.947 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 22:45:17.948 [http-nio-8080-exec-1] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 22:45:17.949 [http-nio-8080-exec-1] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 6
2025-07-01 22:45:17.950 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:45:17.950 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:45:17.950 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:45:17.950 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 4(Long)
2025-07-01 22:45:17.951 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 1
2025-07-01 22:45:17.952 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-01 22:45:17.952 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:45:17.952 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-01 22:45:17.952 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 1(Integer)
2025-07-01 22:45:17.953 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-01 22:45:17.953 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:45:17.953 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:45:17.953 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:45:17.953 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 22:45:17.954 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:45:17.954 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:45:17.955 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:45:17.955 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:45:17.955 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 5(Long)
2025-07-01 22:45:17.956 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-01 22:45:17.956 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:45:17.956 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:45:17.956 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:45:17.957 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 6(Long)
2025-07-01 22:45:17.958 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-01 22:46:44.826 [http-nio-8080-exec-6] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 22:46:44.828 [http-nio-8080-exec-6] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 22:46:44.829 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:46:44.835 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 22:46:44.836 [http-nio-8080-exec-6] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 22:46:44.839 [http-nio-8080-exec-6] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 6
2025-07-01 22:46:44.842 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:46:44.843 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:46:44.850 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:46:44.869 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 4(Long)
2025-07-01 22:46:44.875 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 1
2025-07-01 22:46:44.876 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-01 22:46:44.877 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:46:44.877 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-01 22:46:44.877 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 1(Integer)
2025-07-01 22:46:44.879 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-01 22:46:44.884 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:46:44.884 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:46:44.884 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:46:44.884 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 22:46:44.886 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:46:44.891 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:46:44.892 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:46:44.892 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:46:44.893 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 5(Long)
2025-07-01 22:46:44.899 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-01 22:46:44.899 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:46:44.904 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:46:44.904 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:46:44.905 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 6(Long)
2025-07-01 22:46:44.906 [http-nio-8080-exec-6] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-01 22:47:18.940 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 22:47:18.941 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:18.941 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 22:47:18.946 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 4(Long)
2025-07-01 22:47:18.951 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 22:47:32.064 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeActivityMapper.updateActivity - ==>  Preparing: UPDATE spikeActivity SET activityName = ?, activityDesc = ?, startTime = ?, endTime = ?, status = ?, updateTime = ? WHERE id = ?
2025-07-01 22:47:32.065 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:32.065 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: UPDATE spikeActivity SET
            activityName = ?,
            activityDesc = ?,
            startTime = ?,
            endTime = ?,
            status = ?,
            updateTime = ?
        WHERE id = ? ::: DataSources: master
2025-07-01 22:47:32.080 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeActivityMapper.updateActivity - ==> Parameters: 明日上午秒杀(String), 明天上午的秒杀活动(String), 2025-07-01T22:47:30(LocalDateTime), 2025-07-02T11:00(LocalDateTime), 1(Integer), 2025-07-01T22:47:32.056839700(LocalDateTime), 4(Long)
2025-07-01 22:47:32.091 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeActivityMapper.updateActivity - <==    Updates: 1
2025-07-01 22:47:32.093 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 22:47:32.093 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:32.093 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: master
2025-07-01 22:47:32.098 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 4(Long)
2025-07-01 22:47:32.103 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 22:47:32.154 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-01 22:47:32.155 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:32.155 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 22:47:32.158 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 22:47:32.162 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 5
2025-07-01 22:47:32.163 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-01 22:47:32.163 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:32.163 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-01 22:47:32.164 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-01 22:47:32.170 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-01 22:47:35.898 [http-nio-8080-exec-8] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 22:47:35.901 [http-nio-8080-exec-8] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 22:47:35.901 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:35.901 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 22:47:35.902 [http-nio-8080-exec-8] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 22:47:35.906 [http-nio-8080-exec-8] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 6
2025-07-01 22:47:35.906 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:47:35.907 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:35.907 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:47:35.908 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 4(Long)
2025-07-01 22:47:35.912 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 1
2025-07-01 22:47:35.913 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-01 22:47:35.914 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:35.914 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-01 22:47:35.915 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 1(Integer)
2025-07-01 22:47:35.917 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-01 22:47:35.918 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:47:35.919 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:35.920 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:47:35.923 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 22:47:35.926 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:47:35.927 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:47:35.927 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:35.928 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:47:35.930 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 5(Long)
2025-07-01 22:47:35.933 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-01 22:47:35.934 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:47:35.941 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:35.945 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:47:35.947 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 6(Long)
2025-07-01 22:47:35.952 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-01 22:47:40.995 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 22:47:41.017 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.bookId = ? AND sg.status = 1 ORDER BY sg.createTime DESC
2025-07-01 22:47:41.018 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:41.021 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.bookId = ?
        AND sg.status = 1
        ORDER BY sg.createTime DESC ::: DataSources: slave
2025-07-01 22:47:41.035 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==> Parameters: 1(Integer)
2025-07-01 22:47:41.043 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - <==      Total: 3
2025-07-01 22:47:41.044 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 22:47:41.045 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:41.045 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 22:47:41.046 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 4(Long)
2025-07-01 22:47:41.050 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 22:47:41.051 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.id = ?
2025-07-01 22:47:41.053 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:41.055 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.id = ? ::: DataSources: slave
2025-07-01 22:47:41.059 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==> Parameters: 8(Long)
2025-07-01 22:47:41.063 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - <==      Total: 1
2025-07-01 22:47:41.066 [http-nio-8080-exec-4] DEBUG c.h.s.m.S.getUserSuccessPurchaseCount - ==>  Preparing: SELECT COALESCE(SUM(quantity), 0) FROM spikeRecord WHERE userAccount = ? AND spikeGoodsId = ? AND result = 1
2025-07-01 22:47:41.067 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:41.067 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT COALESCE(SUM(quantity), 0)
        FROM spikeRecord
        WHERE userAccount = ?
        AND spikeGoodsId = ?
        AND result = 1 ::: DataSources: slave
2025-07-01 22:47:41.074 [http-nio-8080-exec-4] DEBUG c.h.s.m.S.getUserSuccessPurchaseCount - ==> Parameters: 56464ff@456.com(String), 8(Long)
2025-07-01 22:47:41.082 [http-nio-8080-exec-4] DEBUG c.h.s.m.S.getUserSuccessPurchaseCount - <==      Total: 1
2025-07-01 22:47:42.101 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SpikeGoodsMapper.reduceStock - ==>  Preparing: UPDATE spikeGoods SET spikeStock = spikeStock - ?, soldCount = soldCount + ?, updateTime = NOW() WHERE id = ? AND spikeStock >= ?
2025-07-01 22:47:42.102 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:42.102 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: UPDATE spikeGoods
        SET spikeStock = spikeStock - ?,
            soldCount = soldCount + ?,
            updateTime = NOW()
        WHERE id = ?
        AND spikeStock >= ? ::: DataSources: master
2025-07-01 22:47:42.104 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SpikeGoodsMapper.reduceStock - ==> Parameters: 1(Integer), 1(Integer), 8(Long), 1(Integer)
2025-07-01 22:47:42.111 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SpikeGoodsMapper.reduceStock - <==    Updates: 1
2025-07-01 22:47:42.112 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - ==>  Preparing: update book set stock=stock-? where id=? and stock>=?
2025-07-01 22:47:42.112 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:42.113 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: update book
            set stock=stock-?
                where id=? and stock>=? ::: DataSources: master
2025-07-01 22:47:42.114 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - ==> Parameters: 1(Integer), 1(Integer), 1(Integer)
2025-07-01 22:47:42.119 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - <==    Updates: 1
2025-07-01 22:47:42.124 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.addOrder - ==>  Preparing: insert into bookorder(orderId,account,addressId,orderTime,shipTime,getTime,evaluateTime,closeTime,orderStatus,logisticsNum,confirmTime) values (?,?,?,?,?,?,?,?,?,?,?)
2025-07-01 22:47:42.124 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:42.125 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: insert into bookorder(orderId,account,addressId,orderTime,shipTime,getTime,evaluateTime,closeTime,orderStatus,logisticsNum,confirmTime)
            values (?,?,?,?,?,?,?,?,?,?,?) ::: DataSources: master
2025-07-01 22:47:42.130 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.addOrder - ==> Parameters: SPIKE1751381262119616(String), 56464ff@456.com(String), 1(Integer), 2025-07-01 22:47:42.123(Timestamp), null, null, null, null, 待付款(String), null, null
2025-07-01 22:47:42.138 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.addOrder - <==    Updates: 1
2025-07-01 22:47:42.141 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.OrderMapper.batchAddOrderDetail - ==>  Preparing: insert into orderdetail(orderId,bookId,num,price) values (?,?,?,?)
2025-07-01 22:47:42.142 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:42.145 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: insert into orderdetail(orderId,bookId,num,price)
        values
          
            (?,?,?,?) ::: DataSources: master
2025-07-01 22:47:42.147 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.OrderMapper.batchAddOrderDetail - ==> Parameters: SPIKE1751381262119616(String), 1(Integer), 1(Integer), 10.0(Double)
2025-07-01 22:47:42.156 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.OrderMapper.batchAddOrderDetail - <==    Updates: 1
2025-07-01 22:47:42.158 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.ExpenseMapper.addExpense - ==>  Preparing: insert into expense(orderId,productTotalMoney,freight,coupon,activityDiscount,allPrice,finallyPrice) values (?,?,?,?,?,?,?)
2025-07-01 22:47:42.159 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:42.159 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: insert into expense(orderId,productTotalMoney,freight,coupon,activityDiscount,allPrice,finallyPrice)
            values (?,?,?,?,?,?,?) ::: DataSources: master
2025-07-01 22:47:42.161 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.ExpenseMapper.addExpense - ==> Parameters: SPIKE1751381262119616(String), 45.0(Double), 0.0(Double), 0(Integer), 35.0(Double), 45.0(Double), 10.0(Double)
2025-07-01 22:47:42.164 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.ExpenseMapper.addExpense - <==    Updates: 1
2025-07-01 22:47:42.173 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - ==>  Preparing: INSERT INTO spikeRecord ( spikeGoodsId, userAccount, quantity, spikeTime, result, failReason, ipAddress, userAgent ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ? )
2025-07-01 22:47:42.173 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:42.174 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: INSERT INTO spikeRecord (
            spikeGoodsId, userAccount, quantity, spikeTime, result,
            failReason, ipAddress, userAgent
        ) VALUES (
            ?, ?, ?, ?, ?,
            ?, ?, ?
        ) ::: DataSources: master
2025-07-01 22:47:42.175 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - ==> Parameters: 8(Long), 56464ff@456.com(String), 1(Integer), 2025-07-01T22:47:42.173366200(LocalDateTime), 1(Integer), null, 0:0:0:0:0:0:0:1(String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0(String)
2025-07-01 22:47:42.180 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - <==    Updates: 1
2025-07-01 22:47:42.246 [http-nio-8080-exec-2] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 22:47:42.251 [http-nio-8080-exec-2] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 22:47:42.251 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:42.252 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 22:47:42.252 [http-nio-8080-exec-2] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 22:47:42.254 [http-nio-8080-exec-2] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 6
2025-07-01 22:47:42.259 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:47:42.352 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:42.401 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:47:42.410 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 4(Long)
2025-07-01 22:47:42.418 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 1
2025-07-01 22:47:42.419 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-01 22:47:42.420 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:42.420 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-01 22:47:42.422 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 1(Integer)
2025-07-01 22:47:42.425 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-01 22:47:42.426 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:47:42.427 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:42.430 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:47:42.432 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 22:47:42.434 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:47:42.436 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:47:42.439 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:42.439 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:47:42.441 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 5(Long)
2025-07-01 22:47:42.446 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-01 22:47:42.448 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:47:42.466 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:42.468 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:47:42.475 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 6(Long)
2025-07-01 22:47:42.529 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-01 22:47:44.085 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 22:47:44.099 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.OrderMapper.findOrderDtoByOrderId - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.orderId = ?
2025-07-01 22:47:44.099 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:44.099 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
        WHERE o.orderId = ? ::: DataSources: slave
2025-07-01 22:47:44.104 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.OrderMapper.findOrderDtoByOrderId - ==> Parameters: SPIKE1751381262119616(String)
2025-07-01 22:47:44.114 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.OrderMapper.findOrderDtoByOrderId - <==      Total: 1
2025-07-01 22:47:44.114 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 22:47:44.114 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:44.114 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 22:47:44.117 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751381262119616(String)
2025-07-01 22:47:44.119 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 22:47:44.120 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.ExpenseMapper.findExpenseByOrderId - ==>  Preparing: select orderId, productTotalMoney, freight, coupon, activityDiscount, allPrice, finallyPrice from expense where orderId = ?
2025-07-01 22:47:44.121 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:44.121 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select orderId, productTotalMoney, freight, coupon, activityDiscount, allPrice, finallyPrice
        from expense
        where orderId = ? ::: DataSources: slave
2025-07-01 22:47:44.126 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.ExpenseMapper.findExpenseByOrderId - ==> Parameters: SPIKE1751381262119616(String)
2025-07-01 22:47:44.128 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.ExpenseMapper.findExpenseByOrderId - <==      Total: 1
2025-07-01 22:47:44.131 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.AddressMapper.addressList - ==>  Preparing: select * from address where account=? and off=false
2025-07-01 22:47:44.131 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:44.132 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from address where account=? and off=false ::: DataSources: slave
2025-07-01 22:47:44.134 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.AddressMapper.addressList - ==> Parameters: 56464ff@456.com(String)
2025-07-01 22:47:44.137 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.AddressMapper.addressList - <==      Total: 2
2025-07-01 22:47:44.138 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:47:44.138 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:44.139 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:47:44.139 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 22:47:44.140 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:47:48.646 [http-nio-8080-exec-9] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 22:47:48.673 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - ==>  Preparing: update book set stock=stock-? where id=? and stock>=?
2025-07-01 22:47:48.673 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:48.673 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: update book
            set stock=stock-?
                where id=? and stock>=? ::: DataSources: master
2025-07-01 22:47:48.674 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - ==> Parameters: 1(Integer), 1(Integer), 1(Integer)
2025-07-01 22:47:48.676 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - <==    Updates: 1
2025-07-01 22:47:48.687 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.addOrder - ==>  Preparing: insert into bookorder(orderId,account,addressId,orderTime,shipTime,getTime,evaluateTime,closeTime,orderStatus,logisticsNum,confirmTime) values (?,?,?,?,?,?,?,?,?,?,?)
2025-07-01 22:47:48.687 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:48.687 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: insert into bookorder(orderId,account,addressId,orderTime,shipTime,getTime,evaluateTime,closeTime,orderStatus,logisticsNum,confirmTime)
            values (?,?,?,?,?,?,?,?,?,?,?) ::: DataSources: master
2025-07-01 22:47:48.688 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.addOrder - ==> Parameters: 20250701224748414440(String), 56464ff@456.com(String), 4(Integer), 2025-07-01 22:47:48.659(Timestamp), null, null, null, null, 已付款(String), null, null
2025-07-01 22:47:48.691 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.addOrder - <==    Updates: 1
2025-07-01 22:47:48.692 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.OrderMapper.batchAddOrderDetail - ==>  Preparing: insert into orderdetail(orderId,bookId,num,price) values (?,?,?,?)
2025-07-01 22:47:48.693 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:48.694 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: insert into orderdetail(orderId,bookId,num,price)
        values
          
            (?,?,?,?) ::: DataSources: master
2025-07-01 22:47:48.695 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.OrderMapper.batchAddOrderDetail - ==> Parameters: 20250701224748414440(String), 1(Integer), 1(Integer), 10.0(Double)
2025-07-01 22:47:48.697 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.OrderMapper.batchAddOrderDetail - <==    Updates: 1
2025-07-01 22:47:48.700 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.ExpenseMapper.addExpense - ==>  Preparing: insert into expense(orderId,productTotalMoney,freight,coupon,activityDiscount,allPrice,finallyPrice) values (?,?,?,?,?,?,?)
2025-07-01 22:47:48.701 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:48.701 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: insert into expense(orderId,productTotalMoney,freight,coupon,activityDiscount,allPrice,finallyPrice)
            values (?,?,?,?,?,?,?) ::: DataSources: master
2025-07-01 22:47:48.702 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.ExpenseMapper.addExpense - ==> Parameters: 20250701224748414440(String), 45.0(Double), 0.0(Double), 0(Integer), 35.0(Double), 45.0(Double), 10.0(Double)
2025-07-01 22:47:48.704 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.ExpenseMapper.addExpense - <==    Updates: 1
2025-07-01 22:47:49.792 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 22:47:49.801 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-01 22:47:49.802 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:49.803 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-01 22:47:49.809 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), false(Boolean), 0(Integer), 5(Integer)
2025-07-01 22:47:49.820 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 5
2025-07-01 22:47:49.821 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 22:47:49.822 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:49.822 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 22:47:49.822 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701224748414440(String)
2025-07-01 22:47:49.824 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 22:47:49.842 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:47:49.842 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:49.842 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:47:49.842 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 22:47:49.844 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:47:49.846 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 22:47:49.846 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:49.846 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 22:47:49.848 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751381262119616(String)
2025-07-01 22:47:49.850 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 22:47:49.851 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:47:49.853 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:49.855 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:47:49.857 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 22:47:49.860 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:47:49.863 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 22:47:49.864 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:49.864 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 22:47:49.864 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701211827858439(String)
2025-07-01 22:47:49.865 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 22:47:49.867 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:47:49.868 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:49.868 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:47:49.868 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 22:47:49.870 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:47:49.870 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 22:47:49.871 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:49.871 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 22:47:49.871 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751375414899509(String)
2025-07-01 22:47:49.875 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 22:47:49.877 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:47:49.878 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:49.878 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:47:49.878 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 22:47:49.880 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:47:49.884 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 22:47:49.884 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:49.884 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 22:47:49.885 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701210858965375(String)
2025-07-01 22:47:49.888 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 22:47:49.891 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:47:49.891 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:49.891 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:47:49.892 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 22:47:49.893 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:47:49.896 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND beUserDelete = ?
2025-07-01 22:47:49.898 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:49.898 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-01 22:47:49.900 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), false(Boolean)
2025-07-01 22:47:49.906 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-01 22:47:53.874 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1 WHERE sg.activityId = ? ORDER BY sg.sortOrder ASC, sg.createTime DESC LIMIT ?, ?
2025-07-01 22:47:53.877 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:53.878 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1
        WHERE sg.activityId = ?
        ORDER BY sg.sortOrder ASC, sg.createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 22:47:53.887 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==> Parameters: 4(Long), 0(Integer), 10(Integer)
2025-07-01 22:47:53.895 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - <==      Total: 1
2025-07-01 22:47:53.900 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==>  Preparing: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ?
2025-07-01 22:47:53.905 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:53.907 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ? ::: DataSources: slave
2025-07-01 22:47:53.911 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==> Parameters: 4(Long)
2025-07-01 22:47:53.918 [http-nio-8080-exec-5] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - <==      Total: 1
2025-07-01 22:47:56.168 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.id = ?
2025-07-01 22:47:56.168 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:56.169 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.id = ? ::: DataSources: slave
2025-07-01 22:47:56.172 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==> Parameters: 8(Long)
2025-07-01 22:47:56.177 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - <==      Total: 1
2025-07-01 22:47:59.352 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.SpikeGoodsMapper.updateSpikeGoods - ==>  Preparing: UPDATE spikeGoods SET activityId = ?, bookId = ?, spikePrice = ?, originalPrice = ?, spikeStock = ?, soldCount = ?, limitPerUser = ?, sortOrder = ?, status = ?, updateTime = ? WHERE id = ?
2025-07-01 22:47:59.353 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:59.353 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: UPDATE spikeGoods SET
            activityId = ?,
            bookId = ?,
            spikePrice = ?,
            originalPrice = ?,
            spikeStock = ?,
            soldCount = ?,
            limitPerUser = ?,
            sortOrder = ?,
            status = ?,
            updateTime = ?
        WHERE id = ? ::: DataSources: master
2025-07-01 22:47:59.357 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.SpikeGoodsMapper.updateSpikeGoods - ==> Parameters: 4(Long), 1(Integer), 10(BigDecimal), 45(BigDecimal), 19(Integer), 1(Integer), 2(Integer), 1(Integer), 1(Integer), 2025-07-01T22:47:59.351466800(LocalDateTime), 8(Long)
2025-07-01 22:47:59.359 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.SpikeGoodsMapper.updateSpikeGoods - <==    Updates: 1
2025-07-01 22:47:59.362 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsById - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1 WHERE sg.id = ?
2025-07-01 22:47:59.362 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:59.362 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1
        WHERE sg.id = ? ::: DataSources: master
2025-07-01 22:47:59.365 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsById - ==> Parameters: 8(Long)
2025-07-01 22:47:59.370 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsById - <==      Total: 1
2025-07-01 22:47:59.412 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1 WHERE sg.activityId = ? ORDER BY sg.sortOrder ASC, sg.createTime DESC LIMIT ?, ?
2025-07-01 22:47:59.412 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:59.412 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, bi.imgSrc as coverImg
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        LEFT JOIN bookimg bi ON b.isbn = bi.isbn AND bi.cover = 1
        WHERE sg.activityId = ?
        ORDER BY sg.sortOrder ASC, sg.createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-01 22:47:59.414 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - ==> Parameters: 4(Long), 0(Integer), 10(Integer)
2025-07-01 22:47:59.419 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsPaged - <==      Total: 1
2025-07-01 22:47:59.422 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==>  Preparing: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ?
2025-07-01 22:47:59.423 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:47:59.424 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeGoods WHERE activityId = ? ::: DataSources: slave
2025-07-01 22:47:59.425 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - ==> Parameters: 4(Long)
2025-07-01 22:47:59.427 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getActivityGoodsCount - <==      Total: 1
2025-07-01 22:48:04.379 [http-nio-8080-exec-2] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 22:48:04.382 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.OrderMapper.findOrderDtoByOrderId - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.orderId = ?
2025-07-01 22:48:04.382 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:04.384 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
        WHERE o.orderId = ? ::: DataSources: slave
2025-07-01 22:48:04.385 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.OrderMapper.findOrderDtoByOrderId - ==> Parameters: SPIKE1751381262119616(String)
2025-07-01 22:48:04.388 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.OrderMapper.findOrderDtoByOrderId - <==      Total: 1
2025-07-01 22:48:04.391 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 22:48:04.391 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:04.391 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 22:48:04.392 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751381262119616(String)
2025-07-01 22:48:04.394 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 22:48:04.395 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.ExpenseMapper.findExpenseByOrderId - ==>  Preparing: select orderId, productTotalMoney, freight, coupon, activityDiscount, allPrice, finallyPrice from expense where orderId = ?
2025-07-01 22:48:04.395 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:04.396 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select orderId, productTotalMoney, freight, coupon, activityDiscount, allPrice, finallyPrice
        from expense
        where orderId = ? ::: DataSources: slave
2025-07-01 22:48:04.398 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.ExpenseMapper.findExpenseByOrderId - ==> Parameters: SPIKE1751381262119616(String)
2025-07-01 22:48:04.399 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.ExpenseMapper.findExpenseByOrderId - <==      Total: 1
2025-07-01 22:48:04.400 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.AddressMapper.addressList - ==>  Preparing: select * from address where account=? and off=false
2025-07-01 22:48:04.401 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:04.401 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from address where account=? and off=false ::: DataSources: slave
2025-07-01 22:48:04.402 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.AddressMapper.addressList - ==> Parameters: 56464ff@456.com(String)
2025-07-01 22:48:04.404 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.AddressMapper.addressList - <==      Total: 2
2025-07-01 22:48:04.405 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:48:04.405 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:04.406 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:48:04.412 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 22:48:04.414 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:48:05.298 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 22:48:05.305 [http-nio-8080-exec-3] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 22:48:05.306 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:05.308 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 22:48:05.315 [http-nio-8080-exec-3] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 22:48:05.321 [http-nio-8080-exec-3] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 6
2025-07-01 22:48:05.321 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:48:05.322 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:05.322 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:48:05.325 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 4(Long)
2025-07-01 22:48:05.329 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 1
2025-07-01 22:48:05.330 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-01 22:48:05.330 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:05.334 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-01 22:48:05.337 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 1(Integer)
2025-07-01 22:48:05.341 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-01 22:48:05.341 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:48:05.341 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:05.342 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:48:05.342 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 22:48:05.344 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:48:05.344 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:48:05.344 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:05.344 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:48:05.345 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 5(Long)
2025-07-01 22:48:05.347 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-01 22:48:05.348 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:48:05.348 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:05.348 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:48:05.349 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 6(Long)
2025-07-01 22:48:05.350 [http-nio-8080-exec-3] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-01 22:48:08.433 [http-nio-8080-exec-9] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 22:48:08.440 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.bookId = ? AND sg.status = 1 ORDER BY sg.createTime DESC
2025-07-01 22:48:08.440 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:08.441 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.bookId = ?
        AND sg.status = 1
        ORDER BY sg.createTime DESC ::: DataSources: slave
2025-07-01 22:48:08.444 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==> Parameters: 1(Integer)
2025-07-01 22:48:08.449 [http-nio-8080-exec-9] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - <==      Total: 3
2025-07-01 22:48:08.454 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 22:48:08.454 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:08.455 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 22:48:08.457 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 4(Long)
2025-07-01 22:48:08.462 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 22:48:08.466 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.id = ?
2025-07-01 22:48:08.469 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:08.470 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.id = ? ::: DataSources: slave
2025-07-01 22:48:08.476 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==> Parameters: 8(Long)
2025-07-01 22:48:08.481 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - <==      Total: 1
2025-07-01 22:48:08.482 [http-nio-8080-exec-9] DEBUG c.h.s.m.S.getUserSuccessPurchaseCount - ==>  Preparing: SELECT COALESCE(SUM(quantity), 0) FROM spikeRecord WHERE userAccount = ? AND spikeGoodsId = ? AND result = 1
2025-07-01 22:48:08.483 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:08.485 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT COALESCE(SUM(quantity), 0)
        FROM spikeRecord
        WHERE userAccount = ?
        AND spikeGoodsId = ?
        AND result = 1 ::: DataSources: slave
2025-07-01 22:48:08.487 [http-nio-8080-exec-9] DEBUG c.h.s.m.S.getUserSuccessPurchaseCount - ==> Parameters: 56464ff@456.com(String), 8(Long)
2025-07-01 22:48:08.489 [http-nio-8080-exec-9] DEBUG c.h.s.m.S.getUserSuccessPurchaseCount - <==      Total: 1
2025-07-01 22:48:08.502 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SpikeGoodsMapper.reduceStock - ==>  Preparing: UPDATE spikeGoods SET spikeStock = spikeStock - ?, soldCount = soldCount + ?, updateTime = NOW() WHERE id = ? AND spikeStock >= ?
2025-07-01 22:48:08.502 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:08.502 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: UPDATE spikeGoods
        SET spikeStock = spikeStock - ?,
            soldCount = soldCount + ?,
            updateTime = NOW()
        WHERE id = ?
        AND spikeStock >= ? ::: DataSources: master
2025-07-01 22:48:08.503 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SpikeGoodsMapper.reduceStock - ==> Parameters: 1(Integer), 1(Integer), 8(Long), 1(Integer)
2025-07-01 22:48:08.506 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SpikeGoodsMapper.reduceStock - <==    Updates: 1
2025-07-01 22:48:08.507 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - ==>  Preparing: update book set stock=stock-? where id=? and stock>=?
2025-07-01 22:48:08.508 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:08.508 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: update book
            set stock=stock-?
                where id=? and stock>=? ::: DataSources: master
2025-07-01 22:48:08.509 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - ==> Parameters: 1(Integer), 1(Integer), 1(Integer)
2025-07-01 22:48:08.511 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - <==    Updates: 1
2025-07-01 22:48:08.512 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.addOrder - ==>  Preparing: insert into bookorder(orderId,account,addressId,orderTime,shipTime,getTime,evaluateTime,closeTime,orderStatus,logisticsNum,confirmTime) values (?,?,?,?,?,?,?,?,?,?,?)
2025-07-01 22:48:08.513 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:08.513 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: insert into bookorder(orderId,account,addressId,orderTime,shipTime,getTime,evaluateTime,closeTime,orderStatus,logisticsNum,confirmTime)
            values (?,?,?,?,?,?,?,?,?,?,?) ::: DataSources: master
2025-07-01 22:48:08.515 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.addOrder - ==> Parameters: SPIKE1751381288511772(String), 56464ff@456.com(String), 1(Integer), 2025-07-01 22:48:08.511(Timestamp), null, null, null, null, 待付款(String), null, null
2025-07-01 22:48:08.517 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.addOrder - <==    Updates: 1
2025-07-01 22:48:08.520 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.OrderMapper.batchAddOrderDetail - ==>  Preparing: insert into orderdetail(orderId,bookId,num,price) values (?,?,?,?)
2025-07-01 22:48:08.521 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:08.521 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: insert into orderdetail(orderId,bookId,num,price)
        values
          
            (?,?,?,?) ::: DataSources: master
2025-07-01 22:48:08.522 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.OrderMapper.batchAddOrderDetail - ==> Parameters: SPIKE1751381288511772(String), 1(Integer), 1(Integer), 10.0(Double)
2025-07-01 22:48:08.524 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.OrderMapper.batchAddOrderDetail - <==    Updates: 1
2025-07-01 22:48:08.524 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.ExpenseMapper.addExpense - ==>  Preparing: insert into expense(orderId,productTotalMoney,freight,coupon,activityDiscount,allPrice,finallyPrice) values (?,?,?,?,?,?,?)
2025-07-01 22:48:08.524 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:08.527 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: insert into expense(orderId,productTotalMoney,freight,coupon,activityDiscount,allPrice,finallyPrice)
            values (?,?,?,?,?,?,?) ::: DataSources: master
2025-07-01 22:48:08.529 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.ExpenseMapper.addExpense - ==> Parameters: SPIKE1751381288511772(String), 45.0(Double), 0.0(Double), 0(Integer), 35.0(Double), 45.0(Double), 10.0(Double)
2025-07-01 22:48:08.531 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.ExpenseMapper.addExpense - <==    Updates: 1
2025-07-01 22:48:08.537 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - ==>  Preparing: INSERT INTO spikeRecord ( spikeGoodsId, userAccount, quantity, spikeTime, result, failReason, ipAddress, userAgent ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ? )
2025-07-01 22:48:08.537 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:08.537 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: INSERT INTO spikeRecord (
            spikeGoodsId, userAccount, quantity, spikeTime, result,
            failReason, ipAddress, userAgent
        ) VALUES (
            ?, ?, ?, ?, ?,
            ?, ?, ?
        ) ::: DataSources: master
2025-07-01 22:48:08.538 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - ==> Parameters: 8(Long), 56464ff@456.com(String), 1(Integer), 2025-07-01T22:48:08.536418700(LocalDateTime), 1(Integer), null, 0:0:0:0:0:0:0:1(String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0(String)
2025-07-01 22:48:08.544 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - <==    Updates: 1
2025-07-01 22:48:08.578 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 22:48:08.584 [http-nio-8080-exec-1] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 22:48:08.587 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:08.587 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 22:48:08.587 [http-nio-8080-exec-1] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 22:48:08.589 [http-nio-8080-exec-1] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 6
2025-07-01 22:48:08.590 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:48:08.590 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:08.590 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:48:08.592 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 4(Long)
2025-07-01 22:48:08.595 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 1
2025-07-01 22:48:08.596 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-01 22:48:08.597 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:08.597 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-01 22:48:08.597 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 1(Integer)
2025-07-01 22:48:08.599 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-01 22:48:08.600 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:48:08.600 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:08.600 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:48:08.600 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 22:48:08.602 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:48:08.604 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:48:08.605 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:08.605 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:48:08.606 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 5(Long)
2025-07-01 22:48:08.607 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-01 22:48:08.608 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:48:08.609 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:08.610 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:48:08.612 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 6(Long)
2025-07-01 22:48:08.613 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-01 22:48:10.179 [http-nio-8080-exec-6] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 22:48:10.181 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.OrderMapper.findOrderDtoByOrderId - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.orderId = ?
2025-07-01 22:48:10.181 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:10.181 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
        WHERE o.orderId = ? ::: DataSources: slave
2025-07-01 22:48:10.182 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.OrderMapper.findOrderDtoByOrderId - ==> Parameters: SPIKE1751381288511772(String)
2025-07-01 22:48:10.184 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.OrderMapper.findOrderDtoByOrderId - <==      Total: 1
2025-07-01 22:48:10.185 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 22:48:10.186 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:10.187 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 22:48:10.188 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751381288511772(String)
2025-07-01 22:48:10.190 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 22:48:10.190 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.ExpenseMapper.findExpenseByOrderId - ==>  Preparing: select orderId, productTotalMoney, freight, coupon, activityDiscount, allPrice, finallyPrice from expense where orderId = ?
2025-07-01 22:48:10.191 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:10.191 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select orderId, productTotalMoney, freight, coupon, activityDiscount, allPrice, finallyPrice
        from expense
        where orderId = ? ::: DataSources: slave
2025-07-01 22:48:10.191 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.ExpenseMapper.findExpenseByOrderId - ==> Parameters: SPIKE1751381288511772(String)
2025-07-01 22:48:10.194 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.ExpenseMapper.findExpenseByOrderId - <==      Total: 1
2025-07-01 22:48:10.195 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.AddressMapper.addressList - ==>  Preparing: select * from address where account=? and off=false
2025-07-01 22:48:10.195 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:10.195 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from address where account=? and off=false ::: DataSources: slave
2025-07-01 22:48:10.195 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.AddressMapper.addressList - ==> Parameters: 56464ff@456.com(String)
2025-07-01 22:48:10.198 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.AddressMapper.addressList - <==      Total: 2
2025-07-01 22:48:10.198 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:48:10.199 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:10.200 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:48:10.200 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 22:48:10.203 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:48:11.546 [http-nio-8080-exec-7] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 22:48:11.556 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - ==>  Preparing: update book set stock=stock-? where id=? and stock>=?
2025-07-01 22:48:11.556 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:11.556 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: update book
            set stock=stock-?
                where id=? and stock>=? ::: DataSources: master
2025-07-01 22:48:11.557 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - ==> Parameters: 1(Integer), 1(Integer), 1(Integer)
2025-07-01 22:48:11.558 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - <==    Updates: 1
2025-07-01 22:48:11.563 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.addOrder - ==>  Preparing: insert into bookorder(orderId,account,addressId,orderTime,shipTime,getTime,evaluateTime,closeTime,orderStatus,logisticsNum,confirmTime) values (?,?,?,?,?,?,?,?,?,?,?)
2025-07-01 22:48:11.563 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:11.563 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: insert into bookorder(orderId,account,addressId,orderTime,shipTime,getTime,evaluateTime,closeTime,orderStatus,logisticsNum,confirmTime)
            values (?,?,?,?,?,?,?,?,?,?,?) ::: DataSources: master
2025-07-01 22:48:11.564 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.addOrder - ==> Parameters: 20250701224811070894(String), 56464ff@456.com(String), 4(Integer), 2025-07-01 22:48:11.55(Timestamp), null, null, null, null, 已付款(String), null, null
2025-07-01 22:48:11.566 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.addOrder - <==    Updates: 1
2025-07-01 22:48:11.568 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.OrderMapper.batchAddOrderDetail - ==>  Preparing: insert into orderdetail(orderId,bookId,num,price) values (?,?,?,?)
2025-07-01 22:48:11.569 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:11.569 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: insert into orderdetail(orderId,bookId,num,price)
        values
          
            (?,?,?,?) ::: DataSources: master
2025-07-01 22:48:11.569 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.OrderMapper.batchAddOrderDetail - ==> Parameters: 20250701224811070894(String), 1(Integer), 1(Integer), 10.0(Double)
2025-07-01 22:48:11.571 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.OrderMapper.batchAddOrderDetail - <==    Updates: 1
2025-07-01 22:48:11.571 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.ExpenseMapper.addExpense - ==>  Preparing: insert into expense(orderId,productTotalMoney,freight,coupon,activityDiscount,allPrice,finallyPrice) values (?,?,?,?,?,?,?)
2025-07-01 22:48:11.571 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:11.571 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: insert into expense(orderId,productTotalMoney,freight,coupon,activityDiscount,allPrice,finallyPrice)
            values (?,?,?,?,?,?,?) ::: DataSources: master
2025-07-01 22:48:11.572 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.ExpenseMapper.addExpense - ==> Parameters: 20250701224811070894(String), 45.0(Double), 0.0(Double), 0(Integer), 35.0(Double), 45.0(Double), 10.0(Double)
2025-07-01 22:48:11.573 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.ExpenseMapper.addExpense - <==    Updates: 1
2025-07-01 22:48:12.632 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 22:48:12.636 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-01 22:48:12.637 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:12.637 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-01 22:48:12.639 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), false(Boolean), 0(Integer), 5(Integer)
2025-07-01 22:48:12.646 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 5
2025-07-01 22:48:12.647 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 22:48:12.647 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:12.648 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 22:48:12.649 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701224811070894(String)
2025-07-01 22:48:12.653 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 22:48:12.654 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:48:12.655 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:12.655 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:48:12.655 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 22:48:12.657 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:48:12.658 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 22:48:12.659 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:12.660 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 22:48:12.661 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751381288511772(String)
2025-07-01 22:48:12.663 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 22:48:12.668 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:48:12.668 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:12.669 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:48:12.669 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 22:48:12.670 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:48:12.674 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 22:48:12.674 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:12.674 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 22:48:12.675 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701224748414440(String)
2025-07-01 22:48:12.677 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 22:48:12.680 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:48:12.681 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:12.681 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:48:12.681 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 22:48:12.683 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:48:12.685 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 22:48:12.688 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:12.689 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 22:48:12.690 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751381262119616(String)
2025-07-01 22:48:12.695 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 22:48:12.699 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:48:12.701 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:12.702 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:48:12.703 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 22:48:12.706 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:48:12.708 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 22:48:12.710 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:12.710 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 22:48:12.711 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701211827858439(String)
2025-07-01 22:48:12.713 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 22:48:12.716 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:48:12.717 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:12.717 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:48:12.717 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 22:48:12.718 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:48:12.719 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND beUserDelete = ?
2025-07-01 22:48:12.720 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:12.720 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-01 22:48:12.720 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), false(Boolean)
2025-07-01 22:48:12.723 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-01 22:48:13.463 [http-nio-8080-exec-10] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 22:48:13.475 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.OrderMapper.findOrderDtoByOrderId - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.orderId = ?
2025-07-01 22:48:13.476 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:13.476 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
        WHERE o.orderId = ? ::: DataSources: slave
2025-07-01 22:48:13.479 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.OrderMapper.findOrderDtoByOrderId - ==> Parameters: SPIKE1751381288511772(String)
2025-07-01 22:48:13.481 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.OrderMapper.findOrderDtoByOrderId - <==      Total: 1
2025-07-01 22:48:13.482 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-01 22:48:13.482 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:13.482 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-01 22:48:13.483 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751381288511772(String)
2025-07-01 22:48:13.485 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-01 22:48:13.486 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.ExpenseMapper.findExpenseByOrderId - ==>  Preparing: select orderId, productTotalMoney, freight, coupon, activityDiscount, allPrice, finallyPrice from expense where orderId = ?
2025-07-01 22:48:13.486 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:13.486 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select orderId, productTotalMoney, freight, coupon, activityDiscount, allPrice, finallyPrice
        from expense
        where orderId = ? ::: DataSources: slave
2025-07-01 22:48:13.487 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.ExpenseMapper.findExpenseByOrderId - ==> Parameters: SPIKE1751381288511772(String)
2025-07-01 22:48:13.488 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.ExpenseMapper.findExpenseByOrderId - <==      Total: 1
2025-07-01 22:48:13.488 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.AddressMapper.addressList - ==>  Preparing: select * from address where account=? and off=false
2025-07-01 22:48:13.489 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:13.489 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from address where account=? and off=false ::: DataSources: slave
2025-07-01 22:48:13.489 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.AddressMapper.addressList - ==> Parameters: 56464ff@456.com(String)
2025-07-01 22:48:13.492 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.AddressMapper.addressList - <==      Total: 2
2025-07-01 22:48:13.493 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:48:13.493 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:13.493 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:48:13.494 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 22:48:13.495 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:48:14.160 [http-nio-8080-exec-8] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 22:48:14.172 [http-nio-8080-exec-8] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 22:48:14.176 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:14.176 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 22:48:14.176 [http-nio-8080-exec-8] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 22:48:14.179 [http-nio-8080-exec-8] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 6
2025-07-01 22:48:14.184 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:48:14.184 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:14.186 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:48:14.188 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 4(Long)
2025-07-01 22:48:14.191 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 1
2025-07-01 22:48:14.196 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-01 22:48:14.198 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:14.202 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-01 22:48:14.203 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 1(Integer)
2025-07-01 22:48:14.206 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-01 22:48:14.207 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 22:48:14.207 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:14.208 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 22:48:14.208 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 22:48:14.210 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 22:48:14.210 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:48:14.210 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:14.210 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:48:14.211 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 5(Long)
2025-07-01 22:48:14.213 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-01 22:48:14.217 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 22:48:14.217 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:14.217 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 22:48:14.218 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 6(Long)
2025-07-01 22:48:14.219 [http-nio-8080-exec-8] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-01 22:48:17.464 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 22:48:17.468 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.bookId = ? AND sg.status = 1 ORDER BY sg.createTime DESC
2025-07-01 22:48:17.469 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:17.471 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.bookId = ?
        AND sg.status = 1
        ORDER BY sg.createTime DESC ::: DataSources: slave
2025-07-01 22:48:17.474 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - ==> Parameters: 1(Integer)
2025-07-01 22:48:17.493 [http-nio-8080-exec-4] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByBookId - <==      Total: 3
2025-07-01 22:48:17.498 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==>  Preparing: SELECT * FROM spikeActivity WHERE id = ?
2025-07-01 22:48:17.503 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:17.507 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity WHERE id = ? ::: DataSources: slave
2025-07-01 22:48:17.508 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - ==> Parameters: 4(Long)
2025-07-01 22:48:17.511 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeActivityMapper.getActivityById - <==      Total: 1
2025-07-01 22:48:17.512 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.id = ?
2025-07-01 22:48:17.514 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:17.514 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.id = ? ::: DataSources: slave
2025-07-01 22:48:17.515 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - ==> Parameters: 8(Long)
2025-07-01 22:48:17.516 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeGoodsMapper.getSpikeGoodsDetail - <==      Total: 1
2025-07-01 22:48:17.516 [http-nio-8080-exec-4] DEBUG c.h.s.m.S.getUserSuccessPurchaseCount - ==>  Preparing: SELECT COALESCE(SUM(quantity), 0) FROM spikeRecord WHERE userAccount = ? AND spikeGoodsId = ? AND result = 1
2025-07-01 22:48:17.517 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:17.517 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT COALESCE(SUM(quantity), 0)
        FROM spikeRecord
        WHERE userAccount = ?
        AND spikeGoodsId = ?
        AND result = 1 ::: DataSources: slave
2025-07-01 22:48:17.517 [http-nio-8080-exec-4] DEBUG c.h.s.m.S.getUserSuccessPurchaseCount - ==> Parameters: 56464ff@456.com(String), 8(Long)
2025-07-01 22:48:17.520 [http-nio-8080-exec-4] DEBUG c.h.s.m.S.getUserSuccessPurchaseCount - <==      Total: 1
2025-07-01 22:48:17.526 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - ==>  Preparing: INSERT INTO spikeRecord ( spikeGoodsId, userAccount, quantity, spikeTime, result, failReason, ipAddress, userAgent ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ? )
2025-07-01 22:48:17.527 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 22:48:17.527 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: INSERT INTO spikeRecord (
            spikeGoodsId, userAccount, quantity, spikeTime, result,
            failReason, ipAddress, userAgent
        ) VALUES (
            ?, ?, ?, ?, ?,
            ?, ?, ?
        ) ::: DataSources: master
2025-07-01 22:48:17.529 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - ==> Parameters: 8(Long), 56464ff@456.com(String), 1(Integer), 2025-07-01T22:48:17.524750(LocalDateTime), 0(Integer), 超出购买限制(String), 0:0:0:0:0:0:0:1(String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0(String)
2025-07-01 22:48:17.530 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.SpikeRecordMapper.insertSpikeRecord - <==    Updates: 1
2025-07-01 23:08:34.675 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 23:08:34.675 [http-nio-8080-exec-9] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 23:08:34.675 [http-nio-8080-exec-6] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 23:08:34.675 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 23:08:34.675 [http-nio-8080-exec-7] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 23:08:34.675 [http-nio-8080-exec-2] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 23:08:34.728 [http-nio-8080-exec-1] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-01 23:08:34.729 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 23:08:34.729 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-01 23:08:34.729 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:08:34.730 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:34.729 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-01 23:08:34.729 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-01 23:08:34.729 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 23:08:34.730 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:34.730 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:34.730 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:08:34.730 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:34.730 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:34.730 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:34.731 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 23:08:34.731 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:08:34.731 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-01 23:08:34.731 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-01 23:08:34.731 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 23:08:34.756 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 23:08:34.756 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:08:34.757 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 23:08:34.761 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:08:34.762 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-01 23:08:34.763 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:08:34.763 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:08:34.763 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 23:08:34.764 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-01 23:08:34.766 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:34.765 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-01 23:08:34.765 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:34.767 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:08:34.768 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-01 23:08:34.768 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-01 23:08:34.769 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-01 23:08:34.770 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:08:34.770 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:34.771 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-01 23:08:34.771 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:08:34.772 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-01 23:08:34.775 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-01 23:08:34.776 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:08:34.777 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:08:34.778 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:34.779 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:08:34.779 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-01 23:08:34.779 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 23:08:34.784 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:08:34.784 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:08:34.785 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:34.788 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 23:08:34.792 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:08:34.801 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:08:34.802 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:08:34.807 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:08:34.810 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:08:34.812 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:34.812 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:08:34.813 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 23:08:34.813 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:08:34.814 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:08:34.815 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:08:34.817 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:34.818 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:08:34.818 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:08:34.819 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:34.819 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:08:34.819 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 23:08:34.820 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 23:08:34.822 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:08:34.822 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:08:34.824 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:08:34.825 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:34.825 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:08:34.825 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:08:34.826 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 23:08:34.826 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:34.826 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:08:34.826 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 23:08:34.827 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:08:34.827 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:08:34.828 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:08:34.828 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:34.829 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:08:34.830 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 23:08:34.832 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:08:34.832 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:08:34.832 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:34.833 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:08:34.833 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 23:08:34.835 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:08:34.835 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:08:34.836 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:34.837 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:08:34.839 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 23:08:34.840 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:08:37.208 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 23:08:37.209 [http-nio-8080-exec-10] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 23:08:37.212 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 23:08:37.213 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 23:08:37.214 [http-nio-8080-exec-6] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 23:08:37.214 [http-nio-8080-exec-8] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 23:08:37.216 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-01 23:08:37.217 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 23:08:37.219 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:08:37.222 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:37.219 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-01 23:08:37.221 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-01 23:08:37.221 [http-nio-8080-exec-8] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-01 23:08:37.221 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:37.221 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:37.222 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 23:08:37.222 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:08:37.222 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:37.223 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-01 23:08:37.222 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:37.222 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 23:08:37.222 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:08:37.223 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 23:08:37.223 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:08:37.223 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-01 23:08:37.224 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:37.224 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 23:08:37.224 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:08:37.226 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:08:37.227 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 23:08:37.229 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 23:08:37.231 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:08:37.231 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-01 23:08:37.233 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-01 23:08:37.233 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-01 23:08:37.236 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:08:37.237 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:37.237 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:08:37.234 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-01 23:08:37.234 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:08:37.234 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:37.234 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-01 23:08:37.237 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-01 23:08:37.238 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:08:37.238 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:37.238 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:08:37.238 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:37.239 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-01 23:08:37.240 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:08:37.242 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:37.241 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:08:37.241 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:08:37.242 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:08:37.242 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-01 23:08:37.243 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 23:08:37.244 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-01 23:08:37.243 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:08:37.245 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:08:37.245 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 23:08:37.248 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:08:37.249 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:37.249 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:08:37.246 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:08:37.246 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-01 23:08:37.250 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 23:08:37.252 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:08:37.253 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:08:37.254 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:08:37.255 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:37.255 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:08:37.256 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:08:37.256 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:37.257 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:08:37.257 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 23:08:37.257 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 23:08:37.258 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:08:37.258 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:08:37.259 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:08:37.262 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:37.262 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:08:37.263 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:37.262 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:08:37.264 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:08:37.265 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 23:08:37.265 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 23:08:37.267 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:08:37.268 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:08:37.273 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:08:37.275 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:37.275 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:08:37.276 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 23:08:37.277 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:08:37.278 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:08:37.279 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:37.279 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:08:37.279 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 23:08:37.281 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:08:37.282 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:08:37.282 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:08:37.282 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:08:37.282 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 23:08:37.283 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:08:52.703 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-01 23:08:52.718 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 18772 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-01 23:08:52.719 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-01 23:08:52.719 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-01 23:08:52.863 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-01 23:08:52.863 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-01 23:08:53.403 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-01 23:08:53.405 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-01 23:08:53.429 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-07-01 23:08:53.594 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$60b8b5a4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 23:08:53.605 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-01 23:08:53.998 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-01 23:08:53.998 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-01 23:08:53.998 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-01 23:08:53.998 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-01 23:08:54.021 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-01 23:08:54.028 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-01 23:08:54.029 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-01 23:08:54.029 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-01 23:08:54.077 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-01 23:08:54.077 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1213 ms
2025-07-01 23:08:54.080 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-01 23:08:54.830 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-01 23:08:54.853 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-01 23:08:55.122 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-01 23:08:55.122 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-01 23:08:55.577 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-01 23:08:55.697 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6a0772e9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@40d21596, org.springframework.security.web.context.SecurityContextPersistenceFilter@25736e18, org.springframework.security.web.header.HeaderWriterFilter@2ee026bf, org.springframework.web.filter.CorsFilter@2be24130, org.springframework.security.web.authentication.logout.LogoutFilter@32981ae6, com.huang.store.security.JwtAuthenticationTokenFilter@348a717f, com.huang.store.security.CustomAuthenticationFilter@3ea4f3d6, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7f18f5ef, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7aa62dfc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7b9019f7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@754fcbaa, org.springframework.security.web.session.SessionManagementFilter@2de6a234, org.springframework.security.web.access.ExceptionTranslationFilter@4cb88ec1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2ddf7c79]
2025-07-01 23:08:55.950 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-01 23:08:55.968 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-01 23:08:55.981 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-01 23:08:55.987 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 3.667 seconds (JVM running for 4.294)
2025-07-01 23:09:03.983 [http-nio-8080-exec-3] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-01 23:09:03.983 [http-nio-8080-exec-3] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-01 23:09:03.984 [http-nio-8080-exec-3] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-01 23:09:04.056 [http-nio-8080-exec-2] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 23:09:04.056 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 23:09:04.056 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 23:09:04.056 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 23:09:04.056 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 23:09:04.056 [http-nio-8080-exec-10] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 23:09:04.083 [http-nio-8080-exec-5] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-01 23:09:04.107 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 23:09:04.107 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-01 23:09:04.107 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:09:04.107 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-01 23:09:04.107 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-01 23:09:04.107 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 23:09:04.122 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:04.122 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:04.122 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:04.122 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:04.122 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:04.122 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:04.122 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:09:04.122 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-01 23:09:04.122 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 23:09:04.122 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-01 23:09:04.122 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:09:04.122 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 23:09:04.155 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-01 23:09:04.164 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:09:04.172 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:09:04.176 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:09:04.176 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-01 23:09:04.179 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:09:04.179 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:09:04.179 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:04.179 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:04.179 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:09:04.179 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:09:04.179 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 23:09:04.181 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-01 23:09:04.181 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-01 23:09:04.181 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 23:09:04.181 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:09:04.181 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:04.182 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:09:04.182 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:09:04.182 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-01 23:09:04.182 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-01 23:09:04.183 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-01 23:09:04.183 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:09:04.183 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:04.183 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-01 23:09:04.184 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:09:04.185 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:09:04.185 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:09:04.185 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 23:09:04.186 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:09:04.186 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:04.186 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:09:04.186 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:09:04.186 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:09:04.186 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:04.186 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:09:04.187 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-01 23:09:04.187 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 23:09:04.187 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 23:09:04.189 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-01 23:09:04.190 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 23:09:04.190 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:09:04.191 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:09:04.191 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:09:04.191 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:04.191 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:04.191 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:09:04.191 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:09:04.192 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 23:09:04.192 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 23:09:04.192 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:09:04.192 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:09:04.193 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:09:04.193 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:04.193 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:09:04.193 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:09:04.193 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:04.193 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 23:09:04.193 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:09:04.193 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 23:09:04.194 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:09:04.194 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:09:04.194 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:04.195 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:09:04.195 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:09:04.195 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 23:09:04.196 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:09:04.196 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:04.196 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:09:04.196 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 23:09:04.196 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:09:04.197 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:09:04.197 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:04.197 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:09:04.198 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 23:09:04.198 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:09:04.199 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:09:06.701 [http-nio-8080-exec-2] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 23:09:06.701 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 23:09:06.702 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 23:09:06.703 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:06.703 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 23:09:06.704 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 23:09:06.708 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 23:09:06.709 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:09:06.709 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:06.709 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:09:06.709 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 23:09:06.711 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 23:09:06.711 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:09:06.711 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:06.711 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:09:06.711 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 23:09:06.712 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:09:06.713 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:09:06.713 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:06.713 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:09:06.713 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 23:09:06.714 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:09:06.714 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:09:06.714 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:06.715 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:09:06.715 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 23:09:06.716 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:09:07.022 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-01 23:09:07.022 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:07.022 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-01 23:09:07.023 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 3(Integer)
2025-07-01 23:09:07.025 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-01 23:09:07.026 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.BookMapper.getBookImgSrcList - ==>  Preparing: select imgSrc from bookimg where isbn=?
2025-07-01 23:09:07.026 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:07.026 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? ::: DataSources: slave
2025-07-01 23:09:07.027 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.BookMapper.getBookImgSrcList - ==> Parameters: 9787111407010(String)
2025-07-01 23:09:07.028 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.BookMapper.getBookImgSrcList - <==      Total: 1
2025-07-01 23:09:07.028 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:09:07.028 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:07.028 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:09:07.028 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 23:09:07.029 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:09:07.029 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookSort - ==>  Preparing: select * from booksort where id in (select bookSortId from booksortlist where bookId=?)
2025-07-01 23:09:07.029 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:07.029 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where id in (select bookSortId from booksortlist where bookId=?) ::: DataSources: slave
2025-07-01 23:09:07.030 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookSort - ==> Parameters: 3(Integer)
2025-07-01 23:09:07.033 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookSort - <==      Total: 1
2025-07-01 23:09:07.034 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortId - ==>  Preparing: select id from booksort where upperName=? and sortName=?
2025-07-01 23:09:07.034 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:07.034 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select id from booksort where upperName=? and sortName=? ::: DataSources: slave
2025-07-01 23:09:07.035 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortId - ==> Parameters: 无(String), 科技(String)
2025-07-01 23:09:07.035 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortId - <==      Total: 1
2025-07-01 23:09:08.784 [http-nio-8080-exec-8] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 23:09:08.785 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-01 23:09:08.786 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:08.786 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-01 23:09:08.786 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-01 23:09:08.793 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-01 23:09:08.794 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:09:08.795 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:08.795 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:09:08.795 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:09:08.797 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:09:08.798 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:09:08.798 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:08.798 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:09:08.798 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 23:09:08.798 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 23:09:08.800 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:09:08.801 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:09:08.802 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:08.802 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:09:08.802 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:09:08.802 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:08.802 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:09:08.802 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 23:09:08.802 [http-nio-8080-exec-6] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 23:09:08.803 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:09:08.803 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 23:09:08.804 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:09:08.805 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:09:08.805 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:08.805 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:09:08.805 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:09:08.805 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 23:09:08.806 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:09:08.806 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:08.806 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:09:08.806 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:09:08.807 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-01 23:09:08.807 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:08.807 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:09:08.808 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:09:08.809 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:09:08.810 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:09:08.810 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:08.810 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:09:08.810 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 23:09:08.805 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-01 23:09:08.820 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:08.819 [http-nio-8080-exec-10] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 23:09:08.818 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:09:08.821 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:09:08.820 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-01 23:09:08.821 [http-nio-8080-exec-10] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-01 23:09:08.822 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:09:08.822 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:08.822 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 23:09:08.822 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:09:08.822 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:08.822 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 23:09:08.822 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 23:09:08.823 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 23:09:08.824 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-01 23:09:08.824 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-01 23:09:08.824 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 23:09:08.825 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:09:08.825 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:08.825 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:09:08.826 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:09:08.827 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-01 23:09:08.827 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-01 23:09:08.827 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-01 23:09:08.827 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:08.827 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-01 23:09:08.827 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-01 23:09:08.829 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-01 23:09:08.829 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:09:08.829 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 23:09:08.830 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:08.831 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 23:09:08.830 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:09:08.832 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 23:09:08.835 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 23:09:08.836 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:09:08.836 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:08.836 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:09:08.837 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 23:09:08.839 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 23:09:08.840 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:09:08.840 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:08.840 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:09:08.840 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 23:09:08.842 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:09:08.842 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:09:08.842 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:08.842 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:09:08.842 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 23:09:08.845 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:09:08.845 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:09:08.845 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:08.845 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:09:08.845 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 23:09:08.847 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:09:24.489 [http-nio-8080-exec-6] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxMzc5MzcyOTk4LCJleHAiOjE3NTEzODExNzN9.91Kcvzcr-FbMF16mTHNy-B1NmzQWkAtsa0i87mFz_tLXosU3OQ1zxnSCqZA_NwEiGfh5klhRRcdF7JTBR8QjeQ
2025-07-01 23:09:24.567 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 23:09:24.567 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:24.567 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 23:09:24.568 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 56464ff@456.com(String)
2025-07-01 23:09:24.571 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 23:09:24.578 [http-nio-8080-exec-6] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:56464ff@456.com    数据库密码:$2a$10$7OBMT05X3FsorQiaTl2aQuxGJpdi4w1dVWZdG8Oy9K7E61SWT9WAy
2025-07-01 23:09:24.652 [http-nio-8080-exec-6] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=56464ff@456.com, password=$2a$10$7OBMT05X3FsorQiaTl2aQuxGJpdi4w1dVWZdG8Oy9K7E61SWT9WAy, enabled=true, roles=[ROLE_USER]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=44E3984760BA51C34F8E639AB5F0881A], Granted Authorities=[ROLE_USER]]
2025-07-01 23:09:24.661 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-01 23:09:24.661 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:24.661 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-01 23:09:24.661 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 56464ff@456.com(String)
2025-07-01 23:09:24.661 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-01 23:09:25.764 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:09:25.764 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-01 23:09:25.764 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-01 23:09:25.764 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:25.764 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:25.764 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:25.764 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-01 23:09:25.764 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-01 23:09:25.764 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:09:25.764 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-01 23:09:25.764 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:09:25.765 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 23:09:25.765 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-01 23:09:25.765 [http-nio-8080-exec-5] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-01 23:09:25.765 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 23:09:25.765 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:25.765 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:25.765 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 23:09:25.765 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:09:25.765 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 23:09:25.765 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:25.765 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 23:09:25.765 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 23:09:25.766 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:09:25.766 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:09:25.766 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-01 23:09:25.767 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 23:09:25.767 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:09:25.767 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-01 23:09:25.767 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:25.767 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-01 23:09:25.767 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:09:25.767 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:25.767 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-01 23:09:25.767 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:09:25.768 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:09:25.768 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:25.768 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:09:25.768 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-01 23:09:25.768 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-01 23:09:25.768 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-01 23:09:25.769 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:09:25.769 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:25.769 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:09:25.769 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 23:09:25.769 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:09:25.769 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:09:25.769 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-01 23:09:25.771 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:09:25.771 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 23:09:25.771 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:09:25.771 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:25.771 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:09:25.771 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 23:09:25.772 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-01 23:09:25.773 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:09:25.773 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:25.773 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:09:25.773 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:09:25.773 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:09:25.773 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:09:25.773 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:25.773 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:09:25.774 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 23:09:25.775 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:09:25.776 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:09:25.776 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:09:25.776 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:25.776 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:09:25.776 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 23:09:25.777 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:09:25.777 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:25.777 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:09:25.778 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 23:09:25.780 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:09:25.782 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:09:25.782 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:25.782 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:09:25.782 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 23:09:25.782 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:09:25.784 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:09:25.784 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:09:25.784 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:25.784 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:09:25.785 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 23:09:25.786 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:09:25.787 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:09:25.787 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:25.787 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:09:25.787 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 23:09:25.789 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:09:25.789 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:09:25.789 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:25.789 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:09:25.790 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 23:09:25.791 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:09:30.094 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 23:09:30.094 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:30.094 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 23:09:30.095 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 23:09:30.103 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 23:09:30.103 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:09:30.104 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:30.104 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:09:30.104 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 23:09:30.106 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 23:09:30.107 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:09:30.108 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:30.108 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:09:30.108 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 23:09:30.108 [http-nio-8080-exec-8] ERROR com.huang.store.exception.GlobalExceptionHandler - 运行时异常
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.NumberFormatException: For input string: "undefined"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.valueOf(Integer.java:999)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:729)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125)
	... 107 common frames omitted
2025-07-01 23:09:30.115 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:09:30.116 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:09:30.116 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:30.116 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:09:30.116 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 23:09:30.121 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:09:30.122 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:09:30.123 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:30.123 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:09:30.123 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 23:09:30.126 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:09:30.130 [http-nio-8080-exec-8] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2025-07-01 23:09:31.415 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 23:09:31.415 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:31.415 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 23:09:31.415 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 1(Integer)
2025-07-01 23:09:31.416 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 1
2025-07-01 23:09:31.417 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==>  Preparing: select id from booksort where (upperName="无" and sortName=?) or upperName=?
2025-07-01 23:09:31.417 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:31.417 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select id from booksort where (upperName="无" and sortName=?) or upperName=? ::: DataSources: slave
2025-07-01 23:09:31.420 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==> Parameters: 文学(String), 文学(String)
2025-07-01 23:09:31.422 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - <==      Total: 4
2025-07-01 23:09:31.459 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBooksByFirst - ==>  Preparing: select * from book where id in (select t.bookId from (select * from booksortlist WHERE bookSortId in ( ? , ? , ? , ? ) ) as t ) limit ?,?
2025-07-01 23:09:31.459 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:31.459 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book
            where id in (select t.bookId from
                (select * from booksortlist
                     WHERE bookSortId in
                        (
                            ?
                        ,
                            ?
                        ,
                            ?
                        ,
                            ?
                        ) 
                )
        as t ) limit ?,? ::: DataSources: slave
2025-07-01 23:09:31.466 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBooksByFirst - ==> Parameters: 5(Integer), 6(Integer), 7(Integer), 1(Integer), 0(Integer), 10(Integer)
2025-07-01 23:09:31.474 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBooksByFirst - <==      Total: 2
2025-07-01 23:09:31.474 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==>  Preparing: select id from booksort where (upperName="无" and sortName=?) or upperName=?
2025-07-01 23:09:31.474 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:31.474 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select id from booksort where (upperName="无" and sortName=?) or upperName=? ::: DataSources: slave
2025-07-01 23:09:31.474 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==> Parameters: 文学(String), 文学(String)
2025-07-01 23:09:31.477 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - <==      Total: 4
2025-07-01 23:09:31.478 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.BookMapper.getFirstBookCount - ==>  Preparing: select count(*) from book where id in (select bookId from booksortlist WHERE bookSortId in ( ? , ? , ? , ? ) )
2025-07-01 23:09:31.478 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:31.478 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select count(*) from book
        where id in (select bookId from booksortlist
         WHERE bookSortId in
            (
                ?
            ,
                ?
            ,
                ?
            ,
                ?
            ) 
        ) ::: DataSources: slave
2025-07-01 23:09:31.481 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.BookMapper.getFirstBookCount - ==> Parameters: 5(Integer), 6(Integer), 7(Integer), 1(Integer)
2025-07-01 23:09:31.484 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.BookMapper.getFirstBookCount - <==      Total: 1
2025-07-01 23:09:31.485 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:09:31.485 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:31.485 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:09:31.487 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 23:09:31.490 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:09:31.493 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:09:31.494 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:31.494 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:09:31.494 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 23:09:31.497 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:09:33.136 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 23:09:33.136 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:33.136 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 23:09:33.137 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 2(Integer)
2025-07-01 23:09:33.138 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 1
2025-07-01 23:09:33.139 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==>  Preparing: select id from booksort where (upperName="无" and sortName=?) or upperName=?
2025-07-01 23:09:33.139 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:33.139 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select id from booksort where (upperName="无" and sortName=?) or upperName=? ::: DataSources: slave
2025-07-01 23:09:33.139 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==> Parameters: 科技(String), 科技(String)
2025-07-01 23:09:33.142 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - <==      Total: 3
2025-07-01 23:09:33.143 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBooksByFirst - ==>  Preparing: select * from book where id in (select t.bookId from (select * from booksortlist WHERE bookSortId in ( ? , ? , ? ) ) as t ) limit ?,?
2025-07-01 23:09:33.143 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:33.143 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book
            where id in (select t.bookId from
                (select * from booksortlist
                     WHERE bookSortId in
                        (
                            ?
                        ,
                            ?
                        ,
                            ?
                        ) 
                )
        as t ) limit ?,? ::: DataSources: slave
2025-07-01 23:09:33.144 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBooksByFirst - ==> Parameters: 2(Integer), 8(Integer), 9(Integer), 0(Integer), 10(Integer)
2025-07-01 23:09:33.147 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBooksByFirst - <==      Total: 3
2025-07-01 23:09:33.147 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==>  Preparing: select id from booksort where (upperName="无" and sortName=?) or upperName=?
2025-07-01 23:09:33.147 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:33.147 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select id from booksort where (upperName="无" and sortName=?) or upperName=? ::: DataSources: slave
2025-07-01 23:09:33.148 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==> Parameters: 科技(String), 科技(String)
2025-07-01 23:09:33.152 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - <==      Total: 3
2025-07-01 23:09:33.152 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.BookMapper.getFirstBookCount - ==>  Preparing: select count(*) from book where id in (select bookId from booksortlist WHERE bookSortId in ( ? , ? , ? ) )
2025-07-01 23:09:33.153 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:33.153 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select count(*) from book
        where id in (select bookId from booksortlist
         WHERE bookSortId in
            (
                ?
            ,
                ?
            ,
                ?
            ) 
        ) ::: DataSources: slave
2025-07-01 23:09:33.154 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.BookMapper.getFirstBookCount - ==> Parameters: 2(Integer), 8(Integer), 9(Integer)
2025-07-01 23:09:33.157 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.BookMapper.getFirstBookCount - <==      Total: 1
2025-07-01 23:09:33.157 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:09:33.157 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:33.157 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:09:33.157 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 23:09:33.159 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:09:33.159 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:09:33.159 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:33.159 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:09:33.160 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 23:09:33.161 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:09:33.162 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:09:33.162 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:33.162 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:09:33.163 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 23:09:33.165 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:09:35.941 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 23:09:35.942 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:35.942 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 23:09:35.942 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 1(Integer)
2025-07-01 23:09:35.944 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 1
2025-07-01 23:09:35.944 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==>  Preparing: select id from booksort where (upperName="无" and sortName=?) or upperName=?
2025-07-01 23:09:35.944 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:35.944 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select id from booksort where (upperName="无" and sortName=?) or upperName=? ::: DataSources: slave
2025-07-01 23:09:35.944 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==> Parameters: 文学(String), 文学(String)
2025-07-01 23:09:35.945 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - <==      Total: 4
2025-07-01 23:09:35.946 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBooksByFirst - ==>  Preparing: select * from book where id in (select t.bookId from (select * from booksortlist WHERE bookSortId in ( ? , ? , ? , ? ) ) as t ) limit ?,?
2025-07-01 23:09:35.946 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:35.946 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book
            where id in (select t.bookId from
                (select * from booksortlist
                     WHERE bookSortId in
                        (
                            ?
                        ,
                            ?
                        ,
                            ?
                        ,
                            ?
                        ) 
                )
        as t ) limit ?,? ::: DataSources: slave
2025-07-01 23:09:35.946 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBooksByFirst - ==> Parameters: 5(Integer), 6(Integer), 7(Integer), 1(Integer), 0(Integer), 10(Integer)
2025-07-01 23:09:35.949 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBooksByFirst - <==      Total: 2
2025-07-01 23:09:35.950 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==>  Preparing: select id from booksort where (upperName="无" and sortName=?) or upperName=?
2025-07-01 23:09:35.950 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:35.950 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select id from booksort where (upperName="无" and sortName=?) or upperName=? ::: DataSources: slave
2025-07-01 23:09:35.950 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==> Parameters: 文学(String), 文学(String)
2025-07-01 23:09:35.951 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - <==      Total: 4
2025-07-01 23:09:35.952 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getFirstBookCount - ==>  Preparing: select count(*) from book where id in (select bookId from booksortlist WHERE bookSortId in ( ? , ? , ? , ? ) )
2025-07-01 23:09:35.952 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:35.952 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select count(*) from book
        where id in (select bookId from booksortlist
         WHERE bookSortId in
            (
                ?
            ,
                ?
            ,
                ?
            ,
                ?
            ) 
        ) ::: DataSources: slave
2025-07-01 23:09:35.952 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getFirstBookCount - ==> Parameters: 5(Integer), 6(Integer), 7(Integer), 1(Integer)
2025-07-01 23:09:35.954 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getFirstBookCount - <==      Total: 1
2025-07-01 23:09:35.954 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:09:35.955 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:35.955 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:09:35.955 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 23:09:35.957 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:09:35.957 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:09:35.957 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:35.957 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:09:35.958 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 23:09:35.959 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:09:37.091 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 23:09:37.092 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:37.092 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 23:09:37.092 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 23:09:37.093 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 23:09:37.094 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:09:37.094 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:37.094 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:09:37.095 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 23:09:37.096 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 23:09:37.096 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-01 23:09:37.096 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:37.097 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-01 23:09:37.097 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:09:37.097 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:37.097 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:09:37.097 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 23:09:37.097 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 1(Integer)
2025-07-01 23:09:37.099 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:09:37.099 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-01 23:09:37.099 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:09:37.099 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.BookMapper.getBookImgSrcList - ==>  Preparing: select imgSrc from bookimg where isbn=?
2025-07-01 23:09:37.099 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:37.099 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? ::: DataSources: slave
2025-07-01 23:09:37.099 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:37.099 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:09:37.099 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.BookMapper.getBookImgSrcList - ==> Parameters: 9787020002207(String)
2025-07-01 23:09:37.100 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 23:09:37.102 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.BookMapper.getBookImgSrcList - <==      Total: 2
2025-07-01 23:09:37.102 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:09:37.102 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:09:37.102 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:09:37.102 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:37.102 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:37.102 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:09:37.102 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:09:37.102 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 23:09:37.102 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 23:09:37.103 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:09:37.103 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:09:37.104 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookSort - ==>  Preparing: select * from booksort where id in (select bookSortId from booksortlist where bookId=?)
2025-07-01 23:09:37.104 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:37.104 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where id in (select bookSortId from booksortlist where bookId=?) ::: DataSources: slave
2025-07-01 23:09:37.104 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookSort - ==> Parameters: 1(Integer)
2025-07-01 23:09:37.105 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookSort - <==      Total: 1
2025-07-01 23:09:37.106 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getBookSortId - ==>  Preparing: select id from booksort where upperName=? and sortName=?
2025-07-01 23:09:37.106 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:37.106 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select id from booksort where upperName=? and sortName=? ::: DataSources: slave
2025-07-01 23:09:37.107 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getBookSortId - ==> Parameters: 无(String), 文学(String)
2025-07-01 23:09:37.110 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getBookSortId - <==      Total: 1
2025-07-01 23:09:39.363 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 23:09:39.363 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:39.363 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 23:09:39.363 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 23:09:39.363 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:39.363 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 23:09:39.363 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 23:09:39.364 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 1(Integer)
2025-07-01 23:09:39.366 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 1
2025-07-01 23:09:39.367 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 23:09:39.367 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==>  Preparing: select id from booksort where (upperName="无" and sortName=?) or upperName=?
2025-07-01 23:09:39.367 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:39.367 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:09:39.367 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select id from booksort where (upperName="无" and sortName=?) or upperName=? ::: DataSources: slave
2025-07-01 23:09:39.367 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:39.367 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:09:39.367 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 23:09:39.367 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==> Parameters: 文学(String), 文学(String)
2025-07-01 23:09:39.369 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - <==      Total: 4
2025-07-01 23:09:39.369 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 23:09:39.369 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:09:39.369 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:39.369 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:09:39.369 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 23:09:39.369 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBooksByFirst - ==>  Preparing: select * from book where id in (select t.bookId from (select * from booksortlist WHERE bookSortId in ( ? , ? , ? , ? ) ) as t ) limit ?,?
2025-07-01 23:09:39.369 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:39.369 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book
            where id in (select t.bookId from
                (select * from booksortlist
                     WHERE bookSortId in
                        (
                            ?
                        ,
                            ?
                        ,
                            ?
                        ,
                            ?
                        ) 
                )
        as t ) limit ?,? ::: DataSources: slave
2025-07-01 23:09:39.369 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBooksByFirst - ==> Parameters: 5(Integer), 6(Integer), 7(Integer), 1(Integer), 0(Integer), 10(Integer)
2025-07-01 23:09:39.370 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:09:39.370 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:09:39.370 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:39.370 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:09:39.370 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBooksByFirst - <==      Total: 2
2025-07-01 23:09:39.371 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 23:09:39.371 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==>  Preparing: select id from booksort where (upperName="无" and sortName=?) or upperName=?
2025-07-01 23:09:39.371 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:39.371 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select id from booksort where (upperName="无" and sortName=?) or upperName=? ::: DataSources: slave
2025-07-01 23:09:39.372 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==> Parameters: 文学(String), 文学(String)
2025-07-01 23:09:39.372 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:09:39.373 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:09:39.373 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:39.373 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:09:39.373 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - <==      Total: 4
2025-07-01 23:09:39.373 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 23:09:39.374 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.BookMapper.getFirstBookCount - ==>  Preparing: select count(*) from book where id in (select bookId from booksortlist WHERE bookSortId in ( ? , ? , ? , ? ) )
2025-07-01 23:09:39.374 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:39.374 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select count(*) from book
        where id in (select bookId from booksortlist
         WHERE bookSortId in
            (
                ?
            ,
                ?
            ,
                ?
            ,
                ?
            ) 
        ) ::: DataSources: slave
2025-07-01 23:09:39.374 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.BookMapper.getFirstBookCount - ==> Parameters: 5(Integer), 6(Integer), 7(Integer), 1(Integer)
2025-07-01 23:09:39.374 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:09:39.375 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.BookMapper.getFirstBookCount - <==      Total: 1
2025-07-01 23:09:39.375 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:09:39.375 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:39.375 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:09:39.375 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 23:09:39.376 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:09:39.377 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:09:39.377 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:39.377 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:09:39.377 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 23:09:39.379 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:09:40.650 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 23:09:40.650 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:40.650 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 23:09:40.651 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 2(Integer)
2025-07-01 23:09:40.652 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 1
2025-07-01 23:09:40.652 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==>  Preparing: select id from booksort where (upperName="无" and sortName=?) or upperName=?
2025-07-01 23:09:40.652 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:40.652 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select id from booksort where (upperName="无" and sortName=?) or upperName=? ::: DataSources: slave
2025-07-01 23:09:40.653 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==> Parameters: 科技(String), 科技(String)
2025-07-01 23:09:40.654 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - <==      Total: 3
2025-07-01 23:09:40.655 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBooksByFirst - ==>  Preparing: select * from book where id in (select t.bookId from (select * from booksortlist WHERE bookSortId in ( ? , ? , ? ) ) as t ) limit ?,?
2025-07-01 23:09:40.655 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:40.655 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book
            where id in (select t.bookId from
                (select * from booksortlist
                     WHERE bookSortId in
                        (
                            ?
                        ,
                            ?
                        ,
                            ?
                        ) 
                )
        as t ) limit ?,? ::: DataSources: slave
2025-07-01 23:09:40.655 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBooksByFirst - ==> Parameters: 2(Integer), 8(Integer), 9(Integer), 0(Integer), 10(Integer)
2025-07-01 23:09:40.658 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBooksByFirst - <==      Total: 3
2025-07-01 23:09:40.658 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==>  Preparing: select id from booksort where (upperName="无" and sortName=?) or upperName=?
2025-07-01 23:09:40.658 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:40.658 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select id from booksort where (upperName="无" and sortName=?) or upperName=? ::: DataSources: slave
2025-07-01 23:09:40.659 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==> Parameters: 科技(String), 科技(String)
2025-07-01 23:09:40.660 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - <==      Total: 3
2025-07-01 23:09:40.661 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.BookMapper.getFirstBookCount - ==>  Preparing: select count(*) from book where id in (select bookId from booksortlist WHERE bookSortId in ( ? , ? , ? ) )
2025-07-01 23:09:40.661 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:40.661 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select count(*) from book
        where id in (select bookId from booksortlist
         WHERE bookSortId in
            (
                ?
            ,
                ?
            ,
                ?
            ) 
        ) ::: DataSources: slave
2025-07-01 23:09:40.661 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.BookMapper.getFirstBookCount - ==> Parameters: 2(Integer), 8(Integer), 9(Integer)
2025-07-01 23:09:40.663 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.BookMapper.getFirstBookCount - <==      Total: 1
2025-07-01 23:09:40.663 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:09:40.663 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:40.663 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:09:40.663 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 23:09:40.665 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:09:40.665 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:09:40.665 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:40.665 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:09:40.665 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 23:09:40.667 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:09:40.667 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:09:40.667 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:40.667 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:09:40.667 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 23:09:40.668 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:09:41.705 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 23:09:41.705 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:41.705 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 23:09:41.706 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 1(Integer)
2025-07-01 23:09:41.709 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 1
2025-07-01 23:09:41.709 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==>  Preparing: select id from booksort where (upperName="无" and sortName=?) or upperName=?
2025-07-01 23:09:41.709 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:41.709 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select id from booksort where (upperName="无" and sortName=?) or upperName=? ::: DataSources: slave
2025-07-01 23:09:41.709 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==> Parameters: 文学(String), 文学(String)
2025-07-01 23:09:41.711 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - <==      Total: 4
2025-07-01 23:09:41.715 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBooksByFirst - ==>  Preparing: select * from book where id in (select t.bookId from (select * from booksortlist WHERE bookSortId in ( ? , ? , ? , ? ) ) as t ) limit ?,?
2025-07-01 23:09:41.715 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:41.715 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book
            where id in (select t.bookId from
                (select * from booksortlist
                     WHERE bookSortId in
                        (
                            ?
                        ,
                            ?
                        ,
                            ?
                        ,
                            ?
                        ) 
                )
        as t ) limit ?,? ::: DataSources: slave
2025-07-01 23:09:41.716 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBooksByFirst - ==> Parameters: 5(Integer), 6(Integer), 7(Integer), 1(Integer), 0(Integer), 10(Integer)
2025-07-01 23:09:41.719 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBooksByFirst - <==      Total: 2
2025-07-01 23:09:41.722 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==>  Preparing: select id from booksort where (upperName="无" and sortName=?) or upperName=?
2025-07-01 23:09:41.722 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:41.722 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select id from booksort where (upperName="无" and sortName=?) or upperName=? ::: DataSources: slave
2025-07-01 23:09:41.723 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==> Parameters: 文学(String), 文学(String)
2025-07-01 23:09:41.724 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - <==      Total: 4
2025-07-01 23:09:41.728 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.BookMapper.getFirstBookCount - ==>  Preparing: select count(*) from book where id in (select bookId from booksortlist WHERE bookSortId in ( ? , ? , ? , ? ) )
2025-07-01 23:09:41.728 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:41.728 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select count(*) from book
        where id in (select bookId from booksortlist
         WHERE bookSortId in
            (
                ?
            ,
                ?
            ,
                ?
            ,
                ?
            ) 
        ) ::: DataSources: slave
2025-07-01 23:09:41.729 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.BookMapper.getFirstBookCount - ==> Parameters: 5(Integer), 6(Integer), 7(Integer), 1(Integer)
2025-07-01 23:09:41.731 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.BookMapper.getFirstBookCount - <==      Total: 1
2025-07-01 23:09:41.732 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:09:41.732 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:41.732 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:09:41.732 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 23:09:41.734 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:09:41.735 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:09:41.735 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:41.735 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:09:41.735 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 23:09:41.736 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:09:43.805 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-01 23:09:43.805 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:43.805 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-01 23:09:43.805 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-01 23:09:43.805 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:43.805 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:09:43.813 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:09:43.813 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 23:09:43.816 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-01 23:09:43.817 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-01 23:09:43.817 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:09:43.817 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:43.817 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:09:43.818 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:09:43.818 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-01 23:09:43.818 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:43.818 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-01 23:09:43.819 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-01 23:09:43.820 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:09:43.822 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-01 23:09:43.824 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 23:09:43.824 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:43.824 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 23:09:43.824 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 23:09:43.825 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-01 23:09:43.826 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:43.826 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-01 23:09:43.826 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-01 23:09:43.826 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 23:09:43.826 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:09:43.826 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:43.826 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:09:43.826 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:09:43.826 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:43.826 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:09:43.826 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 23:09:43.827 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:09:43.828 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 23:09:43.828 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:09:43.828 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-01 23:09:43.828 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:43.828 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:09:43.828 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 23:09:43.828 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:09:43.828 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:43.828 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:09:43.828 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:09:43.829 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:09:43.830 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:09:43.830 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:09:43.830 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:43.830 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:09:43.830 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 23:09:43.830 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:09:43.830 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:43.830 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:09:43.831 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:09:43.831 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 23:09:43.831 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:09:43.831 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:43.831 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:09:43.832 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:09:43.832 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:09:43.832 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:09:43.832 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:09:43.832 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:43.832 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:09:43.832 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:09:43.832 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:43.832 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:09:43.832 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 23:09:43.832 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:09:43.833 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 23:09:43.833 [http-nio-8080-exec-8] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-01 23:09:43.833 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 23:09:43.833 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:43.833 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 23:09:43.833 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-01 23:09:43.833 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:09:43.835 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:09:43.835 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:09:43.835 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:43.835 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:09:43.836 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 23:09:43.836 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-01 23:09:43.838 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:09:43.838 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:09:43.838 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:43.838 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:09:43.838 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 23:09:43.840 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:09:43.840 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:09:43.840 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:09:43.840 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:09:43.840 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 23:09:43.842 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:18:05.892 [http-nio-8080-exec-7] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-01 23:18:05.900 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 23:18:05.900 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 23:18:05.900 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:18:05.900 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-01 23:18:05.900 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-01 23:18:05.900 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-01 23:18:05.901 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:05.901 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:05.901 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:05.901 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:05.901 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:05.901 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:05.902 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:18:05.902 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-01 23:18:05.902 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 23:18:05.902 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-01 23:18:05.902 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:18:05.902 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 23:18:05.997 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 23:18:06.012 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-01 23:18:06.019 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-01 23:18:06.019 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:06.019 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-01 23:18:06.020 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:18:06.021 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:18:06.032 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:18:06.033 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:18:06.033 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:06.033 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:18:06.033 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-01 23:18:06.040 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-01 23:18:06.041 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:18:06.043 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:18:06.047 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-01 23:18:06.048 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:18:06.048 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:06.048 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:18:06.049 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:18:06.053 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:18:06.098 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 23:18:06.098 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-01 23:18:06.099 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-01 23:18:06.104 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-01 23:18:06.110 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-01 23:18:06.111 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:18:06.111 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:06.111 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:18:06.111 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:18:06.111 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 23:18:06.112 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:18:06.112 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:06.112 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:18:06.112 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 23:18:06.112 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:18:06.113 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:18:06.113 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:06.113 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:18:06.114 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 23:18:06.114 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 23:18:06.114 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:18:06.114 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:06.114 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:18:06.115 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 23:18:06.116 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:18:06.116 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:18:06.116 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:18:06.116 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:18:06.116 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:06.116 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:06.116 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:18:06.116 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:18:06.116 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 23:18:06.116 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 23:18:06.118 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:18:06.118 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:18:06.118 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:18:06.118 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:18:06.118 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:06.118 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:06.118 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:18:06.118 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:18:06.118 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 23:18:06.118 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 23:18:06.120 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:18:06.120 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:18:06.120 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:18:06.120 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:06.120 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:18:06.121 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 23:18:06.122 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:18:06.123 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:18:06.123 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:06.123 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:18:06.123 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 23:18:06.124 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:18:07.562 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 23:18:07.563 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:07.563 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 23:18:07.563 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 23:18:07.565 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 23:18:07.565 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:18:07.565 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:07.565 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:18:07.566 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 23:18:07.567 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 23:18:07.567 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:18:07.568 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:07.568 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:18:07.568 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 23:18:07.569 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:18:07.569 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:18:07.569 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:07.569 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:18:07.570 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 23:18:07.571 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:18:07.571 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:18:07.571 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:07.571 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:18:07.572 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 23:18:07.573 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:18:07.600 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-01 23:18:07.600 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:07.600 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-01 23:18:07.601 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 5(Integer)
2025-07-01 23:18:07.603 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-01 23:18:07.604 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.BookMapper.getBookImgSrcList - ==>  Preparing: select imgSrc from bookimg where isbn=?
2025-07-01 23:18:07.604 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:07.604 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? ::: DataSources: slave
2025-07-01 23:18:07.604 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.BookMapper.getBookImgSrcList - ==> Parameters: 9787020002214(String)
2025-07-01 23:18:07.605 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.BookMapper.getBookImgSrcList - <==      Total: 1
2025-07-01 23:18:07.606 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:18:07.606 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:07.606 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:18:07.606 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 23:18:07.608 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:18:07.609 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookSort - ==>  Preparing: select * from booksort where id in (select bookSortId from booksortlist where bookId=?)
2025-07-01 23:18:07.609 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:07.609 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where id in (select bookSortId from booksortlist where bookId=?) ::: DataSources: slave
2025-07-01 23:18:07.609 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookSort - ==> Parameters: 5(Integer)
2025-07-01 23:18:07.611 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookSort - <==      Total: 1
2025-07-01 23:18:07.611 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getBookSortId - ==>  Preparing: select id from booksort where upperName=? and sortName=?
2025-07-01 23:18:07.611 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:07.611 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select id from booksort where upperName=? and sortName=? ::: DataSources: slave
2025-07-01 23:18:07.612 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getBookSortId - ==> Parameters: 无(String), 文学(String)
2025-07-01 23:18:07.613 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getBookSortId - <==      Total: 1
2025-07-01 23:18:09.233 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-01 23:18:09.234 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:09.234 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-01 23:18:09.234 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-01 23:18:09.236 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-01 23:18:09.236 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:09.236 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-01 23:18:09.237 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 23:18:09.238 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-01 23:18:09.238 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-01 23:18:09.238 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-01 23:18:09.239 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:09.238 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:18:09.239 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:09.239 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:18:09.239 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:18:09.239 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-01 23:18:09.239 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-01 23:18:09.240 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:18:09.241 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:18:09.241 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:09.241 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:18:09.241 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 23:18:09.242 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-01 23:18:09.242 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:18:09.242 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:18:09.242 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:09.242 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:18:09.242 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 23:18:09.243 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:18:09.246 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:18:09.246 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:09.246 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:18:09.246 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 23:18:09.250 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:18:09.250 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:18:09.250 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:09.250 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:18:09.250 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:18:09.250 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:09.250 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:18:09.250 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:18:09.250 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 23:18:09.252 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:18:09.252 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:18:09.252 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:18:09.252 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:09.252 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:18:09.252 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 23:18:09.252 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:18:09.253 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:09.253 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:18:09.253 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:18:09.253 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:18:09.256 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:18:09.261 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 23:18:09.261 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:09.261 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 23:18:09.261 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 23:18:09.264 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 23:18:09.264 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:18:09.264 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:09.264 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:18:09.264 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 23:18:09.266 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 23:18:09.266 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:18:09.266 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:09.266 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:18:09.266 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 23:18:09.267 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-01 23:18:09.268 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:09.268 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:18:09.268 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:18:09.268 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:18:09.268 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:18:09.268 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:09.268 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:18:09.269 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 23:18:09.270 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-01 23:18:09.270 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:18:09.270 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:18:09.270 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:09.270 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:18:09.270 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:18:09.270 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:18:09.271 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:09.271 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:18:09.272 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 23:18:09.272 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:18:09.273 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:18:09.276 [http-nio-8080-exec-5] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-01 23:18:09.277 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 23:18:09.277 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:09.277 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 23:18:09.277 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-01 23:18:09.278 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-01 23:18:10.245 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 23:18:10.245 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:10.245 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 23:18:10.245 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 23:18:10.248 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 23:18:10.248 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:18:10.248 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:10.248 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:18:10.248 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 23:18:10.249 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 23:18:10.249 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:18:10.249 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:10.249 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:18:10.249 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 23:18:10.250 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:18:10.251 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:18:10.251 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:10.251 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:18:10.251 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 23:18:10.253 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:18:10.253 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:18:10.253 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:10.253 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:18:10.253 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 23:18:10.254 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:18:10.297 [http-nio-8080-exec-10] ERROR com.huang.store.exception.GlobalExceptionHandler - 运行时异常
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.NumberFormatException: For input string: "undefined"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.valueOf(Integer.java:999)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:729)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125)
	... 107 common frames omitted
2025-07-01 23:18:10.309 [http-nio-8080-exec-10] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2025-07-01 23:18:11.661 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 23:18:11.661 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:11.661 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 23:18:11.662 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 2(Integer)
2025-07-01 23:18:11.663 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 1
2025-07-01 23:18:11.664 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==>  Preparing: select id from booksort where (upperName="无" and sortName=?) or upperName=?
2025-07-01 23:18:11.664 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:11.664 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select id from booksort where (upperName="无" and sortName=?) or upperName=? ::: DataSources: slave
2025-07-01 23:18:11.666 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==> Parameters: 科技(String), 科技(String)
2025-07-01 23:18:11.668 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - <==      Total: 3
2025-07-01 23:18:11.673 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBooksByFirst - ==>  Preparing: select * from book where id in (select t.bookId from (select * from booksortlist WHERE bookSortId in ( ? , ? , ? ) ) as t ) limit ?,?
2025-07-01 23:18:11.674 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:11.674 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book
            where id in (select t.bookId from
                (select * from booksortlist
                     WHERE bookSortId in
                        (
                            ?
                        ,
                            ?
                        ,
                            ?
                        ) 
                )
        as t ) limit ?,? ::: DataSources: slave
2025-07-01 23:18:11.674 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBooksByFirst - ==> Parameters: 2(Integer), 8(Integer), 9(Integer), 0(Integer), 10(Integer)
2025-07-01 23:18:11.676 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBooksByFirst - <==      Total: 3
2025-07-01 23:18:11.677 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==>  Preparing: select id from booksort where (upperName="无" and sortName=?) or upperName=?
2025-07-01 23:18:11.677 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:11.677 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select id from booksort where (upperName="无" and sortName=?) or upperName=? ::: DataSources: slave
2025-07-01 23:18:11.677 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==> Parameters: 科技(String), 科技(String)
2025-07-01 23:18:11.679 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - <==      Total: 3
2025-07-01 23:18:11.680 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.BookMapper.getFirstBookCount - ==>  Preparing: select count(*) from book where id in (select bookId from booksortlist WHERE bookSortId in ( ? , ? , ? ) )
2025-07-01 23:18:11.680 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:11.680 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select count(*) from book
        where id in (select bookId from booksortlist
         WHERE bookSortId in
            (
                ?
            ,
                ?
            ,
                ?
            ) 
        ) ::: DataSources: slave
2025-07-01 23:18:11.681 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.BookMapper.getFirstBookCount - ==> Parameters: 2(Integer), 8(Integer), 9(Integer)
2025-07-01 23:18:11.681 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.BookMapper.getFirstBookCount - <==      Total: 1
2025-07-01 23:18:11.681 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:18:11.681 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:11.681 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:18:11.681 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 23:18:11.682 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:18:11.682 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:18:11.682 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:11.682 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:18:11.682 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 23:18:11.683 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:18:11.684 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:18:11.684 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:11.684 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:18:11.684 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 23:18:11.687 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:18:13.769 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 23:18:13.770 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:13.770 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 23:18:13.770 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 1(Integer)
2025-07-01 23:18:13.771 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 1
2025-07-01 23:18:13.771 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==>  Preparing: select id from booksort where (upperName="无" and sortName=?) or upperName=?
2025-07-01 23:18:13.771 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:13.772 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select id from booksort where (upperName="无" and sortName=?) or upperName=? ::: DataSources: slave
2025-07-01 23:18:13.772 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==> Parameters: 文学(String), 文学(String)
2025-07-01 23:18:13.773 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - <==      Total: 4
2025-07-01 23:18:13.774 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBooksByFirst - ==>  Preparing: select * from book where id in (select t.bookId from (select * from booksortlist WHERE bookSortId in ( ? , ? , ? , ? ) ) as t ) limit ?,?
2025-07-01 23:18:13.774 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:13.774 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book
            where id in (select t.bookId from
                (select * from booksortlist
                     WHERE bookSortId in
                        (
                            ?
                        ,
                            ?
                        ,
                            ?
                        ,
                            ?
                        ) 
                )
        as t ) limit ?,? ::: DataSources: slave
2025-07-01 23:18:13.776 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBooksByFirst - ==> Parameters: 5(Integer), 6(Integer), 7(Integer), 1(Integer), 0(Integer), 10(Integer)
2025-07-01 23:18:13.779 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBooksByFirst - <==      Total: 2
2025-07-01 23:18:13.780 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==>  Preparing: select id from booksort where (upperName="无" and sortName=?) or upperName=?
2025-07-01 23:18:13.780 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:13.781 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select id from booksort where (upperName="无" and sortName=?) or upperName=? ::: DataSources: slave
2025-07-01 23:18:13.781 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==> Parameters: 文学(String), 文学(String)
2025-07-01 23:18:13.783 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - <==      Total: 4
2025-07-01 23:18:13.784 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.BookMapper.getFirstBookCount - ==>  Preparing: select count(*) from book where id in (select bookId from booksortlist WHERE bookSortId in ( ? , ? , ? , ? ) )
2025-07-01 23:18:13.785 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:13.785 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select count(*) from book
        where id in (select bookId from booksortlist
         WHERE bookSortId in
            (
                ?
            ,
                ?
            ,
                ?
            ,
                ?
            ) 
        ) ::: DataSources: slave
2025-07-01 23:18:13.785 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.BookMapper.getFirstBookCount - ==> Parameters: 5(Integer), 6(Integer), 7(Integer), 1(Integer)
2025-07-01 23:18:13.786 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.BookMapper.getFirstBookCount - <==      Total: 1
2025-07-01 23:18:13.787 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:18:13.787 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:13.787 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:18:13.787 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 23:18:13.789 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:18:13.790 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:18:13.791 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:13.791 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:18:13.791 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 23:18:13.793 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:18:17.252 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 23:18:17.252 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:17.252 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 23:18:17.253 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 2(Integer)
2025-07-01 23:18:17.255 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 1
2025-07-01 23:18:17.255 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==>  Preparing: select id from booksort where (upperName="无" and sortName=?) or upperName=?
2025-07-01 23:18:17.255 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:17.255 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select id from booksort where (upperName="无" and sortName=?) or upperName=? ::: DataSources: slave
2025-07-01 23:18:17.255 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==> Parameters: 科技(String), 科技(String)
2025-07-01 23:18:17.258 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - <==      Total: 3
2025-07-01 23:18:17.258 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBooksByFirst - ==>  Preparing: select * from book where id in (select t.bookId from (select * from booksortlist WHERE bookSortId in ( ? , ? , ? ) ) as t ) limit ?,?
2025-07-01 23:18:17.258 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:17.259 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book
            where id in (select t.bookId from
                (select * from booksortlist
                     WHERE bookSortId in
                        (
                            ?
                        ,
                            ?
                        ,
                            ?
                        ) 
                )
        as t ) limit ?,? ::: DataSources: slave
2025-07-01 23:18:17.259 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBooksByFirst - ==> Parameters: 2(Integer), 8(Integer), 9(Integer), 0(Integer), 10(Integer)
2025-07-01 23:18:17.261 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBooksByFirst - <==      Total: 3
2025-07-01 23:18:17.261 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==>  Preparing: select id from booksort where (upperName="无" and sortName=?) or upperName=?
2025-07-01 23:18:17.261 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:17.261 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select id from booksort where (upperName="无" and sortName=?) or upperName=? ::: DataSources: slave
2025-07-01 23:18:17.262 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==> Parameters: 科技(String), 科技(String)
2025-07-01 23:18:17.263 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - <==      Total: 3
2025-07-01 23:18:17.264 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.BookMapper.getFirstBookCount - ==>  Preparing: select count(*) from book where id in (select bookId from booksortlist WHERE bookSortId in ( ? , ? , ? ) )
2025-07-01 23:18:17.264 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:17.264 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select count(*) from book
        where id in (select bookId from booksortlist
         WHERE bookSortId in
            (
                ?
            ,
                ?
            ,
                ?
            ) 
        ) ::: DataSources: slave
2025-07-01 23:18:17.264 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.BookMapper.getFirstBookCount - ==> Parameters: 2(Integer), 8(Integer), 9(Integer)
2025-07-01 23:18:17.265 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.BookMapper.getFirstBookCount - <==      Total: 1
2025-07-01 23:18:17.266 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:18:17.266 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:17.266 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:18:17.266 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 23:18:17.267 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:18:17.267 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:18:17.267 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:17.267 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:18:17.267 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 23:18:17.269 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:18:17.269 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:18:17.269 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:17.269 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:18:17.270 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 23:18:17.271 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:18:18.182 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 23:18:18.182 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:18.182 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 23:18:18.182 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 1(Integer)
2025-07-01 23:18:18.183 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 1
2025-07-01 23:18:18.184 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==>  Preparing: select id from booksort where (upperName="无" and sortName=?) or upperName=?
2025-07-01 23:18:18.184 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:18.184 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select id from booksort where (upperName="无" and sortName=?) or upperName=? ::: DataSources: slave
2025-07-01 23:18:18.185 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==> Parameters: 文学(String), 文学(String)
2025-07-01 23:18:18.186 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - <==      Total: 4
2025-07-01 23:18:18.186 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBooksByFirst - ==>  Preparing: select * from book where id in (select t.bookId from (select * from booksortlist WHERE bookSortId in ( ? , ? , ? , ? ) ) as t ) limit ?,?
2025-07-01 23:18:18.187 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:18.187 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book
            where id in (select t.bookId from
                (select * from booksortlist
                     WHERE bookSortId in
                        (
                            ?
                        ,
                            ?
                        ,
                            ?
                        ,
                            ?
                        ) 
                )
        as t ) limit ?,? ::: DataSources: slave
2025-07-01 23:18:18.187 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBooksByFirst - ==> Parameters: 5(Integer), 6(Integer), 7(Integer), 1(Integer), 0(Integer), 10(Integer)
2025-07-01 23:18:18.188 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBooksByFirst - <==      Total: 2
2025-07-01 23:18:18.189 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==>  Preparing: select id from booksort where (upperName="无" and sortName=?) or upperName=?
2025-07-01 23:18:18.189 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:18.189 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select id from booksort where (upperName="无" and sortName=?) or upperName=? ::: DataSources: slave
2025-07-01 23:18:18.189 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==> Parameters: 文学(String), 文学(String)
2025-07-01 23:18:18.191 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - <==      Total: 4
2025-07-01 23:18:18.192 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.BookMapper.getFirstBookCount - ==>  Preparing: select count(*) from book where id in (select bookId from booksortlist WHERE bookSortId in ( ? , ? , ? , ? ) )
2025-07-01 23:18:18.192 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:18.192 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select count(*) from book
        where id in (select bookId from booksortlist
         WHERE bookSortId in
            (
                ?
            ,
                ?
            ,
                ?
            ,
                ?
            ) 
        ) ::: DataSources: slave
2025-07-01 23:18:18.192 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.BookMapper.getFirstBookCount - ==> Parameters: 5(Integer), 6(Integer), 7(Integer), 1(Integer)
2025-07-01 23:18:18.194 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.BookMapper.getFirstBookCount - <==      Total: 1
2025-07-01 23:18:18.194 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:18:18.194 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:18.194 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:18:18.194 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 23:18:18.195 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:18:18.196 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:18:18.196 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:18.196 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:18:18.196 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 23:18:18.197 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:18:58.698 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-01 23:18:58.698 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:58.698 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-01 23:18:58.699 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 23:18:58.701 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-01 23:18:58.701 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-01 23:18:58.701 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:58.701 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-01 23:18:58.701 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-01 23:18:58.701 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:58.701 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-01 23:18:58.701 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-01 23:18:58.701 [http-nio-8080-exec-5] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-01 23:18:58.701 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-01 23:18:58.701 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 23:18:58.701 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:58.701 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 23:18:58.701 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-01 23:18:58.701 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-01 23:18:58.702 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-01 23:18:58.704 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-01 23:18:58.705 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:18:58.705 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:58.705 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:18:58.706 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:18:58.707 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:18:58.707 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 23:18:58.707 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:58.707 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 23:18:58.708 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:18:58.708 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:58.708 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:18:58.708 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:18:58.708 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:58.708 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:18:58.708 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 23:18:58.708 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 23:18:58.709 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:18:58.710 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 23:18:58.710 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:18:58.710 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:18:58.710 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:58.710 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:18:58.710 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:18:58.710 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:58.710 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:18:58.710 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 23:18:58.710 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 23:18:58.711 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:18:58.712 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 23:18:58.712 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:18:58.712 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:58.712 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:18:58.712 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:18:58.712 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:58.712 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:18:58.712 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 23:18:58.713 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:18:58.713 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:18:58.713 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:18:58.713 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:58.713 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:18:58.713 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:18:58.714 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 23:18:58.714 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:18:58.714 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:58.714 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:18:58.714 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:18:58.714 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 23:18:58.715 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:18:58.715 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:18:58.715 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:58.715 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:18:58.715 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:18:58.715 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 23:18:58.715 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:18:58.715 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:58.715 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:18:58.715 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 23:18:58.716 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:18:58.716 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:18:58.716 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:18:58.716 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:58.716 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:18:58.717 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 23:18:58.718 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:18:58.718 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-01 23:18:58.718 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:58.718 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:18:58.718 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:18:58.720 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-01 23:18:58.721 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:18:58.721 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:18:58.721 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:18:58.721 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:18:58.722 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:19:01.470 [http-nio-8080-exec-2] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-01 23:19:01.470 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:19:01.470 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-01 23:19:01.473 [http-nio-8080-exec-2] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-01 23:19:01.499 [http-nio-8080-exec-2] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 6
2025-07-01 23:19:01.522 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 23:19:01.522 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:19:01.522 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 23:19:01.550 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 4(Long)
2025-07-01 23:19:01.569 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 1
2025-07-01 23:19:01.572 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-01 23:19:01.572 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:19:01.572 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-01 23:19:01.573 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 1(Integer)
2025-07-01 23:19:01.577 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-01 23:19:01.578 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:19:01.578 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:19:01.578 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:19:01.578 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 23:19:01.580 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:19:01.597 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 23:19:01.597 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:19:01.597 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 23:19:01.597 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 5(Long)
2025-07-01 23:19:01.600 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-01 23:19:01.600 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-01 23:19:01.600 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:19:01.600 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-01 23:19:01.601 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 6(Long)
2025-07-01 23:19:01.604 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-01 23:19:06.635 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-01 23:19:06.636 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:19:06.636 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-01 23:19:06.636 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-01 23:19:06.636 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-01 23:19:06.636 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:19:06.636 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:19:06.637 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:19:06.639 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-01 23:19:06.639 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:19:06.639 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:19:06.639 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:19:06.640 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:19:06.642 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:19:06.647 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-01 23:19:06.647 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-01 23:19:06.647 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:19:06.647 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-01 23:19:06.648 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-01 23:19:06.650 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-01 23:19:06.652 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-01 23:19:06.653 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:19:06.653 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-01 23:19:06.653 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-01 23:19:06.655 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-01 23:19:06.657 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:19:06.657 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:19:06.657 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:19:06.657 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:19:06.658 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-01 23:19:06.658 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:19:06.658 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-01 23:19:06.658 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:19:06.658 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-01 23:19:06.659 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:19:06.659 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:19:06.659 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:19:06.659 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-01 23:19:06.659 [http-nio-8080-exec-10] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-01 23:19:06.659 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-01 23:19:06.659 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:19:06.659 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-01 23:19:06.659 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-01 23:19:06.659 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:19:06.652 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:19:06.660 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:19:06.660 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:19:06.660 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:19:06.660 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-01 23:19:06.660 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-01 23:19:06.661 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-01 23:19:06.662 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:19:06.662 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:19:06.662 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:19:06.662 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:19:06.662 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:19:06.662 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:19:06.663 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:19:06.663 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-01 23:19:06.663 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-01 23:19:06.661 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:19:06.664 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:19:06.664 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:19:06.665 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-01 23:19:06.665 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:19:06.665 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:19:06.665 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:19:06.665 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:19:06.665 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:19:06.665 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:19:06.665 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-01 23:19:06.665 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-01 23:19:06.665 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:19:06.666 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:19:06.666 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:19:06.666 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-01 23:19:06.667 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:19:06.667 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-01 23:19:06.667 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:19:06.667 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-01 23:19:06.667 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:19:06.667 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-01 23:19:06.667 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:19:06.667 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-01 23:19:06.667 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:19:06.667 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-01 23:19:06.667 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:19:06.667 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-01 23:19:06.668 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-01 23:19:06.668 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-01 23:19:06.669 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:19:06.669 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-01 23:19:06.669 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-01 23:19:06.669 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-01 23:19:06.672 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-01 23:19:06.674 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-01 23:19:56.047 [lettuce-eventExecutorLoop-1-4] INFO  io.lettuce.core.protocol.ConnectionWatchdog - Reconnecting, last destination was /127.0.0.1:6380
2025-07-01 23:19:56.103 [lettuce-nioEventLoop-4-2] WARN  io.lettuce.core.protocol.ConnectionWatchdog - Cannot reconnect to [127.0.0.1/<unresolved>:6380]: 你的主机中的软件中止了一个已建立的连接。
java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at java.base/sun.nio.ch.SocketDispatcher.read0(Native Method)
	at java.base/sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:46)
	at java.base/sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:330)
	at java.base/sun.nio.ch.IOUtil.read(IOUtil.java:284)
	at java.base/sun.nio.ch.IOUtil.read(IOUtil.java:259)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:417)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:254)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2025-07-01 23:20:02.245 [lettuce-eventExecutorLoop-1-2] INFO  io.lettuce.core.protocol.ConnectionWatchdog - Reconnecting, last destination was 127.0.0.1/<unresolved>:6380
2025-07-01 23:20:02.247 [lettuce-nioEventLoop-4-1] WARN  io.lettuce.core.protocol.ConnectionWatchdog - Cannot reconnect to [127.0.0.1/<unresolved>:6380]: Connection refused: no further information: /127.0.0.1:6380
2025-07-01 23:20:02.688 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-01 23:20:02.692 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-01 23:20:02.692 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-01 23:20:02.693 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
