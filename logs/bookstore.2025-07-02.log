2025-07-02 16:31:53.091 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-02 16:31:53.112 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 27492 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 16:31:53.113 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 16:31:53.114 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 16:31:53.284 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-02 16:31:53.284 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-02 16:31:54.230 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 16:31:54.236 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 16:31:54.288 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 26 ms. Found 0 Redis repository interfaces.
2025-07-02 16:31:54.697 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$f326605f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 16:31:54.718 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 16:31:55.647 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 16:31:55.649 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 16:31:55.649 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 16:31:55.650 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 16:31:55.657 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 16:31:55.668 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 16:31:55.671 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 16:31:55.672 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 16:31:55.754 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 16:31:55.754 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2469 ms
2025-07-02 16:31:55.761 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 16:31:56.799 [restartedMain] ERROR com.alibaba.druid.pool.DruidDataSource - init datasource error, url: jdbc:mysql://localhost:3306/bookstore?characterEncoding=utf-8
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:118)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:33)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:232)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1706)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1801)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:938)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1462)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1458)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:83)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.getDatabaseType(AbstractDataSourceAdapter.java:75)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.getDatabaseType(AbstractDataSourceAdapter.java:64)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.<init>(AbstractDataSourceAdapter.java:56)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.datasource.MasterSlaveDataSource.<init>(MasterSlaveDataSource.java:53)
	at org.apache.shardingsphere.shardingjdbc.api.MasterSlaveDataSourceFactory.createDataSource(MasterSlaveDataSourceFactory.java:49)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration.dataSource(SpringBootConfiguration.java:90)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$4e9804e7.CGLIB$dataSource$0(<generated>)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$4e9804e7$$FastClassBySpringCGLIB$$fc43404b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$4e9804e7.dataSource(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:536)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:405)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4904)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2025-07-02 16:31:56.809 [restartedMain] ERROR com.alibaba.druid.pool.DruidDataSource - {dataSource-1} init error
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:118)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:33)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:232)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1706)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1801)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:938)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1462)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1458)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:83)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.getDatabaseType(AbstractDataSourceAdapter.java:75)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.getDatabaseType(AbstractDataSourceAdapter.java:64)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.<init>(AbstractDataSourceAdapter.java:56)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.datasource.MasterSlaveDataSource.<init>(MasterSlaveDataSource.java:53)
	at org.apache.shardingsphere.shardingjdbc.api.MasterSlaveDataSourceFactory.createDataSource(MasterSlaveDataSourceFactory.java:49)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration.dataSource(SpringBootConfiguration.java:90)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$4e9804e7.CGLIB$dataSource$0(<generated>)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$4e9804e7$$FastClassBySpringCGLIB$$fc43404b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$4e9804e7.dataSource(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:536)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:405)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4904)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2025-07-02 16:31:56.812 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-02 16:31:56.817 [restartedMain] ERROR o.s.boot.web.embedded.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'myUserDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [E:\Personal\Homework\SE\bookstore-server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
2025-07-02 16:31:56.835 [Druid-ConnectionPool-Create-747038076] ERROR com.alibaba.druid.pool.DruidDataSource - create connection SQLException, url: jdbc:mysql://localhost:3306/bookstore?characterEncoding=utf-8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:118)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:33)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:232)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1706)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1801)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2946)
2025-07-02 16:31:56.855 [Druid-ConnectionPool-Create-747038076] ERROR com.alibaba.druid.pool.DruidDataSource - create connection SQLException, url: jdbc:mysql://localhost:3306/bookstore?characterEncoding=utf-8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:118)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:33)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:232)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1706)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1801)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2946)
2025-07-02 16:31:56.856 [Druid-ConnectionPool-Create-747038076] INFO  com.alibaba.druid.pool.DruidAbstractDataSource - {dataSource-1} failContinuous is true
2025-07-02 16:31:56.865 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-02 16:31:56.873 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-747038076] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2969)
2025-07-02 16:31:56.873 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-747038076] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 16:31:56.876 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2025-07-02 16:31:56.887 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-02 16:31:56.915 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:165)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:142)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	... 11 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'myUserDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [E:\Personal\Homework\SE\bookstore-server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:405)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4904)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	... 16 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [E:\Personal\Homework\SE\bookstore-server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 67 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [E:\Personal\Homework\SE\bookstore-server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 81 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [E:\Personal\Homework\SE\bookstore-server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1534)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 95 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:536)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	... 106 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 119 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 133 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:118)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:33)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:232)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1706)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1801)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:938)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1462)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1458)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:83)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.getDatabaseType(AbstractDataSourceAdapter.java:75)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.getDatabaseType(AbstractDataSourceAdapter.java:64)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.<init>(AbstractDataSourceAdapter.java:56)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.datasource.MasterSlaveDataSource.<init>(MasterSlaveDataSource.java:53)
	at org.apache.shardingsphere.shardingjdbc.api.MasterSlaveDataSourceFactory.createDataSource(MasterSlaveDataSourceFactory.java:49)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration.dataSource(SpringBootConfiguration.java:90)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$4e9804e7.CGLIB$dataSource$0(<generated>)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$4e9804e7$$FastClassBySpringCGLIB$$fc43404b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$4e9804e7.dataSource(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 134 common frames omitted
2025-07-02 16:38:01.930 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-02 16:38:01.951 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 9576 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 16:38:01.951 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 16:38:01.952 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 16:38:02.155 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-02 16:38:02.155 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-02 16:38:02.860 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 16:38:02.863 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 16:38:02.896 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
2025-07-02 16:38:03.199 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$f8cb07bf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 16:38:03.215 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 16:38:03.701 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 16:38:03.702 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 16:38:03.703 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 16:38:03.704 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 16:38:03.730 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 16:38:03.739 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 16:38:03.742 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 16:38:03.743 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 16:38:03.818 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 16:38:03.819 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1662 ms
2025-07-02 16:38:03.826 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 16:38:04.771 [restartedMain] ERROR com.alibaba.druid.pool.DruidDataSource - init datasource error, url: jdbc:mysql://localhost:3306/bookstore?characterEncoding=utf-8
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:118)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:33)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:232)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1706)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1801)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:938)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1462)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1458)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:83)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.getDatabaseType(AbstractDataSourceAdapter.java:75)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.getDatabaseType(AbstractDataSourceAdapter.java:64)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.<init>(AbstractDataSourceAdapter.java:56)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.datasource.MasterSlaveDataSource.<init>(MasterSlaveDataSource.java:53)
	at org.apache.shardingsphere.shardingjdbc.api.MasterSlaveDataSourceFactory.createDataSource(MasterSlaveDataSourceFactory.java:49)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration.dataSource(SpringBootConfiguration.java:90)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$543cac47.CGLIB$dataSource$0(<generated>)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$543cac47$$FastClassBySpringCGLIB$$3c4ae559.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$543cac47.dataSource(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:536)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:405)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4904)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2025-07-02 16:38:04.777 [restartedMain] ERROR com.alibaba.druid.pool.DruidDataSource - {dataSource-1} init error
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:118)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:33)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:232)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1706)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1801)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:938)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1462)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1458)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:83)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.getDatabaseType(AbstractDataSourceAdapter.java:75)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.getDatabaseType(AbstractDataSourceAdapter.java:64)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.<init>(AbstractDataSourceAdapter.java:56)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.datasource.MasterSlaveDataSource.<init>(MasterSlaveDataSource.java:53)
	at org.apache.shardingsphere.shardingjdbc.api.MasterSlaveDataSourceFactory.createDataSource(MasterSlaveDataSourceFactory.java:49)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration.dataSource(SpringBootConfiguration.java:90)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$543cac47.CGLIB$dataSource$0(<generated>)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$543cac47$$FastClassBySpringCGLIB$$3c4ae559.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$543cac47.dataSource(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:536)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:405)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4904)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2025-07-02 16:38:04.781 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-02 16:38:04.785 [restartedMain] ERROR o.s.boot.web.embedded.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'myUserDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [E:\Personal\Homework\SE\bookstore-server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
2025-07-02 16:38:04.798 [Druid-ConnectionPool-Create-1527736109] ERROR com.alibaba.druid.pool.DruidDataSource - create connection SQLException, url: jdbc:mysql://localhost:3306/bookstore?characterEncoding=utf-8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:118)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:33)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:232)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1706)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1801)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2946)
2025-07-02 16:38:04.816 [Druid-ConnectionPool-Create-1527736109] ERROR com.alibaba.druid.pool.DruidDataSource - create connection SQLException, url: jdbc:mysql://localhost:3306/bookstore?characterEncoding=utf-8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:118)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:33)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:232)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1706)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1801)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2946)
2025-07-02 16:38:04.817 [Druid-ConnectionPool-Create-1527736109] INFO  com.alibaba.druid.pool.DruidAbstractDataSource - {dataSource-1} failContinuous is true
2025-07-02 16:38:04.823 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-02 16:38:04.829 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1527736109] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2969)
2025-07-02 16:38:04.830 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1527736109] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 16:38:04.831 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2025-07-02 16:38:04.842 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-02 16:38:04.861 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:165)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:142)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	... 11 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'myUserDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [E:\Personal\Homework\SE\bookstore-server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:405)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4904)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	... 16 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [E:\Personal\Homework\SE\bookstore-server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 67 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [E:\Personal\Homework\SE\bookstore-server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 81 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [E:\Personal\Homework\SE\bookstore-server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1534)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 95 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:536)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	... 106 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 119 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 133 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:118)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:33)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:232)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1706)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1801)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:938)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1462)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1458)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:83)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.getDatabaseType(AbstractDataSourceAdapter.java:75)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.getDatabaseType(AbstractDataSourceAdapter.java:64)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.<init>(AbstractDataSourceAdapter.java:56)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.datasource.MasterSlaveDataSource.<init>(MasterSlaveDataSource.java:53)
	at org.apache.shardingsphere.shardingjdbc.api.MasterSlaveDataSourceFactory.createDataSource(MasterSlaveDataSourceFactory.java:49)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration.dataSource(SpringBootConfiguration.java:90)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$543cac47.CGLIB$dataSource$0(<generated>)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$543cac47$$FastClassBySpringCGLIB$$3c4ae559.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$543cac47.dataSource(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 134 common frames omitted
2025-07-02 16:38:35.093 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-02 16:38:35.116 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 10892 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 16:38:35.116 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 16:38:35.117 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 16:38:35.279 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-02 16:38:35.279 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-02 16:38:35.932 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 16:38:35.935 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 16:38:35.966 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
2025-07-02 16:38:36.252 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$72340cce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 16:38:36.267 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 16:38:36.678 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 16:38:36.680 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 16:38:36.680 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 16:38:36.680 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 16:38:36.685 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 16:38:36.692 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 16:38:36.695 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 16:38:36.695 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 16:38:36.758 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 16:38:36.759 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1479 ms
2025-07-02 16:38:36.765 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 16:38:37.541 [restartedMain] ERROR com.alibaba.druid.pool.DruidDataSource - init datasource error, url: jdbc:mysql://localhost:3306/bookstore?characterEncoding=utf-8
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:118)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:33)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:232)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1706)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1801)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:938)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1462)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1458)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:83)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.getDatabaseType(AbstractDataSourceAdapter.java:75)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.getDatabaseType(AbstractDataSourceAdapter.java:64)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.<init>(AbstractDataSourceAdapter.java:56)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.datasource.MasterSlaveDataSource.<init>(MasterSlaveDataSource.java:53)
	at org.apache.shardingsphere.shardingjdbc.api.MasterSlaveDataSourceFactory.createDataSource(MasterSlaveDataSourceFactory.java:49)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration.dataSource(SpringBootConfiguration.java:90)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$cda5b156.CGLIB$dataSource$0(<generated>)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$cda5b156$$FastClassBySpringCGLIB$$1de27dca.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$cda5b156.dataSource(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:536)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:405)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4904)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2025-07-02 16:38:37.547 [restartedMain] ERROR com.alibaba.druid.pool.DruidDataSource - {dataSource-1} init error
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:118)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:33)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:232)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1706)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1801)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:938)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1462)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1458)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:83)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.getDatabaseType(AbstractDataSourceAdapter.java:75)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.getDatabaseType(AbstractDataSourceAdapter.java:64)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.<init>(AbstractDataSourceAdapter.java:56)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.datasource.MasterSlaveDataSource.<init>(MasterSlaveDataSource.java:53)
	at org.apache.shardingsphere.shardingjdbc.api.MasterSlaveDataSourceFactory.createDataSource(MasterSlaveDataSourceFactory.java:49)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration.dataSource(SpringBootConfiguration.java:90)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$cda5b156.CGLIB$dataSource$0(<generated>)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$cda5b156$$FastClassBySpringCGLIB$$1de27dca.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$cda5b156.dataSource(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:536)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:405)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4904)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2025-07-02 16:38:37.550 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-02 16:38:37.553 [restartedMain] ERROR o.s.boot.web.embedded.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'myUserDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [E:\Personal\Homework\SE\bookstore-server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
2025-07-02 16:38:37.566 [Druid-ConnectionPool-Create-1448374330] ERROR com.alibaba.druid.pool.DruidDataSource - create connection SQLException, url: jdbc:mysql://localhost:3306/bookstore?characterEncoding=utf-8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:118)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:33)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:232)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1706)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1801)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2946)
2025-07-02 16:38:37.584 [Druid-ConnectionPool-Create-1448374330] ERROR com.alibaba.druid.pool.DruidDataSource - create connection SQLException, url: jdbc:mysql://localhost:3306/bookstore?characterEncoding=utf-8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:118)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:33)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:232)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1706)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1801)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2946)
2025-07-02 16:38:37.584 [Druid-ConnectionPool-Create-1448374330] INFO  com.alibaba.druid.pool.DruidAbstractDataSource - {dataSource-1} failContinuous is true
2025-07-02 16:38:37.586 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-02 16:38:37.592 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1448374330] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2969)
2025-07-02 16:38:37.593 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1448374330] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 16:38:37.594 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2025-07-02 16:38:37.603 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-02 16:38:37.623 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:165)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:142)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	... 11 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'myUserDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [E:\Personal\Homework\SE\bookstore-server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:405)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4904)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	... 16 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [E:\Personal\Homework\SE\bookstore-server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 67 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [E:\Personal\Homework\SE\bookstore-server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 81 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [E:\Personal\Homework\SE\bookstore-server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1534)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 95 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:536)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	... 106 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 119 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 133 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:118)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:33)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:232)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1706)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1801)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:938)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1462)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1458)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:83)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.getDatabaseType(AbstractDataSourceAdapter.java:75)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.getDatabaseType(AbstractDataSourceAdapter.java:64)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.<init>(AbstractDataSourceAdapter.java:56)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.datasource.MasterSlaveDataSource.<init>(MasterSlaveDataSource.java:53)
	at org.apache.shardingsphere.shardingjdbc.api.MasterSlaveDataSourceFactory.createDataSource(MasterSlaveDataSourceFactory.java:49)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration.dataSource(SpringBootConfiguration.java:90)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$cda5b156.CGLIB$dataSource$0(<generated>)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$cda5b156$$FastClassBySpringCGLIB$$1de27dca.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$cda5b156.dataSource(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 134 common frames omitted
2025-07-02 16:38:55.286 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-02 16:38:55.309 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 23568 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 16:38:55.309 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 16:38:55.310 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 16:38:55.487 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-02 16:38:55.487 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-02 16:38:56.148 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 16:38:56.151 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 16:38:56.177 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2025-07-02 16:38:56.429 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$b40c93fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 16:38:56.445 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 16:38:56.868 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 16:38:56.869 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 16:38:56.870 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 16:38:56.870 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 16:38:56.874 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 16:38:56.882 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 16:38:56.884 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 16:38:56.884 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 16:38:56.938 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 16:38:56.938 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1450 ms
2025-07-02 16:38:56.943 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 16:38:57.649 [restartedMain] ERROR com.alibaba.druid.pool.DruidDataSource - init datasource error, url: jdbc:mysql://localhost:3306/bookstore?characterEncoding=utf-8
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:118)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:33)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:232)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1706)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1801)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:938)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1462)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1458)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:83)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.getDatabaseType(AbstractDataSourceAdapter.java:75)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.getDatabaseType(AbstractDataSourceAdapter.java:64)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.<init>(AbstractDataSourceAdapter.java:56)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.datasource.MasterSlaveDataSource.<init>(MasterSlaveDataSource.java:53)
	at org.apache.shardingsphere.shardingjdbc.api.MasterSlaveDataSourceFactory.createDataSource(MasterSlaveDataSourceFactory.java:49)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration.dataSource(SpringBootConfiguration.java:90)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$f7e3882.CGLIB$dataSource$0(<generated>)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$f7e3882$$FastClassBySpringCGLIB$$adecf62e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$f7e3882.dataSource(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:536)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:405)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4904)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2025-07-02 16:38:57.657 [restartedMain] ERROR com.alibaba.druid.pool.DruidDataSource - {dataSource-1} init error
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:118)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:33)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:232)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1706)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1801)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:938)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1462)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1458)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:83)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.getDatabaseType(AbstractDataSourceAdapter.java:75)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.getDatabaseType(AbstractDataSourceAdapter.java:64)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.<init>(AbstractDataSourceAdapter.java:56)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.datasource.MasterSlaveDataSource.<init>(MasterSlaveDataSource.java:53)
	at org.apache.shardingsphere.shardingjdbc.api.MasterSlaveDataSourceFactory.createDataSource(MasterSlaveDataSourceFactory.java:49)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration.dataSource(SpringBootConfiguration.java:90)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$f7e3882.CGLIB$dataSource$0(<generated>)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$f7e3882$$FastClassBySpringCGLIB$$adecf62e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$f7e3882.dataSource(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:536)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:405)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4904)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2025-07-02 16:38:57.660 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-02 16:38:57.664 [restartedMain] ERROR o.s.boot.web.embedded.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'myUserDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [E:\Personal\Homework\SE\bookstore-server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
2025-07-02 16:38:57.681 [Druid-ConnectionPool-Create-768332454] ERROR com.alibaba.druid.pool.DruidDataSource - create connection SQLException, url: jdbc:mysql://localhost:3306/bookstore?characterEncoding=utf-8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:118)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:33)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:232)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1706)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1801)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2946)
2025-07-02 16:38:57.700 [Druid-ConnectionPool-Create-768332454] ERROR com.alibaba.druid.pool.DruidDataSource - create connection SQLException, url: jdbc:mysql://localhost:3306/bookstore?characterEncoding=utf-8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:118)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:33)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:232)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1706)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1801)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2946)
2025-07-02 16:38:57.700 [Druid-ConnectionPool-Create-768332454] INFO  com.alibaba.druid.pool.DruidAbstractDataSource - {dataSource-1} failContinuous is true
2025-07-02 16:38:57.704 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-02 16:38:57.713 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-768332454] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2969)
2025-07-02 16:38:57.713 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-768332454] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 16:38:57.716 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2025-07-02 16:38:57.727 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-02 16:38:57.746 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:165)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:142)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	... 11 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'myUserDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [E:\Personal\Homework\SE\bookstore-server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:405)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4904)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	... 16 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [E:\Personal\Homework\SE\bookstore-server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 67 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [E:\Personal\Homework\SE\bookstore-server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 81 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [E:\Personal\Homework\SE\bookstore-server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1534)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 95 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:536)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	... 106 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 119 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 133 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:118)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:33)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:232)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1706)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1801)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:938)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1462)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1458)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:83)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.getDatabaseType(AbstractDataSourceAdapter.java:75)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.getDatabaseType(AbstractDataSourceAdapter.java:64)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.<init>(AbstractDataSourceAdapter.java:56)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.datasource.MasterSlaveDataSource.<init>(MasterSlaveDataSource.java:53)
	at org.apache.shardingsphere.shardingjdbc.api.MasterSlaveDataSourceFactory.createDataSource(MasterSlaveDataSourceFactory.java:49)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration.dataSource(SpringBootConfiguration.java:90)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$f7e3882.CGLIB$dataSource$0(<generated>)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$f7e3882$$FastClassBySpringCGLIB$$adecf62e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$f7e3882.dataSource(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 134 common frames omitted
2025-07-02 16:39:36.558 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-02 16:39:36.580 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 20196 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 16:39:36.581 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 16:39:36.581 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 16:39:36.756 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-02 16:39:36.756 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-02 16:39:37.370 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 16:39:37.375 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 16:39:37.410 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 0 Redis repository interfaces.
2025-07-02 16:39:37.724 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$f61cfb53] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 16:39:37.755 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 16:39:38.229 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 16:39:38.230 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 16:39:38.230 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 16:39:38.231 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 16:39:38.235 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 16:39:38.244 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 16:39:38.250 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 16:39:38.277 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 16:39:38.382 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 16:39:38.383 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1626 ms
2025-07-02 16:39:38.390 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 16:39:39.180 [restartedMain] ERROR com.alibaba.druid.pool.DruidDataSource - init datasource error, url: jdbc:mysql://localhost:3306/bookstore?characterEncoding=utf-8
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:118)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:33)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:232)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1706)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1801)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:938)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1462)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1458)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:83)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.getDatabaseType(AbstractDataSourceAdapter.java:75)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.getDatabaseType(AbstractDataSourceAdapter.java:64)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.<init>(AbstractDataSourceAdapter.java:56)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.datasource.MasterSlaveDataSource.<init>(MasterSlaveDataSource.java:53)
	at org.apache.shardingsphere.shardingjdbc.api.MasterSlaveDataSourceFactory.createDataSource(MasterSlaveDataSourceFactory.java:49)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration.dataSource(SpringBootConfiguration.java:90)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$518e9fdb.CGLIB$dataSource$0(<generated>)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$518e9fdb$$FastClassBySpringCGLIB$$a62a8019.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$518e9fdb.dataSource(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:536)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:405)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4904)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2025-07-02 16:39:39.185 [restartedMain] ERROR com.alibaba.druid.pool.DruidDataSource - {dataSource-1} init error
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:118)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:33)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:232)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1706)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1801)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:938)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1462)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1458)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:83)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.getDatabaseType(AbstractDataSourceAdapter.java:75)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.getDatabaseType(AbstractDataSourceAdapter.java:64)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.<init>(AbstractDataSourceAdapter.java:56)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.datasource.MasterSlaveDataSource.<init>(MasterSlaveDataSource.java:53)
	at org.apache.shardingsphere.shardingjdbc.api.MasterSlaveDataSourceFactory.createDataSource(MasterSlaveDataSourceFactory.java:49)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration.dataSource(SpringBootConfiguration.java:90)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$518e9fdb.CGLIB$dataSource$0(<generated>)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$518e9fdb$$FastClassBySpringCGLIB$$a62a8019.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$518e9fdb.dataSource(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:536)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:405)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4904)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2025-07-02 16:39:39.187 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-02 16:39:39.190 [restartedMain] ERROR o.s.boot.web.embedded.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'myUserDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [E:\Personal\Homework\SE\bookstore-server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
2025-07-02 16:39:39.201 [Druid-ConnectionPool-Create-669658787] ERROR com.alibaba.druid.pool.DruidDataSource - create connection SQLException, url: jdbc:mysql://localhost:3306/bookstore?characterEncoding=utf-8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:118)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:33)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:232)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1706)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1801)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2946)
2025-07-02 16:39:39.216 [Druid-ConnectionPool-Create-669658787] ERROR com.alibaba.druid.pool.DruidDataSource - create connection SQLException, url: jdbc:mysql://localhost:3306/bookstore?characterEncoding=utf-8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:118)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:33)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:232)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1706)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1801)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2946)
2025-07-02 16:39:39.217 [Druid-ConnectionPool-Create-669658787] INFO  com.alibaba.druid.pool.DruidAbstractDataSource - {dataSource-1} failContinuous is true
2025-07-02 16:39:39.217 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-02 16:39:39.224 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-669658787] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2969)
2025-07-02 16:39:39.224 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-669658787] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 16:39:39.226 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2025-07-02 16:39:39.234 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-02 16:39:39.253 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:165)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:142)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	... 11 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'myUserDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [E:\Personal\Homework\SE\bookstore-server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:405)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4904)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	... 16 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [E:\Personal\Homework\SE\bookstore-server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 67 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [E:\Personal\Homework\SE\bookstore-server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 81 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [E:\Personal\Homework\SE\bookstore-server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1534)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 95 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:536)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	... 106 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 119 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 133 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:118)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:33)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:232)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1706)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1801)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:938)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1462)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1458)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:83)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.getDatabaseType(AbstractDataSourceAdapter.java:75)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.getDatabaseType(AbstractDataSourceAdapter.java:64)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.<init>(AbstractDataSourceAdapter.java:56)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.datasource.MasterSlaveDataSource.<init>(MasterSlaveDataSource.java:53)
	at org.apache.shardingsphere.shardingjdbc.api.MasterSlaveDataSourceFactory.createDataSource(MasterSlaveDataSourceFactory.java:49)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration.dataSource(SpringBootConfiguration.java:90)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$518e9fdb.CGLIB$dataSource$0(<generated>)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$518e9fdb$$FastClassBySpringCGLIB$$a62a8019.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$518e9fdb.dataSource(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 134 common frames omitted
2025-07-02 16:41:46.886 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-02 16:41:46.913 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 1916 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 16:41:46.913 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 16:41:46.914 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 16:41:47.096 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-02 16:41:47.096 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-02 16:41:47.729 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 16:41:47.746 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 16:41:47.767 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
2025-07-02 16:41:48.098 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$91d7cd0a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 16:41:48.142 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 16:41:48.729 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 16:41:48.730 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 16:41:48.731 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 16:41:48.731 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 16:41:48.736 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 16:41:48.745 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 16:41:48.749 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 16:41:48.749 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 16:41:48.823 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 16:41:48.823 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1726 ms
2025-07-02 16:41:48.832 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 16:41:49.663 [restartedMain] ERROR com.alibaba.druid.pool.DruidDataSource - init datasource error, url: jdbc:mysql://localhost:3306/bookstore?characterEncoding=utf-8
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:118)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:33)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:232)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1706)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1801)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:938)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1462)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1458)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:83)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.getDatabaseType(AbstractDataSourceAdapter.java:75)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.getDatabaseType(AbstractDataSourceAdapter.java:64)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.<init>(AbstractDataSourceAdapter.java:56)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.datasource.MasterSlaveDataSource.<init>(MasterSlaveDataSource.java:53)
	at org.apache.shardingsphere.shardingjdbc.api.MasterSlaveDataSourceFactory.createDataSource(MasterSlaveDataSourceFactory.java:49)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration.dataSource(SpringBootConfiguration.java:90)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$ed497192.CGLIB$dataSource$0(<generated>)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$ed497192$$FastClassBySpringCGLIB$$a0ff961c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$ed497192.dataSource(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:536)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:405)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4904)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2025-07-02 16:41:49.669 [restartedMain] ERROR com.alibaba.druid.pool.DruidDataSource - {dataSource-1} init error
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:118)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:33)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:232)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1706)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1801)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:938)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1462)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1458)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:83)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.getDatabaseType(AbstractDataSourceAdapter.java:75)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.getDatabaseType(AbstractDataSourceAdapter.java:64)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.<init>(AbstractDataSourceAdapter.java:56)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.datasource.MasterSlaveDataSource.<init>(MasterSlaveDataSource.java:53)
	at org.apache.shardingsphere.shardingjdbc.api.MasterSlaveDataSourceFactory.createDataSource(MasterSlaveDataSourceFactory.java:49)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration.dataSource(SpringBootConfiguration.java:90)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$ed497192.CGLIB$dataSource$0(<generated>)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$ed497192$$FastClassBySpringCGLIB$$a0ff961c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$ed497192.dataSource(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:536)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:405)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4904)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2025-07-02 16:41:49.671 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-02 16:41:49.674 [restartedMain] ERROR o.s.boot.web.embedded.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'myUserDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [E:\Personal\Homework\SE\bookstore-server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
2025-07-02 16:41:49.691 [Druid-ConnectionPool-Create-19851750] ERROR com.alibaba.druid.pool.DruidDataSource - create connection SQLException, url: jdbc:mysql://localhost:3306/bookstore?characterEncoding=utf-8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:118)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:33)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:232)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1706)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1801)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2946)
2025-07-02 16:41:49.705 [Druid-ConnectionPool-Create-19851750] ERROR com.alibaba.druid.pool.DruidDataSource - create connection SQLException, url: jdbc:mysql://localhost:3306/bookstore?characterEncoding=utf-8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:118)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:33)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:232)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1706)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1801)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2946)
2025-07-02 16:41:49.705 [Druid-ConnectionPool-Create-19851750] INFO  com.alibaba.druid.pool.DruidAbstractDataSource - {dataSource-1} failContinuous is true
2025-07-02 16:41:49.710 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-02 16:41:49.716 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-19851750] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2969)
2025-07-02 16:41:49.717 [restartedMain] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-19851750] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 16:41:49.718 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2025-07-02 16:41:49.725 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-02 16:41:49.743 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:165)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:142)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	... 11 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'myUserDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [E:\Personal\Homework\SE\bookstore-server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:405)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4904)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	... 16 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [E:\Personal\Homework\SE\bookstore-server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 67 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'firstUser': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [E:\Personal\Homework\SE\bookstore-server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 81 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [E:\Personal\Homework\SE\bookstore-server\target\classes\com\huang\store\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1534)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 95 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:536)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	... 106 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 119 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 133 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:118)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:33)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:764)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:232)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:112)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1706)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1801)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:938)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1462)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1458)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:83)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.getDatabaseType(AbstractDataSourceAdapter.java:75)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.getDatabaseType(AbstractDataSourceAdapter.java:64)
	at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.<init>(AbstractDataSourceAdapter.java:56)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.datasource.MasterSlaveDataSource.<init>(MasterSlaveDataSource.java:53)
	at org.apache.shardingsphere.shardingjdbc.api.MasterSlaveDataSourceFactory.createDataSource(MasterSlaveDataSourceFactory.java:49)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration.dataSource(SpringBootConfiguration.java:90)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$ed497192.CGLIB$dataSource$0(<generated>)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$ed497192$$FastClassBySpringCGLIB$$a0ff961c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$ed497192.dataSource(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 134 common frames omitted
2025-07-02 16:43:02.504 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-02 16:43:02.533 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 18760 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 16:43:02.534 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 16:43:02.534 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 16:43:02.777 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-02 16:43:02.777 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-02 16:43:03.628 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 16:43:03.628 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 16:43:03.655 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
2025-07-02 16:43:03.966 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$b319218a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 16:43:03.993 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 16:43:04.432 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 16:43:04.447 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 16:43:04.448 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 16:43:04.448 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 16:43:04.453 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 16:43:04.461 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 16:43:04.463 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 16:43:04.463 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 16:43:04.528 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 16:43:04.529 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1748 ms
2025-07-02 16:43:04.535 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 16:43:05.548 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-02 16:43:05.570 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-02 16:43:05.942 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 16:43:05.942 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 16:43:06.668 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 16:43:06.832 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7855e4a5, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@511fc2e1, org.springframework.security.web.context.SecurityContextPersistenceFilter@6dac6ef9, org.springframework.security.web.header.HeaderWriterFilter@6992703a, org.springframework.web.filter.CorsFilter@7b40a71d, org.springframework.security.web.authentication.logout.LogoutFilter@6d526a49, com.huang.store.security.JwtAuthenticationTokenFilter@6181b551, com.huang.store.security.CustomAuthenticationFilter@325e799b, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2eb6fb97, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2ff010dd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1d360ad8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4d86feae, org.springframework.security.web.session.SessionManagementFilter@34a98b34, org.springframework.security.web.access.ExceptionTranslationFilter@13622e6f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@feba277]
2025-07-02 16:43:07.143 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 16:43:07.167 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 16:43:07.201 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 16:43:07.212 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 5.235 seconds (JVM running for 5.818)
2025-07-02 16:44:11.901 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-02 16:44:11.901 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-02 16:44:11.901 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-07-02 16:44:53.614 [http-nio-8080-exec-6] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTMzNDAzNDA4MCwiZXhwIjoxNzUxMzM1ODM0fQ.HiqZmYgNO0tkEjX0JZAFBYni24xUPeruj-ihKOwcYJn8ri2HKqZXHOfF9mK3K17_65Kp8Sz20JcVCY6uFVwdPg
2025-07-02 16:44:53.614 [http-nio-8080-exec-8] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTMzNDAzNDA4MCwiZXhwIjoxNzUxMzM1ODM0fQ.HiqZmYgNO0tkEjX0JZAFBYni24xUPeruj-ihKOwcYJn8ri2HKqZXHOfF9mK3K17_65Kp8Sz20JcVCY6uFVwdPg
2025-07-02 16:44:53.614 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTMzNDAzNDA4MCwiZXhwIjoxNzUxMzM1ODM0fQ.HiqZmYgNO0tkEjX0JZAFBYni24xUPeruj-ihKOwcYJn8ri2HKqZXHOfF9mK3K17_65Kp8Sz20JcVCY6uFVwdPg
2025-07-02 16:44:53.614 [http-nio-8080-exec-9] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTMzNDAzNDA4MCwiZXhwIjoxNzUxMzM1ODM0fQ.HiqZmYgNO0tkEjX0JZAFBYni24xUPeruj-ihKOwcYJn8ri2HKqZXHOfF9mK3K17_65Kp8Sz20JcVCY6uFVwdPg
2025-07-02 16:44:53.614 [http-nio-8080-exec-7] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTMzNDAzNDA4MCwiZXhwIjoxNzUxMzM1ODM0fQ.HiqZmYgNO0tkEjX0JZAFBYni24xUPeruj-ihKOwcYJn8ri2HKqZXHOfF9mK3K17_65Kp8Sz20JcVCY6uFVwdPg
2025-07-02 16:44:53.614 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTMzNDAzNDA4MCwiZXhwIjoxNzUxMzM1ODM0fQ.HiqZmYgNO0tkEjX0JZAFBYni24xUPeruj-ihKOwcYJn8ri2HKqZXHOfF9mK3K17_65Kp8Sz20JcVCY6uFVwdPg
2025-07-02 16:44:53.641 [http-nio-8080-exec-4] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 16:44:53.667 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 16:44:53.667 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 16:44:53.667 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 16:44:53.667 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 16:44:53.667 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 16:44:53.667 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 16:44:53.687 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:44:53.687 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:44:53.687 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:44:53.687 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:44:53.687 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:44:53.687 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:44:53.688 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 16:44:53.688 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 16:44:53.688 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 16:44:53.688 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 16:44:53.688 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 16:44:53.688 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 16:44:53.737 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 16:44:53.744 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 16:44:53.745 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 16:44:53.745 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 16:44:53.758 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 16:44:53.758 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 16:44:53.758 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 16:44:53.761 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 16:44:53.763 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 16:44:53.765 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 16:44:53.766 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 16:44:53.765 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 16:44:53.767 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:44:53.767 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 16:44:53.766 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:44:53.766 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:44:53.767 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 16:44:53.767 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 16:44:53.767 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 16:44:53.767 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 16:44:53.769 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 16:44:53.771 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 16:44:53.776 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 16:44:53.778 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 16:44:53.780 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 16:44:53.782 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 16:44:53.782 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 16:44:53.784 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:44:53.784 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 16:44:53.784 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 16:44:53.784 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 16:44:53.789 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:44:53.790 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 16:44:53.790 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 16:44:53.790 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:44:53.791 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 16:44:53.791 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 16:44:53.791 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 16:44:53.792 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 16:44:53.797 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 16:44:53.800 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 16:44:53.800 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 16:44:53.801 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:44:53.801 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 16:44:53.801 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 16:44:53.801 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:44:53.804 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 16:44:53.804 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 16:44:53.805 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 16:44:53.806 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 16:44:53.807 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 16:44:53.807 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 16:44:53.807 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 16:44:53.807 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:44:53.807 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 16:44:53.807 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 16:44:53.808 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:44:53.808 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 16:44:53.808 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 16:44:53.809 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 16:44:53.810 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 16:44:53.810 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 16:44:53.811 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 16:44:53.812 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:44:53.812 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 16:44:53.812 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 16:44:53.814 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 16:44:53.816 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 16:44:53.816 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:44:53.816 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 16:44:53.827 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 16:44:53.830 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 16:44:53.831 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 16:44:53.832 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:44:53.835 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 16:44:53.840 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 16:44:53.844 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 16:45:02.006 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTMzNDAzNDA4MCwiZXhwIjoxNzUxMzM1ODM0fQ.HiqZmYgNO0tkEjX0JZAFBYni24xUPeruj-ihKOwcYJn8ri2HKqZXHOfF9mK3K17_65Kp8Sz20JcVCY6uFVwdPg
2025-07-02 16:45:02.159 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 16:45:02.159 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:02.159 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 16:45:02.160 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: a123456@example.com(String)
2025-07-02 16:45:02.164 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 16:45:02.173 [http-nio-8080-exec-5] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:a123456@example.com    数据库密码:$2a$10$bhbP823Lbav2RL7Su6fd7eZsAYkKvrCoRPLG5prw240ncy1A4REHu
2025-07-02 16:45:02.324 [http-nio-8080-exec-5] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=a123456@example.com, password=$2a$10$bhbP823Lbav2RL7Su6fd7eZsAYkKvrCoRPLG5prw240ncy1A4REHu, enabled=true, roles=[ROLE_USER]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=538D91808EB5B10F649D52EB98F38BC1], Granted Authorities=[ROLE_USER]]
2025-07-02 16:45:02.341 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 16:45:02.341 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:02.341 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 16:45:02.341 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: a123456@example.com(String)
2025-07-02 16:45:02.341 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 16:45:03.461 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 16:45:03.461 [http-nio-8080-exec-3] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 16:45:03.461 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 16:45:03.461 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 16:45:03.465 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 16:45:03.465 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:03.465 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 16:45:03.465 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:03.465 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:03.465 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 16:45:03.465 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:03.465 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 16:45:03.465 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:03.465 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 16:45:03.465 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 16:45:03.465 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 16:45:03.465 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 16:45:03.465 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:03.465 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 16:45:03.469 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 16:45:03.465 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 16:45:03.472 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 16:45:03.474 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 16:45:03.474 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 16:45:03.475 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 16:45:03.475 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 16:45:03.477 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 16:45:03.477 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 16:45:03.477 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 16:45:03.477 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 16:45:03.478 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 16:45:03.478 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 16:45:03.478 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 16:45:03.478 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:03.479 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 16:45:03.479 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:03.479 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:03.479 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 16:45:03.479 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 16:45:03.480 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 16:45:03.479 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 16:45:03.480 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 16:45:03.481 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 16:45:03.480 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:03.482 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 16:45:03.480 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 16:45:03.482 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 16:45:03.483 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 16:45:03.483 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 16:45:03.483 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 16:45:03.484 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 16:45:03.484 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 16:45:03.484 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:03.484 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:03.484 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:03.484 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 16:45:03.485 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 16:45:03.488 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 16:45:03.489 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 16:45:03.490 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 16:45:03.490 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 16:45:03.490 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 16:45:03.490 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 16:45:03.492 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 16:45:03.492 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 16:45:03.492 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 16:45:03.492 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 16:45:03.492 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 16:45:03.492 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:03.492 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:03.492 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 16:45:03.492 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 16:45:03.495 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 16:45:03.496 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 16:45:03.496 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 16:45:03.498 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 16:45:03.498 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 16:45:03.498 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:03.498 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 16:45:03.498 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 16:45:03.498 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 16:45:03.498 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:03.498 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 16:45:03.498 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 16:45:03.501 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 16:45:03.503 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 16:45:03.505 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 16:45:03.506 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:03.506 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 16:45:03.507 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 16:45:03.509 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 16:45:03.509 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 16:45:03.509 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:03.510 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 16:45:03.510 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 16:45:03.512 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 16:45:15.466 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 16:45:15.466 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:15.468 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 16:45:15.473 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 16:45:15.477 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 16:45:15.478 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 16:45:15.478 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:15.478 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 16:45:15.479 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 16:45:15.479 [http-nio-8080-exec-5] ERROR com.huang.store.exception.GlobalExceptionHandler - 运行时异常
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.lang.NumberFormatException: For input string: "undefined"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:662)
	at java.base/java.lang.Integer.valueOf(Integer.java:989)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:729)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125)
	... 107 common frames omitted
2025-07-02 16:45:15.481 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 16:45:15.483 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 16:45:15.483 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:15.487 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 16:45:15.492 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 16:45:15.494 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 16:45:15.495 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 16:45:15.496 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:15.496 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 16:45:15.497 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 16:45:15.499 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 16:45:15.500 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 16:45:15.500 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:15.501 [http-nio-8080-exec-5] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2025-07-02 16:45:15.501 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 16:45:15.504 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 16:45:15.510 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 16:45:18.413 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 16:45:18.413 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 16:45:18.413 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 16:45:18.414 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 16:45:18.414 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:18.414 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:18.414 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 16:45:18.414 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:18.414 [http-nio-8080-exec-9] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 16:45:18.414 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:18.414 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 16:45:18.414 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 16:45:18.414 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:18.415 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 16:45:18.415 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 16:45:18.415 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 16:45:18.416 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 16:45:18.415 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 16:45:18.415 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 16:45:18.416 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 16:45:18.416 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 16:45:18.416 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:18.418 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 16:45:18.418 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 16:45:18.418 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 16:45:18.418 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 16:45:18.418 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 16:45:18.418 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 16:45:18.420 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:18.421 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 16:45:18.419 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 16:45:18.421 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 16:45:18.424 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 16:45:18.426 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:18.426 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:18.426 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 16:45:18.426 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 16:45:18.426 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 16:45:18.426 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 16:45:18.426 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 16:45:18.426 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 16:45:18.426 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 16:45:18.426 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 16:45:18.428 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 16:45:18.428 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 16:45:18.428 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:18.428 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 16:45:18.428 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 16:45:18.428 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:18.430 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 16:45:18.428 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 16:45:18.430 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 16:45:18.430 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 16:45:18.432 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 16:45:18.432 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 16:45:18.432 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 16:45:18.433 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 16:45:18.433 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 16:45:18.433 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:18.433 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:18.433 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 16:45:18.434 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 16:45:18.434 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 16:45:18.434 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 16:45:18.441 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 16:45:18.442 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 16:45:18.443 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:18.442 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 16:45:18.443 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 16:45:18.443 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 16:45:18.443 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 16:45:18.444 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:18.444 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 16:45:18.444 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 16:45:18.445 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 16:45:18.445 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 16:45:18.445 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 16:45:18.445 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 16:45:18.445 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:18.445 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:18.447 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 16:45:18.447 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 16:45:18.447 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 16:45:18.447 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 16:45:18.449 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 16:45:18.450 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 16:45:18.450 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 16:45:18.451 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:18.451 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 16:45:18.451 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 16:45:18.455 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 16:45:18.456 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 16:45:18.457 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:18.457 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 16:45:18.458 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 16:45:18.460 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 16:45:24.361 [http-nio-8080-exec-1] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-02 16:45:24.361 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:24.362 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-02 16:45:24.363 [http-nio-8080-exec-1] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-02 16:45:24.372 [http-nio-8080-exec-1] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 3
2025-07-02 16:45:24.375 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-02 16:45:24.375 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:24.375 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-02 16:45:24.384 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 3(Long)
2025-07-02 16:45:24.391 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-02 16:45:24.392 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-02 16:45:24.392 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:24.393 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-02 16:45:24.393 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 1(Integer)
2025-07-02 16:45:24.396 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-02 16:45:24.396 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 16:45:24.397 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:24.397 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 16:45:24.397 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 16:45:24.400 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 16:45:24.400 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-02 16:45:24.401 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:24.401 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-02 16:45:24.401 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 2(Integer)
2025-07-02 16:45:24.404 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-02 16:45:24.405 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 16:45:24.406 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:24.406 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 16:45:24.406 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 16:45:24.408 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 16:45:24.412 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-02 16:45:24.412 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:24.412 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-02 16:45:24.413 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 2(Long)
2025-07-02 16:45:24.418 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 2
2025-07-02 16:45:24.420 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-02 16:45:24.420 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:24.421 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-02 16:45:24.421 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 4(Integer)
2025-07-02 16:45:24.425 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-02 16:45:24.425 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 16:45:24.425 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:24.425 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 16:45:24.425 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 16:45:24.425 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 16:45:24.425 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-02 16:45:24.425 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:24.425 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-02 16:45:24.425 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 5(Integer)
2025-07-02 16:45:24.425 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-02 16:45:24.425 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 16:45:24.425 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:24.425 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 16:45:24.437 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 16:45:24.439 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 16:45:24.439 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-02 16:45:24.440 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:24.440 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-02 16:45:24.441 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 1(Long)
2025-07-02 16:45:24.443 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 3
2025-07-02 16:45:24.444 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-02 16:45:24.444 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:24.444 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-02 16:45:24.444 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 1(Integer)
2025-07-02 16:45:24.446 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-02 16:45:24.446 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 16:45:24.446 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:24.446 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 16:45:24.447 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 16:45:24.448 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 16:45:24.449 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-02 16:45:24.449 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:24.449 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-02 16:45:24.450 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 2(Integer)
2025-07-02 16:45:24.453 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-02 16:45:24.454 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 16:45:24.454 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:24.454 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 16:45:24.454 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 16:45:24.454 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 16:45:24.454 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-02 16:45:24.454 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:24.454 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-02 16:45:24.454 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 3(Integer)
2025-07-02 16:45:24.454 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-02 16:45:24.454 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 16:45:24.454 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:24.454 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 16:45:24.454 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 16:45:24.454 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 16:45:34.085 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 16:45:34.088 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 16:45:34.085 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 16:45:34.085 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 16:45:34.087 [http-nio-8080-exec-8] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 16:45:34.088 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 16:45:34.088 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:34.089 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 16:45:34.089 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:34.089 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:34.089 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 16:45:34.089 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:34.089 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 16:45:34.089 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:34.090 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 16:45:34.089 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 16:45:34.089 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 16:45:34.090 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 16:45:34.090 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 16:45:34.090 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:34.091 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 16:45:34.090 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 16:45:34.090 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 16:45:34.091 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 16:45:34.092 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 16:45:34.092 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 16:45:34.093 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 16:45:34.093 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 16:45:34.093 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 16:45:34.093 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 16:45:34.095 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:34.095 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 16:45:34.095 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 16:45:34.096 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 16:45:34.096 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 16:45:34.096 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 16:45:34.096 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 16:45:34.096 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:34.096 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:34.098 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 16:45:34.097 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:34.097 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 16:45:34.097 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 16:45:34.098 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 16:45:34.099 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:34.099 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 16:45:34.098 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 16:45:34.099 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 16:45:34.099 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 16:45:34.100 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 16:45:34.101 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 16:45:34.101 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 16:45:34.113 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 16:45:34.124 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 16:45:34.130 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 16:45:34.131 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 16:45:34.135 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:34.140 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 16:45:34.133 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 16:45:34.143 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 16:45:34.147 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:34.157 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 16:45:34.158 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 16:45:34.158 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 16:45:34.159 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 16:45:34.159 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:34.159 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 16:45:34.160 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 16:45:34.160 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 16:45:34.164 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 16:45:34.177 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 16:45:34.177 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:34.179 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 16:45:34.181 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 16:45:34.189 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 16:45:34.190 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 16:45:34.191 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:34.191 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 16:45:34.191 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 16:45:34.192 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 16:45:34.194 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 16:45:34.194 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 16:45:34.194 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:34.195 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 16:45:34.195 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:34.195 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 16:45:34.195 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 16:45:34.196 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 16:45:34.196 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 16:45:34.198 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 16:45:34.198 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 16:45:34.198 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 16:45:34.199 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:34.199 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 16:45:34.199 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 16:45:34.201 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 16:45:38.576 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 16:45:38.577 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:38.577 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 16:45:38.578 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 16:45:38.578 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 16:45:38.578 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:38.578 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 16:45:38.579 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 1(Integer)
2025-07-02 16:45:38.579 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 16:45:38.581 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 1
2025-07-02 16:45:38.581 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 16:45:38.581 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:38.581 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 16:45:38.581 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 16:45:38.582 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==>  Preparing: select id from booksort where (upperName="无" and sortName=?) or upperName=?
2025-07-02 16:45:38.582 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:38.582 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select id from booksort where (upperName="无" and sortName=?) or upperName=? ::: DataSources: slave
2025-07-02 16:45:38.583 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 16:45:38.584 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 16:45:38.584 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:38.584 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 16:45:38.585 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 16:45:38.585 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==> Parameters: 文学(String), 文学(String)
2025-07-02 16:45:38.588 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 16:45:38.589 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - <==      Total: 4
2025-07-02 16:45:38.589 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 16:45:38.589 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:38.589 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 16:45:38.590 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 16:45:38.593 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 16:45:38.594 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 16:45:38.595 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:38.595 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 16:45:38.595 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 16:45:38.597 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 16:45:38.615 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBooksByFirst - ==>  Preparing: select * from book where id in (select t.bookId from (select * from booksortlist WHERE bookSortId in ( ? , ? , ? , ? ) ) as t ) limit ?,?
2025-07-02 16:45:38.615 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:38.616 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book
            where id in (select t.bookId from
                (select * from booksortlist
                     WHERE bookSortId in
                        (
                            ?
                        ,
                            ?
                        ,
                            ?
                        ,
                            ?
                        ) 
                )
        as t ) limit ?,? ::: DataSources: slave
2025-07-02 16:45:38.617 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBooksByFirst - ==> Parameters: 5(Integer), 6(Integer), 7(Integer), 1(Integer), 0(Integer), 10(Integer)
2025-07-02 16:45:38.623 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBooksByFirst - <==      Total: 2
2025-07-02 16:45:38.624 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==>  Preparing: select id from booksort where (upperName="无" and sortName=?) or upperName=?
2025-07-02 16:45:38.624 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:38.624 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select id from booksort where (upperName="无" and sortName=?) or upperName=? ::: DataSources: slave
2025-07-02 16:45:38.625 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - ==> Parameters: 文学(String), 文学(String)
2025-07-02 16:45:38.627 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSortId - <==      Total: 4
2025-07-02 16:45:38.629 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.BookMapper.getFirstBookCount - ==>  Preparing: select count(*) from book where id in (select bookId from booksortlist WHERE bookSortId in ( ? , ? , ? , ? ) )
2025-07-02 16:45:38.629 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:38.629 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select count(*) from book
        where id in (select bookId from booksortlist
         WHERE bookSortId in
            (
                ?
            ,
                ?
            ,
                ?
            ,
                ?
            ) 
        ) ::: DataSources: slave
2025-07-02 16:45:38.631 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.BookMapper.getFirstBookCount - ==> Parameters: 5(Integer), 6(Integer), 7(Integer), 1(Integer)
2025-07-02 16:45:38.635 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.BookMapper.getFirstBookCount - <==      Total: 1
2025-07-02 16:45:38.635 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 16:45:38.636 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:38.636 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 16:45:38.639 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 16:45:38.639 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 16:45:38.639 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 16:45:38.639 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:38.639 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 16:45:38.639 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 16:45:38.639 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 16:45:41.842 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 16:45:41.844 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 16:45:41.845 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 16:45:41.844 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:41.845 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:41.845 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:41.845 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 16:45:41.845 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 16:45:41.845 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 16:45:41.845 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 16:45:41.846 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 16:45:41.846 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 16:45:41.846 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 16:45:41.846 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:41.848 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 16:45:41.847 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 16:45:41.847 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 16:45:41.848 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 16:45:41.848 [http-nio-8080-exec-9] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 16:45:41.848 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:41.848 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 16:45:41.849 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 16:45:41.849 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 16:45:41.849 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 16:45:41.849 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 16:45:41.849 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 16:45:41.849 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:41.850 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:41.850 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 16:45:41.850 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:41.850 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 16:45:41.851 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 16:45:41.850 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 16:45:41.851 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:41.851 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 16:45:41.852 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 16:45:41.850 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 16:45:41.850 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 16:45:41.852 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 16:45:41.851 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 16:45:41.858 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 16:45:41.852 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 16:45:41.852 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 16:45:41.852 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 16:45:41.857 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 16:45:41.858 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:41.860 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 16:45:41.860 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 16:45:41.860 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 16:45:41.860 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:41.860 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 16:45:41.860 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 16:45:41.862 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 16:45:41.862 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 16:45:41.862 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 16:45:41.864 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 16:45:41.864 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:41.865 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 16:45:41.865 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 16:45:41.867 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:41.867 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 16:45:41.868 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 16:45:41.868 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 16:45:41.869 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 16:45:41.869 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 16:45:41.869 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 16:45:41.872 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 16:45:41.874 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:41.875 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 16:45:41.875 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 16:45:41.876 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:41.876 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 16:45:41.876 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 16:45:41.876 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 16:45:41.878 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 16:45:41.878 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 16:45:41.878 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 16:45:41.879 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 16:45:41.879 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:41.880 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:41.880 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 16:45:41.880 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 16:45:41.880 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 16:45:41.881 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 16:45:41.882 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 16:45:41.884 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 16:45:41.885 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 16:45:41.885 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:41.885 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 16:45:41.886 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 16:45:41.894 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 16:45:41.894 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 16:45:41.894 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:41.894 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 16:45:41.894 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 16:45:41.894 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 16:45:44.627 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 16:45:44.627 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 16:45:44.628 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 16:45:44.628 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: a123456@example.com(String)
2025-07-02 16:45:44.631 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 18:50:41.735 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-02 18:50:41.755 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 1556 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 18:50:41.756 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 18:50:41.756 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 18:50:41.945 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-02 18:50:41.945 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-02 18:50:43.587 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 18:50:43.590 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 18:50:43.620 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2025-07-02 18:50:43.864 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$a960b964] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 18:50:43.877 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 18:50:44.534 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 18:50:44.536 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 18:50:44.536 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 18:50:44.537 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 18:50:44.542 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 18:50:44.550 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 18:50:44.550 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 18:50:44.550 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 18:50:44.628 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 18:50:44.628 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2679 ms
2025-07-02 18:50:44.633 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 18:50:45.866 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-02 18:50:45.901 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-02 18:50:46.316 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 18:50:46.316 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 18:50:46.972 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 18:50:47.125 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@748331d8, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5f1cd32e, org.springframework.security.web.context.SecurityContextPersistenceFilter@68e84c2e, org.springframework.security.web.header.HeaderWriterFilter@1aea0a, org.springframework.web.filter.CorsFilter@7851ff0, org.springframework.security.web.authentication.logout.LogoutFilter@61538ca7, com.huang.store.security.JwtAuthenticationTokenFilter@7c41c7a0, com.huang.store.security.CustomAuthenticationFilter@12e6cd99, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@44c2cd9c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@125ff594, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5e48a1f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2841cc77, org.springframework.security.web.session.SessionManagementFilter@28ab50c1, org.springframework.security.web.access.ExceptionTranslationFilter@2fe9071d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@171c9f6f]
2025-07-02 18:50:47.460 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 18:50:47.483 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 18:50:47.503 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 18:50:47.521 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 6.209 seconds (JVM running for 6.653)
2025-07-02 18:51:55.255 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-02 18:51:55.288 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 16236 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 18:51:55.289 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 18:51:55.290 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 18:51:55.504 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-02 18:51:55.505 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-02 18:51:56.398 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 18:51:56.400 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 18:51:56.425 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
2025-07-02 18:51:56.804 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$9dc8d2d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 18:51:56.825 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 18:51:57.353 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 18:51:57.353 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 18:51:57.353 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 18:51:57.353 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 18:51:57.371 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 18:51:57.379 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 18:51:57.382 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 18:51:57.382 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 18:51:57.467 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 18:51:57.467 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1961 ms
2025-07-02 18:51:57.477 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 18:51:58.761 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-02 18:51:58.797 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-02 18:51:59.214 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 18:51:59.215 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 18:51:59.836 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 18:52:00.011 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6fc246fe, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5700f6b7, org.springframework.security.web.context.SecurityContextPersistenceFilter@1d73e975, org.springframework.security.web.header.HeaderWriterFilter@6c89778e, org.springframework.web.filter.CorsFilter@14da27ba, org.springframework.security.web.authentication.logout.LogoutFilter@4f1d67d0, com.huang.store.security.JwtAuthenticationTokenFilter@605a6a4c, com.huang.store.security.CustomAuthenticationFilter@3aee410e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@653cc7ea, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@23a992e7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3643ac75, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@64404785, org.springframework.security.web.session.SessionManagementFilter@7b80d88, org.springframework.security.web.access.ExceptionTranslationFilter@64f7641e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2446b440]
2025-07-02 18:52:00.320 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 18:52:00.349 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 18:52:00.372 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 18:52:00.382 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 5.664 seconds (JVM running for 6.318)
2025-07-02 18:53:51.412 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-02 18:53:51.436 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 13980 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 18:53:51.436 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 18:53:51.437 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 18:53:51.657 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-02 18:53:51.657 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-02 18:53:52.444 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 18:53:52.444 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 18:53:52.490 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22 ms. Found 0 Redis repository interfaces.
2025-07-02 18:53:52.996 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$74a1295f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 18:53:53.038 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 18:53:53.809 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 18:53:53.809 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 18:53:53.809 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 18:53:53.809 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 18:53:53.825 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 18:53:53.833 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 18:53:53.837 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 18:53:53.837 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 18:53:53.946 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 18:53:53.947 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2289 ms
2025-07-02 18:53:53.956 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 18:53:55.057 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-02 18:53:55.093 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-02 18:53:55.446 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 18:53:55.446 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 18:53:55.965 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 18:53:56.091 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7de526ce, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1e829f7f, org.springframework.security.web.context.SecurityContextPersistenceFilter@698563cc, org.springframework.security.web.header.HeaderWriterFilter@2b1ee3f2, org.springframework.web.filter.CorsFilter@25f41bb5, org.springframework.security.web.authentication.logout.LogoutFilter@1863bc5, com.huang.store.security.JwtAuthenticationTokenFilter@5c112a47, com.huang.store.security.CustomAuthenticationFilter@42d18d19, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1053170b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4fcb852d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@63502757, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1ac3beda, org.springframework.security.web.session.SessionManagementFilter@5e48a1f, org.springframework.security.web.access.ExceptionTranslationFilter@220c257a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7f46c9f1]
2025-07-02 18:53:56.357 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 18:53:56.391 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 18:53:56.410 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 18:53:56.420 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 5.602 seconds (JVM running for 6.15)
2025-07-02 18:55:04.441 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-02 18:55:04.470 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 23096 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 18:55:04.471 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 18:55:04.471 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 18:55:04.707 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-02 18:55:04.707 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-02 18:55:05.528 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 18:55:05.531 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 18:55:05.562 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 0 Redis repository interfaces.
2025-07-02 18:55:05.849 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$a960b964] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 18:55:05.868 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 18:55:06.288 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 18:55:06.289 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 18:55:06.291 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 18:55:06.291 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 18:55:06.296 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 18:55:06.301 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 18:55:06.306 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 18:55:06.306 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 18:55:06.364 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 18:55:06.364 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1654 ms
2025-07-02 18:55:06.364 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 18:55:07.443 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-02 18:55:07.473 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-02 18:55:07.919 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 18:55:07.919 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 18:55:08.575 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 18:55:08.726 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@748331d8, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5f1cd32e, org.springframework.security.web.context.SecurityContextPersistenceFilter@68e84c2e, org.springframework.security.web.header.HeaderWriterFilter@1aea0a, org.springframework.web.filter.CorsFilter@7851ff0, org.springframework.security.web.authentication.logout.LogoutFilter@61538ca7, com.huang.store.security.JwtAuthenticationTokenFilter@7c41c7a0, com.huang.store.security.CustomAuthenticationFilter@12e6cd99, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@44c2cd9c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@125ff594, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5e48a1f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2841cc77, org.springframework.security.web.session.SessionManagementFilter@28ab50c1, org.springframework.security.web.access.ExceptionTranslationFilter@2fe9071d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@171c9f6f]
2025-07-02 18:55:09.026 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 18:55:09.046 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 18:55:09.060 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 18:55:09.060 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 5.234 seconds (JVM running for 5.749)
2025-07-02 18:58:05.034 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-02 18:58:05.057 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 17572 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 18:58:05.058 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 18:58:05.058 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 18:58:05.260 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-02 18:58:05.260 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-02 18:58:05.969 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 18:58:05.972 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 18:58:06.009 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
2025-07-02 18:58:06.348 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$bff18bc6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 18:58:06.373 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 18:58:07.991 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 18:58:07.993 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 18:58:07.993 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 18:58:07.994 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 18:58:08.005 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 18:58:08.021 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 18:58:08.026 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 18:58:08.026 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 18:58:08.127 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 18:58:08.128 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2867 ms
2025-07-02 18:58:08.136 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 18:58:09.522 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-02 18:58:09.573 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-02 18:58:10.020 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 18:58:10.020 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 18:58:10.610 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 18:58:10.781 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7e9d8f9d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4b10587f, org.springframework.security.web.context.SecurityContextPersistenceFilter@37ab4e12, org.springframework.security.web.header.HeaderWriterFilter@1d73e975, org.springframework.web.filter.CorsFilter@5fc07b30, org.springframework.security.web.authentication.logout.LogoutFilter@1ab734aa, com.huang.store.security.JwtAuthenticationTokenFilter@2edb02ce, com.huang.store.security.CustomAuthenticationFilter@2f5b1509, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@37b3cda0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3643ac75, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6dd5933e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7d984fd5, org.springframework.security.web.session.SessionManagementFilter@23a992e7, org.springframework.security.web.access.ExceptionTranslationFilter@6023227f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@15e442cc]
2025-07-02 18:58:11.064 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 18:58:11.089 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 18:58:11.110 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 18:58:11.123 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 6.593 seconds (JVM running for 7.027)
2025-07-02 18:58:31.022 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-02 18:58:31.023 [Thread-7] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-02 18:58:31.038 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-755044215] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 18:58:31.040 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-755044215] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 18:58:31.041 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1606327585] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 18:58:31.043 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1606327585] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 18:58:31.045 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-02 18:58:31.048 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-02 18:58:31.098 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-02 18:58:31.109 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-02 18:58:31.110 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-02 18:58:31.113 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-02 18:58:31.325 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 17572 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 18:58:31.326 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 18:58:31.326 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 18:58:31.646 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 18:58:31.647 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 18:58:31.653 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-07-02 18:58:31.752 [restartedMain] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[com.huang.store.mapper]' package. Please check your configuration.
2025-07-02 18:58:31.898 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 18:58:31.900 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 18:58:31.901 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 18:58:31.902 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 18:58:31.903 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 18:58:31.904 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 18:58:31.905 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 18:58:31.906 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 18:58:31.963 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 18:58:31.964 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 633 ms
2025-07-02 18:58:32.177 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 18:58:32.324 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} inited
2025-07-02 18:58:32.370 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} inited
2025-07-02 18:58:32.485 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [E:\Personal\Homework\SE\bookstore-server\target\classes\mapping\AddressMapper.xml]'
2025-07-02 18:58:32.486 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closing ...
2025-07-02 18:58:32.488 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed
2025-07-02 18:58:32.488 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closing ...
2025-07-02 18:58:32.491 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed
2025-07-02 18:58:32.492 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-02 18:58:32.505 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-02 18:58:32.555 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [E:\Personal\Homework\SE\bookstore-server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:11)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [E:\Personal\Homework\SE\bookstore-server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 22 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [E:\Personal\Homework\SE\bookstore-server\target\classes\mapping\AddressMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ba469a25.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ba469a25$$FastClassBySpringCGLIB$$fa2b283a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ba469a25.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 23 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [E:\Personal\Homework\SE\bookstore-server\target\classes\mapping\AddressMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 34 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:78)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:144)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:136)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:126)
	... 36 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 40 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 42 common frames omitted
2025-07-02 18:58:37.090 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 17572 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 18:58:37.091 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 18:58:37.091 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 18:58:37.540 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 18:58:37.541 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 18:58:37.572 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 31 ms. Found 0 Redis repository interfaces.
2025-07-02 18:58:37.703 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$bff18bc6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 18:58:37.719 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 18:58:37.903 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 18:58:37.905 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 18:58:37.905 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 18:58:37.906 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 18:58:37.909 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 18:58:37.921 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 18:58:37.927 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 18:58:37.928 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 18:58:38.006 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 18:58:38.010 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 915 ms
2025-07-02 18:58:38.031 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 18:58:38.304 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} inited
2025-07-02 18:58:38.344 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} inited
2025-07-02 18:58:38.677 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 18:58:38.678 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 18:58:39.058 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 18:58:39.237 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@51ebe88d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@57319a94, org.springframework.security.web.context.SecurityContextPersistenceFilter@21023c3d, org.springframework.security.web.header.HeaderWriterFilter@339de23c, org.springframework.web.filter.CorsFilter@279d7705, org.springframework.security.web.authentication.logout.LogoutFilter@4f33c719, com.huang.store.security.JwtAuthenticationTokenFilter@7944f5be, com.huang.store.security.CustomAuthenticationFilter@75d71665, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2a422ade, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5d52a636, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@10223a2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5f8fd209, org.springframework.security.web.session.SessionManagementFilter@f9e305e, org.springframework.security.web.access.ExceptionTranslationFilter@1ffc6a09, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@a5e6be4]
2025-07-02 18:58:39.269 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-02 18:58:39.301 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 2404 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 18:58:39.302 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 18:58:39.303 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 18:58:39.470 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 18:58:39.492 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 18:58:39.494 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-02 18:58:39.494 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-02 18:58:39.496 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 18:58:39.512 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 2.513 seconds (JVM running for 35.417)
2025-07-02 18:58:40.183 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 18:58:40.187 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 18:58:40.221 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22 ms. Found 0 Redis repository interfaces.
2025-07-02 18:58:40.555 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$a960b964] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 18:58:40.574 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 18:58:41.061 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 18:58:41.062 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 18:58:41.062 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 18:58:41.063 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 18:58:41.069 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 18:58:41.076 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 18:58:41.078 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 18:58:41.079 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 18:58:41.139 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 18:58:41.139 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1644 ms
2025-07-02 18:58:41.144 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 18:58:42.089 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-02 18:58:42.119 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-02 18:58:42.478 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 18:58:42.479 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 18:58:43.013 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 18:58:43.164 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@754cadf9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@398b3d83, org.springframework.security.web.context.SecurityContextPersistenceFilter@5e48a1f, org.springframework.security.web.header.HeaderWriterFilter@125ff594, org.springframework.web.filter.CorsFilter@2dd98fae, org.springframework.security.web.authentication.logout.LogoutFilter@5418c6c6, com.huang.store.security.JwtAuthenticationTokenFilter@7c41c7a0, com.huang.store.security.CustomAuthenticationFilter@12e6cd99, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7f46c9f1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2d43a4f4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3dc67b18, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3909a7ff, org.springframework.security.web.session.SessionManagementFilter@8af8429, org.springframework.security.web.access.ExceptionTranslationFilter@68e84c2e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@69813d02]
2025-07-02 18:58:43.508 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2025-07-02 18:58:43.532 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 18:58:43.536 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8080 is already in use
2025-07-02 18:58:43.552 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-02 18:58:43.556 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-02 18:58:43.556 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-02 18:58:43.558 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-02 18:58:43.561 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-02 18:58:43.561 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-02 18:58:43.566 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-02 18:58:43.569 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-02 18:58:43.575 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-02 18:58:43.593 [restartedMain] ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2025-07-02 19:01:03.076 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-02 19:01:03.120 [main] INFO  com.huang.store.StoreApplication - Starting StoreApplication v0.0.1-SNAPSHOT using Java 21.0.5 on OLIVIA with PID 17552 (E:\Personal\Homework\SE\bookstore-server\target\store-0.0.1-SNAPSHOT.jar started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 19:01:03.122 [main] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 19:01:03.125 [main] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 19:01:04.944 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 19:01:04.947 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 19:01:05.019 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 48 ms. Found 0 Redis repository interfaces.
2025-07-02 19:01:05.420 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$98d83de2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 19:01:05.442 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 19:01:06.343 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 19:01:06.358 [main] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 19:01:06.363 [main] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 19:01:06.365 [main] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 19:01:06.382 [main] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 19:01:06.430 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 19:01:06.449 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 19:01:06.516 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 19:01:06.741 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 19:01:06.742 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3288 ms
2025-07-02 19:01:06.754 [main] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 19:01:09.453 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-02 19:01:09.504 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-02 19:01:10.779 [main] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 19:01:10.780 [main] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 19:01:12.425 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 19:01:12.774 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2676dc05, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@b0a1231, org.springframework.security.web.context.SecurityContextPersistenceFilter@2aa7399c, org.springframework.security.web.header.HeaderWriterFilter@12a14b74, org.springframework.web.filter.CorsFilter@4833eff3, org.springframework.security.web.authentication.logout.LogoutFilter@2f860823, com.huang.store.security.JwtAuthenticationTokenFilter@26b95b0b, com.huang.store.security.CustomAuthenticationFilter@64b3b1ce, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1f67761b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@708f018e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6d60899e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4694f434, org.springframework.security.web.session.SessionManagementFilter@e76b097, org.springframework.security.web.access.ExceptionTranslationFilter@32fa809f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4b4ee511]
2025-07-02 19:01:13.463 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 19:01:13.503 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 19:01:13.531 [main] INFO  com.huang.store.StoreApplication - Started StoreApplication in 11.444 seconds (JVM running for 12.005)
2025-07-02 19:02:30.328 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-02 19:02:30.347 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 26584 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 19:02:30.348 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 19:02:30.348 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 19:02:30.482 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-02 19:02:30.482 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-02 19:02:31.072 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 19:02:31.075 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 19:02:31.103 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
2025-07-02 19:02:31.373 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$81281ddb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 19:02:31.388 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 19:02:31.797 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 19:02:31.798 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 19:02:31.798 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 19:02:31.798 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 19:02:31.803 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 19:02:31.811 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 19:02:31.813 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 19:02:31.814 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 19:02:31.874 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 19:02:31.875 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1392 ms
2025-07-02 19:02:31.879 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 19:02:32.784 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-02 19:02:32.810 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-02 19:02:33.144 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 19:02:33.144 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 19:02:33.735 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 19:02:33.906 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6f6bc69c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@26f1b8ae, org.springframework.security.web.context.SecurityContextPersistenceFilter@411888c4, org.springframework.security.web.header.HeaderWriterFilter@587adcaa, org.springframework.web.filter.CorsFilter@7ab45ebb, org.springframework.security.web.authentication.logout.LogoutFilter@5e48a1f, com.huang.store.security.JwtAuthenticationTokenFilter@605a6a4c, com.huang.store.security.CustomAuthenticationFilter@3aee410e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@34f12b69, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1c54d873, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1aea0a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@45ed50df, org.springframework.security.web.session.SessionManagementFilter@9b4babb, org.springframework.security.web.access.ExceptionTranslationFilter@6e8a384e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@75ecfb0]
2025-07-02 19:02:34.194 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 19:02:34.215 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 19:02:34.231 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 19:02:34.240 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 4.254 seconds (JVM running for 4.712)
2025-07-02 19:03:24.357 [http-nio-8080-exec-3] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-02 19:03:24.358 [http-nio-8080-exec-3] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-02 19:03:24.359 [http-nio-8080-exec-3] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-02 19:03:24.466 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ0NTkwMjMyNSwiZXhwIjoxNzUxNDQ3NzAyfQ.ugxw5YvCTXbZAKbWtMcLRNHeJccFPi161XkIE8vRyaYeUqpFqMzZg98OXR5b86v1ByXK1jDZu3G0LDzTPTzKkw
2025-07-02 19:03:24.466 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ0NTkwMjMyNSwiZXhwIjoxNzUxNDQ3NzAyfQ.ugxw5YvCTXbZAKbWtMcLRNHeJccFPi161XkIE8vRyaYeUqpFqMzZg98OXR5b86v1ByXK1jDZu3G0LDzTPTzKkw
2025-07-02 19:03:24.466 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ0NTkwMjMyNSwiZXhwIjoxNzUxNDQ3NzAyfQ.ugxw5YvCTXbZAKbWtMcLRNHeJccFPi161XkIE8vRyaYeUqpFqMzZg98OXR5b86v1ByXK1jDZu3G0LDzTPTzKkw
2025-07-02 19:03:24.466 [http-nio-8080-exec-2] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ0NTkwMjMyNSwiZXhwIjoxNzUxNDQ3NzAyfQ.ugxw5YvCTXbZAKbWtMcLRNHeJccFPi161XkIE8vRyaYeUqpFqMzZg98OXR5b86v1ByXK1jDZu3G0LDzTPTzKkw
2025-07-02 19:03:24.466 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ0NTkwMjMyNSwiZXhwIjoxNzUxNDQ3NzAyfQ.ugxw5YvCTXbZAKbWtMcLRNHeJccFPi161XkIE8vRyaYeUqpFqMzZg98OXR5b86v1ByXK1jDZu3G0LDzTPTzKkw
2025-07-02 19:03:24.466 [http-nio-8080-exec-6] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ0NTkwMjMyNSwiZXhwIjoxNzUxNDQ3NzAyfQ.ugxw5YvCTXbZAKbWtMcLRNHeJccFPi161XkIE8vRyaYeUqpFqMzZg98OXR5b86v1ByXK1jDZu3G0LDzTPTzKkw
2025-07-02 19:03:24.506 [http-nio-8080-exec-5] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 19:03:24.548 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 19:03:24.548 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 19:03:24.548 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 19:03:24.548 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:03:24.548 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 19:03:24.548 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 19:03:24.583 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:24.583 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:24.583 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:24.583 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:24.583 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:24.583 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:24.583 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 19:03:24.583 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:03:24.583 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:03:24.583 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 19:03:24.583 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 19:03:24.584 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 19:03:24.665 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 19:03:24.667 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:03:24.667 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:03:24.667 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 19:03:24.670 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 19:03:24.689 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 19:03:24.690 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 19:03:24.689 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:03:24.689 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 19:03:24.696 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 19:03:24.696 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 19:03:24.699 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 19:03:24.699 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:03:24.700 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:24.699 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:03:24.699 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:03:24.700 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:24.700 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:03:24.700 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:24.701 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:24.701 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 19:03:24.702 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:03:24.701 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:03:24.701 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:03:24.702 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 19:03:24.703 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:03:24.703 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:03:24.703 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:24.704 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:03:24.704 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 19:03:24.704 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:03:24.705 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:03:24.705 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 19:03:24.706 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:03:24.709 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:03:24.711 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 19:03:24.713 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:03:24.713 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:03:24.713 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:24.713 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:24.713 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:03:24.713 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:03:24.714 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 19:03:24.714 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 19:03:24.718 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:03:24.718 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:03:24.719 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:03:24.719 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:03:24.719 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:24.719 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:24.719 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:03:24.719 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:03:24.719 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 19:03:24.720 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 19:03:24.723 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:03:24.724 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:03:24.724 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:03:24.724 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:24.724 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:03:24.725 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 19:03:24.725 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:03:24.725 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:24.725 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:03:24.725 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 19:03:24.726 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 19:03:24.726 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:03:24.728 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:03:24.732 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:03:24.732 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:24.732 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:03:24.732 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 19:03:24.735 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:03:24.736 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:03:24.736 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:24.736 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:03:24.736 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 19:03:24.738 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:03:31.576 [http-nio-8080-exec-7] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ0NTkwMjMyNSwiZXhwIjoxNzUxNDQ3NzAyfQ.ugxw5YvCTXbZAKbWtMcLRNHeJccFPi161XkIE8vRyaYeUqpFqMzZg98OXR5b86v1ByXK1jDZu3G0LDzTPTzKkw
2025-07-02 19:03:31.717 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 19:03:31.717 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:31.717 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 19:03:31.718 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: a123456@example.com(String)
2025-07-02 19:03:31.724 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 19:03:31.730 [http-nio-8080-exec-7] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:a123456@example.com    数据库密码:$2a$10$bhbP823Lbav2RL7Su6fd7eZsAYkKvrCoRPLG5prw240ncy1A4REHu
2025-07-02 19:03:31.845 [http-nio-8080-exec-7] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=a123456@example.com, password=$2a$10$bhbP823Lbav2RL7Su6fd7eZsAYkKvrCoRPLG5prw240ncy1A4REHu, enabled=true, roles=[ROLE_USER]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=DB02438FFFBE1B9899E075FC7FC6311B], Granted Authorities=[ROLE_USER]]
2025-07-02 19:03:31.864 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 19:03:31.864 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:31.864 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 19:03:31.864 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: a123456@example.com(String)
2025-07-02 19:03:31.870 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 19:03:32.980 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 19:03:32.980 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 19:03:32.980 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:32.980 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 19:03:32.980 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:32.980 [http-nio-8080-exec-5] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 19:03:32.980 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:03:32.981 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 19:03:32.980 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:32.980 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 19:03:32.981 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:03:32.981 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 19:03:32.981 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:32.981 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:32.981 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:32.981 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 19:03:32.982 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 19:03:32.982 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 19:03:32.982 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:03:32.982 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:03:32.982 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 19:03:32.983 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 19:03:32.983 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 19:03:32.985 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 19:03:32.984 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 19:03:32.984 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:03:32.986 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 19:03:32.986 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:03:32.988 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 19:03:32.988 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:32.988 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 19:03:32.988 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 19:03:32.990 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 19:03:32.988 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:32.988 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 19:03:32.989 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:03:32.990 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 19:03:32.991 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:03:32.990 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:03:32.991 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:03:32.991 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:03:32.992 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:32.992 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:32.992 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:03:32.992 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:32.996 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:03:32.997 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:03:33.001 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:03:33.003 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 19:03:33.002 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:03:33.002 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:03:33.003 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:03:33.005 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:03:33.005 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:03:33.005 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 19:03:33.005 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 19:03:33.007 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:03:33.008 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:03:33.008 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:33.008 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:03:33.008 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:33.008 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:03:33.009 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 19:03:33.009 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 19:03:33.010 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:03:33.011 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:03:33.013 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:03:33.015 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:03:33.016 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:33.016 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:03:33.016 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:33.016 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:03:33.016 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 19:03:33.016 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 19:03:33.018 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:03:33.018 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:03:33.018 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:03:33.018 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:03:33.018 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:33.018 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:33.018 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:03:33.018 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:03:33.018 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 19:03:33.021 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 19:03:33.022 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:03:33.022 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:03:33.032 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:03:33.033 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:33.033 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:03:33.034 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 19:03:33.036 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:03:33.037 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:03:33.037 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:33.037 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:03:33.038 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 19:03:33.040 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:03:34.992 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 19:03:34.992 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:34.992 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 19:03:34.993 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: a123456@example.com(String)
2025-07-02 19:03:34.997 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 19:03:39.021 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:03:39.021 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:03:39.030 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:03:39.030 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:03:39.030 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:39.030 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:39.030 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:03:39.030 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:03:39.041 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:03:39.047 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:03:39.047 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 19:03:39.052 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 19:03:45.562 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:03:45.562 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:03:45.567 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:45.567 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:03:45.567 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:03:45.569 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 19:03:54.554 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:03:54.554 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:03:54.555 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:03:54.555 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:03:54.555 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:54.555 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:03:54.556 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:03:54.556 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:03:54.557 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:03:54.557 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:03:54.561 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 19:03:54.566 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 19:04:07.508 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户领取优惠券: a123456@example.com -> 1
2025-07-02 19:04:07.508 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==>  Preparing: SELECT * FROM coupon_template WHERE id = ?
2025-07-02 19:04:07.508 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:04:07.509 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE id = ? ::: DataSources: slave
2025-07-02 19:04:07.510 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==> Parameters: 1(Integer)
2025-07-02 19:04:07.512 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - <==      Total: 1
2025-07-02 19:04:07.514 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - ==>  Preparing: SELECT (total_quantity - received_quantity) > 0 FROM coupon_template WHERE id = ?
2025-07-02 19:04:07.514 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:04:07.514 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT (total_quantity - received_quantity) > 0 FROM coupon_template WHERE id = ? ::: DataSources: slave
2025-07-02 19:04:07.514 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - ==> Parameters: 1(Integer)
2025-07-02 19:04:07.514 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - <==      Total: 1
2025-07-02 19:04:07.514 [http-nio-8080-exec-7] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - ==>  Preparing: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND account = ?
2025-07-02 19:04:07.514 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:04:07.514 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND account = ? ::: DataSources: slave
2025-07-02 19:04:07.514 [http-nio-8080-exec-7] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - ==> Parameters: 1(Integer), a123456@example.com(String)
2025-07-02 19:04:07.514 [http-nio-8080-exec-7] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - <==      Total: 1
2025-07-02 19:04:07.514 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserCouponMapper.insert - ==>  Preparing: INSERT INTO user_coupon (coupon_template_id, account, coupon_code, status, receive_time, expire_time, discount_amount, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-02 19:04:07.532 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:04:07.532 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: INSERT INTO user_coupon (coupon_template_id, account, coupon_code, status, receive_time, expire_time, discount_amount, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) ::: DataSources: master
2025-07-02 19:04:07.713 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserCouponMapper.insert - ==> Parameters: 1(Integer), a123456@example.com(String), FULL20250702001548977(String), 1(Integer), 2025-07-02 19:04:07.514(Timestamp), 2025-08-01 19:04:07.514(Timestamp), 0(BigDecimal), 2025-07-02 19:04:07.514(Timestamp), 2025-07-02 19:04:07.514(Timestamp)
2025-07-02 19:04:07.803 [http-nio-8080-exec-7] ERROR druid.sql.Statement - {conn-10001, pstmt-20002} execute error. INSERT INTO user_coupon (coupon_template_id, account, coupon_code, status, receive_time, expire_time, discount_amount, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
java.sql.SQLSyntaxErrorException: Unknown column 'create_time' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3446)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:639)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:158)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:483)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.MasterSlavePreparedStatement.execute(MasterSlavePreparedStatement.java:118)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy4/jdk.proxy4.$Proxy134.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy83.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy107.insert(Unknown Source)
	at com.huang.store.service.CouponServiceImpl.claimCoupon(CouponServiceImpl.java:151)
	at com.huang.store.service.CouponServiceImpl$$FastClassBySpringCGLIB$$fe79b59b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.huang.store.service.CouponServiceImpl$$EnhancerBySpringCGLIB$$c36abd0e.claimCoupon(<generated>)
	at com.huang.store.controller.CouponController.claimCoupon(CouponController.java:173)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-02 19:04:07.884 [http-nio-8080-exec-7] ERROR com.huang.store.controller.CouponController - 领取优惠券失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'create_time' in 'field list'
### The error may exist in com/huang/store/mapper/UserCouponMapper.java (best guess)
### The error may involve com.huang.store.mapper.UserCouponMapper.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO user_coupon (coupon_template_id, account, coupon_code, status, receive_time, expire_time, discount_amount, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'create_time' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'create_time' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:236)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy83.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy107.insert(Unknown Source)
	at com.huang.store.service.CouponServiceImpl.claimCoupon(CouponServiceImpl.java:151)
	at com.huang.store.service.CouponServiceImpl$$FastClassBySpringCGLIB$$fe79b59b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.huang.store.service.CouponServiceImpl$$EnhancerBySpringCGLIB$$c36abd0e.claimCoupon(<generated>)
	at com.huang.store.controller.CouponController.claimCoupon(CouponController.java:173)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'create_time' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3446)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:639)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:158)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:483)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.MasterSlavePreparedStatement.execute(MasterSlavePreparedStatement.java:118)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy4/jdk.proxy4.$Proxy134.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 128 common frames omitted
2025-07-02 19:04:17.730 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户领取优惠券: a123456@example.com -> 2
2025-07-02 19:04:17.730 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==>  Preparing: SELECT * FROM coupon_template WHERE id = ?
2025-07-02 19:04:17.730 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:04:17.730 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE id = ? ::: DataSources: slave
2025-07-02 19:04:17.740 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==> Parameters: 2(Integer)
2025-07-02 19:04:17.742 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - <==      Total: 1
2025-07-02 19:04:17.745 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - ==>  Preparing: SELECT (total_quantity - received_quantity) > 0 FROM coupon_template WHERE id = ?
2025-07-02 19:04:17.745 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:04:17.745 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT (total_quantity - received_quantity) > 0 FROM coupon_template WHERE id = ? ::: DataSources: slave
2025-07-02 19:04:17.745 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - ==> Parameters: 2(Integer)
2025-07-02 19:04:17.748 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - <==      Total: 1
2025-07-02 19:04:17.749 [http-nio-8080-exec-5] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - ==>  Preparing: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND account = ?
2025-07-02 19:04:17.749 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:04:17.749 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND account = ? ::: DataSources: slave
2025-07-02 19:04:17.750 [http-nio-8080-exec-5] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - ==> Parameters: 2(Integer), a123456@example.com(String)
2025-07-02 19:04:17.751 [http-nio-8080-exec-5] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - <==      Total: 1
2025-07-02 19:04:17.752 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserCouponMapper.insert - ==>  Preparing: INSERT INTO user_coupon (coupon_template_id, account, coupon_code, status, receive_time, expire_time, discount_amount, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-02 19:04:17.752 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:04:17.752 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: INSERT INTO user_coupon (coupon_template_id, account, coupon_code, status, receive_time, expire_time, discount_amount, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) ::: DataSources: master
2025-07-02 19:04:17.754 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserCouponMapper.insert - ==> Parameters: 2(Integer), a123456@example.com(String), FULL20250702002328306(String), 1(Integer), 2025-07-02 19:04:17.752(Timestamp), 2025-07-17 19:04:17.752(Timestamp), 0(BigDecimal), 2025-07-02 19:04:17.752(Timestamp), 2025-07-02 19:04:17.752(Timestamp)
2025-07-02 19:04:17.756 [http-nio-8080-exec-5] ERROR druid.sql.Statement - {conn-10001, pstmt-20003} execute error. INSERT INTO user_coupon (coupon_template_id, account, coupon_code, status, receive_time, expire_time, discount_amount, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
java.sql.SQLSyntaxErrorException: Unknown column 'create_time' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3446)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:639)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:158)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:483)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.MasterSlavePreparedStatement.execute(MasterSlavePreparedStatement.java:118)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy4/jdk.proxy4.$Proxy134.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy83.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy107.insert(Unknown Source)
	at com.huang.store.service.CouponServiceImpl.claimCoupon(CouponServiceImpl.java:151)
	at com.huang.store.service.CouponServiceImpl$$FastClassBySpringCGLIB$$fe79b59b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.huang.store.service.CouponServiceImpl$$EnhancerBySpringCGLIB$$c36abd0e.claimCoupon(<generated>)
	at com.huang.store.controller.CouponController.claimCoupon(CouponController.java:173)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-02 19:04:17.767 [http-nio-8080-exec-5] ERROR com.huang.store.controller.CouponController - 领取优惠券失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'create_time' in 'field list'
### The error may exist in com/huang/store/mapper/UserCouponMapper.java (best guess)
### The error may involve com.huang.store.mapper.UserCouponMapper.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO user_coupon (coupon_template_id, account, coupon_code, status, receive_time, expire_time, discount_amount, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'create_time' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'create_time' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:236)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy83.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy107.insert(Unknown Source)
	at com.huang.store.service.CouponServiceImpl.claimCoupon(CouponServiceImpl.java:151)
	at com.huang.store.service.CouponServiceImpl$$FastClassBySpringCGLIB$$fe79b59b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.huang.store.service.CouponServiceImpl$$EnhancerBySpringCGLIB$$c36abd0e.claimCoupon(<generated>)
	at com.huang.store.controller.CouponController.claimCoupon(CouponController.java:173)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'create_time' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3446)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:639)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:158)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:483)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.MasterSlavePreparedStatement.execute(MasterSlavePreparedStatement.java:118)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy4/jdk.proxy4.$Proxy134.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 128 common frames omitted
2025-07-02 19:04:20.448 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户领取优惠券: a123456@example.com -> 3
2025-07-02 19:04:20.449 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==>  Preparing: SELECT * FROM coupon_template WHERE id = ?
2025-07-02 19:04:20.449 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:04:20.449 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE id = ? ::: DataSources: slave
2025-07-02 19:04:20.450 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==> Parameters: 3(Integer)
2025-07-02 19:04:20.454 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - <==      Total: 1
2025-07-02 19:04:20.454 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - ==>  Preparing: SELECT (total_quantity - received_quantity) > 0 FROM coupon_template WHERE id = ?
2025-07-02 19:04:20.454 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:04:20.456 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT (total_quantity - received_quantity) > 0 FROM coupon_template WHERE id = ? ::: DataSources: slave
2025-07-02 19:04:20.456 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - ==> Parameters: 3(Integer)
2025-07-02 19:04:20.458 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - <==      Total: 1
2025-07-02 19:04:20.460 [http-nio-8080-exec-6] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - ==>  Preparing: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND account = ?
2025-07-02 19:04:20.460 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:04:20.460 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND account = ? ::: DataSources: slave
2025-07-02 19:04:20.460 [http-nio-8080-exec-6] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - ==> Parameters: 3(Integer), a123456@example.com(String)
2025-07-02 19:04:20.463 [http-nio-8080-exec-6] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - <==      Total: 1
2025-07-02 19:04:20.464 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserCouponMapper.insert - ==>  Preparing: INSERT INTO user_coupon (coupon_template_id, account, coupon_code, status, receive_time, expire_time, discount_amount, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-02 19:04:20.465 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:04:20.465 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: INSERT INTO user_coupon (coupon_template_id, account, coupon_code, status, receive_time, expire_time, discount_amount, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) ::: DataSources: master
2025-07-02 19:04:20.466 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserCouponMapper.insert - ==> Parameters: 3(Integer), a123456@example.com(String), DISC20250702003945416(String), 1(Integer), 2025-07-02 19:04:20.464(Timestamp), 2025-07-09 19:04:20.464(Timestamp), 0(BigDecimal), 2025-07-02 19:04:20.464(Timestamp), 2025-07-02 19:04:20.464(Timestamp)
2025-07-02 19:04:20.469 [http-nio-8080-exec-6] ERROR druid.sql.Statement - {conn-10001, pstmt-20004} execute error. INSERT INTO user_coupon (coupon_template_id, account, coupon_code, status, receive_time, expire_time, discount_amount, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
java.sql.SQLSyntaxErrorException: Unknown column 'create_time' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3446)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:639)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:158)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:483)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.MasterSlavePreparedStatement.execute(MasterSlavePreparedStatement.java:118)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy4/jdk.proxy4.$Proxy134.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy83.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy107.insert(Unknown Source)
	at com.huang.store.service.CouponServiceImpl.claimCoupon(CouponServiceImpl.java:151)
	at com.huang.store.service.CouponServiceImpl$$FastClassBySpringCGLIB$$fe79b59b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.huang.store.service.CouponServiceImpl$$EnhancerBySpringCGLIB$$c36abd0e.claimCoupon(<generated>)
	at com.huang.store.controller.CouponController.claimCoupon(CouponController.java:173)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-02 19:04:20.476 [http-nio-8080-exec-6] ERROR com.huang.store.controller.CouponController - 领取优惠券失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'create_time' in 'field list'
### The error may exist in com/huang/store/mapper/UserCouponMapper.java (best guess)
### The error may involve com.huang.store.mapper.UserCouponMapper.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO user_coupon (coupon_template_id, account, coupon_code, status, receive_time, expire_time, discount_amount, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'create_time' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'create_time' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:236)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy83.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy107.insert(Unknown Source)
	at com.huang.store.service.CouponServiceImpl.claimCoupon(CouponServiceImpl.java:151)
	at com.huang.store.service.CouponServiceImpl$$FastClassBySpringCGLIB$$fe79b59b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.huang.store.service.CouponServiceImpl$$EnhancerBySpringCGLIB$$c36abd0e.claimCoupon(<generated>)
	at com.huang.store.controller.CouponController.claimCoupon(CouponController.java:173)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'create_time' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3446)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:639)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:158)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:483)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.MasterSlavePreparedStatement.execute(MasterSlavePreparedStatement.java:118)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy4/jdk.proxy4.$Proxy134.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 128 common frames omitted
2025-07-02 19:04:22.381 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户领取优惠券: a123456@example.com -> 4
2025-07-02 19:04:22.381 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==>  Preparing: SELECT * FROM coupon_template WHERE id = ?
2025-07-02 19:04:22.381 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:04:22.381 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE id = ? ::: DataSources: slave
2025-07-02 19:04:22.381 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==> Parameters: 4(Integer)
2025-07-02 19:04:22.381 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - <==      Total: 1
2025-07-02 19:04:22.388 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - ==>  Preparing: SELECT (total_quantity - received_quantity) > 0 FROM coupon_template WHERE id = ?
2025-07-02 19:04:22.388 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:04:22.388 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT (total_quantity - received_quantity) > 0 FROM coupon_template WHERE id = ? ::: DataSources: slave
2025-07-02 19:04:22.388 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - ==> Parameters: 4(Integer)
2025-07-02 19:04:22.388 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - <==      Total: 1
2025-07-02 19:04:22.388 [http-nio-8080-exec-4] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - ==>  Preparing: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND account = ?
2025-07-02 19:04:22.388 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:04:22.396 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND account = ? ::: DataSources: slave
2025-07-02 19:04:22.397 [http-nio-8080-exec-4] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - ==> Parameters: 4(Integer), a123456@example.com(String)
2025-07-02 19:04:22.400 [http-nio-8080-exec-4] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - <==      Total: 1
2025-07-02 19:04:22.400 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserCouponMapper.insert - ==>  Preparing: INSERT INTO user_coupon (coupon_template_id, account, coupon_code, status, receive_time, expire_time, discount_amount, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-02 19:04:22.401 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:04:22.401 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: INSERT INTO user_coupon (coupon_template_id, account, coupon_code, status, receive_time, expire_time, discount_amount, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) ::: DataSources: master
2025-07-02 19:04:22.404 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserCouponMapper.insert - ==> Parameters: 4(Integer), a123456@example.com(String), DISC20250702004763156(String), 1(Integer), 2025-07-02 19:04:22.4(Timestamp), 2025-08-01 19:04:22.4(Timestamp), 0(BigDecimal), 2025-07-02 19:04:22.4(Timestamp), 2025-07-02 19:04:22.4(Timestamp)
2025-07-02 19:04:22.407 [http-nio-8080-exec-4] ERROR druid.sql.Statement - {conn-10001, pstmt-20005} execute error. INSERT INTO user_coupon (coupon_template_id, account, coupon_code, status, receive_time, expire_time, discount_amount, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
java.sql.SQLSyntaxErrorException: Unknown column 'create_time' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3446)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:639)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:158)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:483)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.MasterSlavePreparedStatement.execute(MasterSlavePreparedStatement.java:118)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy4/jdk.proxy4.$Proxy134.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy83.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy107.insert(Unknown Source)
	at com.huang.store.service.CouponServiceImpl.claimCoupon(CouponServiceImpl.java:151)
	at com.huang.store.service.CouponServiceImpl$$FastClassBySpringCGLIB$$fe79b59b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.huang.store.service.CouponServiceImpl$$EnhancerBySpringCGLIB$$c36abd0e.claimCoupon(<generated>)
	at com.huang.store.controller.CouponController.claimCoupon(CouponController.java:173)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-02 19:04:22.415 [http-nio-8080-exec-4] ERROR com.huang.store.controller.CouponController - 领取优惠券失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'create_time' in 'field list'
### The error may exist in com/huang/store/mapper/UserCouponMapper.java (best guess)
### The error may involve com.huang.store.mapper.UserCouponMapper.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO user_coupon (coupon_template_id, account, coupon_code, status, receive_time, expire_time, discount_amount, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'create_time' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'create_time' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:236)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy83.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy107.insert(Unknown Source)
	at com.huang.store.service.CouponServiceImpl.claimCoupon(CouponServiceImpl.java:151)
	at com.huang.store.service.CouponServiceImpl$$FastClassBySpringCGLIB$$fe79b59b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.huang.store.service.CouponServiceImpl$$EnhancerBySpringCGLIB$$c36abd0e.claimCoupon(<generated>)
	at com.huang.store.controller.CouponController.claimCoupon(CouponController.java:173)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'create_time' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3446)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:639)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:158)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:483)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.MasterSlavePreparedStatement.execute(MasterSlavePreparedStatement.java:118)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy4/jdk.proxy4.$Proxy134.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 128 common frames omitted
2025-07-02 19:04:58.677 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-02 19:04:58.679 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-02 19:04:58.679 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-02 19:04:58.682 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-02 19:06:56.301 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-02 19:06:56.329 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 26968 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 19:06:56.329 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 19:06:56.330 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 19:06:56.543 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-02 19:06:56.543 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-02 19:06:57.472 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 19:06:57.472 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 19:06:57.503 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.
2025-07-02 19:06:57.862 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$53b8ba1e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 19:06:57.869 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 19:06:58.436 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 19:06:58.436 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 19:06:58.436 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 19:06:58.436 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 19:06:58.452 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 19:06:58.463 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 19:06:58.468 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 19:06:58.471 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 19:06:58.557 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 19:06:58.558 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2006 ms
2025-07-02 19:06:58.565 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 19:07:00.112 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-02 19:07:00.154 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-02 19:07:00.795 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 19:07:00.796 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 19:07:01.558 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 19:07:01.753 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7f628e86, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6c7da0fc, org.springframework.security.web.context.SecurityContextPersistenceFilter@9ecfb0f, org.springframework.security.web.header.HeaderWriterFilter@6083f7, org.springframework.web.filter.CorsFilter@44e5d8d0, org.springframework.security.web.authentication.logout.LogoutFilter@40da2433, com.huang.store.security.JwtAuthenticationTokenFilter@38042ba6, com.huang.store.security.CustomAuthenticationFilter@7d2686d3, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@523f8af4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@ebb3b95, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@662dbd3b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6e764fcb, org.springframework.security.web.session.SessionManagementFilter@cd40f00, org.springframework.security.web.access.ExceptionTranslationFilter@18dd7fb3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@53c5a80e]
2025-07-02 19:07:02.144 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 19:07:02.167 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 19:07:02.189 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 19:07:02.201 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 6.437 seconds (JVM running for 6.869)
2025-07-02 19:07:23.545 [http-nio-8080-exec-5] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-02 19:07:23.556 [http-nio-8080-exec-5] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-02 19:07:23.558 [http-nio-8080-exec-5] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-07-02 19:07:23.767 [http-nio-8080-exec-5] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 19:07:23.823 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:07:23.823 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 19:07:23.823 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 19:07:23.823 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 19:07:23.823 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 19:07:23.823 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 19:07:23.850 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:23.850 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:23.867 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 19:07:23.850 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:23.873 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 19:07:23.850 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:23.851 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:23.851 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:23.858 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:07:23.874 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 19:07:23.874 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 19:07:23.875 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:07:24.053 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 19:07:24.053 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:07:24.067 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 19:07:24.165 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:07:24.223 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 19:07:24.223 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 19:07:24.236 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:07:24.236 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 19:07:24.272 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 19:07:24.272 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 19:07:24.281 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 19:07:24.298 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:07:24.299 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:07:24.298 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 19:07:24.300 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:07:24.304 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:24.309 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 19:07:24.318 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:24.350 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:07:24.351 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:07:24.351 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:24.351 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:07:24.318 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:24.332 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:24.342 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:07:24.356 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 19:07:24.356 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:07:24.364 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:07:24.365 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 19:07:24.366 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:07:24.374 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:07:24.378 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:07:24.382 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 19:07:24.396 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:07:24.401 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 19:07:24.401 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:07:24.407 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:07:24.412 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:24.411 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:07:24.413 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:24.413 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:07:24.414 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:07:24.423 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 19:07:24.416 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 19:07:24.432 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:07:24.437 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:07:24.439 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:07:24.440 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:07:24.444 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:24.444 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:07:24.440 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:24.445 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:07:24.445 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 19:07:24.447 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:07:24.448 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:07:24.448 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:24.448 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:07:24.448 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 19:07:24.450 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:07:24.445 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 19:07:24.516 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:07:24.548 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:07:24.558 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 19:07:24.564 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:24.577 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:07:24.580 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 19:07:24.600 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:07:24.628 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:07:24.644 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:24.658 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:07:24.664 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 19:07:24.685 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:07:24.712 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:07:24.733 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:24.750 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:07:24.766 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 19:07:24.792 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:07:35.986 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 19:07:35.990 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:35.990 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 19:07:35.992 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: a123456@example.com(String)
2025-07-02 19:07:35.992 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 19:07:36.012 [http-nio-8080-exec-7] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:a123456@example.com    数据库密码:$2a$10$bhbP823Lbav2RL7Su6fd7eZsAYkKvrCoRPLG5prw240ncy1A4REHu
2025-07-02 19:07:36.174 [http-nio-8080-exec-7] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=a123456@example.com, password=$2a$10$bhbP823Lbav2RL7Su6fd7eZsAYkKvrCoRPLG5prw240ncy1A4REHu, enabled=true, roles=[ROLE_USER]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=DB02438FFFBE1B9899E075FC7FC6311B], Granted Authorities=[ROLE_USER]]
2025-07-02 19:07:36.198 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 19:07:36.199 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:36.199 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 19:07:36.199 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: a123456@example.com(String)
2025-07-02 19:07:36.204 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 19:07:37.480 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 19:07:37.481 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:37.481 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 19:07:37.482 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 19:07:37.482 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 19:07:37.482 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:37.482 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:07:37.482 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 19:07:37.484 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:07:37.486 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:37.491 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:07:37.493 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 19:07:37.492 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:37.492 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 19:07:37.493 [http-nio-8080-exec-8] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 19:07:37.493 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:07:37.493 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 19:07:37.495 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:07:37.495 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 19:07:37.495 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 19:07:37.497 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:37.495 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:07:37.495 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 19:07:37.497 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:37.497 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:37.497 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 19:07:37.498 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:07:37.498 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 19:07:37.498 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:07:37.498 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:37.498 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 19:07:37.499 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:07:37.499 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 19:07:37.499 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:07:37.499 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:07:37.499 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 19:07:37.500 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:07:37.500 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:07:37.500 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:37.500 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:07:37.500 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:37.500 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:07:37.500 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:07:37.500 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:07:37.500 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 19:07:37.500 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 19:07:37.500 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:07:37.500 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 19:07:37.500 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:07:37.500 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:37.500 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:07:37.502 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 19:07:37.503 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:07:37.503 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:37.505 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 19:07:37.506 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 19:07:37.507 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 19:07:37.508 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:07:37.508 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 19:07:37.508 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:07:37.509 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:37.509 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:07:37.510 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 19:07:37.511 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:07:37.511 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:07:37.511 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 19:07:37.513 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:07:37.513 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:07:37.513 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:37.513 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:37.513 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:07:37.513 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:07:37.513 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 19:07:37.514 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 19:07:37.515 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:07:37.516 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:07:37.516 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:07:37.516 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:37.517 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:07:37.517 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:07:37.517 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:37.517 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:07:37.517 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 19:07:37.517 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 19:07:37.520 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:07:37.522 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:07:37.524 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:07:37.525 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:37.525 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:07:37.525 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 19:07:37.527 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:07:37.528 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:07:37.528 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:37.529 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:07:37.529 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 19:07:37.533 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:07:39.134 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 19:07:39.135 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:39.135 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 19:07:39.139 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: a123456@example.com(String)
2025-07-02 19:07:39.145 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 19:07:43.652 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:07:43.652 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:07:43.664 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:07:43.664 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:07:43.664 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:43.664 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:43.664 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:07:43.664 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:07:43.664 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:07:43.674 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:07:43.674 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 19:07:43.676 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 19:07:45.442 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户领取优惠券: a123456@example.com -> 1
2025-07-02 19:07:45.444 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==>  Preparing: SELECT * FROM coupon_template WHERE id = ?
2025-07-02 19:07:45.444 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:45.444 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE id = ? ::: DataSources: slave
2025-07-02 19:07:45.446 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==> Parameters: 1(Integer)
2025-07-02 19:07:45.447 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - <==      Total: 1
2025-07-02 19:07:45.448 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - ==>  Preparing: SELECT (total_quantity - received_quantity) > 0 FROM coupon_template WHERE id = ?
2025-07-02 19:07:45.449 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:45.449 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT (total_quantity - received_quantity) > 0 FROM coupon_template WHERE id = ? ::: DataSources: slave
2025-07-02 19:07:45.452 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - ==> Parameters: 1(Integer)
2025-07-02 19:07:45.454 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - <==      Total: 1
2025-07-02 19:07:45.456 [http-nio-8080-exec-7] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - ==>  Preparing: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND account = ?
2025-07-02 19:07:45.457 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:45.457 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND account = ? ::: DataSources: slave
2025-07-02 19:07:45.458 [http-nio-8080-exec-7] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - ==> Parameters: 1(Integer), a123456@example.com(String)
2025-07-02 19:07:45.462 [http-nio-8080-exec-7] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - <==      Total: 1
2025-07-02 19:07:45.468 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserCouponMapper.insert - ==>  Preparing: INSERT INTO user_coupon (coupon_template_id, account, coupon_code, status, receive_time, expire_time, discount_amount, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-02 19:07:45.472 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:07:45.472 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: INSERT INTO user_coupon (coupon_template_id, account, coupon_code, status, receive_time, expire_time, discount_amount, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) ::: DataSources: master
2025-07-02 19:07:45.617 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserCouponMapper.insert - ==> Parameters: 1(Integer), a123456@example.com(String), FULL20250702001220412(String), 1(Integer), 2025-07-02 19:07:45.467(Timestamp), 2025-08-01 19:07:45.467(Timestamp), 0(BigDecimal), 2025-07-02 19:07:45.467(Timestamp), 2025-07-02 19:07:45.467(Timestamp)
2025-07-02 19:07:45.655 [http-nio-8080-exec-7] ERROR druid.sql.Statement - {conn-10001, pstmt-20001} execute error. INSERT INTO user_coupon (coupon_template_id, account, coupon_code, status, receive_time, expire_time, discount_amount, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
java.sql.SQLSyntaxErrorException: Unknown column 'create_time' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3446)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:639)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:158)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:483)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.MasterSlavePreparedStatement.execute(MasterSlavePreparedStatement.java:118)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy4/jdk.proxy4.$Proxy134.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy83.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy107.insert(Unknown Source)
	at com.huang.store.service.CouponServiceImpl.claimCoupon(CouponServiceImpl.java:151)
	at com.huang.store.service.CouponServiceImpl$$FastClassBySpringCGLIB$$fe79b59b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.huang.store.service.CouponServiceImpl$$EnhancerBySpringCGLIB$$d6326227.claimCoupon(<generated>)
	at com.huang.store.controller.CouponController.claimCoupon(CouponController.java:173)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-02 19:07:45.712 [http-nio-8080-exec-7] ERROR com.huang.store.controller.CouponController - 领取优惠券失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'create_time' in 'field list'
### The error may exist in com/huang/store/mapper/UserCouponMapper.java (best guess)
### The error may involve com.huang.store.mapper.UserCouponMapper.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO user_coupon (coupon_template_id, account, coupon_code, status, receive_time, expire_time, discount_amount, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'create_time' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'create_time' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:236)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy83.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy107.insert(Unknown Source)
	at com.huang.store.service.CouponServiceImpl.claimCoupon(CouponServiceImpl.java:151)
	at com.huang.store.service.CouponServiceImpl$$FastClassBySpringCGLIB$$fe79b59b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.huang.store.service.CouponServiceImpl$$EnhancerBySpringCGLIB$$d6326227.claimCoupon(<generated>)
	at com.huang.store.controller.CouponController.claimCoupon(CouponController.java:173)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'create_time' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3446)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:639)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:434)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3444)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:158)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:483)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.MasterSlavePreparedStatement.execute(MasterSlavePreparedStatement.java:118)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy4/jdk.proxy4.$Proxy134.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 128 common frames omitted
2025-07-02 19:08:17.390 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-02 19:08:17.390 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-02 19:08:17.390 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-02 19:08:17.397 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-02 19:09:46.802 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-02 19:09:46.833 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 23736 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 19:09:46.833 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 19:09:46.834 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 19:09:47.041 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-02 19:09:47.041 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-02 19:09:47.729 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 19:09:47.744 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 19:09:47.779 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 0 Redis repository interfaces.
2025-07-02 19:09:48.082 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$a960b964] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 19:09:48.100 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 19:09:48.580 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 19:09:48.580 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 19:09:48.580 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 19:09:48.580 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 19:09:48.588 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 19:09:48.598 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 19:09:48.601 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 19:09:48.602 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 19:09:48.673 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 19:09:48.674 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1631 ms
2025-07-02 19:09:48.676 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 19:09:49.692 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-02 19:09:49.739 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-02 19:09:50.156 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 19:09:50.157 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 19:09:50.686 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 19:09:50.859 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@50bfa3d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@470d020, org.springframework.security.web.context.SecurityContextPersistenceFilter@15f9a02b, org.springframework.security.web.header.HeaderWriterFilter@4817bf4e, org.springframework.web.filter.CorsFilter@6e39bb26, org.springframework.security.web.authentication.logout.LogoutFilter@102b62f3, com.huang.store.security.JwtAuthenticationTokenFilter@7c41c7a0, com.huang.store.security.CustomAuthenticationFilter@12e6cd99, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@46f7259b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5ab584d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@65d018c7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@326db93d, org.springframework.security.web.session.SessionManagementFilter@25ec493d, org.springframework.security.web.access.ExceptionTranslationFilter@cd40f00, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2c44cd65]
2025-07-02 19:09:51.142 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 19:09:51.167 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 19:09:51.176 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 19:09:51.195 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 5.021 seconds (JVM running for 5.723)
2025-07-02 19:10:41.975 [http-nio-8080-exec-2] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-02 19:10:41.975 [http-nio-8080-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-02 19:10:41.977 [http-nio-8080-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-07-02 19:10:42.086 [http-nio-8080-exec-6] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 19:10:42.114 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 19:10:42.114 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 19:10:42.114 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 19:10:42.114 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 19:10:42.114 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:10:42.114 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 19:10:42.133 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:42.133 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:42.133 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:42.133 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:42.133 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:42.133 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:42.133 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 19:10:42.133 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:10:42.133 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 19:10:42.133 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 19:10:42.133 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 19:10:42.134 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:10:42.198 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 19:10:42.200 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 19:10:42.200 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:10:42.200 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 19:10:42.216 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 19:10:42.218 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 19:10:42.218 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 19:10:42.223 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 19:10:42.223 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 19:10:42.225 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:10:42.225 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 19:10:42.226 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:42.226 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 19:10:42.228 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 19:10:42.225 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:10:42.225 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:42.226 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:10:42.229 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 19:10:42.231 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:42.232 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:10:42.234 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:10:42.235 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:10:42.235 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:10:42.235 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:10:42.235 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:10:42.235 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:42.235 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:42.235 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:10:42.235 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:10:42.235 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:10:42.239 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:10:42.239 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:10:42.239 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 19:10:42.239 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 19:10:42.239 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:10:42.241 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:10:42.242 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 19:10:42.242 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:10:42.251 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:42.252 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:10:42.252 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:10:42.253 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:42.253 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:10:42.254 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 19:10:42.254 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 19:10:42.256 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:10:42.256 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:10:42.260 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:10:42.260 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:10:42.260 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:42.260 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:42.261 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:10:42.261 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:10:42.261 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 19:10:42.262 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 19:10:42.263 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:10:42.263 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:10:42.264 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:10:42.264 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:10:42.264 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:42.264 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:42.264 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:10:42.264 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:10:42.264 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 19:10:42.265 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 19:10:42.266 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:10:42.266 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:10:42.267 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:10:42.267 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:42.267 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:10:42.268 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 19:10:42.270 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:10:42.271 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:10:42.272 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:42.272 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:10:42.273 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 19:10:42.277 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:10:45.546 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 19:10:45.546 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:45.546 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 19:10:45.546 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: a123456@example.com(String)
2025-07-02 19:10:45.546 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 19:10:45.570 [http-nio-8080-exec-7] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:a123456@example.com    数据库密码:$2a$10$bhbP823Lbav2RL7Su6fd7eZsAYkKvrCoRPLG5prw240ncy1A4REHu
2025-07-02 19:10:45.647 [http-nio-8080-exec-7] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=a123456@example.com, password=$2a$10$bhbP823Lbav2RL7Su6fd7eZsAYkKvrCoRPLG5prw240ncy1A4REHu, enabled=true, roles=[ROLE_USER]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=DB02438FFFBE1B9899E075FC7FC6311B], Granted Authorities=[ROLE_USER]]
2025-07-02 19:10:45.657 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 19:10:45.657 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:45.657 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 19:10:45.658 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: a123456@example.com(String)
2025-07-02 19:10:45.660 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 19:10:46.806 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 19:10:46.808 [http-nio-8080-exec-6] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 19:10:46.808 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:46.808 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 19:10:46.808 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 19:10:46.808 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:10:46.808 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:10:46.808 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 19:10:46.808 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:46.808 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:46.808 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 19:10:46.808 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:46.809 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:46.809 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 19:10:46.809 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 19:10:46.809 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:46.809 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:10:46.809 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 19:10:46.814 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 19:10:46.814 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 19:10:46.816 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 19:10:46.816 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:10:46.816 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 19:10:46.816 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 19:10:46.818 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 19:10:46.816 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:10:46.818 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 19:10:46.820 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:10:46.820 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 19:10:46.822 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:46.824 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:10:46.824 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 19:10:46.824 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:10:46.824 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:10:46.824 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:10:46.824 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:46.824 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 19:10:46.824 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:10:46.824 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:10:46.824 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:46.824 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 19:10:46.824 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:46.829 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 19:10:46.829 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:10:46.829 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 19:10:46.830 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:10:46.830 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:10:46.831 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 19:10:46.831 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:46.831 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:10:46.832 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 19:10:46.833 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:10:46.834 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:10:46.834 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:10:46.835 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:46.835 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:10:46.835 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:10:46.835 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 19:10:46.838 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:10:46.839 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:10:46.839 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:46.839 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:10:46.840 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 19:10:46.840 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:10:46.842 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 19:10:46.842 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:10:46.842 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:46.842 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:10:46.843 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 19:10:46.843 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:10:46.846 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:10:46.847 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:46.847 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:10:46.847 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:10:46.847 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 19:10:46.848 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:10:46.848 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:46.848 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:10:46.848 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 19:10:46.848 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:10:46.848 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:10:46.848 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:46.848 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:10:46.848 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:10:46.848 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 19:10:46.852 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:10:46.852 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:10:46.852 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:46.852 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:10:46.852 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 19:10:46.858 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:10:46.858 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:10:46.858 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:46.858 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:10:46.858 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 19:10:46.862 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:10:48.702 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 19:10:48.703 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:48.703 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 19:10:48.704 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: a123456@example.com(String)
2025-07-02 19:10:48.707 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 19:10:52.360 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:10:52.360 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:10:52.382 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:10:52.383 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:10:52.383 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:52.383 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:10:52.383 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:10:52.384 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:10:52.386 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:10:52.389 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:10:52.390 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 19:10:52.393 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 19:11:06.510 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户领取优惠券: a123456@example.com -> 1
2025-07-02 19:11:06.513 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==>  Preparing: SELECT * FROM coupon_template WHERE id = ?
2025-07-02 19:11:06.513 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:11:06.513 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE id = ? ::: DataSources: slave
2025-07-02 19:11:06.515 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==> Parameters: 1(Integer)
2025-07-02 19:11:06.515 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - <==      Total: 1
2025-07-02 19:11:06.520 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - ==>  Preparing: SELECT (total_quantity - received_quantity) > 0 FROM coupon_template WHERE id = ?
2025-07-02 19:11:06.520 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:11:06.520 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT (total_quantity - received_quantity) > 0 FROM coupon_template WHERE id = ? ::: DataSources: slave
2025-07-02 19:11:06.522 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - ==> Parameters: 1(Integer)
2025-07-02 19:11:06.522 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - <==      Total: 1
2025-07-02 19:11:06.528 [http-nio-8080-exec-7] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - ==>  Preparing: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND account = ?
2025-07-02 19:11:06.529 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:11:06.529 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND account = ? ::: DataSources: slave
2025-07-02 19:11:06.531 [http-nio-8080-exec-7] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - ==> Parameters: 1(Integer), a123456@example.com(String)
2025-07-02 19:11:06.534 [http-nio-8080-exec-7] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - <==      Total: 1
2025-07-02 19:11:06.541 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserCouponMapper.insert - ==>  Preparing: INSERT INTO user_coupon (coupon_template_id, account, coupon_code, status, receive_time, expire_time, discount_amount, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-02 19:11:06.543 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:11:06.543 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: INSERT INTO user_coupon (coupon_template_id, account, coupon_code, status, receive_time, expire_time, discount_amount, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) ::: DataSources: master
2025-07-02 19:11:06.721 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserCouponMapper.insert - ==> Parameters: 1(Integer), a123456@example.com(String), FULL20250702001359668(String), 1(Integer), 2025-07-02 19:11:06.539(Timestamp), 2025-08-01 19:11:06.539(Timestamp), 0(BigDecimal), 2025-07-02 19:11:06.539(Timestamp), 2025-07-02 19:11:06.539(Timestamp)
2025-07-02 19:11:06.732 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserCouponMapper.insert - <==    Updates: 1
2025-07-02 19:11:06.738 [http-nio-8080-exec-7] DEBUG c.h.s.m.C.incrementReceivedQuantity - ==>  Preparing: UPDATE coupon_template SET received_quantity = received_quantity + 1, update_time = NOW() WHERE id = ?
2025-07-02 19:11:06.738 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:11:06.738 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: UPDATE coupon_template SET received_quantity = received_quantity + 1, update_time = NOW() WHERE id = ? ::: DataSources: master
2025-07-02 19:11:06.744 [http-nio-8080-exec-7] DEBUG c.h.s.m.C.incrementReceivedQuantity - ==> Parameters: 1(Integer)
2025-07-02 19:11:06.748 [http-nio-8080-exec-7] DEBUG c.h.s.m.C.incrementReceivedQuantity - <==    Updates: 1
2025-07-02 19:11:06.766 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:11:06.766 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:11:06.767 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:11:06.767 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:11:06.767 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:11:06.767 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:11:06.767 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:11:06.767 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:11:06.768 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:11:06.768 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:11:06.769 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 19:11:06.769 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 19:11:09.868 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:11:09.869 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:11:09.869 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:11:09.869 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:11:09.870 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:11:09.872 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 19:11:30.638 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:11:30.638 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:11:30.638 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:11:30.638 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:11:30.638 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:11:30.638 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:11:30.638 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:11:30.638 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:11:30.639 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:11:30.639 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:11:30.640 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 19:11:30.641 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 19:11:32.579 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:11:32.580 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:11:32.580 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:11:32.580 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:11:32.582 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:11:32.586 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 19:11:34.372 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:11:34.372 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:11:34.372 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:11:34.372 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:11:34.378 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:11:34.383 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 19:11:45.665 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-02 19:11:45.667 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-02 19:11:45.667 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-02 19:11:45.670 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-02 19:13:21.990 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-02 19:13:22.012 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 6292 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 19:13:22.012 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 19:13:22.013 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 19:13:22.184 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-02 19:13:22.184 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-02 19:13:22.803 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 19:13:22.805 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 19:13:22.817 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2025-07-02 19:13:23.067 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$4429bd9c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 19:13:23.080 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 19:13:23.490 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 19:13:23.490 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 19:13:23.490 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 19:13:23.490 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 19:13:23.490 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 19:13:23.504 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 19:13:23.507 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 19:13:23.507 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 19:13:23.550 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 19:13:23.550 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1366 ms
2025-07-02 19:13:23.550 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 19:13:24.500 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-02 19:13:24.537 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-02 19:13:24.947 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 19:13:24.948 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 19:13:25.451 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 19:13:25.600 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@34ef7e06, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2e071538, org.springframework.security.web.context.SecurityContextPersistenceFilter@40835e30, org.springframework.security.web.header.HeaderWriterFilter@7915afab, org.springframework.web.filter.CorsFilter@7267ad45, org.springframework.security.web.authentication.logout.LogoutFilter@ebb3b95, com.huang.store.security.JwtAuthenticationTokenFilter@6af81a53, com.huang.store.security.CustomAuthenticationFilter@63d96b0e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@53e4b566, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1d80cfe1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3115b990, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@381eacc8, org.springframework.security.web.session.SessionManagementFilter@4e07fb6, org.springframework.security.web.access.ExceptionTranslationFilter@35ca97f6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@387c9e2e]
2025-07-02 19:13:25.867 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 19:13:25.888 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 19:13:25.900 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 19:13:25.920 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 4.396 seconds (JVM running for 5.108)
2025-07-02 19:13:31.237 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-02 19:13:31.237 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-02 19:13:31.237 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-07-02 19:13:31.414 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 19:13:31.432 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:13:31.435 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 19:13:31.496 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: a123456@example.com(String)
2025-07-02 19:13:31.519 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 19:13:31.528 [http-nio-8080-exec-1] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:a123456@example.com    数据库密码:$2a$10$bhbP823Lbav2RL7Su6fd7eZsAYkKvrCoRPLG5prw240ncy1A4REHu
2025-07-02 19:13:31.602 [http-nio-8080-exec-1] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=a123456@example.com, password=$2a$10$bhbP823Lbav2RL7Su6fd7eZsAYkKvrCoRPLG5prw240ncy1A4REHu, enabled=true, roles=[ROLE_USER]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=DB02438FFFBE1B9899E075FC7FC6311B], Granted Authorities=[ROLE_USER]]
2025-07-02 19:13:31.629 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 19:13:31.629 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:13:31.629 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 19:13:31.629 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: a123456@example.com(String)
2025-07-02 19:13:31.631 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 19:13:32.765 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 19:13:32.766 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:13:32.766 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 19:13:32.770 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 19:13:32.772 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 19:13:32.773 [http-nio-8080-exec-6] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 19:13:32.773 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:13:32.773 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:13:32.773 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:13:32.774 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 19:13:32.774 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 19:13:32.774 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:13:32.774 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:13:32.774 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 19:13:32.774 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 19:13:32.774 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 19:13:32.776 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 19:13:32.776 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:13:32.776 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 19:13:32.777 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:13:32.777 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:13:32.776 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 19:13:32.777 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:13:32.777 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:13:32.777 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:13:32.777 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 19:13:32.777 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:13:32.777 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:13:32.777 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:13:32.778 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 19:13:32.780 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 19:13:32.785 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 19:13:32.787 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 19:13:32.787 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 19:13:32.787 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:13:32.787 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 19:13:32.793 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:13:32.793 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 19:13:32.795 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:13:32.795 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:13:32.800 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:13:32.803 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:13:32.803 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:13:32.804 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 19:13:32.805 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:13:32.805 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:13:32.806 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:13:32.806 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 19:13:32.806 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 19:13:32.806 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:13:32.806 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:13:32.807 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:13:32.808 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:13:32.808 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 19:13:32.808 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:13:32.808 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:13:32.809 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:13:32.809 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:13:32.810 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:13:32.810 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 19:13:32.811 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:13:32.811 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 19:13:32.811 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:13:32.812 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:13:32.813 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:13:32.813 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:13:32.813 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:13:32.814 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:13:32.814 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:13:32.814 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:13:32.814 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:13:32.814 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:13:32.815 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 19:13:32.816 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 19:13:32.818 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:13:32.824 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:13:32.825 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:13:32.825 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:13:32.825 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:13:32.825 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 19:13:32.827 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:13:32.828 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:13:32.828 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:13:32.828 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:13:32.828 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 19:13:32.828 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:13:32.828 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:13:32.828 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:13:32.828 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:13:32.828 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 19:13:32.831 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:13:32.834 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:13:32.834 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:13:32.835 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:13:32.835 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 19:13:32.837 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:13:33.410 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 19:13:33.410 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:13:33.411 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 19:13:33.411 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: a123456@example.com(String)
2025-07-02 19:13:33.413 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 19:13:39.658 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:13:39.658 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:13:39.673 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:13:39.673 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:13:39.673 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:13:39.674 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:13:39.674 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:13:39.674 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:13:39.675 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:13:39.679 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:13:39.681 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 19:13:39.682 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 19:14:41.262 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:14:41.262 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:14:41.262 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:14:41.262 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:14:41.263 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:14:41.263 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:14:41.263 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:14:41.263 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:14:41.269 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:14:41.269 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:14:41.271 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 19:14:41.272 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 19:15:25.550 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:15:25.550 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:15:25.551 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:15:25.552 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:15:25.552 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:15:25.552 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:15:25.553 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:15:25.553 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:15:25.554 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:15:25.555 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:15:25.556 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 19:15:25.559 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 19:15:51.214 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:15:51.214 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:15:51.215 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:15:51.215 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:15:51.216 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:15:51.216 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:15:51.216 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:15:51.216 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:15:51.217 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:15:51.217 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:15:51.219 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 19:15:51.220 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 19:17:02.262 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:17:02.262 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:17:02.262 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:17:02.262 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:17:02.262 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:17:02.262 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:17:02.263 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:17:02.264 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:17:02.269 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:17:02.269 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:17:02.273 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 19:17:02.275 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 19:17:17.260 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:17:17.260 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:17:17.260 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:17:17.260 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:17:17.267 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:17:17.271 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 19:17:20.495 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:17:20.496 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:17:20.497 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:17:20.497 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:17:20.498 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:17:20.501 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 19:17:28.004 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:17:28.004 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:17:28.005 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:17:28.005 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:17:28.005 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:17:28.005 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:17:28.005 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:17:28.005 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:17:28.005 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:17:28.005 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:17:28.007 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 19:17:28.007 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 19:20:18.521 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:20:18.521 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:20:18.521 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:20:18.521 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:20:18.535 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:20:18.538 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 19:20:21.622 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:20:21.623 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:20:21.623 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:20:21.623 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:20:21.625 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:20:21.629 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 19:20:23.186 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户领取优惠券: a123456@example.com -> 1
2025-07-02 19:20:23.187 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==>  Preparing: SELECT * FROM coupon_template WHERE id = ?
2025-07-02 19:20:23.188 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:20:23.188 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE id = ? ::: DataSources: slave
2025-07-02 19:20:23.190 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==> Parameters: 1(Integer)
2025-07-02 19:20:23.192 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - <==      Total: 1
2025-07-02 19:20:23.193 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - ==>  Preparing: SELECT (total_quantity - received_quantity) > 0 FROM coupon_template WHERE id = ?
2025-07-02 19:20:23.193 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:20:23.194 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT (total_quantity - received_quantity) > 0 FROM coupon_template WHERE id = ? ::: DataSources: slave
2025-07-02 19:20:23.196 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - ==> Parameters: 1(Integer)
2025-07-02 19:20:23.199 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - <==      Total: 1
2025-07-02 19:20:23.201 [http-nio-8080-exec-3] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - ==>  Preparing: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND account = ?
2025-07-02 19:20:23.201 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:20:23.202 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND account = ? ::: DataSources: slave
2025-07-02 19:20:23.203 [http-nio-8080-exec-3] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - ==> Parameters: 1(Integer), a123456@example.com(String)
2025-07-02 19:20:23.205 [http-nio-8080-exec-3] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - <==      Total: 1
2025-07-02 19:20:23.209 [http-nio-8080-exec-3] ERROR com.huang.store.controller.CouponController - 领取优惠券失败
java.lang.RuntimeException: 已达到领取上限
	at com.huang.store.service.CouponServiceImpl.claimCoupon(CouponServiceImpl.java:134)
	at com.huang.store.service.CouponServiceImpl$$FastClassBySpringCGLIB$$fe79b59b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.huang.store.service.CouponServiceImpl$$EnhancerBySpringCGLIB$$178d9fa7.claimCoupon(<generated>)
	at com.huang.store.controller.CouponController.claimCoupon(CouponController.java:173)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-02 19:20:25.898 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户领取优惠券: a123456@example.com -> 2
2025-07-02 19:20:25.899 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==>  Preparing: SELECT * FROM coupon_template WHERE id = ?
2025-07-02 19:20:25.899 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:20:25.899 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE id = ? ::: DataSources: slave
2025-07-02 19:20:25.900 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==> Parameters: 2(Integer)
2025-07-02 19:20:25.900 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - <==      Total: 1
2025-07-02 19:20:25.900 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - ==>  Preparing: SELECT (total_quantity - received_quantity) > 0 FROM coupon_template WHERE id = ?
2025-07-02 19:20:25.900 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:20:25.900 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT (total_quantity - received_quantity) > 0 FROM coupon_template WHERE id = ? ::: DataSources: slave
2025-07-02 19:20:25.900 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - ==> Parameters: 2(Integer)
2025-07-02 19:20:25.900 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - <==      Total: 1
2025-07-02 19:20:25.900 [http-nio-8080-exec-2] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - ==>  Preparing: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND account = ?
2025-07-02 19:20:25.900 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:20:25.900 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND account = ? ::: DataSources: slave
2025-07-02 19:20:25.900 [http-nio-8080-exec-2] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - ==> Parameters: 2(Integer), a123456@example.com(String)
2025-07-02 19:20:25.900 [http-nio-8080-exec-2] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - <==      Total: 1
2025-07-02 19:20:25.900 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.UserCouponMapper.insert - ==>  Preparing: INSERT INTO user_coupon (coupon_template_id, account, coupon_code, status, receive_time, expire_time, discount_amount, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-02 19:20:25.916 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:20:25.916 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: INSERT INTO user_coupon (coupon_template_id, account, coupon_code, status, receive_time, expire_time, discount_amount, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) ::: DataSources: master
2025-07-02 19:20:26.066 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.UserCouponMapper.insert - ==> Parameters: 2(Integer), a123456@example.com(String), FULL20250702002680080(String), 1(Integer), 2025-07-02 19:20:25.9(Timestamp), 2025-07-17 19:20:25.9(Timestamp), 0(BigDecimal), 2025-07-02 19:20:25.9(Timestamp), 2025-07-02 19:20:25.9(Timestamp)
2025-07-02 19:20:26.086 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.UserCouponMapper.insert - <==    Updates: 1
2025-07-02 19:20:26.089 [http-nio-8080-exec-2] DEBUG c.h.s.m.C.incrementReceivedQuantity - ==>  Preparing: UPDATE coupon_template SET received_quantity = received_quantity + 1, update_time = NOW() WHERE id = ?
2025-07-02 19:20:26.089 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:20:26.089 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: UPDATE coupon_template SET received_quantity = received_quantity + 1, update_time = NOW() WHERE id = ? ::: DataSources: master
2025-07-02 19:20:26.091 [http-nio-8080-exec-2] DEBUG c.h.s.m.C.incrementReceivedQuantity - ==> Parameters: 2(Integer)
2025-07-02 19:20:26.093 [http-nio-8080-exec-2] DEBUG c.h.s.m.C.incrementReceivedQuantity - <==    Updates: 1
2025-07-02 19:20:26.114 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:20:26.114 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:20:26.114 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:20:26.114 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:20:26.116 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:20:26.116 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:20:26.116 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:20:26.116 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:20:26.117 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:20:26.117 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:20:26.118 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 2
2025-07-02 19:20:26.118 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 19:20:28.251 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户领取优惠券: a123456@example.com -> 3
2025-07-02 19:20:28.251 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==>  Preparing: SELECT * FROM coupon_template WHERE id = ?
2025-07-02 19:20:28.251 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:20:28.251 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE id = ? ::: DataSources: slave
2025-07-02 19:20:28.251 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==> Parameters: 3(Integer)
2025-07-02 19:20:28.251 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - <==      Total: 1
2025-07-02 19:20:28.251 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - ==>  Preparing: SELECT (total_quantity - received_quantity) > 0 FROM coupon_template WHERE id = ?
2025-07-02 19:20:28.251 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:20:28.251 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT (total_quantity - received_quantity) > 0 FROM coupon_template WHERE id = ? ::: DataSources: slave
2025-07-02 19:20:28.251 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - ==> Parameters: 3(Integer)
2025-07-02 19:20:28.268 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - <==      Total: 1
2025-07-02 19:20:28.268 [http-nio-8080-exec-10] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - ==>  Preparing: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND account = ?
2025-07-02 19:20:28.268 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:20:28.269 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND account = ? ::: DataSources: slave
2025-07-02 19:20:28.270 [http-nio-8080-exec-10] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - ==> Parameters: 3(Integer), a123456@example.com(String)
2025-07-02 19:20:28.271 [http-nio-8080-exec-10] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - <==      Total: 1
2025-07-02 19:20:28.272 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserCouponMapper.insert - ==>  Preparing: INSERT INTO user_coupon (coupon_template_id, account, coupon_code, status, receive_time, expire_time, discount_amount, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-02 19:20:28.272 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:20:28.272 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: INSERT INTO user_coupon (coupon_template_id, account, coupon_code, status, receive_time, expire_time, discount_amount, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) ::: DataSources: master
2025-07-02 19:20:28.274 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserCouponMapper.insert - ==> Parameters: 3(Integer), a123456@example.com(String), DISC20250702003424625(String), 1(Integer), 2025-07-02 19:20:28.272(Timestamp), 2025-07-09 19:20:28.272(Timestamp), 0(BigDecimal), 2025-07-02 19:20:28.272(Timestamp), 2025-07-02 19:20:28.272(Timestamp)
2025-07-02 19:20:28.275 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserCouponMapper.insert - <==    Updates: 1
2025-07-02 19:20:28.276 [http-nio-8080-exec-10] DEBUG c.h.s.m.C.incrementReceivedQuantity - ==>  Preparing: UPDATE coupon_template SET received_quantity = received_quantity + 1, update_time = NOW() WHERE id = ?
2025-07-02 19:20:28.276 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:20:28.276 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: UPDATE coupon_template SET received_quantity = received_quantity + 1, update_time = NOW() WHERE id = ? ::: DataSources: master
2025-07-02 19:20:28.277 [http-nio-8080-exec-10] DEBUG c.h.s.m.C.incrementReceivedQuantity - ==> Parameters: 3(Integer)
2025-07-02 19:20:28.279 [http-nio-8080-exec-10] DEBUG c.h.s.m.C.incrementReceivedQuantity - <==    Updates: 1
2025-07-02 19:20:28.304 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:20:28.304 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:20:28.305 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:20:28.305 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:20:28.305 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:20:28.305 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:20:28.305 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:20:28.305 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:20:28.307 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:20:28.307 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:20:28.310 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 19:20:28.311 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 19:20:29.144 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户领取优惠券: a123456@example.com -> 4
2025-07-02 19:20:29.144 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==>  Preparing: SELECT * FROM coupon_template WHERE id = ?
2025-07-02 19:20:29.144 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:20:29.144 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE id = ? ::: DataSources: slave
2025-07-02 19:20:29.144 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==> Parameters: 4(Integer)
2025-07-02 19:20:29.144 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - <==      Total: 1
2025-07-02 19:20:29.144 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - ==>  Preparing: SELECT (total_quantity - received_quantity) > 0 FROM coupon_template WHERE id = ?
2025-07-02 19:20:29.144 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:20:29.148 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT (total_quantity - received_quantity) > 0 FROM coupon_template WHERE id = ? ::: DataSources: slave
2025-07-02 19:20:29.149 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - ==> Parameters: 4(Integer)
2025-07-02 19:20:29.152 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - <==      Total: 1
2025-07-02 19:20:29.152 [http-nio-8080-exec-6] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - ==>  Preparing: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND account = ?
2025-07-02 19:20:29.152 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:20:29.152 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND account = ? ::: DataSources: slave
2025-07-02 19:20:29.152 [http-nio-8080-exec-6] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - ==> Parameters: 4(Integer), a123456@example.com(String)
2025-07-02 19:20:29.152 [http-nio-8080-exec-6] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - <==      Total: 1
2025-07-02 19:20:29.152 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserCouponMapper.insert - ==>  Preparing: INSERT INTO user_coupon (coupon_template_id, account, coupon_code, status, receive_time, expire_time, discount_amount, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-02 19:20:29.152 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:20:29.152 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: INSERT INTO user_coupon (coupon_template_id, account, coupon_code, status, receive_time, expire_time, discount_amount, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) ::: DataSources: master
2025-07-02 19:20:29.152 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserCouponMapper.insert - ==> Parameters: 4(Integer), a123456@example.com(String), DISC20250702004525701(String), 1(Integer), 2025-07-02 19:20:29.152(Timestamp), 2025-08-01 19:20:29.152(Timestamp), 0(BigDecimal), 2025-07-02 19:20:29.152(Timestamp), 2025-07-02 19:20:29.152(Timestamp)
2025-07-02 19:20:29.157 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserCouponMapper.insert - <==    Updates: 1
2025-07-02 19:20:29.157 [http-nio-8080-exec-6] DEBUG c.h.s.m.C.incrementReceivedQuantity - ==>  Preparing: UPDATE coupon_template SET received_quantity = received_quantity + 1, update_time = NOW() WHERE id = ?
2025-07-02 19:20:29.157 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:20:29.157 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: UPDATE coupon_template SET received_quantity = received_quantity + 1, update_time = NOW() WHERE id = ? ::: DataSources: master
2025-07-02 19:20:29.157 [http-nio-8080-exec-6] DEBUG c.h.s.m.C.incrementReceivedQuantity - ==> Parameters: 4(Integer)
2025-07-02 19:20:29.161 [http-nio-8080-exec-6] DEBUG c.h.s.m.C.incrementReceivedQuantity - <==    Updates: 1
2025-07-02 19:20:29.175 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:20:29.175 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:20:29.175 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:20:29.175 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:20:29.175 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:20:29.175 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:20:29.175 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:20:29.175 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:20:29.175 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:20:29.175 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:20:29.183 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 4
2025-07-02 19:20:29.183 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 19:20:31.331 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:20:31.331 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:20:31.332 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:20:31.332 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:20:31.333 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:20:31.335 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 4
2025-07-02 19:20:43.252 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:20:43.252 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:20:43.253 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:20:43.253 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:20:43.254 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:20:43.258 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 19:22:22.381 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:22:22.486 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:22:22.518 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:22:22.551 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:22:22.584 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:22:22.598 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 4
2025-07-02 19:22:40.765 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-02 19:22:40.765 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:22:40.765 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-02 19:22:40.774 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: a123456@example.com(String), false(Boolean), 0(Integer), 5(Integer)
2025-07-02 19:22:40.784 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 0
2025-07-02 19:22:40.789 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND beUserDelete = ?
2025-07-02 19:22:40.789 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:22:40.789 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-02 19:22:40.789 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: a123456@example.com(String), false(Boolean)
2025-07-02 19:22:40.789 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-02 19:22:43.540 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:22:43.540 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:22:43.541 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:22:43.541 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:22:43.541 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:22:43.541 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:22:43.541 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:22:43.541 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:22:43.542 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:22:43.543 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:22:43.545 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 19:22:43.547 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 4
2025-07-02 19:22:52.372 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:22:52.373 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:22:52.374 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:22:52.374 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:22:52.375 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:22:52.375 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:22:52.375 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:22:52.376 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:22:52.376 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:22:52.377 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:22:52.377 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 19:22:52.380 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 4
2025-07-02 19:22:54.695 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:22:54.696 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:22:54.696 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:22:54.696 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:22:54.696 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:22:54.696 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:22:54.697 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:22:54.697 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:22:54.697 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:22:54.697 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:22:54.699 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 19:22:54.699 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 4
2025-07-02 19:23:35.624 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:23:35.624 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:23:35.624 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:23:35.624 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:23:35.624 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:23:35.624 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:23:35.625 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:23:35.625 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:23:35.627 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:23:35.627 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:23:35.629 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 4
2025-07-02 19:23:35.629 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 19:23:37.104 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:23:37.105 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:23:37.105 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:23:37.105 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:23:37.106 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:23:37.107 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 4
2025-07-02 19:23:59.364 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:23:59.364 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:23:59.365 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:23:59.365 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:23:59.365 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:23:59.368 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 19:24:00.910 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:24:00.910 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:24:00.910 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:24:00.910 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:24:00.910 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:24:00.910 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 4
2025-07-02 19:27:08.099 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:27:08.099 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:27:08.101 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:27:08.112 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:27:08.123 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:27:08.123 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:27:08.123 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:27:08.123 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:27:08.126 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:27:08.126 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:27:08.128 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 4
2025-07-02 19:27:08.128 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 19:27:28.986 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:27:28.987 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:27:28.987 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:27:28.987 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:27:28.987 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:27:28.987 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:27:28.987 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:27:28.988 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:27:28.988 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:27:28.988 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:27:28.990 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 19:27:28.990 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 4
2025-07-02 19:27:35.284 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:27:35.284 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:27:35.285 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:27:35.285 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:27:35.286 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:27:35.289 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 4
2025-07-02 19:28:01.734 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:28:01.734 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:28:01.735 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:28:01.735 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:28:01.735 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:28:01.735 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:28:01.735 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:28:01.736 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:28:01.736 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:28:01.736 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:28:01.739 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 19:28:01.739 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 4
2025-07-02 19:28:16.868 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:28:16.868 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:28:16.868 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:28:16.870 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:28:16.870 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:28:16.870 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 4
2025-07-02 19:28:18.858 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:28:18.858 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:28:18.858 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:28:18.858 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:28:18.858 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:28:18.870 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 19:28:50.456 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:28:50.456 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:28:50.457 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:28:50.457 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:28:50.457 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:28:50.457 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:28:50.457 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:28:50.457 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:28:50.458 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:28:50.458 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:28:50.460 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 19:28:50.460 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 4
2025-07-02 19:29:52.629 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:29:52.630 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:29:52.630 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:29:52.630 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:29:52.633 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:29:52.634 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 4
2025-07-02 19:31:44.636 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:31:44.636 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:31:44.637 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:31:44.637 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:31:44.637 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:31:44.637 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:31:44.637 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:31:44.637 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:31:44.640 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:31:44.640 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:31:44.644 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 19:31:44.644 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 4
2025-07-02 19:33:47.817 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:33:47.818 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:33:47.818 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:33:47.818 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:33:47.822 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:33:47.823 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 4
2025-07-02 19:33:50.653 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:33:50.653 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:33:50.653 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:33:50.653 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:33:50.653 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:33:50.666 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 19:34:09.442 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 19:34:09.443 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:34:09.443 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:34:09.443 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:34:09.444 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 19:34:09.447 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 4
2025-07-02 19:38:23.493 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-02 19:38:23.495 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-02 19:38:23.495 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-02 19:38:23.499 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-02 19:39:05.863 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-02 19:39:05.898 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 10388 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 19:39:05.899 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 19:39:05.900 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 19:39:06.116 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-02 19:39:06.116 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-02 19:39:06.974 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 19:39:06.978 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 19:39:07.028 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 29 ms. Found 0 Redis repository interfaces.
2025-07-02 19:39:07.361 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$495db4c5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 19:39:07.378 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 19:39:07.809 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 19:39:07.812 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 19:39:07.812 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 19:39:07.812 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 19:39:07.817 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 19:39:07.823 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 19:39:07.827 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 19:39:07.827 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 19:39:07.887 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 19:39:07.887 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1770 ms
2025-07-02 19:39:07.895 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 19:39:08.804 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-02 19:39:08.838 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-02 19:39:09.216 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 19:39:09.217 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 19:39:09.709 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 19:39:09.838 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@11ddaecf, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@205370e1, org.springframework.security.web.context.SecurityContextPersistenceFilter@182a5ea2, org.springframework.security.web.header.HeaderWriterFilter@15b09896, org.springframework.web.filter.CorsFilter@701cc61f, org.springframework.security.web.authentication.logout.LogoutFilter@657431c9, com.huang.store.security.JwtAuthenticationTokenFilter@20d63066, com.huang.store.security.CustomAuthenticationFilter@2874a178, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@79f3f4d2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@77ad8290, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1e5b5723, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@22b721a6, org.springframework.security.web.session.SessionManagementFilter@4fc59eb9, org.springframework.security.web.access.ExceptionTranslationFilter@5011d846, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@24367a7f]
2025-07-02 19:39:10.094 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 19:39:10.114 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 19:39:10.131 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 19:39:10.140 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 4.877 seconds (JVM running for 5.428)
2025-07-02 19:39:24.583 [http-nio-8080-exec-3] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-02 19:39:24.583 [http-nio-8080-exec-3] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-02 19:39:24.583 [http-nio-8080-exec-3] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-07-02 19:39:24.704 [http-nio-8080-exec-5] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 19:39:24.739 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 19:39:24.739 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 19:39:24.739 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 19:39:24.739 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 19:39:24.739 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 19:39:24.739 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:39:24.761 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:39:24.761 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:39:24.761 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 19:39:24.761 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:39:24.761 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:39:24.761 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:39:24.761 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:39:24.761 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:39:24.761 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 19:39:24.761 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:39:24.761 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 19:39:24.762 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 19:39:24.818 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 19:39:24.821 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:39:24.821 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 19:39:24.821 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:39:24.836 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 19:39:24.839 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 19:39:24.839 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 19:39:24.839 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:39:24.843 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 19:39:24.843 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 19:39:24.847 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:39:24.847 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:39:24.847 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 19:39:24.847 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:39:24.847 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:39:24.847 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:39:24.847 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:39:24.847 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:39:24.847 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 19:39:24.847 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:39:24.847 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:39:24.847 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:39:24.852 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:39:24.852 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:39:24.852 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 19:39:24.852 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 19:39:24.854 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:39:24.854 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:39:24.854 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 19:39:24.856 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 19:39:24.856 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 19:39:24.858 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:39:24.860 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:39:24.860 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:39:24.861 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 19:39:24.863 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:39:24.864 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:39:24.865 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:39:24.865 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:39:24.865 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 19:39:24.867 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 19:39:24.867 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:39:24.867 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:39:24.868 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:39:24.868 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:39:24.868 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:39:24.868 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:39:24.868 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:39:24.869 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 19:39:24.869 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:39:24.871 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:39:24.871 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:39:24.872 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:39:24.872 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:39:24.872 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:39:24.874 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 19:39:24.880 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:39:24.880 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:39:24.881 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:39:24.881 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:39:24.881 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 19:39:24.883 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:39:24.884 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:39:24.884 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:39:24.884 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:39:24.884 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 19:39:24.886 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:39:24.886 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:39:24.886 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:39:24.886 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:39:24.887 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 19:39:24.889 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:39:24.889 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:39:24.890 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:39:24.890 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:39:24.893 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 19:39:24.894 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:39:33.012 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 19:39:33.012 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:39:33.012 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 19:39:33.012 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: a123456@example.com(String)
2025-07-02 19:39:33.012 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 19:39:33.023 [http-nio-8080-exec-6] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:a123456@example.com    数据库密码:$2a$10$bhbP823Lbav2RL7Su6fd7eZsAYkKvrCoRPLG5prw240ncy1A4REHu
2025-07-02 19:39:33.096 [http-nio-8080-exec-6] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=a123456@example.com, password=$2a$10$bhbP823Lbav2RL7Su6fd7eZsAYkKvrCoRPLG5prw240ncy1A4REHu, enabled=true, roles=[ROLE_ADMIN]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=DB02438FFFBE1B9899E075FC7FC6311B], Granted Authorities=[ROLE_ADMIN]]
2025-07-02 19:39:33.105 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 19:39:33.105 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:39:33.105 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 19:39:33.105 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: a123456@example.com(String)
2025-07-02 19:39:33.107 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 19:39:38.707 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 19:39:38.720 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 19:39:38.720 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:39:38.720 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:39:38.721 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 19:39:38.723 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 4
2025-07-02 19:41:39.998 [http-nio-8080-exec-5] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 19:41:39.998 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 19:41:39.999 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 19:41:39.999 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 19:41:39.999 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:41:40.000 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 19:41:39.999 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:41:40.000 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:41:40.000 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:41:40.000 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 19:41:40.000 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 19:41:40.000 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 19:41:40.000 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 19:41:40.000 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:41:40.000 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:41:40.000 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 19:41:40.000 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:41:40.000 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:41:40.000 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:41:40.008 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 19:41:40.008 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 19:41:40.009 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 19:41:40.009 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 19:41:40.010 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 19:41:40.010 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 19:41:40.010 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 19:41:40.012 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 19:41:40.014 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:41:40.016 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 19:41:40.014 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:41:40.015 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:41:40.017 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:41:40.018 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:41:40.018 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:41:40.018 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:41:40.018 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 19:41:40.018 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:41:40.018 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 19:41:40.019 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:41:40.019 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:41:40.019 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:41:40.019 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:41:40.019 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:41:40.020 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 19:41:40.020 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 19:41:40.021 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:41:40.021 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:41:40.021 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:41:40.021 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:41:40.021 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 19:41:40.022 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:41:40.022 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:41:40.022 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:41:40.022 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:41:40.023 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:41:40.023 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:41:40.023 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 19:41:40.023 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:41:40.023 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:41:40.024 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:41:40.024 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 19:41:40.024 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:41:40.026 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:41:40.027 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 19:41:40.027 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:41:40.028 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:41:40.028 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:41:40.028 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:41:40.028 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:41:40.029 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:41:40.029 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 19:41:40.030 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:41:40.030 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:41:40.030 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 19:41:40.031 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:41:40.031 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:41:40.032 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:41:40.032 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:41:40.032 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:41:40.032 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:41:40.032 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 19:41:40.032 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:41:40.032 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:41:40.033 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 19:41:40.034 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:41:40.034 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:41:40.035 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:41:40.035 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:41:40.035 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:41:40.035 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 19:41:40.037 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:41:40.038 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:41:40.038 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:41:40.038 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:41:40.038 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 19:41:40.041 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:41:57.452 [http-nio-8080-exec-1] INFO  com.huang.store.controller.UserController - 验证账号是否已注册: b123456@example.com
2025-07-02 19:41:57.452 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 19:41:57.452 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:41:57.452 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 19:41:57.452 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: b123456@example.com(String)
2025-07-02 19:41:57.452 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 0
2025-07-02 19:41:57.452 [http-nio-8080-exec-1] INFO  com.huang.store.controller.UserController - 账号可以注册: b123456@example.com
2025-07-02 19:41:57.473 [http-nio-8080-exec-4] INFO  com.huang.store.controller.UserController - 验证账号是否已注册: b123456@example.com
2025-07-02 19:41:57.473 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 19:41:57.473 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:41:57.473 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 19:41:57.473 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: b123456@example.com(String)
2025-07-02 19:41:57.474 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 0
2025-07-02 19:41:57.475 [http-nio-8080-exec-4] INFO  com.huang.store.controller.UserController - 账号可以注册: b123456@example.com
2025-07-02 19:42:03.608 [http-nio-8080-exec-6] INFO  com.huang.store.controller.UserController - 验证账号是否已注册: b123456@example.com
2025-07-02 19:42:03.609 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 19:42:03.609 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:03.609 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 19:42:03.610 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: b123456@example.com(String)
2025-07-02 19:42:03.610 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 0
2025-07-02 19:42:03.610 [http-nio-8080-exec-6] INFO  com.huang.store.controller.UserController - 账号可以注册: b123456@example.com
2025-07-02 19:42:03.629 [http-nio-8080-exec-8] INFO  com.huang.store.controller.UserController - 开始用户注册: b123456@example.com
2025-07-02 19:42:03.630 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 19:42:03.630 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:03.631 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 19:42:03.632 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: b123456@example.com(String)
2025-07-02 19:42:03.635 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 0
2025-07-02 19:42:03.704 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.addUser - ==>  Preparing: insert into user(account,password,name,gender,imgUrl,info,manage,enable,registerTime) values(?,?,?,?,?,?,?,?,?)
2025-07-02 19:42:03.704 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:03.704 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: insert into user(account,password,name,gender,imgUrl,info,manage,enable,registerTime)
         values(?,?,?,?,?,?,?,?,?) ::: DataSources: master
2025-07-02 19:42:03.805 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.addUser - ==> Parameters: b123456@example.com(String), $2a$10$1DF9PwKSjO3cUL8CA7V3yOlfkTa2.8OZe8G056AyZfhXY89aFTlke(String), null, null, null, null, false(Boolean), true(Boolean), 2025-07-02 19:42:03.704(Timestamp)
2025-07-02 19:42:03.817 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.addUser - <==    Updates: 1
2025-07-02 19:42:03.817 [http-nio-8080-exec-8] INFO  com.huang.store.controller.UserController - 用户注册成功: b123456@example.com
2025-07-02 19:42:11.490 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 19:42:11.497 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:11.498 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 19:42:11.500 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: b123456@example.com(String)
2025-07-02 19:42:11.502 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 19:42:11.503 [http-nio-8080-exec-5] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:b123456@example.com    数据库密码:$2a$10$1DF9PwKSjO3cUL8CA7V3yOlfkTa2.8OZe8G056AyZfhXY89aFTlke
2025-07-02 19:42:11.584 [http-nio-8080-exec-5] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=b123456@example.com, password=$2a$10$1DF9PwKSjO3cUL8CA7V3yOlfkTa2.8OZe8G056AyZfhXY89aFTlke, enabled=true, roles=[ROLE_USER]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=DB02438FFFBE1B9899E075FC7FC6311B], Granted Authorities=[ROLE_USER]]
2025-07-02 19:42:11.584 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 19:42:11.584 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:11.584 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 19:42:11.584 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: b123456@example.com(String)
2025-07-02 19:42:11.584 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 19:42:12.636 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 19:42:12.636 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:42:12.636 [http-nio-8080-exec-10] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 19:42:12.637 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 19:42:12.636 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 19:42:12.637 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 19:42:12.637 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:12.637 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:12.637 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:12.637 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:12.637 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:12.637 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:42:12.637 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:42:12.637 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 19:42:12.637 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 19:42:12.637 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 19:42:12.637 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 19:42:12.638 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 19:42:12.637 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:12.638 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:42:12.638 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 19:42:12.638 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 19:42:12.638 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 19:42:12.638 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:42:12.639 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 19:42:12.639 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 19:42:12.639 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 19:42:12.640 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 19:42:12.640 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:42:12.641 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:42:12.641 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 19:42:12.642 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 19:42:12.651 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:12.643 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:42:12.654 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:12.654 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:42:12.654 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:42:12.645 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:12.645 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 19:42:12.654 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 19:42:12.654 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 19:42:12.671 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:42:12.675 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:42:12.676 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:12.678 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 19:42:12.678 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:42:12.678 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:42:12.678 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:42:12.678 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 19:42:12.678 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:12.678 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:12.678 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:42:12.678 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 19:42:12.678 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:42:12.679 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 19:42:12.679 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:42:12.681 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 19:42:12.683 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 19:42:12.690 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 19:42:12.691 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:42:12.691 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:42:12.691 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:12.691 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:42:12.691 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:42:12.693 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 19:42:12.693 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:12.694 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:42:12.694 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 19:42:12.696 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:42:12.698 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:42:12.700 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 19:42:12.700 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:42:12.700 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:12.700 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:42:12.700 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:42:12.700 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:12.701 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:42:12.701 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 19:42:12.701 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 19:42:12.705 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:42:12.706 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:42:12.706 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:12.707 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:42:12.707 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:42:12.707 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 19:42:12.708 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:42:12.708 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:12.708 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:42:12.709 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 19:42:12.709 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:42:12.710 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:42:12.710 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:12.711 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:42:12.711 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 19:42:12.711 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:42:12.717 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:42:18.225 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 19:42:18.225 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:18.225 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 19:42:18.226 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: b123456@example.com(String)
2025-07-02 19:42:18.227 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 19:42:20.560 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:42:20.560 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 19:42:20.560 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:42:20.560 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:42:20.560 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:20.561 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:20.561 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:42:20.561 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:42:20.562 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:42:20.564 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 19:42:20.565 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 19:42:20.570 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 19:42:22.676 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 19:42:22.679 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:42:22.679 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:22.679 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:42:22.681 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 19:42:22.682 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 19:42:23.367 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:42:23.367 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:42:23.367 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:23.367 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:42:23.367 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:42:23.367 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 19:42:35.953 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户领取优惠券: b123456@example.com -> 1
2025-07-02 19:42:35.953 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==>  Preparing: SELECT * FROM coupon_template WHERE id = ?
2025-07-02 19:42:35.953 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:35.953 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE id = ? ::: DataSources: slave
2025-07-02 19:42:35.953 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==> Parameters: 1(Integer)
2025-07-02 19:42:35.953 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - <==      Total: 1
2025-07-02 19:42:35.953 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - ==>  Preparing: SELECT (total_quantity - received_quantity) > 0 FROM coupon_template WHERE id = ?
2025-07-02 19:42:35.953 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:35.953 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT (total_quantity - received_quantity) > 0 FROM coupon_template WHERE id = ? ::: DataSources: slave
2025-07-02 19:42:35.965 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - ==> Parameters: 1(Integer)
2025-07-02 19:42:35.967 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - <==      Total: 1
2025-07-02 19:42:35.968 [http-nio-8080-exec-3] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - ==>  Preparing: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND account = ?
2025-07-02 19:42:35.968 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:35.968 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND account = ? ::: DataSources: slave
2025-07-02 19:42:35.969 [http-nio-8080-exec-3] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - ==> Parameters: 1(Integer), b123456@example.com(String)
2025-07-02 19:42:35.970 [http-nio-8080-exec-3] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - <==      Total: 1
2025-07-02 19:42:35.973 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserCouponMapper.insert - ==>  Preparing: INSERT INTO user_coupon (coupon_template_id, account, coupon_code, status, receive_time, expire_time, discount_amount, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-02 19:42:35.973 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:35.973 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: INSERT INTO user_coupon (coupon_template_id, account, coupon_code, status, receive_time, expire_time, discount_amount, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) ::: DataSources: master
2025-07-02 19:42:35.975 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserCouponMapper.insert - ==> Parameters: 1(Integer), b123456@example.com(String), FULL20250702001104030(String), 1(Integer), 2025-07-02 19:42:35.972(Timestamp), 2025-08-01 19:42:35.972(Timestamp), 0(BigDecimal), 2025-07-02 19:42:35.972(Timestamp), 2025-07-02 19:42:35.972(Timestamp)
2025-07-02 19:42:35.979 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserCouponMapper.insert - <==    Updates: 1
2025-07-02 19:42:35.983 [http-nio-8080-exec-3] DEBUG c.h.s.m.C.incrementReceivedQuantity - ==>  Preparing: UPDATE coupon_template SET received_quantity = received_quantity + 1, update_time = NOW() WHERE id = ?
2025-07-02 19:42:35.983 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:35.983 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: UPDATE coupon_template SET received_quantity = received_quantity + 1, update_time = NOW() WHERE id = ? ::: DataSources: master
2025-07-02 19:42:35.988 [http-nio-8080-exec-3] DEBUG c.h.s.m.C.incrementReceivedQuantity - ==> Parameters: 1(Integer)
2025-07-02 19:42:35.991 [http-nio-8080-exec-3] DEBUG c.h.s.m.C.incrementReceivedQuantity - <==    Updates: 1
2025-07-02 19:42:36.010 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:42:36.010 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 19:42:36.010 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:42:36.010 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:42:36.010 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:36.011 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:36.011 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:42:36.011 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:42:36.011 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:42:36.012 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 19:42:36.013 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 19:42:36.013 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 19:42:38.826 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 19:42:38.828 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 19:42:38.828 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:38.828 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:42:38.830 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 19:42:38.833 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 4
2025-07-02 19:42:51.411 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 管理员更新优惠券模板状态: 4 -> 0
2025-07-02 19:42:51.412 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.CouponTemplateMapper.updateStatus - ==>  Preparing: UPDATE coupon_template SET status = ?, update_time = NOW() WHERE id = ?
2025-07-02 19:42:51.412 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:51.412 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: UPDATE coupon_template SET status = ?, update_time = NOW() WHERE id = ? ::: DataSources: master
2025-07-02 19:42:51.413 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.CouponTemplateMapper.updateStatus - ==> Parameters: 0(Integer), 4(Integer)
2025-07-02 19:42:51.416 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.CouponTemplateMapper.updateStatus - <==    Updates: 1
2025-07-02 19:42:51.417 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 19:42:51.417 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 19:42:51.417 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:51.417 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:42:51.432 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 19:42:51.434 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 4
2025-07-02 19:42:53.938 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 19:42:53.938 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:42:53.939 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:42:53.939 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:42:53.939 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:53.939 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:53.939 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:42:53.939 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:42:53.940 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:42:53.940 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 19:42:53.942 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 19:42:53.942 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 3
2025-07-02 19:42:57.969 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 管理员更新优惠券模板状态: 4 -> 1
2025-07-02 19:42:57.969 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.CouponTemplateMapper.updateStatus - ==>  Preparing: UPDATE coupon_template SET status = ?, update_time = NOW() WHERE id = ?
2025-07-02 19:42:57.969 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:57.969 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: UPDATE coupon_template SET status = ?, update_time = NOW() WHERE id = ? ::: DataSources: master
2025-07-02 19:42:57.969 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.CouponTemplateMapper.updateStatus - ==> Parameters: 1(Integer), 4(Integer)
2025-07-02 19:42:57.982 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.CouponTemplateMapper.updateStatus - <==    Updates: 1
2025-07-02 19:42:57.996 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 19:42:57.996 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 19:42:57.996 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:42:57.996 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:42:57.997 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 19:42:57.998 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 4
2025-07-02 19:43:00.396 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:43:00.396 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 19:43:00.397 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:43:00.397 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:43:00.397 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:43:00.397 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:43:00.397 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:43:00.397 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:43:00.397 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:43:00.397 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 19:43:00.404 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 19:43:00.405 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 19:44:21.665 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 管理员创建优惠券模板: 老用户福利
2025-07-02 19:44:21.666 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.CouponTemplateMapper.insert - ==>  Preparing: INSERT INTO coupon_template (name, description, type, discount_value, min_order_amount, max_discount_amount, total_quantity, used_quantity, received_quantity, per_user_limit, valid_days, status, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-02 19:44:21.666 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:44:21.666 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: INSERT INTO coupon_template (name, description, type, discount_value, min_order_amount, max_discount_amount, total_quantity, used_quantity, received_quantity, per_user_limit, valid_days, status, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) ::: DataSources: master
2025-07-02 19:44:21.670 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.CouponTemplateMapper.insert - ==> Parameters: 老用户福利(String), 老用户福利，满100减30(String), 1(Integer), 30(BigDecimal), 100(BigDecimal), null, 3(Integer), 0(Integer), 0(Integer), 1(Integer), 30(Integer), 1(Integer), 2025-07-02 19:44:21.666(Timestamp), 2025-07-02 19:44:21.666(Timestamp)
2025-07-02 19:44:21.670 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.CouponTemplateMapper.insert - <==    Updates: 1
2025-07-02 19:44:21.699 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 19:44:21.700 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 19:44:21.700 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:44:21.700 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:44:21.702 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 19:44:21.708 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 5
2025-07-02 19:44:30.235 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 19:44:30.238 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:44:30.242 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:44:30.246 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:44:30.246 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:44:30.246 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:44:30.247 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:44:30.247 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:44:30.247 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 19:44:30.248 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:44:30.249 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 19:44:30.250 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 19:45:13.446 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 19:45:13.446 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:45:13.446 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:45:13.446 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:45:13.448 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 19:45:13.449 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 19:45:16.142 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:45:16.142 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:45:16.143 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:45:16.143 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:45:16.143 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:45:16.147 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 19:45:16.760 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 19:45:16.761 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:45:16.761 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:45:16.761 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:45:16.763 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 19:45:16.765 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 19:45:20.573 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:45:20.573 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:45:20.573 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:45:20.573 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:45:20.575 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:45:20.579 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 19:48:50.753 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-02 19:48:50.754 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:48:50.754 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-02 19:48:50.756 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 19:48:50.768 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-02 19:48:50.769 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-02 19:48:50.769 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:48:50.770 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-02 19:48:50.770 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-02 19:48:50.773 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-02 19:48:54.469 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 19:48:54.470 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:48:54.470 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 19:48:54.470 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==>  Preparing: select name from publish
2025-07-02 19:48:54.470 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:48:54.470 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select name from publish ::: DataSources: slave
2025-07-02 19:48:54.470 [http-nio-8080-exec-1] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=5
2025-07-02 19:48:54.470 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 19:48:54.470 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select b.*, COALESCE(sales_data.total_sales, 0) as sales from book b left join ( select od.bookId, sum(od.num) as total_sales from orderdetail od inner join bookorder bo on od.orderId = bo.orderId where bo.orderStatus in ('已发货', '已收货', '已评价') group by od.bookId ) sales_data on b.id = sales_data.bookId order by b.rank desc, b.id desc limit ?,?
2025-07-02 19:48:54.470 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:48:54.470 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select b.*,
               COALESCE(sales_data.total_sales, 0) as sales
        from book b
        left join (
            select od.bookId, sum(od.num) as total_sales
            from orderdetail od
            inner join bookorder bo on od.orderId = bo.orderId
            where bo.orderStatus in ('已发货', '已收货', '已评价')
            group by od.bookId
        ) sales_data on b.id = sales_data.bookId
        order by b.rank desc, b.id desc
        limit ?,? ::: DataSources: slave
2025-07-02 19:48:54.472 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==> Parameters: 
2025-07-02 19:48:54.472 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 19:48:54.472 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:48:54.473 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:48:54.473 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:48:54.473 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 19:48:54.474 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 19:48:54.475 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:48:54.475 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:48:54.475 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:48:54.475 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 19:48:54.476 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - <==      Total: 5
2025-07-02 19:48:54.477 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:48:54.478 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:48:54.483 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:48:54.485 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 19:48:54.485 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:48:54.489 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 19:48:54.491 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:48:54.495 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:48:54.496 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:48:54.496 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:48:54.498 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 19:48:54.501 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:48:54.503 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-02 19:48:54.504 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:48:54.504 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:48:54.504 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:48:54.504 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 19:48:54.506 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:48:54.506 [http-nio-8080-exec-1] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-02 19:48:54.506 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:48:54.506 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:48:54.506 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:48:54.507 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 19:48:54.508 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:48:54.508 [http-nio-8080-exec-1] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-02 19:48:54.509 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:48:54.509 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:48:54.509 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:48:54.509 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 19:48:54.510 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:48:54.517 [http-nio-8080-exec-1] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-02 19:48:54.517 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:48:54.517 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:48:54.517 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:48:54.517 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 19:48:54.518 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:48:54.518 [http-nio-8080-exec-1] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-02 19:48:54.521 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:48:54.521 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:48:54.521 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:48:54.521 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 19:48:54.521 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:48:54.523 [http-nio-8080-exec-1] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-02 19:48:54.523 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-02 19:48:54.523 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:48:54.523 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-02 19:48:54.523 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-02 19:48:54.523 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-02 19:48:58.999 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 19:48:59.000 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 19:48:59.000 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:48:59.000 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:48:59.002 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 19:48:59.004 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 5
2025-07-02 19:49:06.448 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==>  Preparing: select name from publish
2025-07-02 19:49:06.449 [http-nio-8080-exec-6] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=5
2025-07-02 19:49:06.449 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 19:49:06.449 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:49:06.449 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select name from publish ::: DataSources: slave
2025-07-02 19:49:06.449 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:49:06.449 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 19:49:06.449 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select b.*, COALESCE(sales_data.total_sales, 0) as sales from book b left join ( select od.bookId, sum(od.num) as total_sales from orderdetail od inner join bookorder bo on od.orderId = bo.orderId where bo.orderStatus in ('已发货', '已收货', '已评价') group by od.bookId ) sales_data on b.id = sales_data.bookId order by b.rank desc, b.id desc limit ?,?
2025-07-02 19:49:06.450 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 19:49:06.450 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:49:06.450 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==> Parameters: 
2025-07-02 19:49:06.450 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select b.*,
               COALESCE(sales_data.total_sales, 0) as sales
        from book b
        left join (
            select od.bookId, sum(od.num) as total_sales
            from orderdetail od
            inner join bookorder bo on od.orderId = bo.orderId
            where bo.orderStatus in ('已发货', '已收货', '已评价')
            group by od.bookId
        ) sales_data on b.id = sales_data.bookId
        order by b.rank desc, b.id desc
        limit ?,? ::: DataSources: slave
2025-07-02 19:49:06.451 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - <==      Total: 5
2025-07-02 19:49:06.451 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 19:49:06.451 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 19:49:06.451 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:49:06.451 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:49:06.452 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:49:06.452 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 19:49:06.452 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 19:49:06.454 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:49:06.454 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:49:06.454 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:49:06.454 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-02 19:49:06.454 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 19:49:06.455 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:49:06.455 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:49:06.455 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:49:06.455 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 19:49:06.456 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:49:06.456 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:49:06.456 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:49:06.456 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:49:06.456 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:49:06.456 [http-nio-8080-exec-6] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-02 19:49:06.456 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 19:49:06.457 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:49:06.457 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:49:06.457 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:49:06.457 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 19:49:06.457 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:49:06.457 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:49:06.458 [http-nio-8080-exec-6] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-02 19:49:06.458 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:49:06.458 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:49:06.458 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:49:06.458 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:49:06.458 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:49:06.458 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:49:06.458 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 19:49:06.458 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 19:49:06.459 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:49:06.459 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:49:06.459 [http-nio-8080-exec-6] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-02 19:49:06.460 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:49:06.460 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:49:06.460 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:49:06.462 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 19:49:06.464 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:49:06.466 [http-nio-8080-exec-6] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-02 19:49:06.468 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:49:06.468 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:49:06.469 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:49:06.469 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 19:49:06.470 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:49:06.470 [http-nio-8080-exec-6] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-02 19:49:06.471 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-02 19:49:06.471 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:49:06.471 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-02 19:49:06.471 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-02 19:49:06.472 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-02 19:49:09.233 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 19:49:09.234 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 19:49:09.235 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:49:09.235 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:49:09.236 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 19:49:09.239 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 5
2025-07-02 19:49:11.507 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-02 19:49:11.507 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:49:11.507 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-02 19:49:11.508 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 19:49:11.510 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-02 19:49:11.512 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-02 19:49:11.513 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:49:11.514 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-02 19:49:11.516 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-02 19:49:11.518 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-02 19:49:13.392 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 19:49:13.392 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 19:49:13.392 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:49:13.393 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:49:13.393 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 19:49:13.395 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 5
2025-07-02 19:49:13.652 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 19:49:13.653 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 19:49:13.653 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:49:13.653 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:49:13.654 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 19:49:13.655 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 5
2025-07-02 19:49:30.152 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-02 19:49:30.159 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:49:30.159 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-02 19:49:30.161 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 19:49:30.167 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-02 19:49:30.169 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-02 19:49:30.170 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:49:30.170 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-02 19:49:30.171 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-02 19:49:30.174 [http-nio-8080-exec-2] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-02 19:50:58.905 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 19:50:58.905 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 19:50:58.906 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:50:58.906 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:50:58.907 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 19:50:58.909 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 5
2025-07-02 19:54:47.799 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:54:47.800 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 19:54:47.800 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:54:47.801 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:54:47.801 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:54:47.801 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:54:47.801 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:54:47.801 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:54:47.803 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:54:47.804 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 19:54:47.806 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 19:54:47.806 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 19:57:51.076 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==>  Preparing: select name from publish
2025-07-02 19:57:51.076 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 19:57:51.076 [http-nio-8080-exec-5] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=5
2025-07-02 19:57:51.076 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:57:51.076 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:57:51.076 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select name from publish ::: DataSources: slave
2025-07-02 19:57:51.076 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 19:57:51.076 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select b.*, COALESCE(sales_data.total_sales, 0) as sales from book b left join ( select od.bookId, sum(od.num) as total_sales from orderdetail od inner join bookorder bo on od.orderId = bo.orderId where bo.orderStatus in ('已发货', '已收货', '已评价') group by od.bookId ) sales_data on b.id = sales_data.bookId order by b.rank desc, b.id desc limit ?,?
2025-07-02 19:57:51.076 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:57:51.076 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select b.*,
               COALESCE(sales_data.total_sales, 0) as sales
        from book b
        left join (
            select od.bookId, sum(od.num) as total_sales
            from orderdetail od
            inner join bookorder bo on od.orderId = bo.orderId
            where bo.orderStatus in ('已发货', '已收货', '已评价')
            group by od.bookId
        ) sales_data on b.id = sales_data.bookId
        order by b.rank desc, b.id desc
        limit ?,? ::: DataSources: slave
2025-07-02 19:57:51.078 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 19:57:51.078 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - ==> Parameters: 
2025-07-02 19:57:51.078 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 19:57:51.079 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.PublishMapper.getPublishNames - <==      Total: 5
2025-07-02 19:57:51.079 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 19:57:51.081 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:57:51.081 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-02 19:57:51.081 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:57:51.081 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:57:51.082 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:57:51.086 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:57:51.087 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 19:57:51.087 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:57:51.087 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 19:57:51.089 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 19:57:51.089 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:57:51.089 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:57:51.090 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:57:51.090 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:57:51.090 [http-nio-8080-exec-5] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-02 19:57:51.090 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 19:57:51.090 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:57:51.091 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:57:51.092 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:57:51.092 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 19:57:51.092 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:57:51.092 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:57:51.094 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:57:51.094 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:57:51.094 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:57:51.094 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 19:57:51.094 [http-nio-8080-exec-5] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-02 19:57:51.094 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:57:51.094 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:57:51.094 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:57:51.095 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 19:57:51.095 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:57:51.095 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 19:57:51.096 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:57:51.096 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:57:51.096 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 19:57:51.097 [http-nio-8080-exec-5] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-02 19:57:51.097 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 19:57:51.097 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:57:51.097 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:57:51.097 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:57:51.097 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 19:57:51.097 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 19:57:51.097 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:57:51.105 [http-nio-8080-exec-5] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-02 19:57:51.105 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 19:57:51.108 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:57:51.110 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 19:57:51.112 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 19:57:51.119 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 19:57:51.121 [http-nio-8080-exec-5] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-02 19:57:51.121 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-02 19:57:51.121 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:57:51.122 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-02 19:57:51.122 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-02 19:57:51.123 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-02 19:57:53.188 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 19:57:53.188 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 19:57:53.188 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:57:53.188 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:57:53.190 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 19:57:53.191 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 5
2025-07-02 19:57:54.527 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY createTime DESC LIMIT ?, ?
2025-07-02 19:57:54.527 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:57:54.527 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity
          
        ORDER BY createTime DESC
        LIMIT ?, ? ::: DataSources: slave
2025-07-02 19:57:54.527 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 19:57:54.533 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.SpikeActivityMapper.searchActivities - <==      Total: 3
2025-07-02 19:57:54.534 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==>  Preparing: SELECT COUNT(*) FROM spikeActivity
2025-07-02 19:57:54.534 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:57:54.535 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM spikeActivity ::: DataSources: slave
2025-07-02 19:57:54.535 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - ==> Parameters: 
2025-07-02 19:57:54.536 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeActivityMapper.getSearchActivityCount - <==      Total: 1
2025-07-02 19:57:58.085 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 19:57:58.086 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 19:57:58.086 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:57:58.086 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:57:58.087 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 19:57:58.089 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 5
2025-07-02 19:59:30.957 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 19:59:30.957 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 19:59:30.957 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 19:59:30.957 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 19:59:30.957 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:59:30.957 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 19:59:30.957 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 19:59:30.957 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 19:59:30.959 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 19:59:30.959 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 19:59:30.960 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 19:59:30.960 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:00:13.391 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 20:00:13.392 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 20:00:13.392 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:00:13.392 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:00:13.393 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 20:00:13.395 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 5
2025-07-02 20:00:35.974 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:00:35.974 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:00:35.974 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:00:35.974 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:00:35.974 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:00:35.989 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 20:00:42.097 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:00:42.097 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:00:42.097 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:00:42.097 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:00:42.097 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:00:42.099 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:00:45.907 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:00:45.907 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:00:45.908 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:00:45.908 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:00:45.910 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:00:45.912 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 20:00:46.787 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:00:46.787 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:00:46.787 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:00:46.787 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:00:46.788 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:00:46.789 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:02:11.200 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:02:11.200 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:02:11.200 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:02:11.200 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:02:11.208 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:02:11.210 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 20:02:11.953 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:02:11.953 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:02:11.954 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:02:11.954 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:02:11.954 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:02:11.956 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:02:36.370 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:02:36.371 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:02:36.371 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:02:36.371 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:02:36.373 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:02:36.374 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 20:02:39.461 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:02:39.462 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:02:39.462 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:02:39.462 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:02:39.463 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:02:39.466 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:04:18.918 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:04:18.919 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:04:18.919 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:04:18.919 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:04:18.920 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:04:18.920 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 20:04:27.760 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:04:27.760 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:04:27.760 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:04:27.760 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:04:27.764 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:04:27.768 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:04:29.912 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:04:29.912 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:04:29.912 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:04:29.912 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:04:29.913 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:04:29.915 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 20:04:33.842 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:04:33.842 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:04:33.842 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:04:33.842 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:04:33.843 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:04:33.845 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:04:39.443 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:04:39.443 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:04:39.444 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:04:39.444 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:04:39.444 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:04:39.446 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 20:04:40.967 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:04:40.967 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:04:40.967 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:04:40.967 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:04:40.967 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:04:40.967 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:04:47.234 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:04:47.234 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:04:47.234 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:04:47.234 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:04:47.234 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:04:47.234 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 20:04:48.172 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:04:48.172 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:04:48.172 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:04:48.172 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:04:48.172 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:04:48.172 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:04:49.075 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户领取优惠券: b123456@example.com -> 5
2025-07-02 20:04:49.075 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==>  Preparing: SELECT * FROM coupon_template WHERE id = ?
2025-07-02 20:04:49.075 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:04:49.075 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE id = ? ::: DataSources: slave
2025-07-02 20:04:49.075 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==> Parameters: 5(Integer)
2025-07-02 20:04:49.076 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - <==      Total: 1
2025-07-02 20:04:49.076 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - ==>  Preparing: SELECT (total_quantity - received_quantity) > 0 FROM coupon_template WHERE id = ?
2025-07-02 20:04:49.076 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:04:49.076 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT (total_quantity - received_quantity) > 0 FROM coupon_template WHERE id = ? ::: DataSources: slave
2025-07-02 20:04:49.077 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - ==> Parameters: 5(Integer)
2025-07-02 20:04:49.077 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - <==      Total: 1
2025-07-02 20:04:49.078 [http-nio-8080-exec-3] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - ==>  Preparing: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND account = ?
2025-07-02 20:04:49.078 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:04:49.078 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND account = ? ::: DataSources: slave
2025-07-02 20:04:49.078 [http-nio-8080-exec-3] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - ==> Parameters: 5(Integer), b123456@example.com(String)
2025-07-02 20:04:49.079 [http-nio-8080-exec-3] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - <==      Total: 1
2025-07-02 20:04:49.079 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserCouponMapper.insert - ==>  Preparing: INSERT INTO user_coupon (coupon_template_id, account, coupon_code, status, receive_time, expire_time, discount_amount, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-02 20:04:49.079 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:04:49.079 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: INSERT INTO user_coupon (coupon_template_id, account, coupon_code, status, receive_time, expire_time, discount_amount, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) ::: DataSources: master
2025-07-02 20:04:49.081 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserCouponMapper.insert - ==> Parameters: 5(Integer), b123456@example.com(String), FULL20250702005960880(String), 1(Integer), 2025-07-02 20:04:49.079(Timestamp), 2025-08-01 20:04:49.079(Timestamp), 0(BigDecimal), 2025-07-02 20:04:49.079(Timestamp), 2025-07-02 20:04:49.079(Timestamp)
2025-07-02 20:04:49.085 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserCouponMapper.insert - <==    Updates: 1
2025-07-02 20:04:49.085 [http-nio-8080-exec-3] DEBUG c.h.s.m.C.incrementReceivedQuantity - ==>  Preparing: UPDATE coupon_template SET received_quantity = received_quantity + 1, update_time = NOW() WHERE id = ?
2025-07-02 20:04:49.085 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:04:49.085 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: UPDATE coupon_template SET received_quantity = received_quantity + 1, update_time = NOW() WHERE id = ? ::: DataSources: master
2025-07-02 20:04:49.086 [http-nio-8080-exec-3] DEBUG c.h.s.m.C.incrementReceivedQuantity - ==> Parameters: 5(Integer)
2025-07-02 20:04:49.087 [http-nio-8080-exec-3] DEBUG c.h.s.m.C.incrementReceivedQuantity - <==    Updates: 1
2025-07-02 20:04:49.102 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:04:49.102 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:04:49.102 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:04:49.102 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:04:49.102 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:04:49.102 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:04:49.102 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:04:49.102 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:04:49.103 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:04:49.103 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:04:49.104 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 2
2025-07-02 20:04:49.104 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:04:50.083 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:04:50.084 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:04:50.084 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:04:50.084 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:04:50.084 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:04:50.084 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 2
2025-07-02 20:04:53.684 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:04:53.684 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:04:53.684 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:04:53.684 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:04:53.686 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:04:53.688 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:05:02.787 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 20:05:02.788 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 20:05:02.788 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:05:02.788 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:05:02.788 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 20:05:02.789 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 5
2025-07-02 20:05:12.532 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:05:12.532 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:05:12.532 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:05:12.532 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:05:12.532 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:05:12.532 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 2
2025-07-02 20:05:16.218 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:05:16.218 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:05:16.218 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:05:16.218 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:05:16.218 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:05:16.218 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:06:01.178 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:06:01.179 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:06:01.179 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:06:01.179 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:06:01.180 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:06:01.184 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 2
2025-07-02 20:06:07.022 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:06:07.022 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:06:07.022 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:06:07.022 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:06:07.023 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:06:07.025 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:09:22.909 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:09:22.909 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:09:22.909 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:09:22.909 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:09:22.909 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:09:22.909 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 2
2025-07-02 20:09:28.428 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:09:28.430 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:09:28.431 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:09:28.431 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:09:28.432 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:09:28.435 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:14:27.208 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:14:27.208 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:14:27.210 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:14:27.210 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:14:27.211 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:14:27.211 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:14:27.211 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:14:27.211 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:14:27.211 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:14:27.211 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:14:27.214 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:14:27.214 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:14:27.215 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 2
2025-07-02 20:14:27.215 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:16:16.433 [http-nio-8080-exec-9] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:16:16.433 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:16:16.433 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:16:16.441 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:16:16.441 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:16:16.443 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:16:16.444 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 2
2025-07-02 20:16:20.594 [http-nio-8080-exec-8] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:16:20.595 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:16:20.595 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:16:20.596 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:16:20.596 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:16:20.596 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:16:20.599 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:16:21.360 [http-nio-8080-exec-6] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:16:21.360 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:16:21.360 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:16:21.360 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:16:21.360 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:16:21.360 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:16:21.360 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 2
2025-07-02 20:16:31.193 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:16:31.193 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:16:31.193 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:16:31.193 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:16:31.193 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:16:31.193 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:16:31.193 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:17:01.306 [http-nio-8080-exec-10] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:17:01.309 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:17:01.310 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:17:01.310 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:17:01.310 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:17:01.311 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:17:01.313 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:17:01.441 [http-nio-8080-exec-7] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:17:01.448 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:17:01.449 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:17:01.449 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:17:01.450 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:17:01.452 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:17:01.454 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 2
2025-07-02 20:17:03.746 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:17:03.748 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:17:03.749 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:17:03.749 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:17:03.749 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:17:03.750 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:17:03.752 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 2
2025-07-02 20:17:08.328 [http-nio-8080-exec-2] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:17:08.329 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:17:08.329 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:17:08.329 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:17:08.329 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:17:08.330 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:17:08.332 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:17:13.617 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:17:13.617 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:17:13.617 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:17:13.617 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:17:13.617 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:17:13.617 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:17:13.617 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 2
2025-07-02 20:17:16.222 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:17:16.223 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:17:16.223 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:17:16.223 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:17:16.223 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:17:16.224 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:17:16.227 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:17:19.722 [http-nio-8080-exec-9] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:17:19.724 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户领取优惠券: b123456@example.com -> 3
2025-07-02 20:17:19.725 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==>  Preparing: SELECT * FROM coupon_template WHERE id = ?
2025-07-02 20:17:19.725 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:17:19.725 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE id = ? ::: DataSources: slave
2025-07-02 20:17:19.726 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==> Parameters: 3(Integer)
2025-07-02 20:17:19.728 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - <==      Total: 1
2025-07-02 20:17:19.728 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - ==>  Preparing: SELECT (total_quantity - received_quantity) > 0 FROM coupon_template WHERE id = ?
2025-07-02 20:17:19.728 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:17:19.728 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT (total_quantity - received_quantity) > 0 FROM coupon_template WHERE id = ? ::: DataSources: slave
2025-07-02 20:17:19.729 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - ==> Parameters: 3(Integer)
2025-07-02 20:17:19.730 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - <==      Total: 1
2025-07-02 20:17:19.730 [http-nio-8080-exec-9] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - ==>  Preparing: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND account = ?
2025-07-02 20:17:19.730 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:17:19.730 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND account = ? ::: DataSources: slave
2025-07-02 20:17:19.730 [http-nio-8080-exec-9] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - ==> Parameters: 3(Integer), b123456@example.com(String)
2025-07-02 20:17:19.734 [http-nio-8080-exec-9] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - <==      Total: 1
2025-07-02 20:17:19.734 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserCouponMapper.insert - ==>  Preparing: INSERT INTO user_coupon (coupon_template_id, account, coupon_code, status, receive_time, expire_time, discount_amount, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-02 20:17:19.734 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:17:19.735 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: INSERT INTO user_coupon (coupon_template_id, account, coupon_code, status, receive_time, expire_time, discount_amount, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) ::: DataSources: master
2025-07-02 20:17:19.736 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserCouponMapper.insert - ==> Parameters: 3(Integer), b123456@example.com(String), DISC20250702003698124(String), 1(Integer), 2025-07-02 20:17:19.734(Timestamp), 2025-07-09 20:17:19.734(Timestamp), 0(BigDecimal), 2025-07-02 20:17:19.734(Timestamp), 2025-07-02 20:17:19.734(Timestamp)
2025-07-02 20:17:19.738 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserCouponMapper.insert - <==    Updates: 1
2025-07-02 20:17:19.739 [http-nio-8080-exec-9] DEBUG c.h.s.m.C.incrementReceivedQuantity - ==>  Preparing: UPDATE coupon_template SET received_quantity = received_quantity + 1, update_time = NOW() WHERE id = ?
2025-07-02 20:17:19.739 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:17:19.739 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: UPDATE coupon_template SET received_quantity = received_quantity + 1, update_time = NOW() WHERE id = ? ::: DataSources: master
2025-07-02 20:17:19.739 [http-nio-8080-exec-9] DEBUG c.h.s.m.C.incrementReceivedQuantity - ==> Parameters: 3(Integer)
2025-07-02 20:17:19.741 [http-nio-8080-exec-9] DEBUG c.h.s.m.C.incrementReceivedQuantity - <==    Updates: 1
2025-07-02 20:17:19.757 [http-nio-8080-exec-8] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:17:19.757 [http-nio-8080-exec-6] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:17:19.758 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:17:19.758 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:17:19.758 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:17:19.758 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:17:19.759 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:17:19.759 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:17:19.758 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:17:19.759 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:17:19.760 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:17:19.761 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:17:19.761 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:17:19.763 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:17:21.586 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:17:21.586 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:17:21.587 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:17:21.587 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:17:21.587 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:17:21.588 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:17:21.590 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:17:24.048 [http-nio-8080-exec-10] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:17:24.048 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:17:24.048 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:17:24.048 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:17:24.048 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:17:24.048 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:17:24.048 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:17:26.961 [http-nio-8080-exec-7] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:17:26.961 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:17:26.961 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:17:26.961 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:17:26.961 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:17:26.961 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:17:26.961 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:17:35.573 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:17:35.575 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:17:35.575 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:17:35.575 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:17:35.575 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:17:35.577 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:17:35.579 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:17:48.216 [http-nio-8080-exec-2] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:17:48.217 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:17:48.217 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:17:48.217 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:17:48.217 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:17:48.218 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:17:48.221 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:18:07.631 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:18:07.632 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:18:07.632 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:18:07.632 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:18:07.633 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:18:07.633 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:18:07.636 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:18:08.386 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:18:08.387 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:18:08.388 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:18:08.388 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:18:08.388 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:18:08.390 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:18:08.391 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:18:13.065 [http-nio-8080-exec-9] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:18:13.065 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:18:13.065 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:18:13.065 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:18:13.065 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:18:13.065 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:18:13.065 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:18:27.596 [http-nio-8080-exec-8] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:18:27.597 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:18:27.598 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:18:27.598 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:18:27.598 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:18:27.599 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:18:27.600 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:18:28.470 [http-nio-8080-exec-6] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:18:28.471 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:18:28.471 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:18:28.471 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:18:28.471 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:18:28.472 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:18:28.473 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:35:47.203 [http-nio-8080-exec-10] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:35:47.203 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:35:47.206 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:35:47.206 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:35:47.207 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:35:47.207 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:35:47.208 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:35:47.208 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:35:47.208 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:35:47.208 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:35:47.212 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:35:47.212 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:35:47.214 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:35:47.214 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:36:49.351 [http-nio-8080-exec-7] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:36:49.354 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:36:49.355 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:36:49.355 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:36:49.355 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:36:49.355 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:36:49.355 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:36:52.080 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:36:52.081 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:36:52.082 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:36:52.082 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:36:52.082 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:36:52.083 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:36:52.086 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:37:43.994 [http-nio-8080-exec-2] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:37:43.994 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:37:43.994 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:37:43.994 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:37:43.994 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:37:43.994 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:37:43.994 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:37:47.680 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:37:47.681 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:37:47.682 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:37:47.682 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:37:47.682 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:37:47.683 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:37:47.685 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:37:49.480 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:37:49.480 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:37:49.480 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:37:49.480 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:37:49.480 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:37:49.480 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:37:49.489 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:38:03.600 [http-nio-8080-exec-9] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:38:03.601 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:38:03.602 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:38:03.602 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:38:03.602 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:38:03.602 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:38:03.604 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:38:08.786 [http-nio-8080-exec-8] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:38:08.788 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:38:08.791 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:38:08.791 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:38:08.791 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:38:08.791 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:38:08.791 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:38:11.187 [http-nio-8080-exec-6] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:38:11.189 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:38:11.190 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:38:11.190 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:38:11.190 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:38:11.191 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:38:11.193 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:38:12.117 [http-nio-8080-exec-10] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:38:12.118 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:38:12.120 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:38:12.120 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:38:12.120 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:38:12.121 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:38:12.123 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:38:22.189 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:38:22.191 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:38:22.192 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:38:22.192 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:38:22.192 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:38:22.193 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:38:22.195 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:38:40.548 [http-nio-8080-exec-7] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:38:40.549 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:38:40.551 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:38:40.551 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:38:40.551 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:38:40.553 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:38:40.554 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:41:33.925 [http-nio-8080-exec-2] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:41:33.925 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:41:33.926 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:41:33.926 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:41:33.927 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:41:33.927 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:41:33.927 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:41:33.927 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:41:33.927 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:41:33.927 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:41:33.930 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:41:33.930 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:41:33.933 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:41:33.933 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:41:44.949 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:41:44.950 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:41:44.951 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:41:44.951 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:41:44.951 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:41:44.951 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:41:44.954 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:41:47.588 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:41:47.589 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:41:47.589 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:41:47.589 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:41:47.589 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:41:47.590 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:41:47.592 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:41:49.020 [http-nio-8080-exec-9] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:41:49.020 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:41:49.020 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:41:49.020 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:41:49.020 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:41:49.020 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:41:49.020 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:41:50.311 [http-nio-8080-exec-8] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:41:50.313 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:41:50.314 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:41:50.314 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:41:50.314 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:41:50.314 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:41:50.314 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:42:23.107 [http-nio-8080-exec-6] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:42:23.108 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:42:23.109 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:42:23.109 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:42:23.109 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:42:23.109 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:42:23.110 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:43:54.866 [http-nio-8080-exec-10] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:43:54.866 [http-nio-8080-exec-2] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:43:54.866 [http-nio-8080-exec-7] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:43:54.866 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:43:54.866 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:43:54.866 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:43:54.873 [http-nio-8080-exec-2] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 20:43:54.874 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 20:43:54.874 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 20:43:54.875 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:43:54.875 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 20:43:54.873 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 20:43:54.875 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:43:54.875 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 20:43:54.874 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 20:43:54.876 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:43:54.876 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 20:43:54.874 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 20:43:54.874 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:43:54.876 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 20:43:54.875 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 20:43:54.876 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 20:43:54.876 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:43:54.877 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 20:43:54.878 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 20:43:54.877 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:43:54.878 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 20:43:54.877 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 20:43:54.877 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 20:43:54.880 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 20:43:54.880 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 20:43:54.883 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:43:54.883 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 20:43:54.882 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 20:43:54.884 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 20:43:54.889 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:43:54.884 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 20:43:54.886 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 20:43:54.889 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 20:43:54.890 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 20:43:54.890 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 20:43:54.891 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 20:43:54.890 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 20:43:54.891 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:43:54.892 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 20:43:54.892 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 20:43:54.892 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 20:43:54.892 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 20:43:54.892 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 20:43:54.893 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 20:43:54.893 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 20:43:54.893 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 20:43:54.894 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:43:54.895 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 20:43:54.896 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:43:54.897 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 20:43:54.898 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 20:43:54.899 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 20:43:54.899 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 20:43:54.901 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 20:43:54.901 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 20:43:54.906 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 20:43:54.906 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 20:43:54.907 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:43:54.907 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:43:54.907 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 20:43:54.907 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 20:43:54.907 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 20:43:54.907 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 20:43:54.907 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 20:43:54.907 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 20:43:54.907 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 20:43:54.907 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 20:43:54.907 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 20:43:54.907 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:43:54.907 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 20:43:54.907 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:43:54.907 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 20:43:54.907 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 20:43:54.907 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 20:43:54.907 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 20:43:54.907 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 20:43:54.907 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 20:43:54.907 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 20:43:54.912 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:43:54.912 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:43:54.912 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 20:43:54.912 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 20:43:54.913 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 20:43:54.913 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 20:43:54.914 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 20:43:54.914 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 20:43:54.914 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:43:54.914 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 20:43:54.914 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 20:43:54.914 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 20:43:54.914 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 20:43:54.914 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 20:43:54.914 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:43:54.914 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 20:43:54.919 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 20:43:54.923 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 20:44:01.775 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:44:01.775 [http-nio-8080-exec-7] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:44:01.775 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:44:01.775 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:44:01.775 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:44:01.775 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:44:01.775 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:44:01.775 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:44:01.775 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:44:01.777 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:44:01.778 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:44:01.778 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:44:01.779 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:44:01.779 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:45:01.823 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:45:01.825 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:45:01.826 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:45:01.826 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:45:01.826 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:45:01.830 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:45:01.832 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:45:02.812 [http-nio-8080-exec-9] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:45:02.812 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:45:02.813 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:45:02.813 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:45:02.813 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:45:02.814 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:45:02.814 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:45:05.467 [http-nio-8080-exec-8] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:45:05.468 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:45:05.468 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:45:05.468 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:45:05.469 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:45:05.469 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:45:05.473 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:45:15.138 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:45:15.139 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:45:15.140 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:45:15.140 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:45:15.140 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:45:15.141 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:45:15.143 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:45:16.849 [http-nio-8080-exec-7] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:45:16.850 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:45:16.851 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:45:16.852 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:45:16.852 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:45:16.854 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:45:16.856 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:46:50.900 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:46:50.900 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:46:50.900 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:46:50.900 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:46:50.900 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:46:50.909 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:46:50.911 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:46:51.920 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:46:51.921 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:46:51.922 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:46:51.922 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:46:51.922 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:46:51.923 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:46:51.924 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:47:22.699 [http-nio-8080-exec-10] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:47:22.699 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:47:22.699 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:47:22.699 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:47:22.699 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:47:22.699 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:47:22.709 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:47:29.244 [http-nio-8080-exec-6] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:47:29.244 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:47:29.260 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:47:29.261 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:47:29.261 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:47:29.262 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:47:29.264 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:47:31.419 [http-nio-8080-exec-2] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:47:31.419 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:47:31.419 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:47:31.419 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:47:31.419 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:47:31.419 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:47:31.430 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:47:40.911 [http-nio-8080-exec-9] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:47:40.911 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:47:40.912 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:47:40.912 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:47:40.912 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:47:40.912 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:47:40.912 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:47:40.912 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:47:40.912 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:47:40.912 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:47:40.913 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:47:40.914 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:47:40.914 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:47:40.916 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:48:04.957 [http-nio-8080-exec-8] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:48:04.959 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:48:04.961 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:48:04.963 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:48:04.963 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:48:04.964 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:48:04.966 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:48:09.484 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:48:09.484 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:48:09.484 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:48:09.490 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:48:09.490 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:48:09.490 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:48:09.495 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:48:13.158 [http-nio-8080-exec-7] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:48:13.159 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:48:13.164 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:48:13.165 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:48:13.165 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:48:13.165 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:48:13.167 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:48:26.137 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:48:26.137 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:48:26.137 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:48:26.137 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:48:26.137 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:48:26.137 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:48:26.145 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:48:32.261 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:48:32.262 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:48:32.263 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:48:32.263 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:48:32.263 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:48:32.264 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:48:32.266 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:48:33.740 [http-nio-8080-exec-10] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:48:33.741 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:48:33.741 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:48:33.742 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:48:33.742 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:48:33.743 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:48:33.746 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:50:46.213 [http-nio-8080-exec-2] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:50:46.213 [http-nio-8080-exec-6] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:50:46.215 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:50:46.215 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:50:46.215 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:50:46.215 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:50:46.215 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:50:46.215 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:50:46.215 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:50:46.215 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:50:46.216 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:50:46.216 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:50:46.219 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:50:46.219 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:50:46.229 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:50:46.230 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:50:46.230 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:50:46.230 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:50:46.231 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:50:46.232 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:50:46.234 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:51:10.355 [http-nio-8080-exec-9] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:51:10.355 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:51:10.355 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:51:10.355 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:51:10.355 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:51:10.355 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:51:10.355 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:51:18.521 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:51:18.521 [http-nio-8080-exec-8] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:51:18.523 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:51:18.523 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:51:18.523 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:51:18.523 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:51:18.523 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:51:18.523 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:51:18.523 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:51:18.523 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:51:18.523 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:51:18.523 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:51:18.523 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:51:18.523 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:51:41.623 [http-nio-8080-exec-7] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:51:41.623 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:51:41.623 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:51:41.623 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:51:41.625 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:51:41.625 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:51:41.625 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:51:41.625 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:51:41.625 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:51:41.625 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:51:41.625 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:51:41.625 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:51:41.626 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:51:41.626 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:51:41.637 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:51:41.638 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:51:41.638 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:51:41.638 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:51:41.638 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:51:41.639 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:51:41.645 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:53:24.197 [http-nio-8080-exec-10] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:53:24.197 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:53:24.198 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:53:24.199 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:53:24.199 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:53:24.201 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:53:24.202 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:53:35.014 [http-nio-8080-exec-6] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:53:35.018 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 管理员更新优惠券模板: 5
2025-07-02 20:53:35.019 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==>  Preparing: SELECT * FROM coupon_template WHERE id = ?
2025-07-02 20:53:35.019 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:53:35.019 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE id = ? ::: DataSources: slave
2025-07-02 20:53:35.020 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==> Parameters: 5(Integer)
2025-07-02 20:53:35.022 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - <==      Total: 1
2025-07-02 20:53:35.023 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.CouponTemplateMapper.update - ==>  Preparing: UPDATE coupon_template SET name = ?, description = ?, type = ?, discount_value = ?, min_order_amount = ?, max_discount_amount = ?, total_quantity = ?, per_user_limit = ?, valid_days = ?, status = ?, update_time = ? WHERE id = ?
2025-07-02 20:53:35.023 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:53:35.023 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: UPDATE coupon_template SET name = ?, description = ?, type = ?, discount_value = ?, min_order_amount = ?, max_discount_amount = ?, total_quantity = ?, per_user_limit = ?, valid_days = ?, status = ?, update_time = ? WHERE id = ? ::: DataSources: master
2025-07-02 20:53:35.027 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.CouponTemplateMapper.update - ==> Parameters: 用户福利(String), null, 1(Integer), 30(BigDecimal), 100(BigDecimal), null, 3(Integer), 1(Integer), 30(Integer), 1(Integer), 2025-07-02 20:53:35.022(Timestamp), 5(Integer)
2025-07-02 20:53:35.027 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.CouponTemplateMapper.update - <==    Updates: 1
2025-07-02 20:53:35.060 [http-nio-8080-exec-2] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:53:35.061 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 20:53:35.061 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 20:53:35.061 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:53:35.061 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:53:35.061 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 20:53:35.061 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 5
2025-07-02 20:53:39.516 [http-nio-8080-exec-9] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:53:39.516 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:53:39.517 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:53:39.517 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:53:39.517 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:53:39.517 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:53:39.517 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:53:39.517 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:53:39.517 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:53:39.517 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:53:39.518 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:53:39.518 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:53:39.519 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:53:39.520 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:53:39.648 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:53:39.649 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:53:39.649 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:53:39.649 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:53:39.650 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:53:39.650 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:53:39.652 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:53:40.854 [http-nio-8080-exec-8] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:53:40.855 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:53:40.855 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:53:40.856 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:53:40.856 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:53:40.858 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:53:40.858 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:53:52.142 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:53:52.142 [http-nio-8080-exec-7] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:53:52.143 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:53:52.143 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:53:52.143 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:53:52.143 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:53:52.143 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:53:52.143 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:53:52.143 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:53:52.143 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:53:52.145 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:53:52.145 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:53:52.148 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:53:52.148 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:53:55.815 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:53:55.819 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:53:55.819 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:53:55.819 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:53:55.819 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:53:55.819 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:53:55.821 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:53:59.860 [http-nio-8080-exec-10] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:53:59.861 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 管理员更新优惠券模板状态: 5 -> 0
2025-07-02 20:53:59.861 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.CouponTemplateMapper.updateStatus - ==>  Preparing: UPDATE coupon_template SET status = ?, update_time = NOW() WHERE id = ?
2025-07-02 20:53:59.861 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:53:59.861 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: UPDATE coupon_template SET status = ?, update_time = NOW() WHERE id = ? ::: DataSources: master
2025-07-02 20:53:59.862 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.CouponTemplateMapper.updateStatus - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 20:53:59.863 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.CouponTemplateMapper.updateStatus - <==    Updates: 1
2025-07-02 20:53:59.879 [http-nio-8080-exec-6] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:53:59.879 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 20:53:59.880 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 20:53:59.880 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:53:59.880 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:53:59.880 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 20:53:59.881 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 5
2025-07-02 20:54:02.447 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:54:02.447 [http-nio-8080-exec-2] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:54:02.447 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:54:02.447 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:54:02.447 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:54:02.447 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:54:02.447 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:54:02.447 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:54:02.447 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:54:02.447 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:54:02.452 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:54:02.454 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:54:02.454 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 20:54:02.456 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:54:02.470 [http-nio-8080-exec-9] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:54:02.470 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:54:02.471 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:54:02.471 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:54:02.471 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:54:02.472 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:54:02.473 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:54:04.414 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:54:04.414 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:54:04.414 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:54:04.414 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:54:04.414 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:54:04.414 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:54:04.414 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:54:06.998 [http-nio-8080-exec-7] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:54:06.998 [http-nio-8080-exec-8] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:54:06.999 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:54:06.999 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:54:06.999 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:54:06.999 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:54:06.999 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:54:06.999 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:54:06.999 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:54:06.999 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:54:07.000 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:54:07.000 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:54:07.003 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 4
2025-07-02 20:54:07.003 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:54:08.981 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:54:08.982 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 管理员更新优惠券模板状态: 5 -> 1
2025-07-02 20:54:08.983 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.CouponTemplateMapper.updateStatus - ==>  Preparing: UPDATE coupon_template SET status = ?, update_time = NOW() WHERE id = ?
2025-07-02 20:54:08.983 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:54:08.983 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: UPDATE coupon_template SET status = ?, update_time = NOW() WHERE id = ? ::: DataSources: master
2025-07-02 20:54:08.984 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.CouponTemplateMapper.updateStatus - ==> Parameters: 1(Integer), 5(Integer)
2025-07-02 20:54:08.988 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.CouponTemplateMapper.updateStatus - <==    Updates: 1
2025-07-02 20:54:09.006 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:54:09.008 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 20:54:09.009 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 20:54:09.009 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:54:09.009 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:54:09.010 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 20:54:09.011 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 5
2025-07-02 20:54:12.070 [http-nio-8080-exec-10] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:54:12.070 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:54:12.070 [http-nio-8080-exec-6] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:54:12.071 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:54:12.071 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:54:12.071 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:54:12.071 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:54:12.071 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:54:12.071 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:54:12.071 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:54:12.071 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:54:12.072 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:54:12.072 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:54:12.073 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:54:12.082 [http-nio-8080-exec-2] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:54:12.082 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:54:12.082 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:54:12.082 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:54:12.082 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:54:12.082 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:54:12.082 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:54:13.567 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:54:13.569 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:54:13.569 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:54:13.569 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:54:13.570 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:54:13.571 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:54:13.573 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:54:41.745 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:54:41.745 [http-nio-8080-exec-9] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:54:41.746 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:54:41.746 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:54:41.746 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:54:41.746 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:54:41.746 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:54:41.747 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:54:41.747 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:54:41.747 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:54:41.747 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:54:41.747 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:54:41.748 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:54:41.748 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:56:52.647 [http-nio-8080-exec-7] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:56:52.647 [http-nio-8080-exec-8] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:56:52.647 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:56:52.648 [http-nio-8080-exec-10] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:56:52.648 [http-nio-8080-exec-6] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:56:52.648 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:56:52.648 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 20:56:52.648 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:52.648 [http-nio-8080-exec-6] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 20:56:52.648 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 20:56:52.648 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 20:56:52.648 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 20:56:52.648 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 20:56:52.648 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 20:56:52.648 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 20:56:52.648 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:52.648 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:52.648 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:52.648 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:52.648 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:52.648 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 20:56:52.648 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 20:56:52.648 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 20:56:52.648 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 20:56:52.648 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 20:56:52.648 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 20:56:52.652 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 20:56:52.652 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 20:56:52.652 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 20:56:52.652 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 20:56:52.652 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 20:56:52.652 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 20:56:52.652 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:52.652 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 20:56:52.652 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:52.652 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 20:56:52.652 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 20:56:52.652 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 20:56:52.652 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 20:56:52.652 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 20:56:52.652 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:52.652 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 20:56:52.652 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 20:56:52.652 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 20:56:52.652 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 20:56:52.652 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 20:56:52.652 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 20:56:52.652 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 20:56:52.652 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 20:56:52.652 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 20:56:52.652 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 20:56:52.652 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:52.657 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 20:56:52.657 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:52.657 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 20:56:52.657 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 20:56:52.657 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 20:56:52.657 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 20:56:52.658 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:52.657 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 20:56:52.658 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 20:56:52.658 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 20:56:52.659 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 20:56:52.659 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 20:56:52.659 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 20:56:52.659 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 20:56:52.659 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 20:56:52.659 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 20:56:52.659 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:52.659 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:52.659 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 20:56:52.659 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 20:56:52.659 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 20:56:52.659 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 20:56:52.659 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 20:56:52.659 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 20:56:52.661 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 20:56:52.661 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 20:56:52.661 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:52.661 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:52.661 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 20:56:52.661 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 20:56:52.661 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 20:56:52.661 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 20:56:52.661 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 20:56:52.661 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 20:56:52.661 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 20:56:52.665 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 20:56:52.667 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:52.667 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 20:56:52.667 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 20:56:52.669 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 20:56:52.670 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 20:56:52.670 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:52.670 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 20:56:52.671 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 20:56:52.672 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 20:56:52.672 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 20:56:52.673 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:52.673 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 20:56:52.673 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 20:56:52.674 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 20:56:58.003 [http-nio-8080-exec-2] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:56:58.011 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.CartMapper.getCartsByPage - ==>  Preparing: select book.id,author,bookName,isbn,publish, birthday,marketPrice,price,stock,description,put,num,addTime,account from book join cart on book.id = cart.id where account=? limit ?,?
2025-07-02 20:56:58.012 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:58.015 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select book.id,author,bookName,isbn,publish,
                birthday,marketPrice,price,stock,description,put,num,addTime,account
         from book join cart on book.id = cart.id
         where account=? limit ?,? ::: DataSources: slave
2025-07-02 20:56:58.017 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.CartMapper.getCartsByPage - ==> Parameters: b123456@example.com(String), 0(Integer), 10(Integer)
2025-07-02 20:56:58.024 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.CartMapper.getCartsByPage - <==      Total: 0
2025-07-02 20:56:59.636 [http-nio-8080-exec-9] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:56:59.636 [http-nio-8080-exec-6] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:56:59.636 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:56:59.636 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:56:59.636 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:56:59.636 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:56:59.637 [http-nio-8080-exec-4] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 20:56:59.637 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 20:56:59.637 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 20:56:59.637 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:59.637 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 20:56:59.637 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 20:56:59.637 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 20:56:59.637 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 20:56:59.637 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:59.637 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:59.637 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 20:56:59.637 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:59.637 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:59.637 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:59.637 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 20:56:59.637 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 20:56:59.637 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 20:56:59.637 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 20:56:59.637 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 20:56:59.638 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 20:56:59.637 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 20:56:59.638 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 20:56:59.638 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 20:56:59.639 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 20:56:59.639 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 20:56:59.639 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 20:56:59.639 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 20:56:59.639 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 20:56:59.639 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 20:56:59.639 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:59.639 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 20:56:59.639 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 20:56:59.639 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:59.640 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 20:56:59.640 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 20:56:59.640 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 20:56:59.641 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 20:56:59.641 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 20:56:59.641 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 20:56:59.641 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 20:56:59.651 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:59.652 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 20:56:59.641 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 20:56:59.641 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 20:56:59.641 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 20:56:59.649 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 20:56:59.652 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:59.652 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 20:56:59.652 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:59.653 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 20:56:59.653 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 20:56:59.653 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 20:56:59.653 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 20:56:59.653 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:59.653 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 20:56:59.653 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 20:56:59.653 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:59.654 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 20:56:59.654 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 20:56:59.654 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 20:56:59.654 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 20:56:59.654 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 20:56:59.654 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 20:56:59.655 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 20:56:59.655 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 20:56:59.657 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:59.657 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 20:56:59.657 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 20:56:59.658 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 20:56:59.658 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 20:56:59.658 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 20:56:59.658 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 20:56:59.659 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 20:56:59.659 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:59.659 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:59.659 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 20:56:59.659 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 20:56:59.659 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 20:56:59.659 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 20:56:59.660 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 20:56:59.660 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 20:56:59.660 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 20:56:59.660 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:59.660 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 20:56:59.661 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 20:56:59.662 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 20:56:59.662 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 20:56:59.662 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:59.662 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 20:56:59.664 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 20:56:59.666 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 20:56:59.666 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 20:56:59.666 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:56:59.666 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 20:56:59.666 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 20:56:59.666 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 20:57:01.819 [http-nio-8080-exec-10] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:57:01.819 [http-nio-8080-exec-8] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:57:01.821 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 20:57:01.821 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:01.821 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 20:57:01.821 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 20:57:01.825 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 20:57:01.825 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 20:57:01.825 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:01.826 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 20:57:01.826 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 20:57:01.827 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 20:57:01.828 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 20:57:01.828 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:01.828 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 20:57:01.828 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 20:57:01.829 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 20:57:01.829 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 20:57:01.829 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:01.829 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 20:57:01.829 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 20:57:01.831 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 20:57:01.832 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 20:57:01.832 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:01.832 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 20:57:01.833 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 20:57:01.833 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 20:57:02.242 [http-nio-8080-exec-8] ERROR com.huang.store.exception.GlobalExceptionHandler - 运行时异常
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 127.0.0.1/<unresolved>:6380
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.RedisTemplate.hasKey(RedisTemplate.java:782)
	at com.huang.store.service.BookServiceImp.getBook(BookServiceImp.java:180)
	at com.huang.store.controller.BookController.getBook(BookController.java:334)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 127.0.0.1/<unresolved>:6380
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 120 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: /127.0.0.1:6380
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-02 20:57:02.251 [http-nio-8080-exec-8] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 127.0.0.1/<unresolved>:6380]
2025-07-02 20:57:18.405 [http-nio-8080-exec-2] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:57:18.405 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:57:18.405 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:57:18.405 [http-nio-8080-exec-7] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:57:18.405 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:57:18.405 [http-nio-8080-exec-6] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:57:18.406 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 20:57:18.406 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 20:57:18.406 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 20:57:18.406 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 20:57:18.406 [http-nio-8080-exec-6] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 20:57:18.406 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:18.406 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 20:57:18.406 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:18.407 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:18.407 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:18.407 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 20:57:18.407 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 20:57:18.407 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:18.407 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 20:57:18.407 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 20:57:18.407 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 20:57:18.407 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:18.407 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 20:57:18.407 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 20:57:18.407 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 20:57:18.407 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 20:57:18.407 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 20:57:18.407 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 20:57:18.407 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 20:57:18.408 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 20:57:18.408 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 20:57:18.408 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 20:57:18.408 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 20:57:18.408 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 20:57:18.408 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 20:57:18.408 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 20:57:18.408 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:18.408 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:18.408 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:18.408 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 20:57:18.408 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 20:57:18.408 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 20:57:18.408 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 20:57:18.408 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 20:57:18.408 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 20:57:18.408 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 20:57:18.408 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 20:57:18.408 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:18.408 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 20:57:18.410 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 20:57:18.408 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 20:57:18.410 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 20:57:18.410 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 20:57:18.410 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 20:57:18.410 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 20:57:18.411 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 20:57:18.411 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 20:57:18.411 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 20:57:18.411 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:18.410 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:18.411 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:18.411 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 20:57:18.411 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 20:57:18.411 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 20:57:18.412 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 20:57:18.412 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 20:57:18.412 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 20:57:18.412 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 20:57:18.413 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 20:57:18.413 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 20:57:18.413 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 20:57:18.413 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 20:57:18.413 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 20:57:18.413 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:18.413 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:18.413 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 20:57:18.413 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 20:57:18.413 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 20:57:18.413 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 20:57:18.416 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 20:57:18.416 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 20:57:18.417 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 20:57:18.417 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 20:57:18.417 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:18.417 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:18.418 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 20:57:18.417 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 20:57:18.418 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 20:57:18.418 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 20:57:18.419 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 20:57:18.420 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 20:57:18.421 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 20:57:18.421 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:18.421 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 20:57:18.422 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 20:57:18.423 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 20:57:18.425 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 20:57:18.426 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:18.426 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 20:57:18.427 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 20:57:18.428 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 20:57:18.541 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:57:18.541 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.CartMapper.getCartsByPage - ==>  Preparing: select book.id,author,bookName,isbn,publish, birthday,marketPrice,price,stock,description,put,num,addTime,account from book join cart on book.id = cart.id where account=? limit ?,?
2025-07-02 20:57:18.541 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:18.541 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select book.id,author,bookName,isbn,publish,
                birthday,marketPrice,price,stock,description,put,num,addTime,account
         from book join cart on book.id = cart.id
         where account=? limit ?,? ::: DataSources: slave
2025-07-02 20:57:18.543 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.CartMapper.getCartsByPage - ==> Parameters: b123456@example.com(String), 0(Integer), 10(Integer)
2025-07-02 20:57:18.548 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.CartMapper.getCartsByPage - <==      Total: 0
2025-07-02 20:57:19.009 [http-nio-8080-exec-8] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:57:19.009 [http-nio-8080-exec-10] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:57:19.009 [http-nio-8080-exec-7] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:57:19.009 [http-nio-8080-exec-9] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:57:19.009 [http-nio-8080-exec-6] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:57:19.009 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:57:19.011 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 20:57:19.011 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 20:57:19.011 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 20:57:19.011 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 20:57:19.011 [http-nio-8080-exec-3] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 20:57:19.011 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 20:57:19.011 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:19.011 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:19.011 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:19.011 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:19.011 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:19.011 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 20:57:19.012 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 20:57:19.012 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 20:57:19.012 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 20:57:19.012 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 20:57:19.012 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 20:57:19.012 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:19.012 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 20:57:19.012 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 20:57:19.012 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 20:57:19.012 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 20:57:19.012 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 20:57:19.012 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 20:57:19.012 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 20:57:19.013 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 20:57:19.015 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 20:57:19.013 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 20:57:19.013 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 20:57:19.015 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 20:57:19.015 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 20:57:19.015 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 20:57:19.015 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 20:57:19.015 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 20:57:19.016 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:19.016 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 20:57:19.015 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 20:57:19.015 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 20:57:19.015 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:19.015 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:19.016 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 20:57:19.016 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 20:57:19.017 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 20:57:19.016 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:19.017 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 20:57:19.016 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:19.017 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 20:57:19.016 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 20:57:19.017 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 20:57:19.018 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 20:57:19.018 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 20:57:19.019 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 20:57:19.018 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 20:57:19.019 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 20:57:19.021 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 20:57:19.022 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 20:57:19.024 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:19.024 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 20:57:19.024 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 20:57:19.024 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 20:57:19.024 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:19.024 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 20:57:19.026 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 20:57:19.028 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 20:57:19.029 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 20:57:19.029 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 20:57:19.029 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 20:57:19.029 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:19.029 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 20:57:19.029 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 20:57:19.029 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 20:57:19.029 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:19.029 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 20:57:19.031 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 20:57:19.032 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 20:57:19.033 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 20:57:19.033 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 20:57:19.033 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 20:57:19.033 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:19.033 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:19.033 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 20:57:19.033 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 20:57:19.033 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 20:57:19.033 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 20:57:19.043 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 20:57:19.044 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 20:57:19.045 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 20:57:19.045 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:19.045 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 20:57:19.046 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 20:57:19.047 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 20:57:19.048 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 20:57:19.050 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:19.050 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 20:57:19.050 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 20:57:19.053 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 20:57:19.827 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:57:19.827 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:57:19.828 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:57:19.828 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:57:19.828 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:57:19.828 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:19.828 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:57:19.828 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:57:19.828 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:19.828 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:57:19.829 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:57:19.829 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:57:19.833 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:57:19.834 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:57:19.846 [http-nio-8080-exec-2] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:57:19.850 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:57:19.850 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:57:19.851 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:19.851 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:57:19.851 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:57:19.853 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:57:21.018 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:57:21.020 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 20:57:21.020 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:21.020 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 20:57:21.020 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: b123456@example.com(String)
2025-07-02 20:57:21.023 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 20:57:25.196 [http-nio-8080-exec-6] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:57:25.196 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:57:25.198 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:57:25.198 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:57:25.199 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:57:25.199 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:57:25.199 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:25.199 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:25.199 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:57:25.199 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:57:25.200 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:57:25.200 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:57:25.202 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:57:25.202 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 20:57:25.212 [http-nio-8080-exec-8] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:57:25.213 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:57:25.213 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:57:25.213 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:25.213 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:57:25.214 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:57:25.215 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:57:26.868 [http-nio-8080-exec-9] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:57:26.868 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:57:26.869 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:57:26.869 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:26.869 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:57:26.869 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:57:26.870 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:57:27.712 [http-nio-8080-exec-7] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:57:27.712 [http-nio-8080-exec-10] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 20:57:27.714 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 20:57:27.715 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 20:57:27.715 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 20:57:27.715 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 20:57:27.715 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:27.715 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 20:57:27.715 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 20:57:27.715 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 20:57:27.716 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 20:57:27.716 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 20:57:27.718 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 3
2025-07-02 20:57:27.718 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 21:02:09.293 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:02:09.293 [Thread-7] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-02 21:02:09.293 [Thread-7] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-07-02 21:02:09.316 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-934131204] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:02:09.316 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-934131204] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:02:09.317 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-510012720] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:02:09.317 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-510012720] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:02:09.317 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-nioEventLoop-4-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/sun.nio.ch.WEPoll.wait(Native Method)
 java.base/sun.nio.ch.WEPollSelectorImpl.doSelect(WEPollSelectorImpl.java:114)
 java.base/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:130)
 java.base/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:147)
 io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:68)
 io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:879)
 io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:526)
 io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-02 21:02:09.319 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-02 21:02:09.321 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-02 21:02:09.446 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-02 21:02:09.450 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-02 21:02:09.450 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-02 21:02:09.451 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-02 21:02:09.584 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 10388 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 21:02:09.585 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 21:02:09.585 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 21:02:09.893 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 21:02:09.893 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 21:02:09.914 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2025-07-02 21:02:09.989 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$495db4c5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:02:09.993 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:02:10.123 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 21:02:10.123 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 21:02:10.124 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 21:02:10.124 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 21:02:10.126 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 21:02:10.127 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:02:10.127 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 21:02:10.127 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 21:02:10.138 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 21:02:10.138 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 545 ms
2025-07-02 21:02:10.142 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 21:02:10.236 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} inited
2025-07-02 21:02:10.242 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} inited
2025-07-02 21:02:10.410 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 21:02:10.410 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 21:02:10.592 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 21:02:10.642 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2e350411, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@382b923, org.springframework.security.web.context.SecurityContextPersistenceFilter@60b44074, org.springframework.security.web.header.HeaderWriterFilter@49f1928c, org.springframework.web.filter.CorsFilter@1db960ab, org.springframework.security.web.authentication.logout.LogoutFilter@1aa1c195, com.huang.store.security.JwtAuthenticationTokenFilter@792ebcbc, com.huang.store.security.CustomAuthenticationFilter@4b3f8057, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@55b61e9a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@66c6806a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@23e61bcc, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@348bbdcd, org.springframework.security.web.session.SessionManagementFilter@7e8af0cd, org.springframework.security.web.access.ExceptionTranslationFilter@2fb52820, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7de6966e]
2025-07-02 21:02:10.768 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 21:02:10.776 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 21:02:10.785 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 21:02:10.792 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 1.274 seconds (JVM running for 4986.08)
2025-07-02 21:02:27.597 [Thread-9] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:02:27.597 [Thread-9] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-02 21:02:27.606 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-2143242579] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:02:27.606 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-2143242579] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:02:27.606 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-744621178] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:02:27.606 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-744621178] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:02:27.606 [Thread-9] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-02 21:02:27.610 [Thread-9] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-02 21:02:27.613 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closing ...
2025-07-02 21:02:27.614 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed
2025-07-02 21:02:27.614 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closing ...
2025-07-02 21:02:27.614 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed
2025-07-02 21:02:27.691 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 10388 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 21:02:27.691 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 21:02:27.693 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 21:02:27.836 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 21:02:27.836 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 21:02:27.849 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2025-07-02 21:02:27.893 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$495db4c5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:02:27.893 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:02:27.956 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 21:02:27.956 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 21:02:27.956 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 21:02:27.956 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 21:02:27.957 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 21:02:27.958 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:02:27.958 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 21:02:27.958 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 21:02:27.970 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 21:02:27.970 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 273 ms
2025-07-02 21:02:27.972 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 21:02:28.074 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} inited
2025-07-02 21:02:28.096 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} inited
2025-07-02 21:02:28.220 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 21:02:28.220 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 21:02:28.360 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 21:02:28.426 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@16b75d55, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1e43fbb7, org.springframework.security.web.context.SecurityContextPersistenceFilter@4e458b7d, org.springframework.security.web.header.HeaderWriterFilter@491b9764, org.springframework.web.filter.CorsFilter@7c58bf55, org.springframework.security.web.authentication.logout.LogoutFilter@5516ed9c, com.huang.store.security.JwtAuthenticationTokenFilter@454a63fb, com.huang.store.security.CustomAuthenticationFilter@4cb70dd8, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1d66baa9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@57e80f7e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@42dd0250, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7b2fc19d, org.springframework.security.web.session.SessionManagementFilter@69339e3a, org.springframework.security.web.access.ExceptionTranslationFilter@407b39e2, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6ea6c9b1]
2025-07-02 21:02:28.536 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 21:02:28.548 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 21:02:28.551 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 21:02:28.553 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 0.89 seconds (JVM running for 5003.84)
2025-07-02 21:02:51.492 [Thread-15] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:02:51.493 [Thread-15] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-02 21:02:51.497 [Thread-15] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-2009571250] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:02:51.497 [Thread-15] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-2009571250] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:02:51.497 [Thread-15] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-816782064] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:02:51.497 [Thread-15] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-816782064] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:02:51.499 [Thread-15] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-02 21:02:51.499 [Thread-15] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-02 21:02:51.499 [Thread-15] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} closing ...
2025-07-02 21:02:51.499 [Thread-15] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} closed
2025-07-02 21:02:51.499 [Thread-15] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} closing ...
2025-07-02 21:02:51.499 [Thread-15] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} closed
2025-07-02 21:02:51.584 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 10388 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 21:02:51.584 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 21:02:51.584 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 21:02:51.712 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 21:02:51.712 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 21:02:51.722 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2025-07-02 21:02:51.761 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$495db4c5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:02:51.767 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:02:51.817 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 21:02:51.817 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 21:02:51.817 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 21:02:51.818 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 21:02:51.818 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 21:02:51.819 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:02:51.819 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 21:02:51.819 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 21:02:51.828 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 21:02:51.828 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 242 ms
2025-07-02 21:02:51.828 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 21:02:51.911 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} inited
2025-07-02 21:02:51.928 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} inited
2025-07-02 21:02:52.047 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 21:02:52.048 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 21:02:52.185 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 21:02:52.246 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3143fdf, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6cde0b4f, org.springframework.security.web.context.SecurityContextPersistenceFilter@7a30e094, org.springframework.security.web.header.HeaderWriterFilter@3a685fd0, org.springframework.web.filter.CorsFilter@4cf1b120, org.springframework.security.web.authentication.logout.LogoutFilter@4f9e7fe8, com.huang.store.security.JwtAuthenticationTokenFilter@130c3336, com.huang.store.security.CustomAuthenticationFilter@50062d6, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2f7362ac, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@46cd34aa, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3e23657c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7338bce4, org.springframework.security.web.session.SessionManagementFilter@1a82cf49, org.springframework.security.web.access.ExceptionTranslationFilter@8168ae2, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1afd9d34]
2025-07-02 21:02:52.343 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 21:02:52.352 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 21:02:52.355 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 21:02:52.357 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 0.808 seconds (JVM running for 5027.645)
2025-07-02 21:03:04.033 [Thread-21] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:03:04.033 [Thread-21] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-02 21:03:04.036 [Thread-21] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-987111257] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:03:04.036 [Thread-21] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-987111257] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:03:04.036 [Thread-21] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-364163833] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:03:04.037 [Thread-21] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-364163833] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:03:04.037 [Thread-21] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-02 21:03:04.038 [Thread-21] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-02 21:03:04.040 [Thread-21] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} closing ...
2025-07-02 21:03:04.041 [Thread-21] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} closed
2025-07-02 21:03:04.041 [Thread-21] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} closing ...
2025-07-02 21:03:04.042 [Thread-21] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} closed
2025-07-02 21:03:04.101 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 10388 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 21:03:04.101 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 21:03:04.101 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 21:03:04.488 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 21:03:04.488 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 21:03:04.501 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2025-07-02 21:03:04.552 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$495db4c5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:03:04.557 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:03:04.595 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 21:03:04.595 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 21:03:04.595 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 21:03:04.595 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 21:03:04.595 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 21:03:04.595 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:03:04.595 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 21:03:04.595 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 21:03:04.616 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 21:03:04.616 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 515 ms
2025-07-02 21:03:04.620 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 21:03:04.695 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-9} inited
2025-07-02 21:03:04.716 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-10} inited
2025-07-02 21:03:04.834 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 21:03:04.834 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 21:03:04.962 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 21:03:05.029 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@84ea36, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@863f2b3, org.springframework.security.web.context.SecurityContextPersistenceFilter@74f80b7d, org.springframework.security.web.header.HeaderWriterFilter@793b32c9, org.springframework.web.filter.CorsFilter@2b74e601, org.springframework.security.web.authentication.logout.LogoutFilter@4afb3dc4, com.huang.store.security.JwtAuthenticationTokenFilter@3adff773, com.huang.store.security.CustomAuthenticationFilter@1b98abc1, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4b790763, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6584709a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4589ab99, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4a482dc7, org.springframework.security.web.session.SessionManagementFilter@7278f20, org.springframework.security.web.access.ExceptionTranslationFilter@61ae1860, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@55878290]
2025-07-02 21:03:05.128 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 21:03:05.138 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 21:03:05.141 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 21:03:05.144 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 1.06 seconds (JVM running for 5040.431)
2025-07-02 21:03:33.195 [Thread-27] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:03:33.195 [Thread-27] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-02 21:03:33.199 [Thread-27] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-914689813] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:03:33.200 [Thread-27] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-914689813] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:03:33.200 [Thread-27] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1096231925] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:03:33.200 [Thread-27] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1096231925] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:03:33.200 [Thread-27] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-02 21:03:33.201 [Thread-27] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-02 21:03:33.203 [Thread-27] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-9} closing ...
2025-07-02 21:03:33.206 [Thread-27] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-9} closed
2025-07-02 21:03:33.211 [Thread-27] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-10} closing ...
2025-07-02 21:03:33.213 [Thread-27] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-10} closed
2025-07-02 21:03:33.283 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 10388 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 21:03:33.283 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 21:03:33.283 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 21:03:33.442 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 21:03:33.442 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 21:03:33.446 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2025-07-02 21:03:33.506 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$495db4c5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:03:33.514 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:03:33.609 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 21:03:33.616 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 21:03:33.616 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 21:03:33.616 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 21:03:33.617 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 21:03:33.618 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:03:33.618 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 21:03:33.620 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 21:03:33.634 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 21:03:33.634 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 345 ms
2025-07-02 21:03:33.637 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 21:03:33.733 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-11} inited
2025-07-02 21:03:33.746 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-12} inited
2025-07-02 21:03:33.846 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 21:03:33.846 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 21:03:34.002 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 21:03:34.047 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7b190bf1, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@43d65824, org.springframework.security.web.context.SecurityContextPersistenceFilter@65b6c776, org.springframework.security.web.header.HeaderWriterFilter@7eb0593e, org.springframework.web.filter.CorsFilter@13d513c3, org.springframework.security.web.authentication.logout.LogoutFilter@3dc35d3c, com.huang.store.security.JwtAuthenticationTokenFilter@654fdf2a, com.huang.store.security.CustomAuthenticationFilter@9c4c2f7, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1ee3703f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@54d47f70, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@28d1a57d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@12e88a42, org.springframework.security.web.session.SessionManagementFilter@34ce5889, org.springframework.security.web.access.ExceptionTranslationFilter@5bad4fc7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@79f81340]
2025-07-02 21:03:34.146 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 21:03:34.146 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 21:03:34.146 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 21:03:34.158 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 0.904 seconds (JVM running for 5069.446)
2025-07-02 21:03:49.958 [Thread-33] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:03:49.959 [Thread-33] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-02 21:03:49.961 [Thread-33] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1980265752] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:03:49.961 [Thread-33] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1980265752] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:03:49.961 [Thread-33] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-354582073] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:03:49.961 [Thread-33] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-354582073] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:03:49.963 [Thread-33] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-02 21:03:49.964 [Thread-33] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-02 21:03:49.966 [Thread-33] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-11} closing ...
2025-07-02 21:03:49.967 [Thread-33] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-11} closed
2025-07-02 21:03:49.970 [Thread-33] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-12} closing ...
2025-07-02 21:03:49.971 [Thread-33] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-12} closed
2025-07-02 21:03:50.042 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 10388 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 21:03:50.043 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 21:03:50.043 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 21:03:50.211 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 21:03:50.212 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 21:03:50.222 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2025-07-02 21:03:50.265 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$495db4c5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:03:50.265 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:03:50.328 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 21:03:50.328 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 21:03:50.328 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 21:03:50.328 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 21:03:50.329 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 21:03:50.330 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:03:50.330 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 21:03:50.330 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 21:03:50.330 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 21:03:50.330 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 286 ms
2025-07-02 21:03:50.330 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 21:03:50.415 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-13} inited
2025-07-02 21:03:50.426 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-14} inited
2025-07-02 21:03:50.559 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 21:03:50.559 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 21:03:50.718 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 21:03:50.777 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@65972c3c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@428f24, org.springframework.security.web.context.SecurityContextPersistenceFilter@6f8ad6bb, org.springframework.security.web.header.HeaderWriterFilter@21d58226, org.springframework.web.filter.CorsFilter@55425eb3, org.springframework.security.web.authentication.logout.LogoutFilter@119f31, com.huang.store.security.JwtAuthenticationTokenFilter@1537c12, com.huang.store.security.CustomAuthenticationFilter@3a59e9ee, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1d96929b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@19932df3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@145a4855, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@65163cf, org.springframework.security.web.session.SessionManagementFilter@57bf5bfb, org.springframework.security.web.access.ExceptionTranslationFilter@662219a0, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@440ef984]
2025-07-02 21:03:50.869 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 21:03:50.887 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 21:03:50.898 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 21:03:50.900 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 0.885 seconds (JVM running for 5086.187)
2025-07-02 21:04:04.592 [Thread-39] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:04:04.592 [Thread-39] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-02 21:04:04.599 [Thread-39] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-542607328] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:04:04.599 [Thread-39] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-542607328] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:04:04.599 [Thread-39] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1459588288] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:04:04.599 [Thread-39] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1459588288] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:04:04.600 [Thread-39] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-02 21:04:04.602 [Thread-39] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-02 21:04:04.617 [Thread-39] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-13} closing ...
2025-07-02 21:04:04.637 [Thread-39] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-13} closed
2025-07-02 21:04:04.639 [Thread-39] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-14} closing ...
2025-07-02 21:04:04.640 [Thread-39] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-14} closed
2025-07-02 21:04:04.749 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 10388 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 21:04:04.750 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 21:04:04.750 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 21:04:04.901 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 21:04:04.901 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 21:04:04.907 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2025-07-02 21:04:04.947 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$495db4c5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:04:04.947 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:04:04.998 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 21:04:04.999 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 21:04:04.999 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 21:04:04.999 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 21:04:05.000 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 21:04:05.000 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:04:05.000 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 21:04:05.001 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 21:04:05.009 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 21:04:05.009 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 257 ms
2025-07-02 21:04:05.012 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 21:04:05.099 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-15} inited
2025-07-02 21:04:05.113 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-16} inited
2025-07-02 21:04:05.251 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 21:04:05.251 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 21:04:05.369 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 21:04:05.421 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5add54d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@55c52cb5, org.springframework.security.web.context.SecurityContextPersistenceFilter@1a7823b1, org.springframework.security.web.header.HeaderWriterFilter@713a74f7, org.springframework.web.filter.CorsFilter@3fa92cf9, org.springframework.security.web.authentication.logout.LogoutFilter@2e970ce5, com.huang.store.security.JwtAuthenticationTokenFilter@3af19d3a, com.huang.store.security.CustomAuthenticationFilter@4d055643, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@45d38319, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@57ae6c7d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@759137b3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7fb374b6, org.springframework.security.web.session.SessionManagementFilter@7d0ed16, org.springframework.security.web.access.ExceptionTranslationFilter@662567c4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@207f61ff]
2025-07-02 21:04:05.497 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 21:04:05.511 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 21:04:05.516 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 21:04:05.518 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 0.809 seconds (JVM running for 5100.805)
2025-07-02 21:04:20.282 [Thread-45] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:04:20.282 [Thread-45] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-02 21:04:20.282 [Thread-45] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-675557819] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:04:20.282 [Thread-45] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-675557819] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:04:20.282 [Thread-45] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-494346600] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:04:20.282 [Thread-45] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-494346600] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:04:20.282 [Thread-45] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-02 21:04:20.282 [Thread-45] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-02 21:04:20.291 [Thread-45] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-15} closing ...
2025-07-02 21:04:20.293 [Thread-45] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-15} closed
2025-07-02 21:04:20.293 [Thread-45] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-16} closing ...
2025-07-02 21:04:20.293 [Thread-45] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-16} closed
2025-07-02 21:04:20.364 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 10388 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 21:04:20.365 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 21:04:20.365 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 21:04:20.502 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 21:04:20.502 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 21:04:20.502 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2025-07-02 21:04:20.550 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$495db4c5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:04:20.554 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:04:20.597 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 21:04:20.597 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 21:04:20.597 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 21:04:20.597 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 21:04:20.597 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 21:04:20.597 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:04:20.597 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 21:04:20.597 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 21:04:20.597 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 21:04:20.597 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 231 ms
2025-07-02 21:04:20.616 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 21:04:20.695 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-17} inited
2025-07-02 21:04:20.710 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-18} inited
2025-07-02 21:04:20.834 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 21:04:20.834 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 21:04:20.956 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 21:04:21.006 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@360fc5d4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2cc7297a, org.springframework.security.web.context.SecurityContextPersistenceFilter@13cc354, org.springframework.security.web.header.HeaderWriterFilter@79d9cab7, org.springframework.web.filter.CorsFilter@6130c1e8, org.springframework.security.web.authentication.logout.LogoutFilter@145e4393, com.huang.store.security.JwtAuthenticationTokenFilter@644fa76, com.huang.store.security.CustomAuthenticationFilter@4ab23eca, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2f01440d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5ad49d05, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6def689a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@52fa0c84, org.springframework.security.web.session.SessionManagementFilter@12318bf3, org.springframework.security.web.access.ExceptionTranslationFilter@21b250b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3c977f4b]
2025-07-02 21:04:21.081 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 21:04:21.081 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 21:04:21.100 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 21:04:21.102 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 0.765 seconds (JVM running for 5116.39)
2025-07-02 21:04:58.422 [Thread-51] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:04:58.422 [Thread-51] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-02 21:04:58.427 [Thread-51] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1024586597] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:04:58.427 [Thread-51] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1024586597] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:04:58.427 [Thread-51] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-789101457] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:04:58.427 [Thread-51] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-789101457] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:04:58.427 [Thread-51] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-02 21:04:58.429 [Thread-51] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-02 21:04:58.432 [Thread-51] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-17} closing ...
2025-07-02 21:04:58.433 [Thread-51] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-17} closed
2025-07-02 21:04:58.433 [Thread-51] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-18} closing ...
2025-07-02 21:04:58.434 [Thread-51] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-18} closed
2025-07-02 21:04:58.499 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 10388 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 21:04:58.499 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 21:04:58.499 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 21:04:58.716 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 21:04:58.716 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 21:04:58.723 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2025-07-02 21:04:58.764 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$495db4c5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:04:58.765 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:04:58.815 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 21:04:58.815 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 21:04:58.815 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 21:04:58.815 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 21:04:58.815 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 21:04:58.817 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:04:58.817 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 21:04:58.817 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 21:04:58.825 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 21:04:58.825 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 326 ms
2025-07-02 21:04:58.828 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 21:04:58.899 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-19} inited
2025-07-02 21:04:58.918 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-20} inited
2025-07-02 21:04:59.029 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 21:04:59.029 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 21:04:59.153 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 21:04:59.212 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@698c5041, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@b0dfa1f, org.springframework.security.web.context.SecurityContextPersistenceFilter@61746169, org.springframework.security.web.header.HeaderWriterFilter@342476f5, org.springframework.web.filter.CorsFilter@1d68bf22, org.springframework.security.web.authentication.logout.LogoutFilter@1086cbc4, com.huang.store.security.JwtAuthenticationTokenFilter@2b65c437, com.huang.store.security.CustomAuthenticationFilter@32115f4e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@570566dc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3fd4e087, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@28d0aa56, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1bb2c22f, org.springframework.security.web.session.SessionManagementFilter@1edc99b6, org.springframework.security.web.access.ExceptionTranslationFilter@61a7fb23, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3e24f6b7]
2025-07-02 21:04:59.311 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 21:04:59.320 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 21:04:59.324 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 21:04:59.324 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 0.847 seconds (JVM running for 5154.613)
2025-07-02 21:06:41.336 [Thread-57] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:06:41.336 [Thread-57] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-02 21:06:41.339 [Thread-57] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-2050799393] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:06:41.339 [Thread-57] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-2050799393] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:06:41.340 [Thread-57] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-135276573] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:06:41.340 [Thread-57] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-135276573] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:06:41.340 [Thread-57] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-02 21:06:41.342 [Thread-57] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-02 21:06:41.344 [Thread-57] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-19} closing ...
2025-07-02 21:06:41.345 [Thread-57] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-19} closed
2025-07-02 21:06:41.345 [Thread-57] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-20} closing ...
2025-07-02 21:06:41.346 [Thread-57] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-20} closed
2025-07-02 21:06:41.414 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 10388 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 21:06:41.414 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 21:06:41.414 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 21:06:41.525 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 21:06:41.526 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 21:06:41.532 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2025-07-02 21:06:41.567 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$495db4c5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:06:41.571 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:06:41.612 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 21:06:41.612 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 21:06:41.613 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 21:06:41.613 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 21:06:41.613 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 21:06:41.613 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:06:41.613 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 21:06:41.613 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 21:06:41.623 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 21:06:41.623 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 208 ms
2025-07-02 21:06:41.625 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 21:06:41.694 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-21} inited
2025-07-02 21:06:41.707 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-22} inited
2025-07-02 21:06:41.823 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 21:06:41.823 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 21:06:41.955 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 21:06:42.008 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@314b2cc7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@57538214, org.springframework.security.web.context.SecurityContextPersistenceFilter@3672d21, org.springframework.security.web.header.HeaderWriterFilter@5fcd68a0, org.springframework.web.filter.CorsFilter@7abb10bd, org.springframework.security.web.authentication.logout.LogoutFilter@31c797b4, com.huang.store.security.JwtAuthenticationTokenFilter@45675db7, com.huang.store.security.CustomAuthenticationFilter@7f54ec92, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@42d0e7fa, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3e400839, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@afcef39, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@bfc05ca, org.springframework.security.web.session.SessionManagementFilter@3f500bf2, org.springframework.security.web.access.ExceptionTranslationFilter@3e20674b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@16322835]
2025-07-02 21:06:42.095 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 21:06:42.104 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 21:06:42.106 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 21:06:42.108 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 0.716 seconds (JVM running for 5257.395)
2025-07-02 21:07:16.400 [Thread-63] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:07:16.400 [Thread-63] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-02 21:07:16.404 [Thread-63] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1653930630] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:07:16.405 [Thread-63] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1653930630] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:07:16.405 [Thread-63] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-553981350] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:07:16.405 [Thread-63] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-553981350] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:07:16.405 [Thread-63] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-02 21:07:16.406 [Thread-63] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-02 21:07:16.408 [Thread-63] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-21} closing ...
2025-07-02 21:07:16.409 [Thread-63] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-21} closed
2025-07-02 21:07:16.409 [Thread-63] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-22} closing ...
2025-07-02 21:07:16.410 [Thread-63] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-22} closed
2025-07-02 21:07:16.489 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 10388 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 21:07:16.489 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 21:07:16.489 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 21:07:16.601 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 21:07:16.602 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 21:07:16.609 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2025-07-02 21:07:16.644 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$495db4c5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:07:16.648 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:07:16.690 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 21:07:16.690 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 21:07:16.691 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 21:07:16.691 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 21:07:16.691 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 21:07:16.692 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:07:16.692 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 21:07:16.692 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 21:07:16.700 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 21:07:16.701 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 211 ms
2025-07-02 21:07:16.703 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 21:07:16.771 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-23} inited
2025-07-02 21:07:16.783 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-24} inited
2025-07-02 21:07:16.882 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 21:07:16.883 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 21:07:17.007 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 21:07:17.057 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2992d3e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3b86904b, org.springframework.security.web.context.SecurityContextPersistenceFilter@117634c8, org.springframework.security.web.header.HeaderWriterFilter@69c6522b, org.springframework.web.filter.CorsFilter@4f090b0f, org.springframework.security.web.authentication.logout.LogoutFilter@2f40d4d2, com.huang.store.security.JwtAuthenticationTokenFilter@6147db35, com.huang.store.security.CustomAuthenticationFilter@6a4cfc79, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1957a770, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5c258a07, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7a9cca2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@323eb269, org.springframework.security.web.session.SessionManagementFilter@1d32a463, org.springframework.security.web.access.ExceptionTranslationFilter@c483ac3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@38736f5f]
2025-07-02 21:07:17.139 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 21:07:17.146 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 21:07:17.149 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 21:07:17.151 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 0.696 seconds (JVM running for 5292.439)
2025-07-02 21:08:01.633 [Thread-69] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:08:01.645 [Thread-69] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-02 21:08:01.698 [Thread-69] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1462556790] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:08:01.701 [Thread-69] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1462556790] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:08:01.703 [Thread-69] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-190916447] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:08:01.707 [Thread-69] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-190916447] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:08:01.710 [Thread-69] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-02 21:08:01.721 [Thread-69] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-02 21:08:01.751 [Thread-69] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-23} closing ...
2025-07-02 21:08:01.763 [Thread-69] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-23} closed
2025-07-02 21:08:01.768 [Thread-69] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-24} closing ...
2025-07-02 21:08:01.776 [Thread-69] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-24} closed
2025-07-02 21:08:02.494 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 10388 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 21:08:02.496 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 21:08:02.497 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 21:08:05.348 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 21:08:05.349 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 21:08:05.500 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 149 ms. Found 0 Redis repository interfaces.
2025-07-02 21:08:06.309 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$495db4c5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:08:06.369 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:08:07.085 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 21:08:07.088 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 21:08:07.090 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 21:08:07.095 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 21:08:07.099 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 21:08:07.102 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:08:07.104 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 21:08:07.108 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 21:08:07.263 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 21:08:07.267 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4757 ms
2025-07-02 21:08:07.298 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 21:08:08.285 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-25} inited
2025-07-02 21:08:08.423 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-26} inited
2025-07-02 21:08:10.134 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 21:08:10.135 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 21:08:11.885 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 21:08:12.649 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@58e33b05, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@512e958c, org.springframework.security.web.context.SecurityContextPersistenceFilter@6818b38f, org.springframework.security.web.header.HeaderWriterFilter@5ae7a38a, org.springframework.web.filter.CorsFilter@27ddf04a, org.springframework.security.web.authentication.logout.LogoutFilter@6f136832, com.huang.store.security.JwtAuthenticationTokenFilter@65244344, com.huang.store.security.CustomAuthenticationFilter@4881f09f, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@c637290, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@ab469d6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6da860f9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3665fcef, org.springframework.security.web.session.SessionManagementFilter@20c1ef82, org.springframework.security.web.access.ExceptionTranslationFilter@42c40143, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@65e34b75]
2025-07-02 21:08:14.182 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 21:08:14.325 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 21:08:14.350 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 21:08:14.378 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 12.184 seconds (JVM running for 5349.665)
2025-07-02 21:08:54.151 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-25} closing ...
2025-07-02 21:08:54.164 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-25} closed
2025-07-02 21:08:54.167 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-26} closing ...
2025-07-02 21:08:54.172 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-26} closed
2025-07-02 21:12:13.565 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-02 21:12:13.600 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 9820 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 21:12:13.600 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 21:12:13.601 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 21:12:13.920 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-02 21:12:13.920 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-02 21:12:14.977 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 21:12:14.981 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 21:12:15.021 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 0 Redis repository interfaces.
2025-07-02 21:12:15.417 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$9dc8d2d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:12:15.432 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:12:16.065 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 21:12:16.065 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 21:12:16.065 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 21:12:16.065 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 21:12:16.065 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 21:12:16.087 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:12:16.092 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 21:12:16.092 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 21:12:16.186 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 21:12:16.187 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2266 ms
2025-07-02 21:12:16.193 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 21:12:17.641 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-02 21:12:17.680 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-02 21:12:18.295 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 21:12:18.295 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 21:12:19.020 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 21:12:19.233 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@d601b82, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@14877eea, org.springframework.security.web.context.SecurityContextPersistenceFilter@4c0f614a, org.springframework.security.web.header.HeaderWriterFilter@5b592c94, org.springframework.web.filter.CorsFilter@332c4fb6, org.springframework.security.web.authentication.logout.LogoutFilter@7915afab, com.huang.store.security.JwtAuthenticationTokenFilter@605a6a4c, com.huang.store.security.CustomAuthenticationFilter@3aee410e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@15ea0696, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7b792b48, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@23b9c402, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@db1c136, org.springframework.security.web.session.SessionManagementFilter@1148a73e, org.springframework.security.web.access.ExceptionTranslationFilter@3536294f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3f5a75ec]
2025-07-02 21:12:19.657 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 21:12:19.682 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 21:12:19.710 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 21:12:19.721 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 6.931 seconds (JVM running for 7.581)
2025-07-02 21:12:27.131 [http-nio-8080-exec-3] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-02 21:12:27.132 [http-nio-8080-exec-3] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-02 21:12:27.135 [http-nio-8080-exec-3] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-07-02 21:12:27.209 [http-nio-8080-exec-6] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 21:12:27.209 [http-nio-8080-exec-2] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 21:12:27.209 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 21:12:27.209 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 21:12:27.209 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 21:12:27.209 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 21:12:27.241 [http-nio-8080-exec-5] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 21:12:27.270 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 21:12:27.270 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 21:12:27.270 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:12:27.270 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 21:12:27.270 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 21:12:27.270 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 21:12:27.301 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:27.301 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:27.301 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:27.301 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:27.301 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:27.301 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:27.301 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 21:12:27.301 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 21:12:27.301 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:12:27.301 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 21:12:27.301 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 21:12:27.301 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:12:27.358 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:12:27.358 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 21:12:27.358 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 21:12:27.386 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 21:12:27.395 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:12:27.396 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:27.396 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:12:27.396 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:12:27.400 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:12:27.401 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 21:12:27.402 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:12:27.402 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:12:27.402 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:27.402 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:12:27.402 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 21:12:27.402 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:27.403 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:12:27.404 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:12:27.404 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 21:12:27.406 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:12:27.406 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 21:12:27.411 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 21:12:27.412 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 21:12:27.413 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:12:27.414 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:27.414 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:12:27.417 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:12:27.419 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:12:27.420 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:12:27.421 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:27.421 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:12:27.428 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 21:12:27.428 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 21:12:27.433 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 21:12:27.435 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 21:12:27.432 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 21:12:27.437 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:12:27.437 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:27.438 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:12:27.439 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 21:12:27.439 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:12:27.440 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:12:27.440 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:27.440 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:12:27.440 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 21:12:27.442 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 21:12:27.442 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:12:27.442 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:27.442 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:12:27.443 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:12:27.443 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:12:27.443 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 21:12:27.443 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:27.445 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:12:27.445 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 21:12:27.448 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:12:27.452 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:12:27.453 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:12:27.453 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:12:27.453 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:27.454 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:12:27.454 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:27.454 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:12:27.455 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 21:12:27.455 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 21:12:27.457 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:12:27.459 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:12:27.459 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:12:27.459 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:12:27.459 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:27.459 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:27.459 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:12:27.459 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:12:27.460 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 21:12:27.460 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 21:12:27.463 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:12:27.464 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:12:32.658 [http-nio-8080-exec-8] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ1NjUzMTU4NCwiZXhwIjoxNzUxNDU4MzMxfQ.Rr1wBC80v62f-VwEJ5U_bRqzOC50JoUQGRlhRyhpXTiA70xVIhEmJ0lDGK7ZAU5CMi9_0GnCwoO4m5lxMIa2Ew
2025-07-02 21:12:32.738 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:12:32.738 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:32.738 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:12:32.739 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: b123456@example.com(String)
2025-07-02 21:12:32.741 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:12:32.746 [http-nio-8080-exec-8] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:b123456@example.com    数据库密码:$2a$10$1DF9PwKSjO3cUL8CA7V3yOlfkTa2.8OZe8G056AyZfhXY89aFTlke
2025-07-02 21:12:32.820 [http-nio-8080-exec-8] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=b123456@example.com, password=$2a$10$1DF9PwKSjO3cUL8CA7V3yOlfkTa2.8OZe8G056AyZfhXY89aFTlke, enabled=true, roles=[ROLE_USER]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=DB02438FFFBE1B9899E075FC7FC6311B], Granted Authorities=[ROLE_USER]]
2025-07-02 21:12:32.822 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:12:32.822 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:32.822 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:12:32.822 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: b123456@example.com(String)
2025-07-02 21:12:32.834 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:12:33.941 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 21:12:33.942 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:33.941 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 21:12:33.941 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 21:12:33.941 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:12:33.942 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 21:12:33.942 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 21:12:33.943 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:33.942 [http-nio-8080-exec-1] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 21:12:33.942 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:33.942 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:33.943 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 21:12:33.942 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:33.943 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 21:12:33.943 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 21:12:33.943 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:12:33.943 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 21:12:33.944 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 21:12:33.943 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:33.943 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:12:33.944 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:12:33.944 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:12:33.944 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 21:12:33.944 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 21:12:33.945 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 21:12:33.945 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 21:12:33.946 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:12:33.946 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 21:12:33.946 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 21:12:33.948 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 21:12:33.948 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:12:33.948 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 21:12:33.948 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:12:33.952 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:12:33.953 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:33.953 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:12:33.953 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:33.953 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:33.953 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:33.953 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:12:33.953 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:33.953 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 21:12:33.954 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:12:33.954 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:12:33.954 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:12:33.954 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 21:12:33.954 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:12:33.954 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 21:12:33.954 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:12:33.954 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 21:12:33.956 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:12:33.956 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:12:33.956 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:12:33.958 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:12:33.959 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 21:12:33.959 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:12:33.959 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:12:33.960 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:33.960 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:33.960 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:12:33.960 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:12:33.960 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 21:12:33.961 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 21:12:33.963 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:12:33.964 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:12:33.964 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:12:33.964 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:33.964 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:12:33.964 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:12:33.964 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:33.967 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:12:33.967 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 21:12:33.970 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 21:12:33.972 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:12:33.972 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:12:33.972 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:12:33.972 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:12:33.972 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 21:12:33.972 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:33.972 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:33.972 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:12:33.972 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:12:33.972 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 21:12:33.972 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 21:12:33.972 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:12:33.972 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:12:33.972 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:12:33.972 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:33.972 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:12:33.972 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 21:12:33.983 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:12:33.984 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:12:33.984 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:33.984 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:12:33.984 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 21:12:33.987 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:12:36.481 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:12:36.481 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:36.481 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:12:36.482 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: b123456@example.com(String)
2025-07-02 21:12:36.485 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:12:39.067 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:12:39.067 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:12:39.077 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:12:39.077 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:12:39.077 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:39.077 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:39.078 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:12:39.078 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:12:39.079 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:12:39.082 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:12:39.083 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 21:12:39.090 [http-nio-8080-exec-4] ERROR com.huang.store.controller.CouponController - 查询用户优惠券失败
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: Could not set property 'description' of 'class com.huang.store.entity.dto.UserCouponDto' with value 'Book festival 85% discount, up to 50 yuan off' Cause: org.apache.ibatis.reflection.ReflectionException: There is no setter for property named 'description' in 'class com.huang.store.entity.dto.UserCouponDto'
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:97)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy83.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy107.selectByAccount(Unknown Source)
	at com.huang.store.service.CouponServiceImpl.getUserCoupons(CouponServiceImpl.java:159)
	at com.huang.store.service.CouponServiceImpl$$FastClassBySpringCGLIB$$fe79b59b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.huang.store.service.CouponServiceImpl$$EnhancerBySpringCGLIB$$90ef03a3.getUserCoupons(<generated>)
	at com.huang.store.controller.CouponController.getUserCoupons(CouponController.java:191)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.apache.ibatis.reflection.ReflectionException: Could not set property 'description' of 'class com.huang.store.entity.dto.UserCouponDto' with value 'Book festival 85% discount, up to 50 yuan off' Cause: org.apache.ibatis.reflection.ReflectionException: There is no setter for property named 'description' in 'class com.huang.store.entity.dto.UserCouponDto'
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.setBeanProperty(BeanWrapper.java:184)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.set(BeanWrapper.java:58)
	at org.apache.ibatis.reflection.MetaObject.setValue(MetaObject.java:139)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.applyPropertyMappings(DefaultResultSetHandler.java:508)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getRowValue(DefaultResultSetHandler.java:414)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValuesForSimpleResultMap(DefaultResultSetHandler.java:362)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValues(DefaultResultSetHandler.java:333)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSet(DefaultResultSetHandler.java:306)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSets(DefaultResultSetHandler.java:202)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:66)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:333)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 129 common frames omitted
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no setter for property named 'description' in 'class com.huang.store.entity.dto.UserCouponDto'
	at org.apache.ibatis.reflection.Reflector.getSetInvoker(Reflector.java:379)
	at org.apache.ibatis.reflection.MetaClass.getSetInvoker(MetaClass.java:166)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.setBeanProperty(BeanWrapper.java:175)
	... 150 common frames omitted
2025-07-02 21:12:39.106 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:12:39.106 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:12:39.106 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:39.107 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:12:39.108 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:12:39.111 [http-nio-8080-exec-8] ERROR com.huang.store.controller.CouponController - 查询用户优惠券失败
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: Could not set property 'description' of 'class com.huang.store.entity.dto.UserCouponDto' with value 'Book festival 85% discount, up to 50 yuan off' Cause: org.apache.ibatis.reflection.ReflectionException: There is no setter for property named 'description' in 'class com.huang.store.entity.dto.UserCouponDto'
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:97)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy83.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy107.selectByAccount(Unknown Source)
	at com.huang.store.service.CouponServiceImpl.getUserCoupons(CouponServiceImpl.java:159)
	at com.huang.store.service.CouponServiceImpl$$FastClassBySpringCGLIB$$fe79b59b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.huang.store.service.CouponServiceImpl$$EnhancerBySpringCGLIB$$90ef03a3.getUserCoupons(<generated>)
	at com.huang.store.controller.CouponController.getUserCoupons(CouponController.java:191)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.apache.ibatis.reflection.ReflectionException: Could not set property 'description' of 'class com.huang.store.entity.dto.UserCouponDto' with value 'Book festival 85% discount, up to 50 yuan off' Cause: org.apache.ibatis.reflection.ReflectionException: There is no setter for property named 'description' in 'class com.huang.store.entity.dto.UserCouponDto'
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.setBeanProperty(BeanWrapper.java:184)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.set(BeanWrapper.java:58)
	at org.apache.ibatis.reflection.MetaObject.setValue(MetaObject.java:139)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.applyPropertyMappings(DefaultResultSetHandler.java:508)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getRowValue(DefaultResultSetHandler.java:414)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValuesForSimpleResultMap(DefaultResultSetHandler.java:362)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValues(DefaultResultSetHandler.java:333)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSet(DefaultResultSetHandler.java:306)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSets(DefaultResultSetHandler.java:202)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:66)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:333)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 129 common frames omitted
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no setter for property named 'description' in 'class com.huang.store.entity.dto.UserCouponDto'
	at org.apache.ibatis.reflection.Reflector.getSetInvoker(Reflector.java:379)
	at org.apache.ibatis.reflection.MetaClass.getSetInvoker(MetaClass.java:166)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.setBeanProperty(BeanWrapper.java:175)
	... 150 common frames omitted
2025-07-02 21:12:43.246 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:12:43.247 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:12:43.247 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:43.247 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:12:43.249 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:12:43.254 [http-nio-8080-exec-1] ERROR com.huang.store.controller.CouponController - 查询用户优惠券失败
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: Could not set property 'description' of 'class com.huang.store.entity.dto.UserCouponDto' with value 'Book festival 85% discount, up to 50 yuan off' Cause: org.apache.ibatis.reflection.ReflectionException: There is no setter for property named 'description' in 'class com.huang.store.entity.dto.UserCouponDto'
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:97)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy83.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy107.selectByAccount(Unknown Source)
	at com.huang.store.service.CouponServiceImpl.getUserCoupons(CouponServiceImpl.java:159)
	at com.huang.store.service.CouponServiceImpl$$FastClassBySpringCGLIB$$fe79b59b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.huang.store.service.CouponServiceImpl$$EnhancerBySpringCGLIB$$90ef03a3.getUserCoupons(<generated>)
	at com.huang.store.controller.CouponController.getUserCoupons(CouponController.java:191)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.apache.ibatis.reflection.ReflectionException: Could not set property 'description' of 'class com.huang.store.entity.dto.UserCouponDto' with value 'Book festival 85% discount, up to 50 yuan off' Cause: org.apache.ibatis.reflection.ReflectionException: There is no setter for property named 'description' in 'class com.huang.store.entity.dto.UserCouponDto'
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.setBeanProperty(BeanWrapper.java:184)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.set(BeanWrapper.java:58)
	at org.apache.ibatis.reflection.MetaObject.setValue(MetaObject.java:139)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.applyPropertyMappings(DefaultResultSetHandler.java:508)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getRowValue(DefaultResultSetHandler.java:414)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValuesForSimpleResultMap(DefaultResultSetHandler.java:362)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValues(DefaultResultSetHandler.java:333)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSet(DefaultResultSetHandler.java:306)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSets(DefaultResultSetHandler.java:202)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:66)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:333)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 129 common frames omitted
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no setter for property named 'description' in 'class com.huang.store.entity.dto.UserCouponDto'
	at org.apache.ibatis.reflection.Reflector.getSetInvoker(Reflector.java:379)
	at org.apache.ibatis.reflection.MetaClass.getSetInvoker(MetaClass.java:166)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.setBeanProperty(BeanWrapper.java:175)
	... 150 common frames omitted
2025-07-02 21:12:46.948 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:12:46.948 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:12:46.949 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:12:46.949 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:12:46.949 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:46.949 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:46.949 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:12:46.949 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:12:46.951 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:12:46.951 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:12:46.955 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 21:12:46.959 [http-nio-8080-exec-2] ERROR com.huang.store.controller.CouponController - 查询用户优惠券失败
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: Could not set property 'description' of 'class com.huang.store.entity.dto.UserCouponDto' with value 'Book festival 85% discount, up to 50 yuan off' Cause: org.apache.ibatis.reflection.ReflectionException: There is no setter for property named 'description' in 'class com.huang.store.entity.dto.UserCouponDto'
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:97)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy83.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy107.selectByAccount(Unknown Source)
	at com.huang.store.service.CouponServiceImpl.getUserCoupons(CouponServiceImpl.java:159)
	at com.huang.store.service.CouponServiceImpl$$FastClassBySpringCGLIB$$fe79b59b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.huang.store.service.CouponServiceImpl$$EnhancerBySpringCGLIB$$90ef03a3.getUserCoupons(<generated>)
	at com.huang.store.controller.CouponController.getUserCoupons(CouponController.java:191)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.apache.ibatis.reflection.ReflectionException: Could not set property 'description' of 'class com.huang.store.entity.dto.UserCouponDto' with value 'Book festival 85% discount, up to 50 yuan off' Cause: org.apache.ibatis.reflection.ReflectionException: There is no setter for property named 'description' in 'class com.huang.store.entity.dto.UserCouponDto'
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.setBeanProperty(BeanWrapper.java:184)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.set(BeanWrapper.java:58)
	at org.apache.ibatis.reflection.MetaObject.setValue(MetaObject.java:139)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.applyPropertyMappings(DefaultResultSetHandler.java:508)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getRowValue(DefaultResultSetHandler.java:414)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValuesForSimpleResultMap(DefaultResultSetHandler.java:362)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValues(DefaultResultSetHandler.java:333)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSet(DefaultResultSetHandler.java:306)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSets(DefaultResultSetHandler.java:202)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:66)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:333)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 129 common frames omitted
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no setter for property named 'description' in 'class com.huang.store.entity.dto.UserCouponDto'
	at org.apache.ibatis.reflection.Reflector.getSetInvoker(Reflector.java:379)
	at org.apache.ibatis.reflection.MetaClass.getSetInvoker(MetaClass.java:166)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.setBeanProperty(BeanWrapper.java:175)
	... 150 common frames omitted
2025-07-02 21:12:46.973 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:12:46.973 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:12:46.973 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:12:46.973 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:12:46.973 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:12:46.973 [http-nio-8080-exec-7] ERROR com.huang.store.controller.CouponController - 查询用户优惠券失败
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: Could not set property 'description' of 'class com.huang.store.entity.dto.UserCouponDto' with value 'Book festival 85% discount, up to 50 yuan off' Cause: org.apache.ibatis.reflection.ReflectionException: There is no setter for property named 'description' in 'class com.huang.store.entity.dto.UserCouponDto'
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:97)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy83.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy107.selectByAccount(Unknown Source)
	at com.huang.store.service.CouponServiceImpl.getUserCoupons(CouponServiceImpl.java:159)
	at com.huang.store.service.CouponServiceImpl$$FastClassBySpringCGLIB$$fe79b59b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.huang.store.service.CouponServiceImpl$$EnhancerBySpringCGLIB$$90ef03a3.getUserCoupons(<generated>)
	at com.huang.store.controller.CouponController.getUserCoupons(CouponController.java:191)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.apache.ibatis.reflection.ReflectionException: Could not set property 'description' of 'class com.huang.store.entity.dto.UserCouponDto' with value 'Book festival 85% discount, up to 50 yuan off' Cause: org.apache.ibatis.reflection.ReflectionException: There is no setter for property named 'description' in 'class com.huang.store.entity.dto.UserCouponDto'
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.setBeanProperty(BeanWrapper.java:184)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.set(BeanWrapper.java:58)
	at org.apache.ibatis.reflection.MetaObject.setValue(MetaObject.java:139)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.applyPropertyMappings(DefaultResultSetHandler.java:508)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getRowValue(DefaultResultSetHandler.java:414)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValuesForSimpleResultMap(DefaultResultSetHandler.java:362)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValues(DefaultResultSetHandler.java:333)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSet(DefaultResultSetHandler.java:306)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSets(DefaultResultSetHandler.java:202)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:66)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:333)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 129 common frames omitted
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no setter for property named 'description' in 'class com.huang.store.entity.dto.UserCouponDto'
	at org.apache.ibatis.reflection.Reflector.getSetInvoker(Reflector.java:379)
	at org.apache.ibatis.reflection.MetaClass.getSetInvoker(MetaClass.java:166)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.setBeanProperty(BeanWrapper.java:175)
	... 150 common frames omitted
2025-07-02 21:13:06.423 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 21:13:06.423 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:13:06.423 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 21:13:06.424 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 21:13:06.425 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 21:13:06.426 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 21:13:06.426 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:13:06.426 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 21:13:06.427 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 21:13:06.427 [http-nio-8080-exec-4] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 21:13:06.427 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:13:06.427 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 21:13:06.427 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 21:13:06.427 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 21:13:06.427 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 21:13:06.427 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:13:06.427 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:13:06.427 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:13:06.427 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:13:06.427 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:13:06.427 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:13:06.427 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:13:06.428 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 21:13:06.428 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 21:13:06.428 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 21:13:06.428 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:13:06.428 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 21:13:06.428 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 21:13:06.428 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 21:13:06.428 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:13:06.429 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 21:13:06.429 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:13:06.430 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 21:13:06.430 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 21:13:06.430 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:13:06.430 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:13:06.430 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:13:06.430 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:13:06.430 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:13:06.430 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:13:06.430 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:13:06.430 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:13:06.430 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:13:06.430 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 21:13:06.430 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:13:06.430 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 21:13:06.430 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:13:06.432 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:13:06.432 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 21:13:06.434 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:13:06.434 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:13:06.434 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:13:06.435 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:13:06.435 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 21:13:06.436 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:13:06.437 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:13:06.437 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:13:06.437 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:13:06.437 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:13:06.437 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:13:06.438 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:13:06.438 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 21:13:06.437 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:13:06.439 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 21:13:06.440 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:13:06.440 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:13:06.441 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:13:06.441 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:13:06.441 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:13:06.441 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:13:06.441 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:13:06.442 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:13:06.442 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 21:13:06.442 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 21:13:06.443 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:13:06.444 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:13:06.444 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:13:06.444 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:13:06.444 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:13:06.444 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:13:06.444 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:13:06.444 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:13:06.444 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 21:13:06.444 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 21:13:06.446 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:13:06.446 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:13:06.446 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:13:06.447 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:13:06.447 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:13:06.447 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 21:13:06.449 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:13:06.450 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:13:06.451 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:13:06.451 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:13:06.451 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 21:13:06.453 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:13:12.671 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:13:12.671 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:13:12.671 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:13:12.671 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: a123456@example.com(String)
2025-07-02 21:13:12.684 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:13:12.685 [http-nio-8080-exec-1] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:a123456@example.com    数据库密码:$2a$10$bhbP823Lbav2RL7Su6fd7eZsAYkKvrCoRPLG5prw240ncy1A4REHu
2025-07-02 21:13:12.754 [http-nio-8080-exec-1] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=a123456@example.com, password=$2a$10$bhbP823Lbav2RL7Su6fd7eZsAYkKvrCoRPLG5prw240ncy1A4REHu, enabled=true, roles=[ROLE_ADMIN]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=DB02438FFFBE1B9899E075FC7FC6311B], Granted Authorities=[ROLE_ADMIN]]
2025-07-02 21:13:12.756 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:13:12.756 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:13:12.757 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:13:12.757 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: a123456@example.com(String)
2025-07-02 21:13:12.758 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:13:17.723 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 21:13:17.723 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 21:13:17.724 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:13:17.724 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:13:17.726 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 21:13:17.728 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 5
2025-07-02 21:13:33.267 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 21:13:33.268 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:13:33.268 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:13:33.269 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:13:33.270 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 21:13:33.273 [http-nio-8080-exec-2] ERROR com.huang.store.controller.CouponController - 查询用户优惠券失败
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: Could not set property 'description' of 'class com.huang.store.entity.dto.UserCouponDto' with value 'Member exclusive 90% discount, up to 30 yuan off' Cause: org.apache.ibatis.reflection.ReflectionException: There is no setter for property named 'description' in 'class com.huang.store.entity.dto.UserCouponDto'
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:97)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy83.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy107.selectByAccount(Unknown Source)
	at com.huang.store.service.CouponServiceImpl.getUserCoupons(CouponServiceImpl.java:159)
	at com.huang.store.service.CouponServiceImpl$$FastClassBySpringCGLIB$$fe79b59b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.huang.store.service.CouponServiceImpl$$EnhancerBySpringCGLIB$$90ef03a3.getUserCoupons(<generated>)
	at com.huang.store.controller.CouponController.getUserCoupons(CouponController.java:191)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.apache.ibatis.reflection.ReflectionException: Could not set property 'description' of 'class com.huang.store.entity.dto.UserCouponDto' with value 'Member exclusive 90% discount, up to 30 yuan off' Cause: org.apache.ibatis.reflection.ReflectionException: There is no setter for property named 'description' in 'class com.huang.store.entity.dto.UserCouponDto'
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.setBeanProperty(BeanWrapper.java:184)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.set(BeanWrapper.java:58)
	at org.apache.ibatis.reflection.MetaObject.setValue(MetaObject.java:139)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.applyPropertyMappings(DefaultResultSetHandler.java:508)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getRowValue(DefaultResultSetHandler.java:414)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValuesForSimpleResultMap(DefaultResultSetHandler.java:362)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValues(DefaultResultSetHandler.java:333)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSet(DefaultResultSetHandler.java:306)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSets(DefaultResultSetHandler.java:202)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:66)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:333)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 129 common frames omitted
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no setter for property named 'description' in 'class com.huang.store.entity.dto.UserCouponDto'
	at org.apache.ibatis.reflection.Reflector.getSetInvoker(Reflector.java:379)
	at org.apache.ibatis.reflection.MetaClass.getSetInvoker(MetaClass.java:166)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.setBeanProperty(BeanWrapper.java:175)
	... 150 common frames omitted
2025-07-02 21:16:12.863 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:16:12.865 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:16:12.865 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:16:12.865 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:16:12.865 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 21:16:12.867 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:16:12.869 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:16:12.869 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:16:12.876 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:16:12.876 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 21:16:12.879 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 21:16:12.880 [http-nio-8080-exec-4] ERROR com.huang.store.controller.CouponController - 查询用户优惠券失败
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: Could not set property 'description' of 'class com.huang.store.entity.dto.UserCouponDto' with value 'Member exclusive 90% discount, up to 30 yuan off' Cause: org.apache.ibatis.reflection.ReflectionException: There is no setter for property named 'description' in 'class com.huang.store.entity.dto.UserCouponDto'
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:97)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy83.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy107.selectByAccount(Unknown Source)
	at com.huang.store.service.CouponServiceImpl.getUserCoupons(CouponServiceImpl.java:159)
	at com.huang.store.service.CouponServiceImpl$$FastClassBySpringCGLIB$$fe79b59b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.huang.store.service.CouponServiceImpl$$EnhancerBySpringCGLIB$$90ef03a3.getUserCoupons(<generated>)
	at com.huang.store.controller.CouponController.getUserCoupons(CouponController.java:191)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.apache.ibatis.reflection.ReflectionException: Could not set property 'description' of 'class com.huang.store.entity.dto.UserCouponDto' with value 'Member exclusive 90% discount, up to 30 yuan off' Cause: org.apache.ibatis.reflection.ReflectionException: There is no setter for property named 'description' in 'class com.huang.store.entity.dto.UserCouponDto'
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.setBeanProperty(BeanWrapper.java:184)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.set(BeanWrapper.java:58)
	at org.apache.ibatis.reflection.MetaObject.setValue(MetaObject.java:139)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.applyPropertyMappings(DefaultResultSetHandler.java:508)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getRowValue(DefaultResultSetHandler.java:414)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValuesForSimpleResultMap(DefaultResultSetHandler.java:362)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValues(DefaultResultSetHandler.java:333)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSet(DefaultResultSetHandler.java:306)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSets(DefaultResultSetHandler.java:202)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:66)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:333)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 129 common frames omitted
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no setter for property named 'description' in 'class com.huang.store.entity.dto.UserCouponDto'
	at org.apache.ibatis.reflection.Reflector.getSetInvoker(Reflector.java:379)
	at org.apache.ibatis.reflection.MetaClass.getSetInvoker(MetaClass.java:166)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.setBeanProperty(BeanWrapper.java:175)
	... 150 common frames omitted
2025-07-02 21:16:12.903 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 21:16:12.903 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:16:12.904 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:16:12.904 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.description, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:16:12.905 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 21:16:12.911 [http-nio-8080-exec-5] ERROR com.huang.store.controller.CouponController - 查询用户优惠券失败
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: Could not set property 'description' of 'class com.huang.store.entity.dto.UserCouponDto' with value 'Member exclusive 90% discount, up to 30 yuan off' Cause: org.apache.ibatis.reflection.ReflectionException: There is no setter for property named 'description' in 'class com.huang.store.entity.dto.UserCouponDto'
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:97)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy83.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy107.selectByAccount(Unknown Source)
	at com.huang.store.service.CouponServiceImpl.getUserCoupons(CouponServiceImpl.java:159)
	at com.huang.store.service.CouponServiceImpl$$FastClassBySpringCGLIB$$fe79b59b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.huang.store.service.CouponServiceImpl$$EnhancerBySpringCGLIB$$90ef03a3.getUserCoupons(<generated>)
	at com.huang.store.controller.CouponController.getUserCoupons(CouponController.java:191)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.apache.ibatis.reflection.ReflectionException: Could not set property 'description' of 'class com.huang.store.entity.dto.UserCouponDto' with value 'Member exclusive 90% discount, up to 30 yuan off' Cause: org.apache.ibatis.reflection.ReflectionException: There is no setter for property named 'description' in 'class com.huang.store.entity.dto.UserCouponDto'
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.setBeanProperty(BeanWrapper.java:184)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.set(BeanWrapper.java:58)
	at org.apache.ibatis.reflection.MetaObject.setValue(MetaObject.java:139)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.applyPropertyMappings(DefaultResultSetHandler.java:508)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getRowValue(DefaultResultSetHandler.java:414)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValuesForSimpleResultMap(DefaultResultSetHandler.java:362)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValues(DefaultResultSetHandler.java:333)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSet(DefaultResultSetHandler.java:306)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSets(DefaultResultSetHandler.java:202)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:66)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:333)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 129 common frames omitted
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no setter for property named 'description' in 'class com.huang.store.entity.dto.UserCouponDto'
	at org.apache.ibatis.reflection.Reflector.getSetInvoker(Reflector.java:379)
	at org.apache.ibatis.reflection.MetaClass.getSetInvoker(MetaClass.java:166)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.setBeanProperty(BeanWrapper.java:175)
	... 150 common frames omitted
2025-07-02 21:16:41.681 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:16:41.681 [Thread-7] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-02 21:16:41.682 [Thread-7] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-07-02 21:16:41.688 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-532125007] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:16:41.689 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-532125007] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:16:41.689 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1487289049] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:16:41.689 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1487289049] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:16:41.689 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-02 21:16:41.692 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-02 21:16:41.692 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-02 21:16:41.692 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-02 21:16:41.692 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-02 21:16:41.692 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-02 21:16:41.775 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 9820 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 21:16:41.775 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 21:16:41.775 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 21:16:41.948 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 21:16:41.949 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 21:16:41.956 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2025-07-02 21:16:42.014 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$9dc8d2d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:16:42.021 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:16:42.092 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 21:16:42.092 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 21:16:42.092 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 21:16:42.092 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 21:16:42.092 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 21:16:42.092 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:16:42.092 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 21:16:42.092 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 21:16:42.092 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 21:16:42.092 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 317 ms
2025-07-02 21:16:42.108 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 21:16:42.221 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} inited
2025-07-02 21:16:42.234 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} inited
2025-07-02 21:16:42.370 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 21:16:42.370 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 21:16:42.508 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 21:16:42.592 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@aba560c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4aec806d, org.springframework.security.web.context.SecurityContextPersistenceFilter@1bd5e0da, org.springframework.security.web.header.HeaderWriterFilter@59ff9d90, org.springframework.web.filter.CorsFilter@147feb48, org.springframework.security.web.authentication.logout.LogoutFilter@7003d580, com.huang.store.security.JwtAuthenticationTokenFilter@5485603d, com.huang.store.security.CustomAuthenticationFilter@1b840113, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@60258814, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5c4b6e4a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@797d7b4e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2268bf5b, org.springframework.security.web.session.SessionManagementFilter@7ba836ad, org.springframework.security.web.access.ExceptionTranslationFilter@678243e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@d287516]
2025-07-02 21:16:42.742 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 21:16:42.763 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 21:16:42.766 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 21:16:42.768 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 1.021 seconds (JVM running for 270.627)
2025-07-02 21:17:06.748 [Thread-9] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:17:06.748 [Thread-9] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-02 21:17:06.751 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-2028343602] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:17:06.751 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-2028343602] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:17:06.751 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-781468639] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:17:06.751 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-781468639] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:17:06.752 [Thread-9] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-02 21:17:06.752 [Thread-9] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-02 21:17:06.754 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closing ...
2025-07-02 21:17:06.755 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed
2025-07-02 21:17:06.755 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closing ...
2025-07-02 21:17:06.756 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed
2025-07-02 21:17:06.816 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 9820 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 21:17:06.816 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 21:17:06.816 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 21:17:06.948 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 21:17:06.948 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 21:17:06.953 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2025-07-02 21:17:06.996 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$9dc8d2d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:17:07.000 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:17:07.043 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 21:17:07.043 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 21:17:07.043 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 21:17:07.043 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 21:17:07.043 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 21:17:07.043 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:17:07.043 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 21:17:07.043 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 21:17:07.043 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 21:17:07.043 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 227 ms
2025-07-02 21:17:07.043 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 21:17:07.149 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} inited
2025-07-02 21:17:07.168 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} inited
2025-07-02 21:17:07.313 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 21:17:07.313 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 21:17:07.490 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 21:17:07.566 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@309c7754, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@58c971f8, org.springframework.security.web.context.SecurityContextPersistenceFilter@bb5b1f5, org.springframework.security.web.header.HeaderWriterFilter@759077c4, org.springframework.web.filter.CorsFilter@3e93b1f, org.springframework.security.web.authentication.logout.LogoutFilter@3531353a, com.huang.store.security.JwtAuthenticationTokenFilter@58c4a89a, com.huang.store.security.CustomAuthenticationFilter@69c96ef1, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7bd10876, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1ffa012d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@69a27b41, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@72557105, org.springframework.security.web.session.SessionManagementFilter@28f0f51, org.springframework.security.web.access.ExceptionTranslationFilter@5a09ca44, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@582fda03]
2025-07-02 21:17:07.697 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 21:17:07.713 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 21:17:07.722 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 21:17:07.728 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 0.932 seconds (JVM running for 295.587)
2025-07-02 21:17:35.107 [Thread-15] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:17:35.107 [Thread-15] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-02 21:17:35.111 [Thread-15] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-181821224] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:17:35.111 [Thread-15] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-181821224] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:17:35.111 [Thread-15] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-625989411] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:17:35.111 [Thread-15] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-625989411] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:17:35.111 [Thread-15] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-02 21:17:35.111 [Thread-15] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-02 21:17:35.111 [Thread-15] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} closing ...
2025-07-02 21:17:35.111 [Thread-15] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} closed
2025-07-02 21:17:35.111 [Thread-15] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} closing ...
2025-07-02 21:17:35.111 [Thread-15] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} closed
2025-07-02 21:17:35.210 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 9820 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 21:17:35.211 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 21:17:35.211 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 21:17:35.444 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 21:17:35.444 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 21:17:35.467 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2025-07-02 21:17:35.560 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$9dc8d2d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:17:35.576 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:17:35.660 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 21:17:35.660 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 21:17:35.660 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 21:17:35.660 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 21:17:35.660 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 21:17:35.660 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:17:35.660 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 21:17:35.660 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 21:17:35.693 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 21:17:35.693 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 481 ms
2025-07-02 21:17:35.694 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 21:17:35.854 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} inited
2025-07-02 21:17:35.880 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} inited
2025-07-02 21:17:36.071 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 21:17:36.071 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 21:17:36.360 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 21:17:36.485 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@39c9be0f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1e679674, org.springframework.security.web.context.SecurityContextPersistenceFilter@2824efa8, org.springframework.security.web.header.HeaderWriterFilter@64fb9e6e, org.springframework.web.filter.CorsFilter@382c7e29, org.springframework.security.web.authentication.logout.LogoutFilter@7053dc36, com.huang.store.security.JwtAuthenticationTokenFilter@16ea0347, com.huang.store.security.CustomAuthenticationFilter@11408a6d, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5c4ca847, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@63c0d0fa, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5bf03a02, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7029e632, org.springframework.security.web.session.SessionManagementFilter@507e85f8, org.springframework.security.web.access.ExceptionTranslationFilter@67c59d53, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7997996c]
2025-07-02 21:17:36.761 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 21:17:36.785 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 21:17:36.789 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 21:17:36.791 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 1.629 seconds (JVM running for 324.649)
2025-07-02 21:17:58.028 [Thread-21] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:17:58.031 [Thread-21] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-02 21:17:58.033 [Thread-21] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-2046119198] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:17:58.033 [Thread-21] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-2046119198] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:17:58.033 [Thread-21] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1922084099] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:17:58.033 [Thread-21] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1922084099] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:17:58.033 [Thread-21] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-02 21:17:58.040 [Thread-21] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-02 21:17:58.047 [Thread-21] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} closing ...
2025-07-02 21:17:58.048 [Thread-21] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} closed
2025-07-02 21:17:58.049 [Thread-21] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} closing ...
2025-07-02 21:17:58.052 [Thread-21] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} closed
2025-07-02 21:17:58.162 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 9820 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 21:17:58.162 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 21:17:58.162 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 21:17:58.449 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 21:17:58.449 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 21:17:58.465 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 0 Redis repository interfaces.
2025-07-02 21:17:58.584 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$9dc8d2d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:17:58.592 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:17:58.728 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 21:17:58.728 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 21:17:58.728 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 21:17:58.728 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 21:17:58.728 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 21:17:58.728 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:17:58.728 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 21:17:58.728 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 21:17:58.761 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 21:17:58.761 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 599 ms
2025-07-02 21:17:58.761 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 21:17:58.910 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-9} inited
2025-07-02 21:17:58.933 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-10} inited
2025-07-02 21:17:59.175 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 21:17:59.175 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 21:17:59.395 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 21:17:59.473 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2af2a3ad, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@148dd7fd, org.springframework.security.web.context.SecurityContextPersistenceFilter@2e6c9fa6, org.springframework.security.web.header.HeaderWriterFilter@55740b55, org.springframework.web.filter.CorsFilter@48be915, org.springframework.security.web.authentication.logout.LogoutFilter@68b5884e, com.huang.store.security.JwtAuthenticationTokenFilter@7c375ce7, com.huang.store.security.CustomAuthenticationFilter@a0f647a, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7a0908a2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@28e78d88, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5dbc0562, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7d89cdd5, org.springframework.security.web.session.SessionManagementFilter@4427615e, org.springframework.security.web.access.ExceptionTranslationFilter@541a42e9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@53a3c86b]
2025-07-02 21:17:59.642 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 21:17:59.661 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 21:17:59.664 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 21:17:59.669 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 1.553 seconds (JVM running for 347.527)
2025-07-02 21:18:23.862 [Thread-27] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:18:23.862 [Thread-27] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-02 21:18:23.862 [Thread-27] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-618588485] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:18:23.862 [Thread-27] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-618588485] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:18:23.862 [Thread-27] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-474911773] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:18:23.862 [Thread-27] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-474911773] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:18:23.862 [Thread-27] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-02 21:18:23.878 [Thread-27] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-02 21:18:23.882 [Thread-27] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-9} closing ...
2025-07-02 21:18:23.883 [Thread-27] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-9} closed
2025-07-02 21:18:23.883 [Thread-27] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-10} closing ...
2025-07-02 21:18:23.884 [Thread-27] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-10} closed
2025-07-02 21:18:24.012 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 9820 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 21:18:24.012 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 21:18:24.012 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 21:18:24.300 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 21:18:24.301 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 21:18:24.317 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2025-07-02 21:18:24.403 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$9dc8d2d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:18:24.412 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:18:24.546 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 21:18:24.546 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 21:18:24.546 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 21:18:24.546 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 21:18:24.546 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 21:18:24.546 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:18:24.546 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 21:18:24.546 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 21:18:24.567 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 21:18:24.567 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 555 ms
2025-07-02 21:18:24.570 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 21:18:24.698 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-11} inited
2025-07-02 21:18:24.712 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-12} inited
2025-07-02 21:18:24.868 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 21:18:24.879 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 21:18:25.189 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 21:18:25.296 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@11c1bbfc, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@185a92ab, org.springframework.security.web.context.SecurityContextPersistenceFilter@5c65db81, org.springframework.security.web.header.HeaderWriterFilter@208f1437, org.springframework.web.filter.CorsFilter@272b818d, org.springframework.security.web.authentication.logout.LogoutFilter@2de5562f, com.huang.store.security.JwtAuthenticationTokenFilter@b91509, com.huang.store.security.CustomAuthenticationFilter@d0ec916, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@108997ac, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@e58cdb5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@56ae4ee5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@43bcd5f9, org.springframework.security.web.session.SessionManagementFilter@72df7ac2, org.springframework.security.web.access.ExceptionTranslationFilter@1b7922ca, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5acd430e]
2025-07-02 21:18:25.462 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 21:18:25.488 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 21:18:25.490 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 21:18:25.493 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 1.554 seconds (JVM running for 373.352)
2025-07-02 21:18:39.406 [Thread-33] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:18:39.406 [Thread-33] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-02 21:18:39.409 [Thread-33] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-137800385] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:18:39.410 [Thread-33] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-137800385] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:18:39.410 [Thread-33] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-756532170] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:18:39.411 [Thread-33] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-756532170] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:18:39.412 [Thread-33] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-02 21:18:39.414 [Thread-33] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-02 21:18:39.417 [Thread-33] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-11} closing ...
2025-07-02 21:18:39.418 [Thread-33] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-11} closed
2025-07-02 21:18:39.418 [Thread-33] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-12} closing ...
2025-07-02 21:18:39.419 [Thread-33] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-12} closed
2025-07-02 21:18:39.506 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 9820 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 21:18:39.506 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 21:18:39.507 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 21:18:39.797 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 21:18:39.798 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 21:18:39.816 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.
2025-07-02 21:18:39.897 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$9dc8d2d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:18:39.905 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:18:39.985 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 21:18:39.986 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 21:18:39.986 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 21:18:39.986 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 21:18:39.986 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 21:18:39.986 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:18:39.986 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 21:18:39.988 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 21:18:40.003 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 21:18:40.004 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 495 ms
2025-07-02 21:18:40.007 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 21:18:40.132 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-13} inited
2025-07-02 21:18:40.147 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-14} inited
2025-07-02 21:18:40.339 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 21:18:40.340 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 21:18:40.646 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 21:18:40.763 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4fb96f49, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@24b2b6c8, org.springframework.security.web.context.SecurityContextPersistenceFilter@33377843, org.springframework.security.web.header.HeaderWriterFilter@5722016e, org.springframework.web.filter.CorsFilter@57fdab4f, org.springframework.security.web.authentication.logout.LogoutFilter@1b98e795, com.huang.store.security.JwtAuthenticationTokenFilter@254c977e, com.huang.store.security.CustomAuthenticationFilter@5fd10cc3, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@314b6f50, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@57191948, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@10f74bb4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@58307522, org.springframework.security.web.session.SessionManagementFilter@38d768d8, org.springframework.security.web.access.ExceptionTranslationFilter@45243dd0, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@17297329]
2025-07-02 21:18:40.964 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 21:18:40.980 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 21:18:40.985 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 21:18:40.989 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 1.522 seconds (JVM running for 388.848)
2025-07-02 21:19:16.623 [Thread-39] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:19:16.623 [Thread-39] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-02 21:19:16.627 [Thread-39] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1232085793] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:19:16.627 [Thread-39] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1232085793] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:19:16.628 [Thread-39] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-612099696] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:19:16.628 [Thread-39] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-612099696] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:19:16.629 [Thread-39] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-02 21:19:16.630 [Thread-39] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-02 21:19:16.633 [Thread-39] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-13} closing ...
2025-07-02 21:19:16.642 [Thread-39] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-13} closed
2025-07-02 21:19:16.642 [Thread-39] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-14} closing ...
2025-07-02 21:19:16.643 [Thread-39] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-14} closed
2025-07-02 21:19:16.740 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 9820 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 21:19:16.742 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 21:19:16.742 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 21:19:16.950 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 21:19:16.950 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 21:19:16.959 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2025-07-02 21:19:17.043 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$9dc8d2d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:19:17.052 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:19:17.176 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 21:19:17.176 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 21:19:17.176 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 21:19:17.176 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 21:19:17.177 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 21:19:17.177 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:19:17.178 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 21:19:17.178 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 21:19:17.197 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 21:19:17.198 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 454 ms
2025-07-02 21:19:17.202 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 21:19:17.304 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-15} inited
2025-07-02 21:19:17.314 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-16} inited
2025-07-02 21:19:17.498 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 21:19:17.498 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 21:19:17.711 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 21:19:17.814 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1c14ca9d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@ab46388, org.springframework.security.web.context.SecurityContextPersistenceFilter@645a6d0f, org.springframework.security.web.header.HeaderWriterFilter@5300b8d4, org.springframework.web.filter.CorsFilter@5d8b1d3e, org.springframework.security.web.authentication.logout.LogoutFilter@56ed5191, com.huang.store.security.JwtAuthenticationTokenFilter@6956b631, com.huang.store.security.CustomAuthenticationFilter@56cadb98, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4368b5e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@38648a3e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6ef443fe, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1de31ff1, org.springframework.security.web.session.SessionManagementFilter@7aeebfb1, org.springframework.security.web.access.ExceptionTranslationFilter@206f91b3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7a3fe283]
2025-07-02 21:19:18.003 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 21:19:18.027 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 21:19:18.034 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 21:19:18.066 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 1.372 seconds (JVM running for 425.925)
2025-07-02 21:21:33.825 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-02 21:21:33.825 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-02 21:21:33.827 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-07-02 21:21:33.839 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:21:33.839 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 21:21:33.855 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:21:33.855 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:21:33.855 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:21:33.855 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:21:33.856 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:21:33.856 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:21:33.861 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 21:21:33.865 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 4
2025-07-02 21:21:33.873 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:21:33.877 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 21:21:33.907 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 21:21:33.910 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:21:33.910 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:21:33.910 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:21:33.910 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 21:21:33.914 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 4
2025-07-02 21:21:35.114 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 21:21:35.115 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:21:35.115 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:21:35.115 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:21:35.115 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 21:21:35.118 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 4
2025-07-02 21:21:38.974 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:21:38.974 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:21:38.974 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:21:38.974 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:21:38.974 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:21:38.985 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 21:21:38.998 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 21:21:38.999 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:21:38.999 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:21:38.999 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:21:39.000 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 21:21:39.002 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 4
2025-07-02 21:21:40.530 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 21:21:40.532 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:21:40.532 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:21:40.532 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:21:40.532 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 21:21:40.535 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 4
2025-07-02 21:21:47.453 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:21:47.454 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:21:47.454 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:21:47.454 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:21:47.457 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:21:47.460 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 21:21:47.473 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 21:21:47.473 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:21:47.473 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:21:47.473 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:21:47.473 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 21:21:47.475 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 4
2025-07-02 21:21:49.499 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 21:21:49.499 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:21:49.500 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:21:49.500 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:21:49.503 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 21:21:49.507 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 4
2025-07-02 21:21:57.109 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:21:57.109 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:21:57.109 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:21:57.109 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:21:57.109 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:21:57.119 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 21:21:57.132 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 21:21:57.132 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:21:57.132 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:21:57.132 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:21:57.133 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 21:21:57.134 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 4
2025-07-02 21:22:00.067 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 21:22:00.068 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:22:00.068 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:22:00.069 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:22:00.071 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 21:22:00.071 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 4
2025-07-02 21:22:01.112 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:22:01.112 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:22:01.113 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:22:01.113 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:22:01.114 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:22:01.116 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 5
2025-07-02 21:22:01.132 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 21:22:01.132 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:22:01.132 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:22:01.132 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:22:01.134 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 21:22:01.134 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 4
2025-07-02 21:22:06.622 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 管理员删除优惠券模板: 5
2025-07-02 21:22:06.626 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.CouponTemplateMapper.delete - ==>  Preparing: UPDATE coupon_template SET status = 0, update_time = NOW() WHERE id = ?
2025-07-02 21:22:06.628 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:22:06.629 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: UPDATE coupon_template SET status = 0, update_time = NOW() WHERE id = ? ::: DataSources: master
2025-07-02 21:22:06.633 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.CouponTemplateMapper.delete - ==> Parameters: 5(Integer)
2025-07-02 21:22:06.636 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.CouponTemplateMapper.delete - <==    Updates: 1
2025-07-02 21:22:06.662 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 21:22:06.663 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 21:22:06.663 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:22:06.663 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:22:06.664 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 21:22:06.666 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 5
2025-07-02 21:22:09.117 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 管理员删除优惠券模板: 1
2025-07-02 21:22:09.118 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.CouponTemplateMapper.delete - ==>  Preparing: UPDATE coupon_template SET status = 0, update_time = NOW() WHERE id = ?
2025-07-02 21:22:09.118 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:22:09.118 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: UPDATE coupon_template SET status = 0, update_time = NOW() WHERE id = ? ::: DataSources: master
2025-07-02 21:22:09.119 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.CouponTemplateMapper.delete - ==> Parameters: 1(Integer)
2025-07-02 21:22:09.122 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.CouponTemplateMapper.delete - <==    Updates: 1
2025-07-02 21:22:09.144 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 21:22:09.146 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 21:22:09.146 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:22:09.146 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:22:09.147 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 21:22:09.149 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 5
2025-07-02 21:22:11.015 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 管理员删除优惠券模板: 2
2025-07-02 21:22:11.016 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.CouponTemplateMapper.delete - ==>  Preparing: UPDATE coupon_template SET status = 0, update_time = NOW() WHERE id = ?
2025-07-02 21:22:11.016 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:22:11.016 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: UPDATE coupon_template SET status = 0, update_time = NOW() WHERE id = ? ::: DataSources: master
2025-07-02 21:22:11.017 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.CouponTemplateMapper.delete - ==> Parameters: 2(Integer)
2025-07-02 21:22:11.020 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.CouponTemplateMapper.delete - <==    Updates: 1
2025-07-02 21:22:11.040 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 21:22:11.040 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 21:22:11.040 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:22:11.040 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:22:11.042 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 21:22:11.047 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 5
2025-07-02 21:22:13.056 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 管理员删除优惠券模板: 3
2025-07-02 21:22:13.070 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.CouponTemplateMapper.delete - ==>  Preparing: UPDATE coupon_template SET status = 0, update_time = NOW() WHERE id = ?
2025-07-02 21:22:13.070 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:22:13.070 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: UPDATE coupon_template SET status = 0, update_time = NOW() WHERE id = ? ::: DataSources: master
2025-07-02 21:22:13.072 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.CouponTemplateMapper.delete - ==> Parameters: 3(Integer)
2025-07-02 21:22:13.076 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.CouponTemplateMapper.delete - <==    Updates: 1
2025-07-02 21:22:13.093 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 21:22:13.093 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 21:22:13.093 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:22:13.093 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:22:13.093 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 21:22:13.104 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 5
2025-07-02 21:22:15.283 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 管理员删除优惠券模板: 4
2025-07-02 21:22:15.284 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.CouponTemplateMapper.delete - ==>  Preparing: UPDATE coupon_template SET status = 0, update_time = NOW() WHERE id = ?
2025-07-02 21:22:15.284 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:22:15.284 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: UPDATE coupon_template SET status = 0, update_time = NOW() WHERE id = ? ::: DataSources: master
2025-07-02 21:22:15.286 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.CouponTemplateMapper.delete - ==> Parameters: 4(Integer)
2025-07-02 21:22:15.288 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.CouponTemplateMapper.delete - <==    Updates: 1
2025-07-02 21:22:15.308 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 21:22:15.309 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 21:22:15.309 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:22:15.310 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:22:15.312 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 21:22:15.314 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 5
2025-07-02 21:22:18.345 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 21:22:18.345 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 21:22:18.345 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:22:18.345 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:22:18.345 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 21:22:18.351 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 5
2025-07-02 21:22:26.317 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 管理员更新优惠券模板状态: 5 -> 1
2025-07-02 21:22:26.318 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.CouponTemplateMapper.updateStatus - ==>  Preparing: UPDATE coupon_template SET status = ?, update_time = NOW() WHERE id = ?
2025-07-02 21:22:26.318 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:22:26.318 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: UPDATE coupon_template SET status = ?, update_time = NOW() WHERE id = ? ::: DataSources: master
2025-07-02 21:22:26.321 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.CouponTemplateMapper.updateStatus - ==> Parameters: 1(Integer), 5(Integer)
2025-07-02 21:22:26.322 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.CouponTemplateMapper.updateStatus - <==    Updates: 1
2025-07-02 21:22:26.348 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 21:22:26.348 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 21:22:26.349 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:22:26.349 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:22:26.349 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 21:22:26.351 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 5
2025-07-02 21:22:27.244 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 管理员更新优惠券模板状态: 5 -> 0
2025-07-02 21:22:27.245 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.CouponTemplateMapper.updateStatus - ==>  Preparing: UPDATE coupon_template SET status = ?, update_time = NOW() WHERE id = ?
2025-07-02 21:22:27.245 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:22:27.245 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: UPDATE coupon_template SET status = ?, update_time = NOW() WHERE id = ? ::: DataSources: master
2025-07-02 21:22:27.246 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.CouponTemplateMapper.updateStatus - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 21:22:27.248 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.CouponTemplateMapper.updateStatus - <==    Updates: 1
2025-07-02 21:22:27.274 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 21:22:27.276 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 21:22:27.276 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:22:27.276 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:22:27.278 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 21:22:27.281 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 5
2025-07-02 21:22:29.040 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 管理员删除优惠券模板: 5
2025-07-02 21:22:29.045 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.CouponTemplateMapper.delete - ==>  Preparing: UPDATE coupon_template SET status = 0, update_time = NOW() WHERE id = ?
2025-07-02 21:22:29.045 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:22:29.047 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: UPDATE coupon_template SET status = 0, update_time = NOW() WHERE id = ? ::: DataSources: master
2025-07-02 21:22:29.049 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.CouponTemplateMapper.delete - ==> Parameters: 5(Integer)
2025-07-02 21:22:29.051 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.CouponTemplateMapper.delete - <==    Updates: 1
2025-07-02 21:22:29.089 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 21:22:29.089 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 21:22:29.089 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:22:29.089 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:22:29.091 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 21:22:29.094 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 5
2025-07-02 21:24:04.174 [Thread-45] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:24:04.175 [Thread-45] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-02 21:24:04.176 [Thread-45] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-07-02 21:24:04.180 [Thread-45] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-669349931] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:24:04.180 [Thread-45] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-669349931] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:24:04.180 [Thread-45] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1876845481] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:24:04.181 [Thread-45] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1876845481] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:24:04.181 [Thread-45] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-02 21:24:04.182 [Thread-45] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-02 21:24:04.185 [Thread-45] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-15} closing ...
2025-07-02 21:24:04.186 [Thread-45] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-15} closed
2025-07-02 21:24:04.186 [Thread-45] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-16} closing ...
2025-07-02 21:24:04.188 [Thread-45] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-16} closed
2025-07-02 21:24:04.288 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 9820 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 21:24:04.288 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 21:24:04.288 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 21:24:04.593 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 21:24:04.593 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 21:24:04.609 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
2025-07-02 21:24:04.703 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$9dc8d2d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:24:04.711 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:24:04.803 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 21:24:04.803 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 21:24:04.803 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 21:24:04.804 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 21:24:04.804 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 21:24:04.805 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:24:04.805 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 21:24:04.805 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 21:24:04.822 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 21:24:04.822 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 534 ms
2025-07-02 21:24:04.825 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 21:24:04.946 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-17} inited
2025-07-02 21:24:04.962 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-18} inited
2025-07-02 21:24:05.189 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 21:24:05.190 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 21:24:05.515 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 21:24:05.626 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2cb572ab, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1148da8d, org.springframework.security.web.context.SecurityContextPersistenceFilter@7ffd415a, org.springframework.security.web.header.HeaderWriterFilter@5cbd7d7f, org.springframework.web.filter.CorsFilter@442ec121, org.springframework.security.web.authentication.logout.LogoutFilter@484120d8, com.huang.store.security.JwtAuthenticationTokenFilter@6fca0e4b, com.huang.store.security.CustomAuthenticationFilter@70f08cf4, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3e77240f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@42c66bb8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@75a7a01a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@20b52be9, org.springframework.security.web.session.SessionManagementFilter@1d9895ef, org.springframework.security.web.access.ExceptionTranslationFilter@671b53be, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3b3535a]
2025-07-02 21:24:05.800 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 21:24:05.814 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 21:24:05.824 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 21:24:05.827 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 1.591 seconds (JVM running for 713.686)
2025-07-02 21:24:36.188 [Thread-51] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:24:36.188 [Thread-51] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-02 21:24:36.194 [Thread-51] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1548973240] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:24:36.194 [Thread-51] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1548973240] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:24:36.195 [Thread-51] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1113897644] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 21:24:36.195 [Thread-51] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1113897644] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 21:24:36.195 [Thread-51] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-02 21:24:36.195 [Thread-51] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-02 21:24:36.198 [Thread-51] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-17} closing ...
2025-07-02 21:24:36.198 [Thread-51] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-17} closed
2025-07-02 21:24:36.198 [Thread-51] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-18} closing ...
2025-07-02 21:24:36.198 [Thread-51] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-18} closed
2025-07-02 21:24:36.289 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 9820 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 21:24:36.289 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 21:24:36.289 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 21:24:36.502 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 21:24:36.502 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 21:24:36.517 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2025-07-02 21:24:36.579 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$9dc8d2d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:24:36.584 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:24:36.659 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 21:24:36.659 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 21:24:36.659 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 21:24:36.659 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 21:24:36.659 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 21:24:36.659 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:24:36.659 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 21:24:36.659 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 21:24:36.686 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 21:24:36.687 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 396 ms
2025-07-02 21:24:36.690 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 21:24:36.780 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-19} inited
2025-07-02 21:24:36.793 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-20} inited
2025-07-02 21:24:36.976 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 21:24:36.976 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 21:24:37.193 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 21:24:37.297 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5a0ecede, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7c373add, org.springframework.security.web.context.SecurityContextPersistenceFilter@2d013c13, org.springframework.security.web.header.HeaderWriterFilter@6446c603, org.springframework.web.filter.CorsFilter@37a088bc, org.springframework.security.web.authentication.logout.LogoutFilter@61ce18e7, com.huang.store.security.JwtAuthenticationTokenFilter@1c779319, com.huang.store.security.CustomAuthenticationFilter@24ce34cc, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2efac9cc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3c523e30, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6ef69167, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6aaf169a, org.springframework.security.web.session.SessionManagementFilter@6ee8b7c7, org.springframework.security.web.access.ExceptionTranslationFilter@72ec75c6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@600e17a5]
2025-07-02 21:24:37.476 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 21:24:37.497 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 21:24:37.509 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 21:24:37.509 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 1.265 seconds (JVM running for 745.372)
2025-07-02 21:25:06.021 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-19} closing ...
2025-07-02 21:25:06.023 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-19} closed
2025-07-02 21:25:06.023 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-20} closing ...
2025-07-02 21:25:06.023 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-20} closed
2025-07-02 21:28:36.709 [main] INFO  com.huang.store.service.CouponServiceTest - Starting CouponServiceTest using Java 21.0.5 on OLIVIA with PID 24416 (started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 21:28:36.710 [main] INFO  com.huang.store.service.CouponServiceTest - The following 1 profile is active: "test"
2025-07-02 21:28:36.719 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-02 21:28:38.087 [main] WARN  o.s.w.context.support.GenericWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Cannot register bean definition [Root bean: class [null]; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]] for bean 'dataSource': There is already [Root bean: class [null]; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=true; factoryBeanName=com.huang.store.configure.DruidConfiguration$IDataSourceProperties; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/huang/store/configure/DruidConfiguration$IDataSourceProperties.class]] bound.
2025-07-02 21:28:38.122 [main] ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'dataSource', defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class], could not be registered. A bean with that name has already been defined in class path resource [com/huang/store/configure/DruidConfiguration$IDataSourceProperties.class] and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

2025-07-02 21:28:38.126 [main] ERROR o.springframework.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@63611043] to prepare test instance [com.huang.store.service.CouponServiceTest@194d329e]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:98)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'dataSource' defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]: Cannot register bean definition [Root bean: class [null]; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]] for bean 'dataSource': There is already [Root bean: class [null]; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=true; factoryBeanName=com.huang.store.configure.DruidConfiguration$IDataSourceProperties; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/huang/store/configure/DruidConfiguration$IDataSourceProperties.class]] bound.
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:1006)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(ConfigurationClassBeanDefinitionReader.java:295)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:153)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:129)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:343)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:756)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:572)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:136)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:141)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:90)
	... 67 common frames omitted
2025-07-02 21:37:51.006 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-02 21:37:51.039 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 26424 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 21:37:51.040 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 21:37:51.041 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 21:37:51.234 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-02 21:37:51.234 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-02 21:37:51.983 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 21:37:51.985 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 21:37:52.015 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2025-07-02 21:37:52.302 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$226ac0c8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:37:52.319 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 21:37:52.726 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 21:37:52.727 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 21:37:52.728 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 21:37:52.728 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 21:37:52.733 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 21:37:52.739 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 21:37:52.739 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 21:37:52.739 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 21:37:52.799 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 21:37:52.799 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1565 ms
2025-07-02 21:37:52.804 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 21:37:53.700 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-02 21:37:53.725 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-02 21:37:54.063 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 21:37:54.063 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 21:37:54.555 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 21:37:54.719 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7d6454f3, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7edf4c69, org.springframework.security.web.context.SecurityContextPersistenceFilter@182a5ea2, org.springframework.security.web.header.HeaderWriterFilter@15b09896, org.springframework.web.filter.CorsFilter@289803be, org.springframework.security.web.authentication.logout.LogoutFilter@657431c9, com.huang.store.security.JwtAuthenticationTokenFilter@1c67846e, com.huang.store.security.CustomAuthenticationFilter@5515a8d, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@79f3f4d2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@77ad8290, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1e5b5723, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2ad6b0b8, org.springframework.security.web.session.SessionManagementFilter@4fc59eb9, org.springframework.security.web.access.ExceptionTranslationFilter@5011d846, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@24367a7f]
2025-07-02 21:37:54.982 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 21:37:54.988 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 21:37:55.015 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 21:37:55.022 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 4.501 seconds (JVM running for 5.007)
2025-07-02 21:39:50.344 [http-nio-8080-exec-5] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-02 21:39:50.345 [http-nio-8080-exec-5] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-02 21:39:50.346 [http-nio-8080-exec-5] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-02 21:39:50.435 [http-nio-8080-exec-4] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 21:39:50.460 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 21:39:50.460 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 21:39:50.460 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 21:39:50.460 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:39:50.460 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 21:39:50.460 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 21:39:50.477 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:39:50.477 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:39:50.478 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:39:50.477 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:39:50.477 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:39:50.477 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:39:50.478 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:39:50.478 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 21:39:50.478 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 21:39:50.478 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 21:39:50.478 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:39:50.478 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 21:39:50.520 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:39:50.520 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 21:39:50.532 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 21:39:50.541 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 21:39:50.546 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 21:39:50.549 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 21:39:50.549 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 21:39:50.555 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 21:39:50.555 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 21:39:50.560 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:39:50.560 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:39:50.562 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 21:39:50.563 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:39:50.563 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:39:50.564 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:39:50.564 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:39:50.565 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 21:39:50.564 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:39:50.565 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:39:50.567 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 21:39:50.568 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:39:50.568 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:39:50.569 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:39:50.569 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 21:39:50.569 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:39:50.570 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:39:50.570 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:39:50.571 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:39:50.572 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 21:39:50.572 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:39:50.573 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:39:50.573 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:39:50.573 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 21:39:50.573 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:39:50.574 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:39:50.574 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:39:50.574 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:39:50.574 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:39:50.575 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 21:39:50.578 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:39:50.580 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:39:50.581 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:39:50.581 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:39:50.581 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:39:50.581 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 21:39:50.582 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:39:50.582 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:39:50.582 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:39:50.582 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 21:39:50.582 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 21:39:50.585 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:39:50.585 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:39:50.586 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:39:50.586 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:39:50.586 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:39:50.586 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:39:50.586 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:39:50.586 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:39:50.587 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 21:39:50.588 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 21:39:50.588 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:39:50.589 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:39:50.590 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:39:50.590 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:39:50.590 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:39:50.590 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 21:39:50.593 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:39:50.594 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:39:50.594 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:39:50.594 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:39:50.595 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 21:39:50.596 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:39:50.597 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:39:50.597 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:39:50.597 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:39:50.597 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 21:39:50.599 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:39:54.234 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:39:54.234 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:39:54.234 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:39:54.234 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: a123456@example.com(String)
2025-07-02 21:39:54.234 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 0
2025-07-02 21:39:54.242 [http-nio-8080-exec-7] WARN  o.s.security.crypto.bcrypt.BCryptPasswordEncoder - Encoded password does not look like BCrypt
2025-07-02 21:40:01.946 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:40:01.946 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:01.946 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:40:01.946 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: a123456@example.com(String)
2025-07-02 21:40:01.953 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 0
2025-07-02 21:40:01.962 [http-nio-8080-exec-8] INFO  com.huang.store.controller.UserController - 验证账号是否已注册: a123456@example.com
2025-07-02 21:40:01.963 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:40:01.965 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:01.965 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:40:01.965 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: a123456@example.com(String)
2025-07-02 21:40:01.967 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 0
2025-07-02 21:40:01.968 [http-nio-8080-exec-8] INFO  com.huang.store.controller.UserController - 账号可以注册: a123456@example.com
2025-07-02 21:40:01.983 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:40:01.984 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:01.984 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:40:01.985 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: a123456@example.com(String)
2025-07-02 21:40:01.986 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 0
2025-07-02 21:40:01.988 [http-nio-8080-exec-9] INFO  com.huang.store.controller.UserController - 验证账号是否已注册: a123456@example.com
2025-07-02 21:40:01.988 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:40:01.988 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:01.988 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:40:01.989 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: a123456@example.com(String)
2025-07-02 21:40:01.989 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 0
2025-07-02 21:40:01.990 [http-nio-8080-exec-9] INFO  com.huang.store.controller.UserController - 账号可以注册: a123456@example.com
2025-07-02 21:40:09.458 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:40:09.458 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:09.458 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:40:09.459 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: a123456@example.com(String)
2025-07-02 21:40:09.462 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 0
2025-07-02 21:40:09.462 [http-nio-8080-exec-10] INFO  com.huang.store.controller.UserController - 验证账号是否已注册: a123456@example.com
2025-07-02 21:40:09.462 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:40:09.462 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:09.462 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:40:09.462 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: a123456@example.com(String)
2025-07-02 21:40:09.462 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 0
2025-07-02 21:40:09.462 [http-nio-8080-exec-10] INFO  com.huang.store.controller.UserController - 账号可以注册: a123456@example.com
2025-07-02 21:40:09.484 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:40:09.484 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:09.484 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:40:09.484 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: a123456@example.com(String)
2025-07-02 21:40:09.485 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 0
2025-07-02 21:40:09.488 [http-nio-8080-exec-6] INFO  com.huang.store.controller.UserController - 开始用户注册: a123456@example.com
2025-07-02 21:40:09.488 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:40:09.488 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:09.488 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:40:09.488 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: a123456@example.com(String)
2025-07-02 21:40:09.489 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 0
2025-07-02 21:40:09.548 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.addUser - ==>  Preparing: insert into user(account,password,name,gender,imgUrl,info,manage,enable,registerTime) values(?,?,?,?,?,?,?,?,?)
2025-07-02 21:40:09.560 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:09.560 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: insert into user(account,password,name,gender,imgUrl,info,manage,enable,registerTime)
         values(?,?,?,?,?,?,?,?,?) ::: DataSources: master
2025-07-02 21:40:09.664 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.addUser - ==> Parameters: a123456@example.com(String), $2a$10$9Gogi40/ZAbMiV0yaLwws.2i9yt11W79CQTCipc9vJTCbwea1Ref.(String), null, null, null, null, false(Boolean), true(Boolean), 2025-07-02 21:40:09.548(Timestamp)
2025-07-02 21:40:09.674 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.addUser - <==    Updates: 1
2025-07-02 21:40:09.674 [http-nio-8080-exec-6] INFO  com.huang.store.controller.UserController - 用户注册成功: a123456@example.com
2025-07-02 21:40:13.165 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:40:13.165 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:13.165 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:40:13.165 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: a123456@example.com(String)
2025-07-02 21:40:13.165 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:40:13.180 [http-nio-8080-exec-5] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:a123456@example.com    数据库密码:$2a$10$9Gogi40/ZAbMiV0yaLwws.2i9yt11W79CQTCipc9vJTCbwea1Ref.
2025-07-02 21:40:13.184 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:40:13.184 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:13.184 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:40:13.185 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: a123456@example.com(String)
2025-07-02 21:40:13.186 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:40:13.187 [http-nio-8080-exec-5] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:a123456@example.com    数据库密码:$2a$10$9Gogi40/ZAbMiV0yaLwws.2i9yt11W79CQTCipc9vJTCbwea1Ref.
2025-07-02 21:40:13.256 [http-nio-8080-exec-5] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=a123456@example.com, password=$2a$10$9Gogi40/ZAbMiV0yaLwws.2i9yt11W79CQTCipc9vJTCbwea1Ref., enabled=true, roles=[ROLE_USER]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=DB02438FFFBE1B9899E075FC7FC6311B], Granted Authorities=[ROLE_USER]]
2025-07-02 21:40:13.269 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:40:13.269 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:13.269 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:40:13.269 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: a123456@example.com(String)
2025-07-02 21:40:13.270 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:40:14.417 [http-nio-8080-exec-7] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 21:40:14.418 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:40:14.418 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 21:40:14.418 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 21:40:14.418 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 21:40:14.418 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 21:40:14.418 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:14.418 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:14.418 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:14.418 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:14.418 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:14.418 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:40:14.418 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 21:40:14.418 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:40:14.418 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 21:40:14.418 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 21:40:14.418 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 21:40:14.418 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:14.418 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 21:40:14.418 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 21:40:14.418 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:40:14.418 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:40:14.418 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 21:40:14.420 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 21:40:14.420 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 21:40:14.421 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 21:40:14.421 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:40:14.421 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 21:40:14.421 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:40:14.421 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:40:14.421 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:14.421 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:14.421 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:40:14.421 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 21:40:14.421 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:40:14.422 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 21:40:14.422 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 21:40:14.422 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:14.422 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 21:40:14.422 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:40:14.422 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 21:40:14.422 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 21:40:14.423 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:40:14.423 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:14.423 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:40:14.423 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:40:14.423 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:40:14.423 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 21:40:14.423 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 21:40:14.425 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:40:14.426 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:40:14.426 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:14.428 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:40:14.430 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:40:14.430 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:14.430 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:40:14.431 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 21:40:14.431 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:40:14.431 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:14.431 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:40:14.433 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:40:14.435 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 21:40:14.435 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:40:14.435 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:40:14.437 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:40:14.437 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 21:40:14.437 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:40:14.437 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:14.437 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:40:14.437 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:40:14.437 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:14.437 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:40:14.437 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 21:40:14.437 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 21:40:14.437 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:40:14.437 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:40:14.437 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:40:14.437 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:40:14.437 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:14.437 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:40:14.437 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:14.437 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:40:14.437 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 21:40:14.437 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 21:40:14.437 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:40:14.443 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:40:14.445 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:40:14.446 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:14.446 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:40:14.447 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 21:40:14.449 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:40:14.450 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:40:14.450 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:14.450 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:40:14.450 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 21:40:14.453 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:40:18.536 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:40:18.536 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:18.537 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:40:18.537 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: a123456@example.com(String)
2025-07-02 21:40:18.540 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:40:20.602 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:40:20.602 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 21:40:20.615 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:40:20.615 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:40:20.616 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:20.616 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:20.616 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:40:20.616 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:40:20.617 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:40:20.619 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 0
2025-07-02 21:40:20.620 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 21:40:20.621 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:40:20.633 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 21:40:20.633 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:40:20.633 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:20.633 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:40:20.633 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 21:40:20.633 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:40:22.580 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 21:40:22.581 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:40:22.583 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:22.583 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:40:22.583 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 21:40:22.583 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:40:23.490 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:40:23.493 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:40:23.493 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:23.493 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:40:23.496 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:40:23.498 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 0
2025-07-02 21:40:23.506 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 21:40:23.506 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:40:23.506 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:23.506 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:40:23.507 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 21:40:23.508 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:40:46.441 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 21:40:46.441 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:40:46.441 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:40:46.441 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:40:46.442 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:46.442 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:46.442 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:40:46.442 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:40:46.442 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:40:46.443 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 21:40:46.444 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 0
2025-07-02 21:40:46.444 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:40:46.614 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: a123456@example.com
2025-07-02 21:40:46.615 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:40:46.615 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:46.615 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:40:46.616 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: a123456@example.com(String)
2025-07-02 21:40:46.618 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:40:51.407 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:40:51.408 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:51.408 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:40:51.408 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: a123456@example.com(String)
2025-07-02 21:40:51.409 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:40:51.410 [http-nio-8080-exec-9] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:a123456@example.com    数据库密码:$2a$10$9Gogi40/ZAbMiV0yaLwws.2i9yt11W79CQTCipc9vJTCbwea1Ref.
2025-07-02 21:40:51.479 [http-nio-8080-exec-9] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=a123456@example.com, password=$2a$10$9Gogi40/ZAbMiV0yaLwws.2i9yt11W79CQTCipc9vJTCbwea1Ref., enabled=true, roles=[ROLE_ADMIN]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=DB02438FFFBE1B9899E075FC7FC6311B], Granted Authorities=[ROLE_ADMIN]]
2025-07-02 21:40:51.482 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:40:51.483 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:51.483 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:40:51.483 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: a123456@example.com(String)
2025-07-02 21:40:51.483 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:40:56.556 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 21:40:56.557 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 21:40:56.557 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:40:56.557 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:40:56.560 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 21:40:56.565 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 0
2025-07-02 21:41:25.515 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 管理员创建优惠券模板: 用户福利
2025-07-02 21:41:25.515 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.CouponTemplateMapper.insert - ==>  Preparing: INSERT INTO coupon_template (name, type, discount_value, min_order_amount, max_discount_amount, total_quantity, used_quantity, received_quantity, per_user_limit, valid_days, status, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-02 21:41:25.515 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:25.515 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: INSERT INTO coupon_template (name, type, discount_value, min_order_amount, max_discount_amount, total_quantity, used_quantity, received_quantity, per_user_limit, valid_days, status, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) ::: DataSources: master
2025-07-02 21:41:25.535 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.CouponTemplateMapper.insert - ==> Parameters: 用户福利(String), 1(Integer), 50(BigDecimal), 200(BigDecimal), null, 5(Integer), 0(Integer), 0(Integer), 1(Integer), 5(Integer), 1(Integer), 2025-07-02 21:41:25.515(Timestamp), 2025-07-02 21:41:25.515(Timestamp)
2025-07-02 21:41:25.538 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.CouponTemplateMapper.insert - <==    Updates: 1
2025-07-02 21:41:25.578 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 21:41:25.580 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 21:41:25.581 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:25.581 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:41:25.583 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 21:41:25.585 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 1
2025-07-02 21:41:35.617 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 21:41:35.618 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:35.618 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 21:41:35.619 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 21:41:35.620 [http-nio-8080-exec-3] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 21:41:35.620 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 21:41:35.620 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 21:41:35.620 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 21:41:35.620 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:35.620 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 21:41:35.620 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:35.620 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:41:35.620 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 21:41:35.620 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:35.622 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 21:41:35.622 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 21:41:35.622 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 21:41:35.622 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:35.623 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 21:41:35.622 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:41:35.623 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:35.623 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:41:35.622 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 21:41:35.622 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 21:41:35.623 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 21:41:35.623 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:35.624 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 21:41:35.624 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:41:35.624 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 21:41:35.626 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 21:41:35.627 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:41:35.627 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:35.627 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:41:35.628 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 21:41:35.629 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 21:41:35.629 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:41:35.630 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 21:41:35.630 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:41:35.632 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:41:35.632 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:41:35.632 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:35.632 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:35.632 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:41:35.632 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:41:35.634 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:41:35.634 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:41:35.635 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:41:35.635 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 21:41:35.635 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:41:35.635 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:41:35.635 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:35.635 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:35.635 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:41:35.635 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:41:35.636 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:41:35.636 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 21:41:35.636 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 21:41:35.637 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 21:41:35.637 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:41:35.637 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:41:35.637 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:35.637 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:41:35.638 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 21:41:35.638 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:41:35.638 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:41:35.639 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:41:35.639 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:41:35.639 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:41:35.639 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:35.639 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:35.639 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:41:35.639 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:41:35.639 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 21:41:35.639 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 21:41:35.642 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:41:35.642 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:41:35.642 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:41:35.642 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:41:35.642 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:35.642 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:35.642 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:41:35.642 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:41:35.643 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 21:41:35.643 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 21:41:35.645 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:41:35.648 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:41:35.649 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:41:35.650 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:35.650 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:41:35.650 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 21:41:35.651 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:41:35.652 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:41:35.652 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:35.652 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:41:35.653 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 21:41:35.654 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:41:41.118 [http-nio-8080-exec-9] INFO  com.huang.store.controller.UserController - 验证账号是否已注册: a123456@example.com
2025-07-02 21:41:41.118 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:41:41.118 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:41.118 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:41:41.118 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: a123456@example.com(String)
2025-07-02 21:41:41.118 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:41:41.118 [http-nio-8080-exec-9] WARN  com.huang.store.controller.UserController - 账号已被注册: a123456@example.com
2025-07-02 21:41:41.134 [http-nio-8080-exec-10] INFO  com.huang.store.controller.UserController - 验证账号是否已注册: a123456@example.com
2025-07-02 21:41:41.135 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:41:41.135 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:41.135 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:41:41.136 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: a123456@example.com(String)
2025-07-02 21:41:41.138 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:41:41.138 [http-nio-8080-exec-10] WARN  com.huang.store.controller.UserController - 账号已被注册: a123456@example.com
2025-07-02 21:41:42.705 [http-nio-8080-exec-6] INFO  com.huang.store.controller.UserController - 验证账号是否已注册: b123456@example.com
2025-07-02 21:41:42.705 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:41:42.705 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:42.705 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:41:42.705 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: b123456@example.com(String)
2025-07-02 21:41:42.705 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 0
2025-07-02 21:41:42.705 [http-nio-8080-exec-6] INFO  com.huang.store.controller.UserController - 账号可以注册: b123456@example.com
2025-07-02 21:41:42.718 [http-nio-8080-exec-5] INFO  com.huang.store.controller.UserController - 验证账号是否已注册: b123456@example.com
2025-07-02 21:41:42.719 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:41:42.719 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:42.719 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:41:42.719 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: b123456@example.com(String)
2025-07-02 21:41:42.720 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 0
2025-07-02 21:41:42.720 [http-nio-8080-exec-5] INFO  com.huang.store.controller.UserController - 账号可以注册: b123456@example.com
2025-07-02 21:41:46.752 [http-nio-8080-exec-3] INFO  com.huang.store.controller.UserController - 验证账号是否已注册: b123456@example.com
2025-07-02 21:41:46.752 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:41:46.752 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:46.752 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:41:46.752 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: b123456@example.com(String)
2025-07-02 21:41:46.763 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 0
2025-07-02 21:41:46.764 [http-nio-8080-exec-3] INFO  com.huang.store.controller.UserController - 账号可以注册: b123456@example.com
2025-07-02 21:41:46.777 [http-nio-8080-exec-4] INFO  com.huang.store.controller.UserController - 开始用户注册: b123456@example.com
2025-07-02 21:41:46.777 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:41:46.777 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:46.777 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:41:46.777 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: b123456@example.com(String)
2025-07-02 21:41:46.778 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 0
2025-07-02 21:41:46.850 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.addUser - ==>  Preparing: insert into user(account,password,name,gender,imgUrl,info,manage,enable,registerTime) values(?,?,?,?,?,?,?,?,?)
2025-07-02 21:41:46.850 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:46.850 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: insert into user(account,password,name,gender,imgUrl,info,manage,enable,registerTime)
         values(?,?,?,?,?,?,?,?,?) ::: DataSources: master
2025-07-02 21:41:46.850 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.addUser - ==> Parameters: b123456@example.com(String), $2a$10$RCK/GIweBYyfXlfynl3oquMPK1l7lgrsN9YTjUqNw6.zJwNFFD6N.(String), null, null, null, null, false(Boolean), true(Boolean), 2025-07-02 21:41:46.85(Timestamp)
2025-07-02 21:41:46.850 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.addUser - <==    Updates: 1
2025-07-02 21:41:46.850 [http-nio-8080-exec-4] INFO  com.huang.store.controller.UserController - 用户注册成功: b123456@example.com
2025-07-02 21:41:52.159 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:41:52.160 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:52.160 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:41:52.160 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: b123456@example.com(String)
2025-07-02 21:41:52.162 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:41:52.162 [http-nio-8080-exec-7] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:b123456@example.com    数据库密码:$2a$10$RCK/GIweBYyfXlfynl3oquMPK1l7lgrsN9YTjUqNw6.zJwNFFD6N.
2025-07-02 21:41:52.235 [http-nio-8080-exec-7] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=b123456@example.com, password=$2a$10$RCK/GIweBYyfXlfynl3oquMPK1l7lgrsN9YTjUqNw6.zJwNFFD6N., enabled=true, roles=[ROLE_USER]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=DB02438FFFBE1B9899E075FC7FC6311B], Granted Authorities=[ROLE_USER]]
2025-07-02 21:41:52.235 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:41:52.235 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:52.235 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:41:52.235 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: b123456@example.com(String)
2025-07-02 21:41:52.235 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:41:53.293 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:41:53.293 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 21:41:53.293 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:53.293 [http-nio-8080-exec-10] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 21:41:53.293 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 21:41:53.293 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:53.293 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 21:41:53.293 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 21:41:53.293 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:41:53.293 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:53.293 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 21:41:53.293 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 21:41:53.293 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:53.293 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:53.294 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 21:41:53.294 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:53.294 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:41:53.294 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 21:41:53.294 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 21:41:53.294 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 21:41:53.294 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:41:53.294 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:41:53.294 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 21:41:53.295 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 21:41:53.295 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 21:41:53.296 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:41:53.296 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:41:53.296 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:53.296 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 21:41:53.296 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:53.302 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:41:53.296 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 21:41:53.299 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 21:41:53.301 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:41:53.302 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:41:53.303 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:41:53.303 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:41:53.303 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:53.303 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 21:41:53.303 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 21:41:53.303 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:41:53.303 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:53.303 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:41:53.303 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:41:53.304 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:41:53.304 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:41:53.304 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 21:41:53.304 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 21:41:53.306 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:41:53.306 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:41:53.306 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:41:53.306 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 21:41:53.307 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:53.307 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:53.307 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:41:53.307 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 21:41:53.308 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:41:53.308 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 21:41:53.308 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 21:41:53.308 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:41:53.310 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:53.310 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:41:53.310 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:41:53.311 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 21:41:53.311 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:41:53.313 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:53.313 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:41:53.313 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:41:53.313 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 21:41:53.319 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:41:53.320 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:53.320 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:41:53.320 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:41:53.320 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 21:41:53.321 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:41:53.321 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:53.321 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:41:53.321 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 21:41:53.321 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 21:41:53.321 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:41:53.323 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:41:53.323 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:53.323 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:41:53.323 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:41:53.323 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 21:41:53.325 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:41:53.326 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:41:53.326 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:53.326 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:41:53.326 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 21:41:53.327 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:41:53.328 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:41:53.328 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:53.328 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:41:53.329 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 21:41:53.333 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:41:54.733 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:41:54.733 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:54.733 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:41:54.733 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: b123456@example.com(String)
2025-07-02 21:41:54.734 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:41:56.675 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:41:56.675 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:41:56.675 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:41:56.675 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:41:56.675 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:56.675 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:56.676 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:41:56.675 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:41:56.677 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:41:56.678 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:41:56.678 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:41:56.679 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:41:56.704 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:41:56.704 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:41:56.705 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:56.705 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:41:56.706 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:41:56.708 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:41:59.413 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:41:59.413 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:41:59.414 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:59.414 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:41:59.414 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:41:59.415 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:41:59.415 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:59.415 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:41:59.415 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:41:59.415 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:41:59.416 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:41:59.416 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:41:59.438 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:41:59.439 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:41:59.439 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:41:59.439 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:41:59.440 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:41:59.441 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:42:00.346 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:42:00.347 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:42:00.347 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:00.347 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:42:00.349 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:42:00.350 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:42:01.406 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:42:01.406 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:42:01.406 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:01.407 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:42:01.407 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:42:01.409 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:42:01.422 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:42:01.423 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:42:01.423 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:01.423 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:42:01.423 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:42:01.424 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:42:03.394 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户领取优惠券: b123456@example.com -> 6
2025-07-02 21:42:03.395 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==>  Preparing: SELECT * FROM coupon_template WHERE id = ?
2025-07-02 21:42:03.395 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:03.395 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE id = ? ::: DataSources: slave
2025-07-02 21:42:03.396 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==> Parameters: 6(Integer)
2025-07-02 21:42:03.397 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - <==      Total: 1
2025-07-02 21:42:03.398 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - ==>  Preparing: SELECT (total_quantity - received_quantity) > 0 FROM coupon_template WHERE id = ?
2025-07-02 21:42:03.398 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:03.398 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT (total_quantity - received_quantity) > 0 FROM coupon_template WHERE id = ? ::: DataSources: slave
2025-07-02 21:42:03.402 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - ==> Parameters: 6(Integer)
2025-07-02 21:42:03.402 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.CouponTemplateMapper.hasStock - <==      Total: 1
2025-07-02 21:42:03.404 [http-nio-8080-exec-5] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - ==>  Preparing: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND account = ?
2025-07-02 21:42:03.404 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:03.404 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND account = ? ::: DataSources: slave
2025-07-02 21:42:03.405 [http-nio-8080-exec-5] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - ==> Parameters: 6(Integer), b123456@example.com(String)
2025-07-02 21:42:03.405 [http-nio-8080-exec-5] DEBUG c.h.s.m.CouponTemplateMapper.getUserReceivedCount - <==      Total: 1
2025-07-02 21:42:03.407 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserCouponMapper.insert - ==>  Preparing: INSERT INTO user_coupon (coupon_template_id, account, coupon_code, status, receive_time, expire_time, discount_amount, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-02 21:42:03.408 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:03.408 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: INSERT INTO user_coupon (coupon_template_id, account, coupon_code, status, receive_time, expire_time, discount_amount, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) ::: DataSources: master
2025-07-02 21:42:03.409 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserCouponMapper.insert - ==> Parameters: 6(Integer), b123456@example.com(String), FULL20250702006607246(String), 1(Integer), 2025-07-02 21:42:03.407(Timestamp), 2025-07-07 21:42:03.407(Timestamp), 0(BigDecimal), 2025-07-02 21:42:03.407(Timestamp), 2025-07-02 21:42:03.407(Timestamp)
2025-07-02 21:42:03.410 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserCouponMapper.insert - <==    Updates: 1
2025-07-02 21:42:03.411 [http-nio-8080-exec-5] DEBUG c.h.s.m.C.incrementReceivedQuantity - ==>  Preparing: UPDATE coupon_template SET received_quantity = received_quantity + 1, update_time = NOW() WHERE id = ?
2025-07-02 21:42:03.411 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:03.411 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: UPDATE coupon_template SET received_quantity = received_quantity + 1, update_time = NOW() WHERE id = ? ::: DataSources: master
2025-07-02 21:42:03.414 [http-nio-8080-exec-5] DEBUG c.h.s.m.C.incrementReceivedQuantity - ==> Parameters: 6(Integer)
2025-07-02 21:42:03.416 [http-nio-8080-exec-5] DEBUG c.h.s.m.C.incrementReceivedQuantity - <==    Updates: 1
2025-07-02 21:42:03.432 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:42:03.432 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:42:03.432 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:42:03.432 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:42:03.432 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:03.432 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:03.432 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:42:03.432 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:42:03.433 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:42:03.433 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:42:03.434 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:42:03.435 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 21:42:03.444 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:42:03.444 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:42:03.445 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:03.445 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:42:03.445 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:42:03.447 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 21:42:04.592 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:42:04.592 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:42:04.592 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:04.592 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:42:04.593 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:42:04.596 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 21:42:10.174 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 管理员删除优惠券模板: 6
2025-07-02 21:42:10.174 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==>  Preparing: SELECT * FROM coupon_template WHERE id = ?
2025-07-02 21:42:10.175 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:10.175 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE id = ? ::: DataSources: slave
2025-07-02 21:42:10.176 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==> Parameters: 6(Integer)
2025-07-02 21:42:10.177 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - <==      Total: 1
2025-07-02 21:42:10.178 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.countUserCoupons - ==>  Preparing: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ?
2025-07-02 21:42:10.178 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:10.178 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? ::: DataSources: slave
2025-07-02 21:42:10.179 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.countUserCoupons - ==> Parameters: 6(Integer)
2025-07-02 21:42:10.181 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.countUserCoupons - <==      Total: 1
2025-07-02 21:42:10.186 [http-nio-8080-exec-2] DEBUG c.h.s.m.C.countUnusedUserCoupons - ==>  Preparing: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND status = 1
2025-07-02 21:42:10.186 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:10.186 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND status = 1 ::: DataSources: slave
2025-07-02 21:42:10.187 [http-nio-8080-exec-2] DEBUG c.h.s.m.C.countUnusedUserCoupons - ==> Parameters: 6(Integer)
2025-07-02 21:42:10.187 [http-nio-8080-exec-2] DEBUG c.h.s.m.C.countUnusedUserCoupons - <==      Total: 1
2025-07-02 21:42:10.187 [http-nio-8080-exec-2] DEBUG c.h.s.m.CouponTemplateMapper.countValidUserCoupons - ==>  Preparing: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND expire_time > NOW()
2025-07-02 21:42:10.187 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:10.187 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND expire_time > NOW() ::: DataSources: slave
2025-07-02 21:42:10.187 [http-nio-8080-exec-2] DEBUG c.h.s.m.CouponTemplateMapper.countValidUserCoupons - ==> Parameters: 6(Integer)
2025-07-02 21:42:10.187 [http-nio-8080-exec-2] DEBUG c.h.s.m.CouponTemplateMapper.countValidUserCoupons - <==      Total: 1
2025-07-02 21:42:10.203 [http-nio-8080-exec-2] ERROR com.huang.store.controller.CouponController - 删除优惠券模板失败
java.lang.RuntimeException: 无法删除该优惠券模板：还有1张未使用的优惠券，还有1张未过期的优惠券。请使用停用功能或等待所有优惠券使用完毕后再删除。
	at com.huang.store.service.CouponServiceImpl.deleteCouponTemplate(CouponServiceImpl.java:140)
	at com.huang.store.service.CouponServiceImpl$$FastClassBySpringCGLIB$$fe79b59b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.huang.store.service.CouponServiceImpl$$EnhancerBySpringCGLIB$$2703f993.deleteCouponTemplate(<generated>)
	at com.huang.store.controller.CouponController.deleteCouponTemplate(CouponController.java:135)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:561)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-02 21:42:15.794 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 管理员删除优惠券模板: 6
2025-07-02 21:42:15.794 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==>  Preparing: SELECT * FROM coupon_template WHERE id = ?
2025-07-02 21:42:15.794 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:15.794 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE id = ? ::: DataSources: slave
2025-07-02 21:42:15.795 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==> Parameters: 6(Integer)
2025-07-02 21:42:15.797 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - <==      Total: 1
2025-07-02 21:42:15.799 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.countUserCoupons - ==>  Preparing: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ?
2025-07-02 21:42:15.799 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:15.799 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? ::: DataSources: slave
2025-07-02 21:42:15.799 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.countUserCoupons - ==> Parameters: 6(Integer)
2025-07-02 21:42:15.800 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.countUserCoupons - <==      Total: 1
2025-07-02 21:42:15.802 [http-nio-8080-exec-9] DEBUG c.h.s.m.C.countUnusedUserCoupons - ==>  Preparing: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND status = 1
2025-07-02 21:42:15.802 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:15.802 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND status = 1 ::: DataSources: slave
2025-07-02 21:42:15.802 [http-nio-8080-exec-9] DEBUG c.h.s.m.C.countUnusedUserCoupons - ==> Parameters: 6(Integer)
2025-07-02 21:42:15.802 [http-nio-8080-exec-9] DEBUG c.h.s.m.C.countUnusedUserCoupons - <==      Total: 1
2025-07-02 21:42:15.802 [http-nio-8080-exec-9] DEBUG c.h.s.m.CouponTemplateMapper.countValidUserCoupons - ==>  Preparing: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND expire_time > NOW()
2025-07-02 21:42:15.802 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:15.802 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND expire_time > NOW() ::: DataSources: slave
2025-07-02 21:42:15.802 [http-nio-8080-exec-9] DEBUG c.h.s.m.CouponTemplateMapper.countValidUserCoupons - ==> Parameters: 6(Integer)
2025-07-02 21:42:15.802 [http-nio-8080-exec-9] DEBUG c.h.s.m.CouponTemplateMapper.countValidUserCoupons - <==      Total: 1
2025-07-02 21:42:15.802 [http-nio-8080-exec-9] ERROR com.huang.store.controller.CouponController - 删除优惠券模板失败
java.lang.RuntimeException: 无法删除该优惠券模板：还有1张未使用的优惠券，还有1张未过期的优惠券。请使用停用功能或等待所有优惠券使用完毕后再删除。
	at com.huang.store.service.CouponServiceImpl.deleteCouponTemplate(CouponServiceImpl.java:140)
	at com.huang.store.service.CouponServiceImpl$$FastClassBySpringCGLIB$$fe79b59b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.huang.store.service.CouponServiceImpl$$EnhancerBySpringCGLIB$$2703f993.deleteCouponTemplate(<generated>)
	at com.huang.store.controller.CouponController.deleteCouponTemplate(CouponController.java:135)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:561)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-02 21:42:20.800 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 管理员删除优惠券模板: 6
2025-07-02 21:42:20.800 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==>  Preparing: SELECT * FROM coupon_template WHERE id = ?
2025-07-02 21:42:20.800 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:20.800 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE id = ? ::: DataSources: slave
2025-07-02 21:42:20.800 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==> Parameters: 6(Integer)
2025-07-02 21:42:20.800 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - <==      Total: 1
2025-07-02 21:42:20.800 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.countUserCoupons - ==>  Preparing: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ?
2025-07-02 21:42:20.800 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:20.800 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? ::: DataSources: slave
2025-07-02 21:42:20.800 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.countUserCoupons - ==> Parameters: 6(Integer)
2025-07-02 21:42:20.800 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.countUserCoupons - <==      Total: 1
2025-07-02 21:42:20.815 [http-nio-8080-exec-8] DEBUG c.h.s.m.C.countUnusedUserCoupons - ==>  Preparing: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND status = 1
2025-07-02 21:42:20.815 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:20.816 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND status = 1 ::: DataSources: slave
2025-07-02 21:42:20.816 [http-nio-8080-exec-8] DEBUG c.h.s.m.C.countUnusedUserCoupons - ==> Parameters: 6(Integer)
2025-07-02 21:42:20.817 [http-nio-8080-exec-8] DEBUG c.h.s.m.C.countUnusedUserCoupons - <==      Total: 1
2025-07-02 21:42:20.818 [http-nio-8080-exec-8] DEBUG c.h.s.m.CouponTemplateMapper.countValidUserCoupons - ==>  Preparing: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND expire_time > NOW()
2025-07-02 21:42:20.818 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:20.818 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND expire_time > NOW() ::: DataSources: slave
2025-07-02 21:42:20.818 [http-nio-8080-exec-8] DEBUG c.h.s.m.CouponTemplateMapper.countValidUserCoupons - ==> Parameters: 6(Integer)
2025-07-02 21:42:20.823 [http-nio-8080-exec-8] DEBUG c.h.s.m.CouponTemplateMapper.countValidUserCoupons - <==      Total: 1
2025-07-02 21:42:20.824 [http-nio-8080-exec-8] ERROR com.huang.store.controller.CouponController - 删除优惠券模板失败
java.lang.RuntimeException: 无法删除该优惠券模板：还有1张未使用的优惠券，还有1张未过期的优惠券。请使用停用功能或等待所有优惠券使用完毕后再删除。
	at com.huang.store.service.CouponServiceImpl.deleteCouponTemplate(CouponServiceImpl.java:140)
	at com.huang.store.service.CouponServiceImpl$$FastClassBySpringCGLIB$$fe79b59b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.huang.store.service.CouponServiceImpl$$EnhancerBySpringCGLIB$$2703f993.deleteCouponTemplate(<generated>)
	at com.huang.store.controller.CouponController.deleteCouponTemplate(CouponController.java:135)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:561)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.huang.store.security.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-02 21:42:24.288 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 管理员更新优惠券模板状态: 6 -> 0
2025-07-02 21:42:24.288 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.CouponTemplateMapper.updateStatus - ==>  Preparing: UPDATE coupon_template SET status = ?, update_time = NOW() WHERE id = ?
2025-07-02 21:42:24.288 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:24.288 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: UPDATE coupon_template SET status = ?, update_time = NOW() WHERE id = ? ::: DataSources: master
2025-07-02 21:42:24.288 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.CouponTemplateMapper.updateStatus - ==> Parameters: 0(Integer), 6(Integer)
2025-07-02 21:42:24.292 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.CouponTemplateMapper.updateStatus - <==    Updates: 1
2025-07-02 21:42:24.308 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 21:42:24.308 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 21:42:24.308 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:24.308 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:42:24.309 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 21:42:24.309 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 1
2025-07-02 21:42:27.240 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:42:27.240 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:42:27.240 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:27.240 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:42:27.240 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:42:27.240 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 0
2025-07-02 21:42:27.256 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:42:27.257 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:42:27.257 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:27.257 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:42:27.258 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:42:27.259 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 21:42:27.688 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:42:27.688 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:42:27.688 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:27.688 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:42:27.688 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:42:27.688 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 21:42:28.121 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:42:28.121 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:42:28.121 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:28.121 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:42:28.122 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:42:28.123 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 0
2025-07-02 21:42:28.131 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:42:28.132 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:42:28.132 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:28.132 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:42:28.134 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:42:28.134 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 21:42:29.851 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 管理员更新优惠券模板状态: 6 -> 1
2025-07-02 21:42:29.851 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.CouponTemplateMapper.updateStatus - ==>  Preparing: UPDATE coupon_template SET status = ?, update_time = NOW() WHERE id = ?
2025-07-02 21:42:29.851 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:29.851 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: UPDATE coupon_template SET status = ?, update_time = NOW() WHERE id = ? ::: DataSources: master
2025-07-02 21:42:29.865 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.CouponTemplateMapper.updateStatus - ==> Parameters: 1(Integer), 6(Integer)
2025-07-02 21:42:29.868 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.CouponTemplateMapper.updateStatus - <==    Updates: 1
2025-07-02 21:42:29.887 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 21:42:29.887 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 21:42:29.887 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:29.887 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:42:29.894 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 21:42:29.895 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 1
2025-07-02 21:42:36.921 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 21:42:36.921 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:36.921 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 21:42:36.922 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 21:42:36.923 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 21:42:36.924 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 21:42:36.925 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:36.925 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 21:42:36.927 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 21:42:36.927 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 21:42:36.928 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:36.928 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 21:42:36.927 [http-nio-8080-exec-4] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 21:42:36.928 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 21:42:36.927 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:42:36.928 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 21:42:36.928 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 21:42:36.928 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:36.928 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:36.928 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:36.928 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:36.928 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 21:42:36.928 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 21:42:36.928 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:42:36.929 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 21:42:36.929 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:42:36.929 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 21:42:36.929 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 21:42:36.930 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:42:36.931 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 21:42:36.931 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 21:42:36.931 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 21:42:36.933 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:42:36.933 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:42:36.936 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:42:36.939 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:42:36.940 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:42:36.940 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:36.941 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:42:36.940 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:36.941 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:36.941 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:42:36.941 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 21:42:36.941 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:42:36.942 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:42:36.943 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 21:42:36.943 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 21:42:36.943 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:42:36.943 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:42:36.943 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:42:36.944 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:36.944 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:42:36.944 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 21:42:36.944 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:42:36.944 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:42:36.945 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:36.945 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:42:36.945 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:42:36.946 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:42:36.946 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:42:36.947 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:36.947 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 21:42:36.949 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:42:36.951 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 21:42:36.951 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:42:36.952 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:42:36.953 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:36.953 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:42:36.953 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 21:42:36.953 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:42:36.954 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:42:36.954 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:36.954 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:42:36.954 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 21:42:36.954 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:42:36.955 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:42:36.955 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:36.955 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:42:36.955 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:42:36.955 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 21:42:36.956 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:42:36.956 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:36.956 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:42:36.956 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 21:42:36.957 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:42:36.957 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:42:36.957 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:42:36.957 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:36.957 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:42:36.958 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 21:42:36.960 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:42:36.960 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:42:36.962 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:36.962 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:42:36.962 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 21:42:36.964 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:42:52.162 [http-nio-8080-exec-7] INFO  com.huang.store.controller.UserController - 验证账号是否已注册: c123456@example.com
2025-07-02 21:42:52.162 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:42:52.162 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:52.164 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:42:52.164 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: c123456@example.com(String)
2025-07-02 21:42:52.167 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 0
2025-07-02 21:42:52.168 [http-nio-8080-exec-7] INFO  com.huang.store.controller.UserController - 账号可以注册: c123456@example.com
2025-07-02 21:42:52.181 [http-nio-8080-exec-10] INFO  com.huang.store.controller.UserController - 验证账号是否已注册: c123456@example.com
2025-07-02 21:42:52.181 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:42:52.181 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:52.181 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:42:52.181 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: c123456@example.com(String)
2025-07-02 21:42:52.183 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 0
2025-07-02 21:42:52.184 [http-nio-8080-exec-10] INFO  com.huang.store.controller.UserController - 账号可以注册: c123456@example.com
2025-07-02 21:42:58.802 [http-nio-8080-exec-2] INFO  com.huang.store.controller.UserController - 验证账号是否已注册: c123456@example.com
2025-07-02 21:42:58.802 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:42:58.802 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:58.802 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:42:58.802 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: c123456@example.com(String)
2025-07-02 21:42:58.802 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 0
2025-07-02 21:42:58.802 [http-nio-8080-exec-2] INFO  com.huang.store.controller.UserController - 账号可以注册: c123456@example.com
2025-07-02 21:42:58.821 [http-nio-8080-exec-9] INFO  com.huang.store.controller.UserController - 开始用户注册: c123456@example.com
2025-07-02 21:42:58.822 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:42:58.822 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:58.822 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:42:58.822 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: c123456@example.com(String)
2025-07-02 21:42:58.824 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 0
2025-07-02 21:42:58.892 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.addUser - ==>  Preparing: insert into user(account,password,name,gender,imgUrl,info,manage,enable,registerTime) values(?,?,?,?,?,?,?,?,?)
2025-07-02 21:42:58.892 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:42:58.892 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: insert into user(account,password,name,gender,imgUrl,info,manage,enable,registerTime)
         values(?,?,?,?,?,?,?,?,?) ::: DataSources: master
2025-07-02 21:42:58.892 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.addUser - ==> Parameters: c123456@example.com(String), $2a$10$aV3xeP.2wgkwLBEUBWplpuGVjIubDmTytO1EwE4qqnbFzPv0yxDpS(String), null, null, null, null, false(Boolean), true(Boolean), 2025-07-02 21:42:58.891(Timestamp)
2025-07-02 21:42:58.901 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.addUser - <==    Updates: 1
2025-07-02 21:42:58.901 [http-nio-8080-exec-9] INFO  com.huang.store.controller.UserController - 用户注册成功: c123456@example.com
2025-07-02 21:43:02.930 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:43:02.930 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:02.930 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:43:02.930 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: b123456@example.com(String)
2025-07-02 21:43:02.932 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:43:02.935 [http-nio-8080-exec-4] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:b123456@example.com    数据库密码:$2a$10$RCK/GIweBYyfXlfynl3oquMPK1l7lgrsN9YTjUqNw6.zJwNFFD6N.
2025-07-02 21:43:03.007 [http-nio-8080-exec-4] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=b123456@example.com, password=$2a$10$RCK/GIweBYyfXlfynl3oquMPK1l7lgrsN9YTjUqNw6.zJwNFFD6N., enabled=true, roles=[ROLE_USER]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=DB02438FFFBE1B9899E075FC7FC6311B], Granted Authorities=[ROLE_USER]]
2025-07-02 21:43:03.008 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:43:03.008 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:03.008 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:43:03.009 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: b123456@example.com(String)
2025-07-02 21:43:03.010 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:43:04.056 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 21:43:04.056 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 21:43:04.057 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:04.057 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 21:43:04.056 [http-nio-8080-exec-6] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 21:43:04.056 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:43:04.056 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 21:43:04.057 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:04.057 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:43:04.057 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 21:43:04.057 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:04.057 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 21:43:04.057 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 21:43:04.057 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 21:43:04.057 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:04.058 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:04.057 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:43:04.058 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:04.058 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:43:04.058 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 21:43:04.058 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 21:43:04.058 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 21:43:04.059 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:43:04.060 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 21:43:04.060 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 21:43:04.060 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:43:04.060 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:04.060 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:43:04.059 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 21:43:04.060 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:43:04.060 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 21:43:04.060 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:43:04.060 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:43:04.060 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:04.061 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:43:04.061 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:43:04.061 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:43:04.061 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:04.061 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:43:04.061 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:43:04.061 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 21:43:04.061 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 21:43:04.061 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 21:43:04.061 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:43:04.063 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 21:43:04.063 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:43:04.063 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:43:04.063 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:04.063 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 21:43:04.063 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 21:43:04.063 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:04.063 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:43:04.063 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:43:04.063 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:43:04.063 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:04.063 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 21:43:04.063 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:43:04.063 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 21:43:04.063 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 21:43:04.063 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:43:04.066 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 21:43:04.066 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:04.069 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:43:04.070 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:43:04.071 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:43:04.071 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:04.071 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:43:04.071 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 21:43:04.072 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 21:43:04.073 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:43:04.073 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:43:04.074 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:43:04.074 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:43:04.074 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:04.074 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:04.074 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:43:04.074 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:43:04.074 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 21:43:04.074 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 21:43:04.076 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:43:04.077 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:43:04.077 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:43:04.077 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:04.077 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:43:04.077 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:43:04.077 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 21:43:04.077 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:04.077 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:43:04.077 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 21:43:04.079 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:43:04.079 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:43:04.080 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:43:04.080 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:04.080 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:43:04.080 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 21:43:04.082 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:43:09.705 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 21:43:09.705 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:09.705 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 21:43:09.706 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 21:43:09.707 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 21:43:09.707 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 21:43:09.708 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:09.708 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 21:43:09.708 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 21:43:09.708 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 21:43:09.708 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:43:09.708 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 21:43:09.709 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 21:43:09.709 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:09.709 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:09.709 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:09.709 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:09.709 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 21:43:09.709 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:43:09.709 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:43:09.709 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 21:43:09.709 [http-nio-8080-exec-4] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 21:43:09.710 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:43:09.710 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:43:09.710 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 21:43:09.710 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 21:43:09.710 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 21:43:09.710 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:09.710 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 21:43:09.710 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 21:43:09.710 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:43:09.711 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 21:43:09.711 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:43:09.711 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 21:43:09.711 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 21:43:09.711 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 21:43:09.711 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:09.711 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:43:09.711 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:43:09.711 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:43:09.712 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:43:09.712 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:09.712 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:09.712 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 21:43:09.712 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:09.712 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:43:09.712 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:43:09.712 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:43:09.712 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:43:09.712 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 21:43:09.712 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:43:09.712 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:43:09.714 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:43:09.714 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 21:43:09.714 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:43:09.714 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:43:09.714 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:43:09.714 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:09.714 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:09.714 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:43:09.714 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:43:09.714 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 21:43:09.714 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 21:43:09.715 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:43:09.716 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:43:09.715 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:43:09.716 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:43:09.716 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:09.716 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:43:09.717 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:43:09.717 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:09.718 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:43:09.718 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 21:43:09.719 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 21:43:09.721 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:43:09.721 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:43:09.721 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:43:09.721 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:43:09.721 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:09.721 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:09.721 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:43:09.721 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:43:09.722 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 21:43:09.722 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 21:43:09.723 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:43:09.723 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:43:09.723 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:43:09.724 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:09.724 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:43:09.724 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 21:43:09.725 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:43:09.726 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:43:09.726 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:09.726 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:43:09.726 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 21:43:09.728 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:43:14.640 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:43:14.640 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:14.640 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:43:14.640 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: c123456@example.com(String)
2025-07-02 21:43:14.640 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:43:14.650 [http-nio-8080-exec-3] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:c123456@example.com    数据库密码:$2a$10$aV3xeP.2wgkwLBEUBWplpuGVjIubDmTytO1EwE4qqnbFzPv0yxDpS
2025-07-02 21:43:14.719 [http-nio-8080-exec-3] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=c123456@example.com, password=$2a$10$aV3xeP.2wgkwLBEUBWplpuGVjIubDmTytO1EwE4qqnbFzPv0yxDpS, enabled=true, roles=[ROLE_USER]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=DB02438FFFBE1B9899E075FC7FC6311B], Granted Authorities=[ROLE_USER]]
2025-07-02 21:43:14.721 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:43:14.722 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:14.722 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:43:14.722 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: c123456@example.com(String)
2025-07-02 21:43:14.724 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:43:15.785 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 21:43:15.790 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 21:43:15.785 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 21:43:15.788 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 21:43:15.790 [http-nio-8080-exec-4] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 21:43:15.790 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:15.790 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:15.790 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:15.790 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:15.790 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:43:15.790 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 21:43:15.790 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 21:43:15.790 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:43:15.790 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 21:43:15.790 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 21:43:15.790 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:15.790 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 21:43:15.790 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:15.790 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 21:43:15.790 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:43:15.790 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 21:43:15.790 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:43:15.790 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 21:43:15.794 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 21:43:15.794 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:43:15.794 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 21:43:15.794 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 21:43:15.794 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:43:15.794 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:43:15.794 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 21:43:15.794 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 21:43:15.794 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:15.794 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 21:43:15.796 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:43:15.796 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:43:15.796 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 21:43:15.796 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:43:15.796 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:15.796 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:15.796 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:43:15.796 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 21:43:15.796 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:15.796 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 21:43:15.796 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:43:15.796 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:15.796 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:43:15.796 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 21:43:15.796 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:43:15.796 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:43:15.796 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:43:15.796 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:43:15.797 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 21:43:15.797 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:43:15.797 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:43:15.797 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:43:15.797 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:43:15.797 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:15.797 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:43:15.797 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:43:15.797 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 21:43:15.800 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:15.803 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:43:15.803 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 21:43:15.804 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:43:15.804 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:43:15.805 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:43:15.805 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:43:15.805 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:15.805 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:15.805 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:43:15.805 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:43:15.805 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 21:43:15.806 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 21:43:15.806 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 21:43:15.807 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:43:15.807 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:43:15.808 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:43:15.808 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:15.808 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:43:15.809 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:43:15.809 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:15.809 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:43:15.809 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 21:43:15.809 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 21:43:15.810 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:43:15.810 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:43:15.811 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:43:15.811 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:15.811 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:43:15.811 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 21:43:15.812 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:43:15.814 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:43:15.814 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:15.814 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:43:15.815 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 21:43:15.816 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:43:17.003 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:43:17.003 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:17.004 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:43:17.004 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: c123456@example.com(String)
2025-07-02 21:43:17.005 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:43:18.674 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:43:18.674 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:43:18.674 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:43:18.674 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:43:18.674 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:18.674 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:18.674 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:43:18.674 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:43:18.675 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:43:18.675 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:43:18.676 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:43:18.676 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:43:18.689 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:43:18.689 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:43:18.690 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:18.690 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:43:18.691 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:43:18.691 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:43:21.289 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:43:21.289 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:43:21.289 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:21.289 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:43:21.289 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:43:21.289 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:43:22.235 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:43:22.236 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:43:22.237 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:22.237 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:43:22.237 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:43:22.238 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:43:22.246 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:43:22.247 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:43:22.247 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:22.247 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:43:22.247 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:43:22.248 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:43:24.712 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:43:24.712 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:43:24.712 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:24.712 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:43:24.712 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:43:24.712 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:43:25.492 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:43:25.492 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:43:25.493 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:25.493 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:43:25.493 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:43:25.494 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:43:25.502 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:43:25.502 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:43:25.502 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:25.502 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:43:25.502 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:43:25.502 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:43:30.273 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:43:30.273 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:43:30.273 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:30.273 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:43:30.273 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:43:30.273 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:43:31.914 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:43:31.915 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:43:31.915 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:31.915 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:43:31.916 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:43:31.918 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:43:32.242 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:43:32.243 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:43:32.243 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:32.243 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:43:32.244 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:43:32.246 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:43:32.252 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:43:32.252 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:43:32.252 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:32.252 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:43:32.252 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:43:32.252 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:43:33.979 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:43:33.984 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:43:33.984 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:33.984 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:43:33.985 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:43:33.986 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:43:35.724 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:43:35.724 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:43:35.725 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:43:35.726 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:35.726 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:43:35.726 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:43:35.726 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:35.726 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:43:35.726 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:43:35.726 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:43:35.728 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:43:35.728 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:43:35.743 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:43:35.744 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:43:35.744 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:35.744 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:43:35.745 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:43:35.746 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:43:36.753 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:43:36.753 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:43:36.753 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:36.753 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:43:36.753 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:43:36.753 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:43:37.360 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:43:37.361 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:43:37.361 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:37.361 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:43:37.362 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:43:37.365 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:43:37.369 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:43:37.383 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:43:37.384 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:37.384 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:43:37.385 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:43:37.387 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:43:42.259 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:43:42.259 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:43:42.259 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:42.260 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:43:42.261 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:43:42.262 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:43:42.721 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:43:42.722 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:43:42.722 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:42.722 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:43:42.723 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:43:42.724 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:43:42.733 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:43:42.733 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:43:42.733 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:42.733 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:43:42.734 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:43:42.736 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:43:44.573 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:43:44.574 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:43:44.574 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:44.574 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:43:44.575 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:43:44.575 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:43:44.886 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:43:44.886 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:43:44.886 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:44.886 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:43:44.886 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:43:44.886 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:43:44.886 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:43:44.886 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:43:44.886 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:44.886 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:43:44.886 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:43:44.902 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:43:45.307 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:43:45.308 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:43:45.308 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:45.308 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:43:45.308 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:43:45.309 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:43:45.992 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:43:45.993 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:43:45.993 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:45.993 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:43:45.994 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:43:45.995 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:43:46.007 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:43:46.007 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:43:46.007 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:46.007 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:43:46.007 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:43:46.007 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:43:47.214 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:43:47.214 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:43:47.214 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:43:47.214 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:43:47.214 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:47.214 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:47.214 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:43:47.214 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:43:47.214 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:43:47.214 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:43:47.214 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:43:47.214 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:43:47.232 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:43:47.232 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:43:47.232 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:47.232 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:43:47.232 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:43:47.232 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:43:47.816 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:43:47.816 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:43:47.819 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:43:47.819 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:43:47.820 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:47.820 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:47.820 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:43:47.820 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:43:47.822 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:43:47.822 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:43:47.824 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:43:47.824 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:43:47.834 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:43:47.836 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:43:47.838 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:47.838 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:43:47.838 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:43:47.838 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:43:49.605 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:43:49.606 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:43:49.606 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:49.606 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:43:49.606 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:43:49.607 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:43:49.608 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:43:49.610 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:49.611 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:43:49.611 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:43:49.613 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:43:49.614 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:43:49.773 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:43:49.774 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:43:49.774 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:49.774 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:43:49.775 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:43:49.776 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:43:50.112 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:43:50.112 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:43:50.112 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:43:50.112 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:43:50.112 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:50.112 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:50.112 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:43:50.112 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:43:50.112 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:43:50.112 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:43:50.112 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:43:50.112 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:43:50.128 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:43:50.129 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:43:50.129 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:50.129 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:43:50.129 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:43:50.130 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:43:52.090 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:43:52.090 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:43:52.091 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:43:52.091 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:43:52.091 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:43:52.093 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:44:02.261 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 21:44:02.262 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:02.263 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 21:44:02.263 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 21:44:02.263 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 21:44:02.264 [http-nio-8080-exec-8] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 21:44:02.264 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:44:02.264 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:02.264 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:02.264 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 21:44:02.264 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 21:44:02.265 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:02.265 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 21:44:02.265 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:44:02.265 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 21:44:02.265 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:02.265 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:02.265 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:44:02.265 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 21:44:02.265 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:44:02.265 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 21:44:02.267 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 21:44:02.265 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 21:44:02.267 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 21:44:02.267 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 21:44:02.268 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 21:44:02.268 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:44:02.268 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:44:02.268 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 21:44:02.269 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:44:02.269 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:02.271 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 21:44:02.269 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 21:44:02.271 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:44:02.270 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:02.271 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:02.271 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:44:02.271 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:44:02.272 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:44:02.272 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 21:44:02.272 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 21:44:02.272 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 21:44:02.272 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:02.272 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:44:02.272 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:44:02.272 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:44:02.272 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:02.272 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:44:02.272 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:44:02.273 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:44:02.273 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:44:02.273 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:44:02.273 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 21:44:02.273 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:44:02.274 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:02.274 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:44:02.275 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 21:44:02.275 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:44:02.275 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:44:02.277 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 21:44:02.278 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:02.278 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:44:02.280 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 21:44:02.280 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:44:02.280 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 21:44:02.281 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:44:02.281 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:44:02.281 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:02.282 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:44:02.282 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:44:02.282 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:02.282 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 21:44:02.283 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:44:02.283 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 21:44:02.285 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:44:02.285 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:44:02.286 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:44:02.286 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:44:02.286 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:02.286 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:02.286 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:44:02.286 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:44:02.286 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 21:44:02.287 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 21:44:02.287 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:44:02.288 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:44:02.288 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:02.288 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:44:02.288 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 21:44:02.288 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:44:02.289 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:44:02.290 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:44:02.290 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:02.290 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:44:02.290 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 21:44:02.291 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:44:08.908 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 21:44:08.908 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:08.908 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 21:44:08.909 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 21:44:08.910 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 21:44:08.910 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 21:44:08.910 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:08.910 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 21:44:08.910 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 21:44:08.914 [http-nio-8080-exec-3] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 21:44:08.914 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 21:44:08.914 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 21:44:08.914 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:44:08.914 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:08.914 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:44:08.914 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 21:44:08.914 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:08.914 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:08.914 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 21:44:08.914 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:08.916 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:08.914 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:44:08.914 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 21:44:08.914 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 21:44:08.916 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 21:44:08.916 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 21:44:08.916 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:44:08.916 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 21:44:08.916 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 21:44:08.916 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:44:08.917 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 21:44:08.917 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:44:08.918 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:44:08.918 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 21:44:08.918 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:08.918 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:44:08.918 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:44:08.918 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:44:08.918 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:08.919 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:44:08.919 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:44:08.919 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:44:08.920 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 21:44:08.922 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 21:44:08.922 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:44:08.923 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:44:08.923 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:44:08.923 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:08.924 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:08.924 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:44:08.924 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:44:08.924 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:44:08.924 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 21:44:08.924 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 21:44:08.924 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:44:08.925 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:44:08.925 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:44:08.925 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:44:08.925 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:08.925 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:08.925 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:44:08.925 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:44:08.925 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 21:44:08.925 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 21:44:08.926 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:44:08.926 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 21:44:08.926 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:44:08.926 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:44:08.926 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:08.926 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:08.926 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:44:08.926 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:44:08.926 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 21:44:08.926 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 21:44:08.928 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:44:08.928 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:44:08.928 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:44:08.928 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:44:08.928 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:08.928 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:44:08.928 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:08.928 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:44:08.928 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 21:44:08.929 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 21:44:08.929 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:44:08.930 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:44:08.930 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:08.930 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:44:08.930 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 21:44:08.930 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:44:08.930 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:44:08.931 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:44:08.931 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:08.931 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:44:08.931 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 21:44:08.932 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:44:14.874 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:44:14.874 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:14.874 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:44:14.874 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: b123456@example.com(String)
2025-07-02 21:44:14.874 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:44:14.874 [http-nio-8080-exec-9] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:b123456@example.com    数据库密码:$2a$10$RCK/GIweBYyfXlfynl3oquMPK1l7lgrsN9YTjUqNw6.zJwNFFD6N.
2025-07-02 21:44:14.938 [http-nio-8080-exec-9] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=b123456@example.com, password=$2a$10$RCK/GIweBYyfXlfynl3oquMPK1l7lgrsN9YTjUqNw6.zJwNFFD6N., enabled=true, roles=[ROLE_USER]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=DB02438FFFBE1B9899E075FC7FC6311B], Granted Authorities=[ROLE_USER]]
2025-07-02 21:44:14.938 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:44:14.938 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:14.938 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:44:14.938 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: b123456@example.com(String)
2025-07-02 21:44:14.953 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:44:16.006 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:44:16.006 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 21:44:16.006 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 21:44:16.007 [http-nio-8080-exec-3] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 21:44:16.007 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 21:44:16.007 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 21:44:16.007 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:16.007 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:16.007 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 21:44:16.007 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:16.007 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 21:44:16.007 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 21:44:16.007 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:16.007 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 21:44:16.007 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:16.008 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:44:16.007 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:44:16.008 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 21:44:16.007 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 21:44:16.007 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:16.008 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:44:16.008 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:44:16.010 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 21:44:16.018 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 21:44:16.017 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 21:44:16.018 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:44:16.018 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 21:44:16.018 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 21:44:16.018 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:16.022 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 21:44:16.022 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 21:44:16.022 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:44:16.023 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 21:44:16.023 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:44:16.023 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:16.024 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:44:16.024 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:44:16.026 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:44:16.026 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 21:44:16.026 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:44:16.026 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:16.026 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:16.026 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 21:44:16.026 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 21:44:16.028 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:16.028 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:44:16.028 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:44:16.028 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:44:16.028 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:44:16.028 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:44:16.028 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:44:16.028 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:16.028 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:44:16.028 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 21:44:16.029 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 21:44:16.029 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:44:16.030 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:44:16.030 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:44:16.030 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 21:44:16.030 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:44:16.030 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:44:16.030 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:16.030 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:16.030 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:44:16.030 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:44:16.030 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 21:44:16.030 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 21:44:16.032 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:44:16.032 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 21:44:16.032 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:44:16.032 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:44:16.032 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:44:16.032 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:16.032 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:44:16.032 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:44:16.032 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:16.032 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:44:16.032 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 21:44:16.032 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 21:44:16.032 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:44:16.032 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:44:16.032 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:44:16.032 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:44:16.032 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:16.032 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:16.032 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:44:16.032 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:44:16.032 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 21:44:16.032 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 21:44:16.037 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:44:16.038 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:44:16.038 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:44:16.038 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:16.039 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:44:16.039 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 21:44:16.040 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:44:17.080 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:44:17.080 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:17.080 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:44:17.080 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: b123456@example.com(String)
2025-07-02 21:44:17.081 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:44:19.148 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:44:19.148 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:44:19.148 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:44:19.148 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:44:19.148 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:19.148 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:19.148 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:44:19.148 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:44:19.149 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:44:19.149 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:44:19.150 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:44:19.150 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 21:44:19.160 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:44:19.160 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:44:19.160 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:19.160 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:44:19.160 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:44:19.160 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 21:44:22.033 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:44:22.033 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:44:22.033 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:22.033 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:44:22.035 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:44:22.036 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 21:44:23.674 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:44:23.674 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:44:23.674 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:23.674 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:44:23.675 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:44:23.676 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:44:23.683 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:44:23.684 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:44:23.684 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:23.684 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:44:23.684 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:44:23.685 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 21:44:24.805 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:44:24.805 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:44:24.805 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:24.805 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:44:24.805 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:44:24.805 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 21:44:33.353 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 21:44:33.353 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:33.353 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 21:44:33.354 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 21:44:33.356 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 21:44:33.357 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 21:44:33.357 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:33.357 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 21:44:33.357 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 21:44:33.362 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 21:44:33.362 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 21:44:33.362 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 21:44:33.362 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:44:33.362 [http-nio-8080-exec-10] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 21:44:33.362 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:33.362 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:33.362 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 21:44:33.362 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:33.362 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:33.362 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 21:44:33.362 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 21:44:33.362 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 21:44:33.362 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 21:44:33.362 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:44:33.362 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:44:33.363 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:44:33.362 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:33.363 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 21:44:33.363 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 21:44:33.363 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:44:33.363 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 21:44:33.363 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 21:44:33.363 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:44:33.364 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 21:44:33.364 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 21:44:33.364 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:44:33.364 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:44:33.364 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:44:33.364 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:33.364 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:33.364 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:44:33.364 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:33.364 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 21:44:33.364 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:44:33.364 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:44:33.364 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:44:33.364 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 21:44:33.364 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:44:33.364 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:44:33.365 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:33.365 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:44:33.365 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:44:33.365 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:44:33.365 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:44:33.365 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 21:44:33.365 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:44:33.366 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:33.366 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:44:33.366 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:44:33.366 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 21:44:33.366 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:44:33.367 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:33.367 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:44:33.367 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 21:44:33.367 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:44:33.368 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:44:33.368 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:33.368 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:44:33.368 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 21:44:33.370 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:44:33.371 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:44:33.371 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:44:33.371 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:44:33.371 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:33.371 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:33.371 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:44:33.371 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:44:33.371 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 21:44:33.372 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 21:44:33.373 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:44:33.373 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:44:33.373 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:44:33.373 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:33.373 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:44:33.374 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 21:44:33.375 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:44:33.375 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:44:33.376 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:33.376 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:44:33.376 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 21:44:33.377 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:44:33.378 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:44:33.378 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:33.378 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:44:33.378 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 21:44:33.379 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:44:39.068 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:44:39.068 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:39.068 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:44:39.068 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: c123456@example.com(String)
2025-07-02 21:44:39.074 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:44:39.079 [http-nio-8080-exec-3] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:c123456@example.com    数据库密码:$2a$10$aV3xeP.2wgkwLBEUBWplpuGVjIubDmTytO1EwE4qqnbFzPv0yxDpS
2025-07-02 21:44:39.140 [http-nio-8080-exec-3] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=c123456@example.com, password=$2a$10$aV3xeP.2wgkwLBEUBWplpuGVjIubDmTytO1EwE4qqnbFzPv0yxDpS, enabled=true, roles=[ROLE_USER]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=DB02438FFFBE1B9899E075FC7FC6311B], Granted Authorities=[ROLE_USER]]
2025-07-02 21:44:39.140 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:44:39.140 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:39.140 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:44:39.153 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: c123456@example.com(String)
2025-07-02 21:44:39.156 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:44:40.212 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 21:44:40.214 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:40.214 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 21:44:40.212 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 21:44:40.214 [http-nio-8080-exec-10] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 21:44:40.214 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 21:44:40.214 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:44:40.214 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 21:44:40.214 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:40.214 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 21:44:40.214 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:40.214 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 21:44:40.214 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:40.215 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:44:40.214 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:40.214 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:44:40.215 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 21:44:40.215 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:40.215 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 21:44:40.215 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 21:44:40.215 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:44:40.215 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:44:40.215 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 21:44:40.215 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 21:44:40.215 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 21:44:40.215 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:44:40.215 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 21:44:40.215 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:44:40.215 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:44:40.215 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:40.215 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 21:44:40.215 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 21:44:40.215 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:40.217 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:44:40.217 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:40.217 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:44:40.217 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 21:44:40.217 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:44:40.217 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 21:44:40.217 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:44:40.217 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 21:44:40.217 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 21:44:40.217 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:44:40.217 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:44:40.218 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:40.218 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:44:40.218 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:40.218 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 21:44:40.218 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:44:40.218 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:44:40.218 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:44:40.218 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:44:40.223 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:44:40.225 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 21:44:40.225 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:44:40.225 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:40.226 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:44:40.226 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 21:44:40.226 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 21:44:40.227 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:44:40.227 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:44:40.227 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:44:40.227 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:40.228 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:40.228 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:44:40.228 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:44:40.228 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 21:44:40.228 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 21:44:40.230 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:44:40.230 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:44:40.230 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:44:40.231 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 21:44:40.231 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:44:40.233 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:40.242 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:40.242 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:44:40.242 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:44:40.243 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 21:44:40.243 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 21:44:40.244 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:44:40.244 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:44:40.244 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:44:40.246 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:40.246 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:44:40.246 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:44:40.246 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:40.246 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 21:44:40.246 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:44:40.247 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 21:44:40.247 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:44:40.248 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:44:40.248 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:40.248 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:44:40.248 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 21:44:40.249 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:44:40.249 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:44:44.225 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:44:44.225 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:44.225 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:44:44.225 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: c123456@example.com(String)
2025-07-02 21:44:44.226 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:44:45.728 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:44:45.728 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:44:45.729 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:44:45.729 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:44:45.729 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:45.729 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:45.729 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:44:45.729 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:44:45.730 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:44:45.730 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:44:45.731 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:44:45.731 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:44:45.740 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:44:45.740 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:44:45.740 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:45.740 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:44:45.740 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:44:45.740 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:44:50.001 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:44:50.002 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:44:50.002 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:50.002 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:44:50.002 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:44:50.004 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:44:50.531 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:44:50.533 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:44:50.533 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:50.533 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:44:50.533 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:44:50.534 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:44:50.543 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:44:50.544 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:44:50.544 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:50.544 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:44:50.545 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:44:50.546 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:44:52.701 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:44:52.701 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:44:52.701 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:44:52.702 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:52.702 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:44:52.702 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:44:52.704 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:52.704 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:44:52.704 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:44:52.705 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:44:52.707 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:44:52.707 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:44:52.851 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:44:52.851 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:44:52.851 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:52.851 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:44:52.852 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:44:52.853 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:44:53.939 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:44:53.940 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:44:53.940 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:53.940 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:44:53.941 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:44:53.942 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:44:54.615 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:44:54.615 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:44:54.615 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:54.615 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:44:54.615 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:44:54.615 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:44:54.627 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:44:54.627 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:44:54.627 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:54.627 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:44:54.628 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:44:54.628 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:44:54.956 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:44:54.956 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:44:54.956 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:44:54.956 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:44:54.956 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:44:54.956 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:45:01.069 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 21:45:01.069 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:01.069 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 21:45:01.070 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 21:45:01.077 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 21:45:01.078 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 21:45:01.078 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 21:45:01.078 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:01.078 [http-nio-8080-exec-6] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 21:45:01.078 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 21:45:01.078 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 21:45:01.078 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:45:01.078 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:01.078 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 21:45:01.078 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:01.078 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:01.079 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 21:45:01.079 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:01.079 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:45:01.079 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 21:45:01.079 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 21:45:01.079 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 21:45:01.079 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 21:45:01.079 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:01.079 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 21:45:01.079 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:45:01.079 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 21:45:01.079 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:45:01.079 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 21:45:01.080 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:45:01.080 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 21:45:01.080 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 21:45:01.080 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:45:01.080 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 21:45:01.080 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:45:01.080 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:45:01.082 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:45:01.082 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:01.082 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:45:01.082 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:01.082 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:01.082 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:45:01.082 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:45:01.082 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:45:01.083 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 21:45:01.083 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:45:01.084 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:45:01.084 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 21:45:01.084 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 21:45:01.086 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 21:45:01.086 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:45:01.086 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:45:01.086 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:45:01.086 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:45:01.086 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:01.086 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:01.086 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:01.086 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:45:01.086 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:45:01.086 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:45:01.087 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 21:45:01.087 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:45:01.087 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 21:45:01.090 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:45:01.093 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:45:01.093 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:01.093 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:45:01.093 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:45:01.093 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 21:45:01.093 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:45:01.093 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:45:01.094 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:01.094 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:45:01.094 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 21:45:01.094 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:45:01.094 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:45:01.094 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:01.094 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:45:01.095 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 21:45:01.095 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:45:01.095 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:45:01.095 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:01.095 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:45:01.095 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 21:45:01.096 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:45:01.096 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:45:01.097 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:45:01.097 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:01.097 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:45:01.097 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 21:45:01.098 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:45:01.099 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:45:01.099 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:01.099 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:45:01.099 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 21:45:01.100 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:45:05.625 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:45:05.625 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:05.625 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:45:05.625 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: b123456@example.com(String)
2025-07-02 21:45:05.640 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:45:05.640 [http-nio-8080-exec-5] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:b123456@example.com    数据库密码:$2a$10$RCK/GIweBYyfXlfynl3oquMPK1l7lgrsN9YTjUqNw6.zJwNFFD6N.
2025-07-02 21:45:05.708 [http-nio-8080-exec-5] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=b123456@example.com, password=$2a$10$RCK/GIweBYyfXlfynl3oquMPK1l7lgrsN9YTjUqNw6.zJwNFFD6N., enabled=true, roles=[ROLE_USER]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=DB02438FFFBE1B9899E075FC7FC6311B], Granted Authorities=[ROLE_USER]]
2025-07-02 21:45:05.708 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:45:05.708 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:05.708 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:45:05.708 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: b123456@example.com(String)
2025-07-02 21:45:05.708 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:45:06.750 [http-nio-8080-exec-4] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 21:45:06.750 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 21:45:06.750 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 21:45:06.750 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:06.750 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 21:45:06.750 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 21:45:06.750 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:06.750 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:06.750 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:45:06.750 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 21:45:06.750 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:06.750 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:45:06.750 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 21:45:06.750 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 21:45:06.750 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:06.751 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:45:06.750 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 21:45:06.751 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:06.751 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:45:06.751 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 21:45:06.751 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 21:45:06.751 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 21:45:06.751 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 21:45:06.751 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:45:06.759 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 21:45:06.761 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 21:45:06.761 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 21:45:06.761 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 21:45:06.767 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 21:45:06.767 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 21:45:06.767 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:45:06.767 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:45:06.767 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:06.767 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:06.767 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:06.769 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:45:06.769 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 21:45:06.769 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 21:45:06.769 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:45:06.769 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:45:06.769 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:45:06.769 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 21:45:06.769 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:45:06.769 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:06.769 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:45:06.769 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:45:06.769 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:06.769 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:45:06.769 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:45:06.771 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 21:45:06.776 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:45:06.777 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:45:06.777 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:45:06.777 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:45:06.777 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:06.778 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:45:06.778 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 21:45:06.778 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 21:45:06.778 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:45:06.778 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:45:06.778 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:06.779 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:45:06.779 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:45:06.779 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 21:45:06.779 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:45:06.779 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:06.779 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:45:06.781 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 21:45:06.781 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:45:06.782 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 21:45:06.782 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:45:06.782 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:45:06.782 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:06.782 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:45:06.782 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:45:06.782 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 21:45:06.782 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:06.782 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:45:06.782 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 21:45:06.783 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:45:06.783 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:45:06.783 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:45:06.783 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:45:06.783 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:06.783 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:06.783 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:45:06.783 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:45:06.783 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 21:45:06.783 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 21:45:06.784 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:45:06.784 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:45:06.784 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:45:06.784 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:06.784 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:45:06.784 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 21:45:06.786 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:45:08.482 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:45:08.482 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:08.482 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:45:08.486 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: b123456@example.com(String)
2025-07-02 21:45:08.488 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:45:10.519 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:45:10.519 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:45:10.520 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:45:10.520 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:10.520 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:45:10.520 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:45:10.522 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:45:10.522 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:10.522 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:45:10.523 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:45:10.524 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:45:10.524 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 21:45:10.537 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:45:10.537 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:45:10.537 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:10.537 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:45:10.539 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:45:10.541 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 21:45:11.981 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:45:11.982 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:45:11.982 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:11.982 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:45:11.983 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:45:11.986 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 21:45:12.364 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:45:12.364 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:45:12.364 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:12.364 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:45:12.365 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:45:12.366 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:45:12.377 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:45:12.377 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:45:12.377 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:12.377 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:45:12.380 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:45:12.380 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 21:45:12.738 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:45:12.739 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:45:12.739 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:12.739 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:45:12.740 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:45:12.740 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 21:45:14.249 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:45:14.249 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:45:14.249 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:45:14.249 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:45:14.249 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:14.249 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:14.249 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:45:14.249 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:45:14.250 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:45:14.250 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:45:14.251 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:45:14.251 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 21:45:14.382 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:45:14.382 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:45:14.382 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:14.383 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:45:14.383 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:45:14.384 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 21:45:15.390 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:45:15.390 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:45:15.390 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:15.390 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:45:15.390 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:45:15.390 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 21:45:16.300 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:45:16.300 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:45:16.300 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:16.300 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:45:16.301 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:45:16.302 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:45:16.305 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:45:16.305 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:45:16.305 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:16.305 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:45:16.305 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:45:16.305 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 21:45:16.768 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:45:16.768 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:45:16.768 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:16.768 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:45:16.768 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:45:16.770 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 21:45:17.398 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:45:17.399 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:45:17.399 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:17.399 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:45:17.399 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:45:17.401 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:45:17.412 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:45:17.412 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:45:17.412 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:17.412 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:45:17.412 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:45:17.412 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 21:45:17.876 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:45:17.876 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:45:17.876 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:17.876 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:45:17.876 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:45:17.876 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 21:45:18.903 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:45:18.903 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:45:18.903 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:45:18.903 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:45:18.903 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:18.903 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:45:18.903 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:18.903 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:45:18.903 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:45:18.903 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:45:18.908 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:45:18.910 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 21:45:18.925 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:45:18.927 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:45:18.927 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:18.927 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:45:18.927 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:45:18.929 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 21:45:19.802 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:45:19.802 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:45:19.802 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:19.802 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:45:19.804 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:45:19.806 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 21:45:44.293 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 21:45:44.293 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 21:45:44.293 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:45:44.294 [http-nio-8080-exec-7] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 21:45:44.294 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:44.294 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 21:45:44.294 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:44.294 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:44.294 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 21:45:44.294 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 21:45:44.294 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:45:44.294 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:44.294 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 21:45:44.294 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:45:44.294 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:44.294 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:44.294 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 21:45:44.294 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:45:44.295 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 21:45:44.295 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 21:45:44.295 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 21:45:44.295 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:45:44.295 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 21:45:44.295 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 21:45:44.296 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 21:45:44.296 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:45:44.296 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 21:45:44.296 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:45:44.296 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 21:45:44.296 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:45:44.296 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:44.296 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:44.296 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 21:45:44.296 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 21:45:44.297 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:45:44.297 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:45:44.297 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:45:44.297 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:45:44.297 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:45:44.297 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:45:44.297 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 21:45:44.297 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:44.297 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:44.297 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 21:45:44.297 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:45:44.297 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:45:44.297 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:44.297 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 21:45:44.297 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 21:45:44.297 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:45:44.298 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:45:44.298 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 21:45:44.298 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:45:44.298 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:45:44.298 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 21:45:44.298 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:45:44.298 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:45:44.298 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:44.298 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:44.298 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:45:44.298 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:45:44.299 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 21:45:44.299 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 21:45:44.299 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:45:44.299 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:45:44.300 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:45:44.300 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:45:44.300 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:44.300 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:44.300 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:45:44.300 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:45:44.300 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 21:45:44.300 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 21:45:44.300 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 21:45:44.301 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:45:44.301 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:45:44.301 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:45:44.301 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:45:44.301 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:44.301 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:44.301 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:45:44.301 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:45:44.301 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 21:45:44.301 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 21:45:44.303 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:45:44.303 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:45:44.303 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:45:44.303 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:44.303 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:45:44.303 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 21:45:44.305 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:45:44.305 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:45:44.305 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:45:44.306 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:45:44.306 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 21:45:44.307 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:46:01.618 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:46:01.618 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:01.619 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:46:01.619 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: c123456@example.com(String)
2025-07-02 21:46:01.621 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:46:01.622 [http-nio-8080-exec-6] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:c123456@example.com    数据库密码:$2a$10$aV3xeP.2wgkwLBEUBWplpuGVjIubDmTytO1EwE4qqnbFzPv0yxDpS
2025-07-02 21:46:10.137 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:46:10.137 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:10.137 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:46:10.137 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: c123456@example.com(String)
2025-07-02 21:46:10.139 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:46:10.139 [http-nio-8080-exec-8] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:c123456@example.com    数据库密码:$2a$10$aV3xeP.2wgkwLBEUBWplpuGVjIubDmTytO1EwE4qqnbFzPv0yxDpS
2025-07-02 21:46:10.292 [http-nio-8080-exec-8] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=c123456@example.com, password=$2a$10$aV3xeP.2wgkwLBEUBWplpuGVjIubDmTytO1EwE4qqnbFzPv0yxDpS, enabled=true, roles=[ROLE_USER]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=45C0AFA24107CBD0476EA2E630816705], Granted Authorities=[ROLE_USER]]
2025-07-02 21:46:10.293 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:46:10.293 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:10.293 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:46:10.294 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: c123456@example.com(String)
2025-07-02 21:46:10.294 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:46:11.381 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 21:46:11.382 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:11.383 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 21:46:11.383 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 21:46:11.381 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 21:46:11.383 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:11.382 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:46:11.383 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:11.383 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 21:46:11.383 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:11.383 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 21:46:11.383 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:46:11.383 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:46:11.384 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:46:11.383 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:11.384 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 21:46:11.383 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 21:46:11.384 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 21:46:11.384 [http-nio-8080-exec-1] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 21:46:11.385 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 21:46:11.385 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:11.385 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 21:46:11.385 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 21:46:11.384 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:46:11.384 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 21:46:11.384 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 21:46:11.386 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:46:11.385 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 21:46:11.386 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:46:11.385 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:46:11.386 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 21:46:11.387 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 21:46:11.386 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:46:11.387 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:46:11.386 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 21:46:11.386 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:11.387 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:11.387 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:11.387 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:11.387 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 21:46:11.387 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:46:11.387 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:46:11.387 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:46:11.387 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:46:11.387 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:11.387 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:46:11.387 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:46:11.387 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:46:11.388 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 21:46:11.388 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 21:46:11.396 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:46:11.396 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:46:11.393 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:46:11.396 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 21:46:11.396 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:46:11.396 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 21:46:11.396 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:11.398 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:46:11.398 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:46:11.398 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 21:46:11.398 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:11.398 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:46:11.398 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 21:46:11.399 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:46:11.399 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:46:11.400 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:46:11.400 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:46:11.400 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:11.400 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:11.400 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:46:11.400 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:46:11.401 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 21:46:11.401 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 21:46:11.402 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:46:11.402 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:46:11.402 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:46:11.402 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:46:11.402 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:11.402 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:11.402 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:46:11.403 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:46:11.403 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 21:46:11.403 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 21:46:11.403 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:46:11.403 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:46:11.403 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:46:11.403 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:11.404 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:46:11.404 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 21:46:11.404 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 21:46:11.405 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:46:11.405 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:46:11.405 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:11.405 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:46:11.405 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 21:46:11.408 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:46:15.050 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:46:15.050 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:15.050 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:46:15.050 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: c123456@example.com(String)
2025-07-02 21:46:15.052 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:46:17.270 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:46:17.271 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:46:17.271 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:46:17.271 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:46:17.271 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:17.271 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:17.271 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:46:17.271 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:46:17.271 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:46:17.272 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:46:17.272 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:46:17.274 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:46:17.288 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:46:17.289 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:46:17.289 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:17.289 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:46:17.291 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:46:17.293 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:46:23.569 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:46:23.570 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:46:23.570 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:23.570 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:46:23.571 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:46:23.572 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:46:23.585 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:46:23.585 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:46:23.585 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:23.585 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:46:23.585 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:46:23.587 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 21:46:24.070 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:46:24.070 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:46:24.070 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:24.070 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:46:24.074 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:46:24.075 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 21:46:25.981 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:46:25.981 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:46:25.982 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:46:25.982 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:46:25.982 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:25.982 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:25.982 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:46:25.982 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:46:25.982 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:46:25.984 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:46:25.986 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:46:25.986 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 21:46:26.002 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:46:26.002 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:46:26.002 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:26.002 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:46:26.002 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:46:26.008 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 21:46:27.061 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:46:27.061 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:46:27.061 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:27.061 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:46:27.061 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:46:27.061 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 21:46:28.599 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:46:28.599 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:46:28.599 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:46:28.599 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:46:28.599 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:28.599 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:28.599 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:46:28.599 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:46:28.600 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:46:28.600 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:46:28.601 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 21:46:28.601 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:46:28.786 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:46:28.786 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:46:28.787 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:28.787 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:46:28.787 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:46:28.788 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 21:46:29.542 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 21:46:29.542 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:46:29.542 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:29.542 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:46:29.542 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 21:46:29.542 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 21:46:53.681 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 21:46:53.682 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:53.682 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 21:46:53.682 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 21:46:53.683 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 21:46:53.684 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 21:46:53.684 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:53.684 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 21:46:53.685 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 21:46:53.690 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 21:46:53.690 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 21:46:53.690 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:46:53.690 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:53.690 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:53.690 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:53.690 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 21:46:53.690 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:46:53.690 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:46:53.690 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 21:46:53.690 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:46:53.690 [http-nio-8080-exec-7] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 21:46:53.690 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:46:53.690 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 21:46:53.691 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:46:53.690 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 21:46:53.694 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:53.694 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 21:46:53.691 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:53.691 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 21:46:53.691 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 21:46:53.694 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:46:53.694 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 21:46:53.694 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 21:46:53.694 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:46:53.694 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:53.694 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:46:53.695 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:53.695 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:46:53.695 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:53.695 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:46:53.695 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:46:53.695 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:46:53.695 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:46:53.695 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 21:46:53.696 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 21:46:53.696 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 21:46:53.696 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:46:53.696 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:46:53.697 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 21:46:53.697 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 21:46:53.697 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:46:53.697 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:46:53.697 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:53.697 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:53.697 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:46:53.697 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 21:46:53.697 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:46:53.697 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:46:53.698 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 21:46:53.699 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:46:53.699 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:46:53.699 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:46:53.699 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:46:53.699 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:53.699 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:53.699 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:46:53.699 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:46:53.699 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 21:46:53.699 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 21:46:53.700 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:46:53.700 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:46:53.701 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:46:53.701 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:46:53.701 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:53.701 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:53.701 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:46:53.701 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:46:53.701 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 21:46:53.701 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 21:46:53.703 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:46:53.703 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:46:53.703 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:46:53.703 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:53.703 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:46:53.703 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 21:46:53.705 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:46:53.706 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:46:53.706 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:53.706 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:46:53.706 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 21:46:53.708 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:46:53.709 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:46:53.709 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:46:53.709 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:46:53.710 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 21:46:53.711 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:47:00.061 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:47:00.062 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:47:00.062 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:47:00.062 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: c123456@example.com(String)
2025-07-02 21:47:00.064 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:47:00.067 [http-nio-8080-exec-8] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:c123456@example.com    数据库密码:$2a$10$aV3xeP.2wgkwLBEUBWplpuGVjIubDmTytO1EwE4qqnbFzPv0yxDpS
2025-07-02 21:47:00.136 [http-nio-8080-exec-8] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=c123456@example.com, password=$2a$10$aV3xeP.2wgkwLBEUBWplpuGVjIubDmTytO1EwE4qqnbFzPv0yxDpS, enabled=true, roles=[ROLE_USER]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=DB02438FFFBE1B9899E075FC7FC6311B], Granted Authorities=[ROLE_USER]]
2025-07-02 21:47:00.136 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:47:00.136 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:47:00.136 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:47:00.136 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: c123456@example.com(String)
2025-07-02 21:47:00.136 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:47:01.182 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 21:47:01.182 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 21:47:01.182 [http-nio-8080-exec-2] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 21:47:01.182 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 21:47:01.182 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 21:47:01.182 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:47:01.182 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:47:01.182 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:47:01.182 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:47:01.182 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 21:47:01.182 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:47:01.182 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 21:47:01.182 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:47:01.182 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:47:01.182 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 21:47:01.182 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 21:47:01.182 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 21:47:01.182 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 21:47:01.182 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:47:01.182 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 21:47:01.182 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:47:01.182 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:47:01.182 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 21:47:01.184 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:47:01.184 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 21:47:01.182 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 21:47:01.184 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 21:47:01.184 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:47:01.185 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:47:01.185 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:47:01.185 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 21:47:01.185 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:47:01.185 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 21:47:01.185 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 21:47:01.185 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 21:47:01.185 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:47:01.185 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:47:01.185 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:47:01.185 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:47:01.185 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 21:47:01.185 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:47:01.185 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 21:47:01.185 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:47:01.185 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 21:47:01.185 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:47:01.186 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:47:01.185 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:47:01.186 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 21:47:01.186 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:47:01.186 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 21:47:01.187 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:47:01.187 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:47:01.187 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 21:47:01.188 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 21:47:01.191 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:47:01.190 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:47:01.191 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:47:01.191 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:47:01.193 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 21:47:01.191 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:47:01.195 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:47:01.193 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 21:47:01.195 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 21:47:01.200 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:47:01.200 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 21:47:01.200 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:47:01.200 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:47:01.200 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:47:01.201 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:47:01.201 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:47:01.201 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:47:01.201 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:47:01.201 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 21:47:01.201 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 21:47:01.202 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:47:01.202 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:47:01.202 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:47:01.202 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 21:47:01.202 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:47:01.202 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:47:01.202 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:47:01.202 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 21:47:01.202 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 21:47:01.202 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 21:47:01.204 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:47:01.204 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 21:47:01.204 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:47:01.204 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:47:01.204 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:47:01.204 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 21:47:01.205 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:47:01.206 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 21:47:01.206 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:47:01.206 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 21:47:01.206 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 21:47:01.207 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 21:47:02.602 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 21:47:02.602 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:47:02.602 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 21:47:02.602 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: c123456@example.com(String)
2025-07-02 21:47:02.603 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 21:47:04.601 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:47:04.601 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:47:04.602 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:47:04.602 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:47:04.602 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:47:04.602 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:47:04.602 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:47:04.602 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:47:04.603 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:47:04.603 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:47:04.604 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:47:04.605 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:47:04.619 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:47:04.619 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:47:04.620 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:47:04.621 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:47:04.621 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:47:04.622 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:47:10.080 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:47:10.080 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:47:10.080 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:47:10.080 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:47:10.080 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:47:10.080 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:47:10.080 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:47:10.080 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:47:10.080 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:47:10.080 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:47:10.080 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:47:10.080 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:47:10.105 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:47:10.106 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:47:10.106 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:47:10.106 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:47:10.107 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:47:10.108 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:47:13.378 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:47:13.378 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:47:13.379 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:47:13.379 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:47:13.380 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:47:13.379 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:47:13.380 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:47:13.380 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:47:13.380 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:47:13.381 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:47:13.381 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:47:13.381 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:47:13.389 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:47:13.390 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:47:13.390 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:47:13.390 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:47:13.390 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:47:13.391 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:47:14.700 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:47:14.700 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:47:14.700 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:47:14.700 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:47:14.701 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:47:14.702 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:47:15.874 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 21:47:15.875 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 21:47:15.875 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:47:15.875 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 21:47:15.877 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 21:47:15.879 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 21:47:15.883 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:47:15.883 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:47:15.883 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:47:15.883 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:47:15.886 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:47:15.886 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 21:47:15.900 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 21:47:15.901 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 21:47:15.901 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 21:47:15.901 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 21:47:15.902 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 21:47:15.903 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 22:01:02.815 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 22:01:02.816 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 22:01:02.816 [http-nio-8080-exec-10] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 22:01:02.816 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 22:01:02.816 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 22:01:02.816 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:02.816 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 22:01:02.816 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:02.816 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 22:01:02.816 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:02.817 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 22:01:02.816 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:02.817 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 22:01:02.816 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 22:01:02.816 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 22:01:02.816 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:02.817 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:02.817 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 22:01:02.817 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 22:01:02.819 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 22:01:02.819 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 22:01:02.819 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 22:01:02.820 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 22:01:02.820 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 22:01:02.820 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 22:01:02.820 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 22:01:02.820 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 22:01:02.820 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 22:01:02.820 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 22:01:02.820 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 22:01:02.820 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 22:01:02.821 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:02.821 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:02.821 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 22:01:02.821 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:02.821 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 22:01:02.821 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 22:01:02.821 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 22:01:02.821 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 22:01:02.822 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 22:01:02.822 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 22:01:02.822 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 22:01:02.822 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 22:01:02.822 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 22:01:02.822 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:02.822 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 22:01:02.822 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 22:01:02.822 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:02.822 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 22:01:02.823 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 22:01:02.823 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 22:01:02.825 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 22:01:02.826 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 22:01:02.825 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 22:01:02.826 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 22:01:02.826 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:02.826 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:02.826 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 22:01:02.826 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 22:01:02.827 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 22:01:02.827 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 22:01:02.827 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 22:01:02.827 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 22:01:02.827 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 22:01:02.828 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 22:01:02.828 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 22:01:02.828 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 22:01:02.828 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 22:01:02.828 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:02.828 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:02.828 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 22:01:02.829 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 22:01:02.829 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 22:01:02.829 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 22:01:02.830 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 22:01:02.830 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 22:01:02.830 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 22:01:02.830 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 22:01:02.830 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:02.830 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 22:01:02.830 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:02.830 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 22:01:02.830 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 22:01:02.830 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 22:01:02.831 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 22:01:02.831 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 22:01:02.832 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 22:01:02.832 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:02.832 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 22:01:02.832 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 22:01:02.833 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 22:01:02.833 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 22:01:02.833 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:02.833 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 22:01:02.834 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 22:01:02.835 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 22:01:09.430 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 22:01:09.430 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:09.430 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 22:01:09.430 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: b123456@example.com(String)
2025-07-02 22:01:09.430 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 22:01:09.430 [http-nio-8080-exec-3] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:b123456@example.com    数据库密码:$2a$10$RCK/GIweBYyfXlfynl3oquMPK1l7lgrsN9YTjUqNw6.zJwNFFD6N.
2025-07-02 22:01:09.511 [http-nio-8080-exec-3] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=b123456@example.com, password=$2a$10$RCK/GIweBYyfXlfynl3oquMPK1l7lgrsN9YTjUqNw6.zJwNFFD6N., enabled=true, roles=[ROLE_USER]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=DB02438FFFBE1B9899E075FC7FC6311B], Granted Authorities=[ROLE_USER]]
2025-07-02 22:01:09.514 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 22:01:09.515 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:09.515 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 22:01:09.515 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: b123456@example.com(String)
2025-07-02 22:01:09.516 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 22:01:10.555 [http-nio-8080-exec-6] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 22:01:10.555 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 22:01:10.555 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 22:01:10.555 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 22:01:10.555 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:10.555 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 22:01:10.555 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 22:01:10.555 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 22:01:10.555 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:10.555 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:10.555 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 22:01:10.555 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:10.555 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:10.555 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:10.555 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 22:01:10.555 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 22:01:10.556 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 22:01:10.556 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 22:01:10.556 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 22:01:10.556 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 22:01:10.557 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 22:01:10.557 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 22:01:10.562 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 22:01:10.563 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 22:01:10.566 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:10.566 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 22:01:10.563 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 22:01:10.564 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 22:01:10.564 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 22:01:10.564 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 22:01:10.566 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 22:01:10.568 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 22:01:10.566 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 22:01:10.566 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 22:01:10.566 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 22:01:10.568 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 22:01:10.568 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:10.568 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 22:01:10.568 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 22:01:10.568 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:10.568 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:10.568 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 22:01:10.568 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 22:01:10.568 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 22:01:10.568 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 22:01:10.568 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 22:01:10.568 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 22:01:10.568 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 22:01:10.568 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:10.568 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 22:01:10.568 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 22:01:10.568 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 22:01:10.572 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 22:01:10.572 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 22:01:10.572 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 22:01:10.572 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:10.572 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 22:01:10.572 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 22:01:10.573 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 22:01:10.577 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 22:01:10.577 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 22:01:10.579 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 22:01:10.580 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 22:01:10.580 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:10.580 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:10.580 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 22:01:10.581 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 22:01:10.581 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 22:01:10.582 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 22:01:10.582 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 22:01:10.582 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 22:01:10.583 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 22:01:10.583 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 22:01:10.583 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:10.583 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:10.583 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 22:01:10.583 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 22:01:10.583 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 22:01:10.583 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 22:01:10.584 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 22:01:10.584 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 22:01:10.585 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 22:01:10.585 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 22:01:10.585 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:10.585 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 22:01:10.585 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:10.585 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 22:01:10.585 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 22:01:10.586 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 22:01:10.588 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 22:01:10.588 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 22:01:10.588 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 22:01:10.588 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:10.588 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 22:01:10.589 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 22:01:10.593 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 22:01:12.147 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 22:01:12.147 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:12.147 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 22:01:12.147 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: b123456@example.com(String)
2025-07-02 22:01:12.148 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 22:01:13.732 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 22:01:13.732 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 22:01:13.733 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 22:01:13.733 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 22:01:13.733 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:13.733 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:13.733 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 22:01:13.733 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 22:01:13.734 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 22:01:13.734 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 22:01:13.735 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 22:01:13.736 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 22:01:13.745 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 22:01:13.745 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 22:01:13.745 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:13.745 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 22:01:13.745 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 22:01:13.745 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 22:01:15.673 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 22:01:15.673 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 22:01:15.674 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:15.674 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 22:01:15.675 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 22:01:15.676 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 22:01:22.174 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 22:01:22.174 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 22:01:22.174 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:22.174 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 22:01:22.174 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 22:01:22.174 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 22:01:22.174 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 22:01:22.174 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 22:01:22.174 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:22.174 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 22:01:22.174 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 22:01:22.190 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 22:01:23.061 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 22:01:23.061 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 22:01:23.061 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:23.061 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 22:01:23.061 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 22:01:23.061 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 22:01:28.726 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 22:01:28.726 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 22:01:28.726 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:28.726 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 22:01:28.726 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 22:01:28.726 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 22:01:28.726 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 22:01:28.726 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 22:01:28.726 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:28.726 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 22:01:28.726 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 22:01:28.726 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 22:01:29.388 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 22:01:29.388 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 22:01:29.389 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:29.389 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 22:01:29.389 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 22:01:29.391 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 22:01:29.809 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 22:01:29.809 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 22:01:29.809 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:29.809 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 22:01:29.809 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 22:01:29.809 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 22:01:29.809 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 22:01:29.809 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 22:01:29.809 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:29.809 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 22:01:29.809 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 22:01:29.809 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 22:01:30.170 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 22:01:30.170 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 22:01:30.170 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:01:30.170 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 22:01:30.170 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 22:01:30.171 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 22:05:11.495 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 22:05:11.496 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:11.496 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 22:05:11.498 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: c123456@example.com(String)
2025-07-02 22:05:11.500 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 22:05:11.500 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 22:05:11.500 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 22:05:11.501 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 22:05:11.500 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:11.500 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 22:05:11.500 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 22:05:11.501 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:11.501 [http-nio-8080-exec-6] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:c123456@example.com    数据库密码:$2a$10$aV3xeP.2wgkwLBEUBWplpuGVjIubDmTytO1EwE4qqnbFzPv0yxDpS
2025-07-02 22:05:11.501 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:11.501 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 22:05:11.501 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:11.501 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 22:05:11.501 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:11.501 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 22:05:11.501 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: c123456@example.com(String)
2025-07-02 22:05:11.501 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 22:05:11.501 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 22:05:11.502 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: c123456@example.com(String)
2025-07-02 22:05:11.503 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 22:05:11.503 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: c123456@example.com(String)
2025-07-02 22:05:11.503 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: c123456@example.com(String)
2025-07-02 22:05:11.503 [http-nio-8080-exec-2] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:c123456@example.com    数据库密码:$2a$10$aV3xeP.2wgkwLBEUBWplpuGVjIubDmTytO1EwE4qqnbFzPv0yxDpS
2025-07-02 22:05:11.503 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 22:05:11.503 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: c123456@example.com(String)
2025-07-02 22:05:11.503 [http-nio-8080-exec-1] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:c123456@example.com    数据库密码:$2a$10$aV3xeP.2wgkwLBEUBWplpuGVjIubDmTytO1EwE4qqnbFzPv0yxDpS
2025-07-02 22:05:11.503 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 22:05:11.503 [http-nio-8080-exec-4] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:c123456@example.com    数据库密码:$2a$10$aV3xeP.2wgkwLBEUBWplpuGVjIubDmTytO1EwE4qqnbFzPv0yxDpS
2025-07-02 22:05:11.503 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 22:05:11.505 [http-nio-8080-exec-8] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:c123456@example.com    数据库密码:$2a$10$aV3xeP.2wgkwLBEUBWplpuGVjIubDmTytO1EwE4qqnbFzPv0yxDpS
2025-07-02 22:05:11.506 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 22:05:11.506 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:11.506 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 22:05:11.506 [http-nio-8080-exec-2] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 22:05:11.506 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 22:05:11.506 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 22:05:11.506 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 22:05:11.506 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:11.506 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 22:05:11.506 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:11.506 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 22:05:11.506 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 22:05:11.506 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 22:05:11.506 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 22:05:11.506 [http-nio-8080-exec-10] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:c123456@example.com    数据库密码:$2a$10$aV3xeP.2wgkwLBEUBWplpuGVjIubDmTytO1EwE4qqnbFzPv0yxDpS
2025-07-02 22:05:11.506 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:11.506 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:11.506 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 22:05:11.506 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 22:05:11.506 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 22:05:11.507 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 22:05:11.507 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 22:05:11.507 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 22:05:11.507 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 22:05:11.507 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:11.507 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 22:05:11.507 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 22:05:11.507 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 22:05:11.507 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 22:05:11.507 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:11.507 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 22:05:11.507 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 22:05:11.508 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 22:05:11.508 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 22:05:11.508 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 22:05:11.508 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 22:05:11.508 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 22:05:11.508 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:11.508 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 22:05:11.508 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 22:05:11.508 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:11.509 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 22:05:11.509 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 22:05:11.509 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 22:05:11.509 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:11.509 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 22:05:11.509 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 22:05:11.509 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 22:05:11.509 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 22:05:11.509 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:11.510 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 22:05:11.510 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 22:05:11.510 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 22:05:11.511 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 22:05:11.511 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 22:05:11.511 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 22:05:11.511 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 22:05:11.512 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:11.512 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 22:05:11.512 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 22:05:11.512 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 22:05:11.512 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 22:05:11.512 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 22:05:11.512 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:11.512 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 22:05:11.513 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 22:05:11.513 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 22:05:11.513 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 22:05:11.514 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:11.514 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 22:05:11.514 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 22:05:11.514 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 22:05:11.516 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 22:05:11.516 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 22:05:11.516 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 22:05:11.516 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:11.516 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:11.517 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 22:05:11.517 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 22:05:11.517 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 22:05:11.517 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 22:05:11.518 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 22:05:11.518 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 22:05:11.518 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 22:05:11.518 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:11.519 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 22:05:11.519 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 22:05:11.520 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 22:05:11.520 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 22:05:11.520 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:11.520 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 22:05:11.520 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 22:05:11.522 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 22:05:11.522 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 22:05:11.522 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:11.522 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 22:05:11.522 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 22:05:11.524 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 22:05:17.314 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 22:05:17.314 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:17.314 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 22:05:17.314 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: c123456@example.com(String)
2025-07-02 22:05:17.315 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 22:05:17.316 [http-nio-8080-exec-9] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:c123456@example.com    数据库密码:$2a$10$aV3xeP.2wgkwLBEUBWplpuGVjIubDmTytO1EwE4qqnbFzPv0yxDpS
2025-07-02 22:05:17.385 [http-nio-8080-exec-9] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=c123456@example.com, password=$2a$10$aV3xeP.2wgkwLBEUBWplpuGVjIubDmTytO1EwE4qqnbFzPv0yxDpS, enabled=true, roles=[ROLE_USER]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=ABA1C53EEA8B206DAF927188C4A16481], Granted Authorities=[ROLE_USER]]
2025-07-02 22:05:17.385 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 22:05:17.385 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:17.385 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 22:05:17.385 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: c123456@example.com(String)
2025-07-02 22:05:17.385 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 22:05:18.426 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 22:05:18.426 [http-nio-8080-exec-4] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 22:05:18.426 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 22:05:18.426 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 22:05:18.426 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 22:05:18.426 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 22:05:18.426 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:18.426 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 22:05:18.426 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:18.427 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:18.427 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:18.427 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:18.427 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 22:05:18.427 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:18.427 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 22:05:18.427 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 22:05:18.427 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 22:05:18.427 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 22:05:18.427 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 22:05:18.427 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 22:05:18.427 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 22:05:18.427 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 22:05:18.427 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 22:05:18.428 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 22:05:18.428 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 22:05:18.429 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 22:05:18.429 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 22:05:18.429 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 22:05:18.429 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 22:05:18.429 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:18.429 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 22:05:18.429 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:18.429 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 22:05:18.429 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 22:05:18.429 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 22:05:18.429 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 22:05:18.429 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 22:05:18.429 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:18.429 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 22:05:18.429 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 22:05:18.430 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 22:05:18.430 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 22:05:18.430 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:18.430 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 22:05:18.430 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 22:05:18.430 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 22:05:18.430 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 22:05:18.430 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:18.431 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 22:05:18.431 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 22:05:18.430 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 22:05:18.430 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 22:05:18.431 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:18.431 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 22:05:18.431 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 22:05:18.431 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 22:05:18.431 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 22:05:18.433 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:18.431 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 22:05:18.433 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 22:05:18.434 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 22:05:18.434 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 22:05:18.434 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 22:05:18.435 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:18.434 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 22:05:18.435 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 22:05:18.435 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 22:05:18.437 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 22:05:18.438 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 22:05:18.438 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 22:05:18.438 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:18.438 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 22:05:18.438 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 22:05:18.438 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 22:05:18.440 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 22:05:18.440 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:18.440 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 22:05:18.440 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 22:05:18.440 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 22:05:18.440 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 22:05:18.440 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 22:05:18.442 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:18.442 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 22:05:18.442 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 22:05:18.442 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 22:05:18.442 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 22:05:18.442 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 22:05:18.442 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:18.442 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 22:05:18.442 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 22:05:18.445 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 22:05:18.445 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 22:05:18.445 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:18.445 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 22:05:18.445 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 22:05:18.445 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 22:05:19.141 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 22:05:19.141 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:19.141 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 22:05:19.142 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: c123456@example.com(String)
2025-07-02 22:05:19.143 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 22:05:21.006 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 22:05:21.006 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 22:05:21.006 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 22:05:21.006 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 22:05:21.007 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:21.007 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:21.007 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 22:05:21.007 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 22:05:21.007 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 22:05:21.007 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 22:05:21.008 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 22:05:21.008 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 22:05:21.019 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 22:05:21.020 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 22:05:21.020 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:05:21.020 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 22:05:21.021 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 22:05:21.022 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 22:07:09.141 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 22:07:09.141 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 22:07:09.142 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 22:07:09.142 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 22:07:09.142 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:07:09.142 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:07:09.142 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 22:07:09.142 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 22:07:09.143 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 22:07:09.143 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 22:07:09.143 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 22:07:09.143 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 22:07:09.157 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 22:07:09.157 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 22:07:09.157 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 22:07:09.157 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 22:07:09.157 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:07:09.157 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:07:09.157 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 22:07:09.157 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 22:07:09.157 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 22:07:09.157 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 22:07:09.159 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 22:07:09.159 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 22:07:09.159 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 22:07:09.159 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 22:07:09.159 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:07:09.159 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 22:07:09.160 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 22:07:09.161 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 22:07:09.168 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 22:07:09.168 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 22:07:09.168 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:07:09.168 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 22:07:09.169 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 22:07:09.171 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 22:16:10.066 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 22:16:10.066 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 22:16:10.067 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 22:16:10.067 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 22:16:10.067 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:16:10.067 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:16:10.067 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 22:16:10.067 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 22:16:10.068 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 22:16:10.069 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 22:16:10.070 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 22:16:10.070 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 22:16:10.088 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 22:16:10.088 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 22:16:10.088 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:16:10.088 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 22:16:10.088 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 22:16:10.092 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 22:16:10.748 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 22:16:10.748 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 22:16:10.748 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:16:10.748 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 22:16:10.749 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 22:16:10.750 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 1
2025-07-02 22:16:12.680 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 22:16:12.680 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 22:16:12.680 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:16:12.680 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 22:16:12.681 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 22:16:12.682 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 1
2025-07-02 22:18:17.610 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 22:18:17.611 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 22:18:17.611 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:18:17.612 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 22:18:17.617 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 22:18:17.618 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 1
2025-07-02 22:18:21.092 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 22:18:21.093 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 22:18:21.093 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:18:21.093 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 22:18:21.093 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 22:18:21.097 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 22:20:09.342 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-02 22:20:09.345 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-02 22:20:09.345 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-02 22:20:09.347 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-02 22:20:38.576 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-02 22:20:38.609 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 10480 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 22:20:38.609 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 22:20:38.610 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 22:20:38.918 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-02 22:20:38.918 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-02 22:20:39.923 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 22:20:39.927 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 22:20:39.972 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 28 ms. Found 0 Redis repository interfaces.
2025-07-02 22:20:40.479 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$7983cafd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 22:20:40.501 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 22:20:41.267 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 22:20:41.267 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 22:20:41.267 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 22:20:41.267 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 22:20:41.283 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 22:20:41.297 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 22:20:41.301 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 22:20:41.301 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 22:20:41.425 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 22:20:41.425 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2507 ms
2025-07-02 22:20:41.433 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 22:20:43.132 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-02 22:20:43.176 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-02 22:20:43.750 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 22:20:43.751 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 22:20:44.518 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 22:20:44.747 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3eb337e3, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@547d5bce, org.springframework.security.web.context.SecurityContextPersistenceFilter@5b592c94, org.springframework.security.web.header.HeaderWriterFilter@12eee59a, org.springframework.web.filter.CorsFilter@d601b82, org.springframework.security.web.authentication.logout.LogoutFilter@d6b024e, com.huang.store.security.JwtAuthenticationTokenFilter@605a6a4c, com.huang.store.security.CustomAuthenticationFilter@3aee410e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5ad594c4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1148a73e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7b792b48, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@14877eea, org.springframework.security.web.session.SessionManagementFilter@4ea010f1, org.springframework.security.web.access.ExceptionTranslationFilter@1bd71716, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@322f458]
2025-07-02 22:20:45.191 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 22:20:45.225 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 22:20:45.267 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 22:20:45.289 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 7.548 seconds (JVM running for 8.28)
2025-07-02 22:21:19.411 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-02 22:21:19.411 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-02 22:21:19.413 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-07-02 22:21:19.516 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 22:21:19.573 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 22:21:19.601 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:21:19.603 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 22:21:19.645 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 22:21:19.671 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 1
2025-07-02 22:21:22.768 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 22:21:22.772 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 22:21:22.776 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 22:21:22.776 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 22:21:22.776 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:21:22.776 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:21:22.778 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 22:21:22.778 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 22:21:22.830 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 22:21:22.832 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 22:21:22.832 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 1
2025-07-02 22:21:22.838 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 22:21:22.888 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 22:21:22.888 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 22:21:22.888 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:21:22.888 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 22:21:22.888 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 22:21:22.888 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 22:21:23.970 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 22:21:23.970 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 22:21:23.970 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:21:23.970 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 22:21:23.970 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 22:21:23.970 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 22:21:52.220 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 管理员创建优惠券模板: 折扣券
2025-07-02 22:21:52.222 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.CouponTemplateMapper.insert - ==>  Preparing: INSERT INTO coupon_template (name, type, discount_value, min_order_amount, max_discount_amount, total_quantity, used_quantity, received_quantity, per_user_limit, valid_days, status, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-02 22:21:52.222 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:21:52.222 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: INSERT INTO coupon_template (name, type, discount_value, min_order_amount, max_discount_amount, total_quantity, used_quantity, received_quantity, per_user_limit, valid_days, status, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) ::: DataSources: master
2025-07-02 22:21:52.306 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.CouponTemplateMapper.insert - ==> Parameters: 折扣券(String), 2(Integer), 75(BigDecimal), 200(BigDecimal), 0(BigDecimal), 3(Integer), 0(Integer), 0(Integer), 1(Integer), 5(Integer), 1(Integer), 2025-07-02 22:21:52.221(Timestamp), 2025-07-02 22:21:52.221(Timestamp)
2025-07-02 22:21:52.315 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.CouponTemplateMapper.insert - <==    Updates: 1
2025-07-02 22:21:52.345 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 22:21:52.346 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 22:21:52.346 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:21:52.346 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 22:21:52.349 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 22:21:52.353 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 2
2025-07-02 22:21:54.855 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 22:21:54.855 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 22:21:54.855 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:21:54.855 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 22:21:54.855 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 22:21:54.855 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 2
2025-07-02 22:21:54.875 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 22:21:54.875 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 22:21:54.875 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:21:54.875 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 22:21:54.876 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 22:21:54.878 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 22:22:01.495 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 22:22:01.496 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 22:22:01.496 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:22:01.497 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 22:22:01.498 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 22:22:01.500 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 22:22:03.839 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 22:22:03.839 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 22:22:03.839 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:22:03.839 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 22:22:03.846 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 22:22:03.846 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 2
2025-07-02 22:22:03.862 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 22:22:03.862 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 22:22:03.863 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:22:03.863 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 22:22:03.864 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 22:22:03.865 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 22:22:26.694 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 管理员创建优惠券模板: 折扣券
2025-07-02 22:22:26.694 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.CouponTemplateMapper.insert - ==>  Preparing: INSERT INTO coupon_template (name, type, discount_value, min_order_amount, max_discount_amount, total_quantity, used_quantity, received_quantity, per_user_limit, valid_days, status, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-02 22:22:26.694 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:22:26.694 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: INSERT INTO coupon_template (name, type, discount_value, min_order_amount, max_discount_amount, total_quantity, used_quantity, received_quantity, per_user_limit, valid_days, status, create_time, update_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) ::: DataSources: master
2025-07-02 22:22:26.700 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.CouponTemplateMapper.insert - ==> Parameters: 折扣券(String), 2(Integer), 95(BigDecimal), 0(BigDecimal), 0(BigDecimal), 10(Integer), 0(Integer), 0(Integer), 1(Integer), 5(Integer), 1(Integer), 2025-07-02 22:22:26.694(Timestamp), 2025-07-02 22:22:26.694(Timestamp)
2025-07-02 22:22:26.702 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.CouponTemplateMapper.insert - <==    Updates: 1
2025-07-02 22:22:26.741 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 22:22:26.743 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 22:22:26.744 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:22:26.745 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 22:22:26.747 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 22:22:26.752 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 3
2025-07-02 22:22:32.422 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 22:22:32.422 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 22:22:32.422 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 22:22:32.422 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 22:22:32.422 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:22:32.422 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:22:32.423 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 22:22:32.423 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 22:22:32.424 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 22:22:32.430 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 22:22:32.432 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 22:22:32.435 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 3
2025-07-02 22:22:32.634 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 22:22:32.635 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 22:22:32.635 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:22:32.635 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 22:22:32.636 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 22:22:32.641 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 22:22:35.494 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 22:22:35.494 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 22:22:35.494 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:22:35.494 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 22:22:35.494 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 22:22:35.505 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 22:22:36.409 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 22:22:36.409 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 22:22:36.409 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:22:36.409 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 22:22:36.410 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 22:22:36.412 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 3
2025-07-02 22:22:36.420 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 22:22:36.420 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 22:22:36.420 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:22:36.420 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 22:22:36.423 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 22:22:36.423 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 22:22:45.026 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 22:22:45.027 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 22:22:45.027 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:22:45.028 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 22:22:45.030 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 22:22:45.032 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 22:22:46.011 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 22:22:46.011 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 22:22:46.012 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:22:46.012 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 22:22:46.013 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 22:22:46.014 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 3
2025-07-02 22:22:46.022 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 22:22:46.022 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 22:22:46.022 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:22:46.022 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 22:22:46.022 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 22:22:46.022 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 22:23:04.474 [http-nio-8080-exec-4] INFO  com.huang.store.controller.CouponController - 管理员删除优惠券模板: 7
2025-07-02 22:23:04.474 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==>  Preparing: SELECT * FROM coupon_template WHERE id = ?
2025-07-02 22:23:04.474 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:23:04.474 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE id = ? ::: DataSources: slave
2025-07-02 22:23:04.474 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - ==> Parameters: 7(Integer)
2025-07-02 22:23:04.474 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.CouponTemplateMapper.selectById - <==      Total: 1
2025-07-02 22:23:04.474 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.CouponTemplateMapper.countUserCoupons - ==>  Preparing: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ?
2025-07-02 22:23:04.489 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:23:04.489 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? ::: DataSources: slave
2025-07-02 22:23:04.495 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.CouponTemplateMapper.countUserCoupons - ==> Parameters: 7(Integer)
2025-07-02 22:23:04.497 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.CouponTemplateMapper.countUserCoupons - <==      Total: 1
2025-07-02 22:23:04.497 [http-nio-8080-exec-4] DEBUG c.h.s.m.C.countUnusedUserCoupons - ==>  Preparing: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND status = 1
2025-07-02 22:23:04.497 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:23:04.498 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND status = 1 ::: DataSources: slave
2025-07-02 22:23:04.498 [http-nio-8080-exec-4] DEBUG c.h.s.m.C.countUnusedUserCoupons - ==> Parameters: 7(Integer)
2025-07-02 22:23:04.499 [http-nio-8080-exec-4] DEBUG c.h.s.m.C.countUnusedUserCoupons - <==      Total: 1
2025-07-02 22:23:04.499 [http-nio-8080-exec-4] DEBUG c.h.s.m.CouponTemplateMapper.countValidUserCoupons - ==>  Preparing: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND expire_time > NOW()
2025-07-02 22:23:04.500 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:23:04.500 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: SELECT COUNT(*) FROM user_coupon WHERE coupon_template_id = ? AND expire_time > NOW() ::: DataSources: slave
2025-07-02 22:23:04.501 [http-nio-8080-exec-4] DEBUG c.h.s.m.CouponTemplateMapper.countValidUserCoupons - ==> Parameters: 7(Integer)
2025-07-02 22:23:04.502 [http-nio-8080-exec-4] DEBUG c.h.s.m.CouponTemplateMapper.countValidUserCoupons - <==      Total: 1
2025-07-02 22:23:04.503 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.CouponTemplateMapper.delete - ==>  Preparing: DELETE FROM coupon_template WHERE id = ?
2025-07-02 22:23:04.503 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:23:04.503 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: DELETE FROM coupon_template WHERE id = ? ::: DataSources: master
2025-07-02 22:23:04.504 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.CouponTemplateMapper.delete - ==> Parameters: 7(Integer)
2025-07-02 22:23:04.510 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.CouponTemplateMapper.delete - <==    Updates: 1
2025-07-02 22:23:04.533 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 22:23:04.533 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 22:23:04.534 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:23:04.534 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 22:23:04.534 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 22:23:04.536 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 2
2025-07-02 22:23:09.009 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 22:23:09.009 [http-nio-8080-exec-5] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 22:23:09.010 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 22:23:09.010 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 22:23:09.010 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:23:09.010 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:23:09.010 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 22:23:09.010 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 22:23:09.012 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 22:23:09.012 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 22:23:09.014 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 22:23:09.014 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 2
2025-07-02 22:23:09.030 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 22:23:09.030 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 22:23:09.030 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:23:09.030 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 22:23:09.030 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 22:23:09.030 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 22:26:29.873 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 22:26:29.873 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 22:26:29.876 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 22:26:29.876 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 22:26:29.876 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:26:29.876 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:26:29.876 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 22:26:29.876 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 22:26:29.879 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 22:26:29.880 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 22:26:29.884 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 22:26:29.885 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 2
2025-07-02 22:26:29.990 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: c123456@example.com
2025-07-02 22:26:29.991 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 22:26:29.991 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:26:29.991 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 22:26:29.992 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: c123456@example.com(String)
2025-07-02 22:26:29.993 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 0
2025-07-02 22:33:28.858 [http-nio-8080-exec-2] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ2NDg2OTUxMiwiZXhwIjoxNzUxNDY2NjY5fQ.97OTzBcVUbiWryntfyD08Szx_VjMEGeSa1ad49bCXAL4XMpcb2vydZrgKgR1u-36mPO7t3RhX1HK_bYonZePsQ
2025-07-02 22:33:28.859 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 22:33:28.860 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 22:33:28.860 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:33:28.860 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 22:33:28.866 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 22:33:28.867 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 2
2025-07-02 22:33:33.822 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ2NDg2OTUxMiwiZXhwIjoxNzUxNDY2NjY5fQ.97OTzBcVUbiWryntfyD08Szx_VjMEGeSa1ad49bCXAL4XMpcb2vydZrgKgR1u-36mPO7t3RhX1HK_bYonZePsQ
2025-07-02 22:33:33.824 [http-nio-8080-exec-3] INFO  com.huang.store.controller.CouponController - 管理员查询所有优惠券模板
2025-07-02 22:33:33.824 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==>  Preparing: SELECT * FROM coupon_template ORDER BY create_time DESC
2025-07-02 22:33:33.824 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 22:33:33.824 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 22:33:33.825 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - ==> Parameters: 
2025-07-02 22:33:33.826 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.CouponTemplateMapper.selectAll - <==      Total: 2
2025-07-02 22:55:21.078 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-02 22:55:21.078 [Thread-7] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-02 22:55:21.078 [Thread-7] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-07-02 22:55:21.107 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-755044215] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 22:55:21.108 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-755044215] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 22:55:21.109 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1606327585] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 22:55:21.109 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1606327585] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 22:55:21.110 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-02 22:55:21.112 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-02 22:55:21.136 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-02 22:55:21.142 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-02 22:55:21.143 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-02 22:55:21.147 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-02 22:55:21.369 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 10480 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 22:55:21.369 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 22:55:21.369 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 22:55:21.745 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 22:55:21.745 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 22:55:21.760 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-07-02 22:55:21.928 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$7983cafd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 22:55:21.945 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 22:55:22.112 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 22:55:22.112 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 22:55:22.112 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 22:55:22.112 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 22:55:22.112 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 22:55:22.112 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 22:55:22.112 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 22:55:22.112 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 22:55:22.145 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 22:55:22.145 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 762 ms
2025-07-02 22:55:22.145 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 22:55:22.345 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} inited
2025-07-02 22:55:22.366 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} inited
2025-07-02 22:55:22.578 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 22:55:22.578 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 22:55:22.912 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 22:55:23.098 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7dd4561d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@51b62d83, org.springframework.security.web.context.SecurityContextPersistenceFilter@4b6f108e, org.springframework.security.web.header.HeaderWriterFilter@50c5262f, org.springframework.web.filter.CorsFilter@14b793ed, org.springframework.security.web.authentication.logout.LogoutFilter@503b38fb, com.huang.store.security.JwtAuthenticationTokenFilter@2f463bcc, com.huang.store.security.CustomAuthenticationFilter@3d00a8a5, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@75c0f018, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1db849d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@78d62ed7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2bd0aa00, org.springframework.security.web.session.SessionManagementFilter@49e1f614, org.springframework.security.web.access.ExceptionTranslationFilter@5ea29b8d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@33bf9a9c]
2025-07-02 22:55:23.339 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 22:55:23.366 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 22:55:23.371 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 22:55:23.377 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 2.169 seconds (JVM running for 2086.368)
2025-07-02 23:06:17.162 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-02 23:06:17.163 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-02 23:06:17.165 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-07-02 23:06:17.174 [http-nio-8080-exec-6] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ2NDg2OTUxMiwiZXhwIjoxNzUxNDY2NjY5fQ.97OTzBcVUbiWryntfyD08Szx_VjMEGeSa1ad49bCXAL4XMpcb2vydZrgKgR1u-36mPO7t3RhX1HK_bYonZePsQ
2025-07-02 23:06:17.174 [http-nio-8080-exec-2] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ2NDg2OTUxMiwiZXhwIjoxNzUxNDY2NjY5fQ.97OTzBcVUbiWryntfyD08Szx_VjMEGeSa1ad49bCXAL4XMpcb2vydZrgKgR1u-36mPO7t3RhX1HK_bYonZePsQ
2025-07-02 23:06:17.174 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ2NDg2OTUxMiwiZXhwIjoxNzUxNDY2NjY5fQ.97OTzBcVUbiWryntfyD08Szx_VjMEGeSa1ad49bCXAL4XMpcb2vydZrgKgR1u-36mPO7t3RhX1HK_bYonZePsQ
2025-07-02 23:06:17.174 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ2NDg2OTUxMiwiZXhwIjoxNzUxNDY2NjY5fQ.97OTzBcVUbiWryntfyD08Szx_VjMEGeSa1ad49bCXAL4XMpcb2vydZrgKgR1u-36mPO7t3RhX1HK_bYonZePsQ
2025-07-02 23:06:17.174 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ2NDg2OTUxMiwiZXhwIjoxNzUxNDY2NjY5fQ.97OTzBcVUbiWryntfyD08Szx_VjMEGeSa1ad49bCXAL4XMpcb2vydZrgKgR1u-36mPO7t3RhX1HK_bYonZePsQ
2025-07-02 23:06:17.174 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ2NDg2OTUxMiwiZXhwIjoxNzUxNDY2NjY5fQ.97OTzBcVUbiWryntfyD08Szx_VjMEGeSa1ad49bCXAL4XMpcb2vydZrgKgR1u-36mPO7t3RhX1HK_bYonZePsQ
2025-07-02 23:06:17.182 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 23:06:17.182 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:17.183 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 23:06:17.185 [http-nio-8080-exec-5] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 23:06:17.187 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 23:06:17.187 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 23:06:17.187 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:17.187 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:17.187 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 23:06:17.187 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 23:06:17.188 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 23:06:17.190 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 23:06:17.192 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 23:06:17.192 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 23:06:17.192 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 23:06:17.192 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 23:06:17.192 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:17.193 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 23:06:17.192 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:17.192 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:17.192 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:17.193 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 23:06:17.193 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 23:06:17.193 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 23:06:17.195 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 23:06:17.198 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 23:06:17.199 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 23:06:17.200 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:17.200 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 23:06:17.200 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 23:06:17.203 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 23:06:17.207 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 23:06:17.223 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 23:06:17.226 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 23:06:17.226 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 23:06:17.227 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 23:06:17.227 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 23:06:17.230 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:17.230 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 23:06:17.228 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 23:06:17.230 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 23:06:17.230 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:17.230 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 23:06:17.232 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 23:06:17.233 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 23:06:17.235 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 23:06:17.236 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:17.238 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 23:06:17.237 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 23:06:17.238 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 23:06:17.240 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 23:06:17.241 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:17.241 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 23:06:17.241 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 23:06:17.241 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 23:06:17.242 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 23:06:17.243 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 23:06:17.243 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 23:06:17.243 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:17.243 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 23:06:17.243 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 23:06:17.244 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 23:06:17.245 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 23:06:17.247 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 23:06:17.248 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 23:06:17.250 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 23:06:17.250 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:17.250 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 23:06:17.250 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 23:06:17.252 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 23:06:17.255 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 23:06:17.255 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 23:06:17.255 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:17.255 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 23:06:17.256 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 23:06:17.256 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 23:06:17.256 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:17.257 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 23:06:17.257 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 23:06:17.258 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 23:06:17.259 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 23:06:17.259 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 23:06:17.260 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:17.261 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 23:06:17.262 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 23:06:17.264 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 23:06:17.265 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 23:06:17.265 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:17.265 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 23:06:17.266 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 23:06:17.268 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 23:06:17.270 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 23:06:17.270 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:17.270 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 23:06:17.271 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 23:06:17.273 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 23:06:21.954 [http-nio-8080-exec-8] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiMTIzNDU2QGV4YW1wbGUuY29tIiwiY3JlYXRlZCI6MTc1MTQ2NDg2OTUxMiwiZXhwIjoxNzUxNDY2NjY5fQ.97OTzBcVUbiWryntfyD08Szx_VjMEGeSa1ad49bCXAL4XMpcb2vydZrgKgR1u-36mPO7t3RhX1HK_bYonZePsQ
2025-07-02 23:06:22.043 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 23:06:22.044 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:22.044 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 23:06:22.045 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: b123456@example.com(String)
2025-07-02 23:06:22.050 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 23:06:22.055 [http-nio-8080-exec-8] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:b123456@example.com    数据库密码:$2a$10$RCK/GIweBYyfXlfynl3oquMPK1l7lgrsN9YTjUqNw6.zJwNFFD6N.
2025-07-02 23:06:22.135 [http-nio-8080-exec-8] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=b123456@example.com, password=$2a$10$RCK/GIweBYyfXlfynl3oquMPK1l7lgrsN9YTjUqNw6.zJwNFFD6N., enabled=true, roles=[ROLE_USER]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=9EFA61B7F74730F779FCB782CB485C81], Granted Authorities=[ROLE_USER]]
2025-07-02 23:06:22.147 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 23:06:22.147 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:22.147 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 23:06:22.148 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: b123456@example.com(String)
2025-07-02 23:06:22.149 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 23:06:23.217 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-02 23:06:23.222 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-02 23:06:23.223 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:23.224 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-02 23:06:23.224 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 23:06:23.224 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-02 23:06:23.224 [http-nio-8080-exec-4] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-02 23:06:23.224 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:23.224 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-02 23:06:23.224 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:23.224 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-02 23:06:23.224 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:23.224 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:23.226 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-02 23:06:23.224 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-02 23:06:23.224 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-02 23:06:23.226 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 23:06:23.226 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-02 23:06:23.226 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:23.227 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-02 23:06:23.226 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-02 23:06:23.226 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 23:06:23.227 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-02 23:06:23.228 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-02 23:06:23.228 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-02 23:06:23.229 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 23:06:23.229 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-02 23:06:23.230 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-02 23:06:23.229 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 23:06:23.229 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-02 23:06:23.230 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-02 23:06:23.230 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:23.230 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:23.230 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 23:06:23.230 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 23:06:23.230 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-02 23:06:23.230 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 23:06:23.231 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:23.231 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:23.231 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 23:06:23.231 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 23:06:23.231 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-02 23:06:23.231 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 23:06:23.231 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-02 23:06:23.231 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 23:06:23.231 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-02 23:06:23.233 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 23:06:23.233 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:23.233 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-02 23:06:23.233 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-02 23:06:23.233 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 23:06:23.234 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-02 23:06:23.234 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 23:06:23.234 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 23:06:23.235 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-02 23:06:23.236 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:23.238 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-02 23:06:23.239 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 23:06:23.240 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 23:06:23.243 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:23.243 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 23:06:23.243 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-02 23:06:23.243 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-02 23:06:23.245 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-02 23:06:23.245 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 23:06:23.247 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 23:06:23.247 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 23:06:23.247 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:23.247 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 23:06:23.247 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 23:06:23.247 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-02 23:06:23.247 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:23.247 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 23:06:23.247 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-02 23:06:23.249 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 23:06:23.249 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 23:06:23.249 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:23.249 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 23:06:23.249 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 23:06:23.249 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-02 23:06:23.249 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-02 23:06:23.254 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:23.254 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-02 23:06:23.254 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 23:06:23.255 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 23:06:23.255 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:23.255 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-02 23:06:23.255 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 23:06:23.255 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-02 23:06:23.257 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 23:06:23.257 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-02 23:06:23.257 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-02 23:06:23.257 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:23.258 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-02 23:06:23.258 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-02 23:06:23.260 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-02 23:06:24.367 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-02 23:06:24.367 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:24.367 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-02 23:06:24.367 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: b123456@example.com(String)
2025-07-02 23:06:24.371 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-02 23:06:27.312 [http-nio-8080-exec-10] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 23:06:27.312 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 23:06:27.316 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 23:06:27.316 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 23:06:27.317 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:27.317 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:27.317 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 23:06:27.317 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 23:06:27.318 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 23:06:27.318 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 23:06:27.320 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 23:06:27.321 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 6
2025-07-02 23:06:27.338 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 23:06:27.338 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 23:06:27.338 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:27.338 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 23:06:27.338 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 23:06:27.361 [http-nio-8080-exec-1] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 23:06:47.731 [http-nio-8080-exec-7] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 23:06:47.731 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 23:06:47.731 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:47.731 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 23:06:47.731 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 23:06:47.731 [http-nio-8080-exec-7] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 23:06:50.192 [http-nio-8080-exec-6] INFO  com.huang.store.controller.CouponController - 用户查询可领取的优惠券模板
2025-07-02 23:06:50.192 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==>  Preparing: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC
2025-07-02 23:06:50.192 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:50.192 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: SELECT * FROM coupon_template WHERE status = 1 ORDER BY create_time DESC ::: DataSources: slave
2025-07-02 23:06:50.192 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - ==> Parameters: 
2025-07-02 23:06:50.192 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.CouponTemplateMapper.selectAllEnabled - <==      Total: 6
2025-07-02 23:06:50.215 [http-nio-8080-exec-8] INFO  com.huang.store.controller.CouponController - 用户查询优惠券: b123456@example.com
2025-07-02 23:06:50.216 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==>  Preparing: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC
2025-07-02 23:06:50.216 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-02 23:06:50.216 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT uc.*, ct.name as coupon_name, ct.type, ct.discount_value, ct.min_order_amount, ct.max_discount_amount FROM user_coupon uc LEFT JOIN coupon_template ct ON uc.coupon_template_id = ct.id WHERE uc.account = ? ORDER BY uc.receive_time DESC ::: DataSources: slave
2025-07-02 23:06:50.216 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - ==> Parameters: b123456@example.com(String)
2025-07-02 23:06:50.218 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.UserCouponMapper.selectByAccount - <==      Total: 1
2025-07-02 23:07:40.012 [Thread-9] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-02 23:07:40.013 [Thread-9] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-02 23:07:40.013 [Thread-9] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-07-02 23:07:40.024 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1659302652] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 23:07:40.024 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1659302652] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 23:07:40.024 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-439294285] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 23:07:40.024 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-439294285] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 23:07:40.024 [Thread-9] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-02 23:07:40.024 [Thread-9] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-02 23:07:40.024 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closing ...
2025-07-02 23:07:40.024 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed
2025-07-02 23:07:40.024 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closing ...
2025-07-02 23:07:40.024 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed
2025-07-02 23:07:40.123 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 10480 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 23:07:40.123 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 23:07:40.123 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 23:07:40.289 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 23:07:40.289 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 23:07:40.289 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2025-07-02 23:07:40.357 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$7983cafd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 23:07:40.363 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 23:07:40.424 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 23:07:40.424 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 23:07:40.424 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 23:07:40.424 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 23:07:40.424 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 23:07:40.424 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 23:07:40.424 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 23:07:40.424 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 23:07:40.439 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 23:07:40.439 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 307 ms
2025-07-02 23:07:40.442 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 23:07:40.549 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} inited
2025-07-02 23:07:40.564 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} inited
2025-07-02 23:07:40.711 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 23:07:40.712 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 23:07:40.912 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 23:07:40.982 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@267ae4a3, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@b70ed52, org.springframework.security.web.context.SecurityContextPersistenceFilter@659a4cf2, org.springframework.security.web.header.HeaderWriterFilter@5b35bbe1, org.springframework.web.filter.CorsFilter@5bf92469, org.springframework.security.web.authentication.logout.LogoutFilter@51209b3f, com.huang.store.security.JwtAuthenticationTokenFilter@3d077749, com.huang.store.security.CustomAuthenticationFilter@550b87c3, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@bb951b6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1b415532, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6ddd0f08, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@518587fb, org.springframework.security.web.session.SessionManagementFilter@422b1feb, org.springframework.security.web.access.ExceptionTranslationFilter@43e7b853, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@553634b2]
2025-07-02 23:07:41.107 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 23:07:41.117 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 23:07:41.119 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 23:07:41.122 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 1.041 seconds (JVM running for 2824.113)
2025-07-02 23:07:46.629 [Thread-15] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-02 23:07:46.629 [Thread-15] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-02 23:07:46.629 [Thread-15] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1246269136] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 23:07:46.629 [Thread-15] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1246269136] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 23:07:46.629 [Thread-15] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-2133018074] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 23:07:46.629 [Thread-15] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-2133018074] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 23:07:46.629 [Thread-15] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-02 23:07:46.629 [Thread-15] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-02 23:07:46.629 [Thread-15] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} closing ...
2025-07-02 23:07:46.629 [Thread-15] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} closed
2025-07-02 23:07:46.629 [Thread-15] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} closing ...
2025-07-02 23:07:46.629 [Thread-15] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} closed
2025-07-02 23:07:46.700 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 10480 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 23:07:46.700 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 23:07:46.700 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 23:07:46.829 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 23:07:46.829 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 23:07:46.848 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2025-07-02 23:07:46.891 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$7983cafd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 23:07:46.892 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 23:07:46.948 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 23:07:46.948 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 23:07:46.948 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 23:07:46.948 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 23:07:46.949 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 23:07:46.950 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 23:07:46.950 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 23:07:46.950 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 23:07:46.959 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 23:07:46.959 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 253 ms
2025-07-02 23:07:46.966 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 23:07:47.057 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} inited
2025-07-02 23:07:47.057 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} inited
2025-07-02 23:07:47.184 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 23:07:47.184 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 23:07:47.314 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 23:07:47.419 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@599e3b5c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@461b2c20, org.springframework.security.web.context.SecurityContextPersistenceFilter@325a303d, org.springframework.security.web.header.HeaderWriterFilter@4974e29e, org.springframework.web.filter.CorsFilter@5338b6d4, org.springframework.security.web.authentication.logout.LogoutFilter@5ad0cbf7, com.huang.store.security.JwtAuthenticationTokenFilter@112445e1, com.huang.store.security.CustomAuthenticationFilter@555a514, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2c5948f6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@c0d7b2d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@62830820, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7e1c7b6f, org.springframework.security.web.session.SessionManagementFilter@15e9cb34, org.springframework.security.web.access.ExceptionTranslationFilter@688adc7f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7529bf87]
2025-07-02 23:07:47.515 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 23:07:47.523 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 23:07:47.526 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 23:07:47.526 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 0.855 seconds (JVM running for 2830.52)
2025-07-02 23:08:27.793 [Thread-21] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-02 23:08:27.793 [Thread-21] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-02 23:08:27.800 [Thread-21] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-722510385] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 23:08:27.800 [Thread-21] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-722510385] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 23:08:27.800 [Thread-21] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1378522507] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 23:08:27.800 [Thread-21] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1378522507] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 23:08:27.800 [Thread-21] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-02 23:08:27.800 [Thread-21] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-02 23:08:27.803 [Thread-21] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} closing ...
2025-07-02 23:08:27.803 [Thread-21] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} closed
2025-07-02 23:08:27.803 [Thread-21] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} closing ...
2025-07-02 23:08:27.803 [Thread-21] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} closed
2025-07-02 23:08:27.879 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 21.0.5 on OLIVIA with PID 10480 (E:\Personal\Homework\SE\bookstore-server\target\classes started by a2241 in E:\Personal\Homework\SE\bookstore-server)
2025-07-02 23:08:27.879 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-02 23:08:27.879 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-02 23:08:28.055 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-02 23:08:28.056 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-02 23:08:28.064 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2025-07-02 23:08:28.108 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$7983cafd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 23:08:28.113 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-02 23:08:28.159 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-02 23:08:28.159 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.8] using APR version [1.7.4].
2025-07-02 23:08:28.159 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-02 23:08:28.159 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-02 23:08:28.159 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.14 4 Jun 2024]
2025-07-02 23:08:28.159 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-02 23:08:28.159 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-02 23:08:28.159 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-02 23:08:28.159 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-02 23:08:28.173 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 293 ms
2025-07-02 23:08:28.177 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-02 23:08:28.296 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-9} inited
2025-07-02 23:08:28.319 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-10} inited
2025-07-02 23:08:28.459 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-02 23:08:28.459 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-02 23:08:28.618 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-02 23:08:28.715 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@674de4b5, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6a43ad42, org.springframework.security.web.context.SecurityContextPersistenceFilter@3f9043e, org.springframework.security.web.header.HeaderWriterFilter@1d0d36a2, org.springframework.web.filter.CorsFilter@32ecd3cd, org.springframework.security.web.authentication.logout.LogoutFilter@9b164fb, com.huang.store.security.JwtAuthenticationTokenFilter@508903e4, com.huang.store.security.CustomAuthenticationFilter@787a8898, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7b2dea3a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4bb25204, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3ffec5f6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3c38125c, org.springframework.security.web.session.SessionManagementFilter@23fbcb5f, org.springframework.security.web.access.ExceptionTranslationFilter@16abd510, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6cedb77f]
2025-07-02 23:08:28.899 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-02 23:08:28.909 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-02 23:08:28.913 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-02 23:08:28.915 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 1.064 seconds (JVM running for 2871.906)
2025-07-02 23:10:57.802 [Thread-27] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-02 23:10:57.802 [Thread-27] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-02 23:10:57.806 [Thread-27] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-111730636] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 23:10:57.806 [Thread-27] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-111730636] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 23:10:57.806 [Thread-27] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-2065891920] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
 java.base/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
 java.base/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1712)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-02 23:10:57.806 [Thread-27] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-2065891920] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleep0(Native Method)
 java.base/java.lang.Thread.sleep(Thread.java:509)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-02 23:10:57.807 [Thread-27] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-02 23:10:57.807 [Thread-27] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-02 23:10:57.810 [Thread-27] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-9} closing ...
2025-07-02 23:10:57.811 [Thread-27] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-9} closed
2025-07-02 23:10:57.811 [Thread-27] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-10} closing ...
2025-07-02 23:10:57.812 [Thread-27] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-10} closed
