2025-07-03 08:49:19.169 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-03 08:49:19.187 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 2488 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-03 08:49:19.187 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-03 08:49:19.187 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-03 08:49:19.370 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-03 08:49:19.371 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-03 08:49:19.902 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-03 08:49:19.904 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-03 08:49:19.927 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2025-07-03 08:49:20.101 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$8788cfc8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-03 08:49:20.113 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-03 08:49:20.475 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-03 08:49:20.476 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-03 08:49:20.476 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-03 08:49:20.476 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-03 08:49:20.480 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-03 08:49:20.485 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-03 08:49:20.486 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-03 08:49:20.487 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-03 08:49:20.531 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-03 08:49:20.532 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1161 ms
2025-07-03 08:49:20.535 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-03 08:49:21.288 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-03 08:49:21.315 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-03 08:49:21.613 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-03 08:49:21.613 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-03 08:49:22.054 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-03 08:49:22.167 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2da285c3, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@97f36ee, org.springframework.security.web.context.SecurityContextPersistenceFilter@344b0aad, org.springframework.security.web.header.HeaderWriterFilter@4c8c43a6, org.springframework.web.filter.CorsFilter@988423, org.springframework.security.web.authentication.logout.LogoutFilter@2bfb8c35, com.huang.store.security.JwtAuthenticationTokenFilter@705a6147, com.huang.store.security.CustomAuthenticationFilter@3ce882e1, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@353f846d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@53498f82, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2b111b02, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1035b42, org.springframework.security.web.session.SessionManagementFilter@30ca91f1, org.springframework.security.web.access.ExceptionTranslationFilter@3ab447a6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2f5cb050]
2025-07-03 08:49:22.427 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-03 08:49:22.441 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-03 08:49:22.453 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-03 08:49:22.458 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 开始检查超时订单...
2025-07-03 08:49:22.461 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 3.751 seconds (JVM running for 4.366)
2025-07-03 08:49:22.486 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==>  Preparing: SELECT * FROM bookorder WHERE orderStatus = '待付款' AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ? ORDER BY orderTime ASC
2025-07-03 08:49:22.499 [scheduling-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:49:22.499 [scheduling-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM bookorder
        WHERE orderStatus = '待付款'
        AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ?
        ORDER BY orderTime ASC ::: DataSources: slave
2025-07-03 08:49:22.538 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==> Parameters: 30(Integer)
2025-07-03 08:49:22.569 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - <==      Total: 1
2025-07-03 08:49:22.573 [scheduling-1] INFO  com.huang.store.service.OrderTimeoutService - 发现 1 个超时订单，开始处理...
2025-07-03 08:49:22.582 [scheduling-1] DEBUG com.huang.store.mapper.OrderMapper.modifyOrder - ==>  Preparing: update bookorder set orderStatus=? where id=?
2025-07-03 08:49:22.583 [scheduling-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:49:22.583 [scheduling-1] INFO  ShardingSphere-SQL - SQL: update bookorder set
         
         
            orderStatus=?
         
         
        where id=? ::: DataSources: master
2025-07-03 08:49:22.586 [scheduling-1] DEBUG com.huang.store.mapper.OrderMapper.modifyOrder - ==> Parameters: 已取消(String), 27(Integer)
2025-07-03 08:49:22.596 [scheduling-1] DEBUG com.huang.store.mapper.OrderMapper.modifyOrder - <==    Updates: 1
2025-07-03 08:49:22.596 [scheduling-1] INFO  com.huang.store.service.OrderTimeoutService - 成功取消超时订单: 订单ID=20250702230939355225, 用户=56464ff@456.com
2025-07-03 08:49:22.596 [scheduling-1] INFO  com.huang.store.service.OrderTimeoutService - 超时订单处理完成: 成功 1 个, 失败 0 个
2025-07-03 08:54:22.460 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 开始检查超时订单...
2025-07-03 08:54:22.460 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==>  Preparing: SELECT * FROM bookorder WHERE orderStatus = '待付款' AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ? ORDER BY orderTime ASC
2025-07-03 08:54:22.461 [scheduling-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:54:22.461 [scheduling-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM bookorder
        WHERE orderStatus = '待付款'
        AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ?
        ORDER BY orderTime ASC ::: DataSources: slave
2025-07-03 08:54:22.473 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==> Parameters: 30(Integer)
2025-07-03 08:54:22.473 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - <==      Total: 0
2025-07-03 08:54:22.474 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 没有发现超时订单
2025-07-03 08:55:30.506 [http-nio-8080-exec-6] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-03 08:55:30.507 [http-nio-8080-exec-6] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-03 08:55:30.508 [http-nio-8080-exec-6] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-03 08:55:30.612 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxNDY4ODQ0OTMzLCJleHAiOjE3NTE0NzA2NDR9.GCtmZIwmNheACcBWtVRgBG171el4XCkIB1_h0zYVJ29uHUIAO-dxS-q0PfW2_XI6YJepYs2DgKhcUMmep6k84w
2025-07-03 08:55:30.612 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxNDY4ODQ0OTMzLCJleHAiOjE3NTE0NzA2NDR9.GCtmZIwmNheACcBWtVRgBG171el4XCkIB1_h0zYVJ29uHUIAO-dxS-q0PfW2_XI6YJepYs2DgKhcUMmep6k84w
2025-07-03 08:55:30.612 [http-nio-8080-exec-6] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxNDY4ODQ0OTMzLCJleHAiOjE3NTE0NzA2NDR9.GCtmZIwmNheACcBWtVRgBG171el4XCkIB1_h0zYVJ29uHUIAO-dxS-q0PfW2_XI6YJepYs2DgKhcUMmep6k84w
2025-07-03 08:55:30.612 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxNDY4ODQ0OTMzLCJleHAiOjE3NTE0NzA2NDR9.GCtmZIwmNheACcBWtVRgBG171el4XCkIB1_h0zYVJ29uHUIAO-dxS-q0PfW2_XI6YJepYs2DgKhcUMmep6k84w
2025-07-03 08:55:30.613 [http-nio-8080-exec-2] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxNDY4ODQ0OTMzLCJleHAiOjE3NTE0NzA2NDR9.GCtmZIwmNheACcBWtVRgBG171el4XCkIB1_h0zYVJ29uHUIAO-dxS-q0PfW2_XI6YJepYs2DgKhcUMmep6k84w
2025-07-03 08:55:30.613 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxNDY4ODQ0OTMzLCJleHAiOjE3NTE0NzA2NDR9.GCtmZIwmNheACcBWtVRgBG171el4XCkIB1_h0zYVJ29uHUIAO-dxS-q0PfW2_XI6YJepYs2DgKhcUMmep6k84w
2025-07-03 08:55:30.650 [http-nio-8080-exec-1] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-03 08:55:30.652 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-03 08:55:30.652 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-03 08:55:30.652 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:30.652 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:30.652 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-03 08:55:30.652 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-03 08:55:30.654 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-03 08:55:30.661 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-03 08:55:30.661 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-03 08:55:30.661 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:30.661 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:30.661 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-03 08:55:30.661 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-03 08:55:30.661 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-03 08:55:30.661 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:30.661 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-03 08:55:30.668 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-03 08:55:30.670 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-03 08:55:30.677 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-03 08:55:30.679 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-03 08:55:30.679 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:30.679 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-03 08:55:30.680 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-03 08:55:30.695 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-03 08:55:30.699 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-03 08:55:30.700 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-03 08:55:30.700 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:30.700 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-03 08:55:30.703 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-03 08:55:30.703 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-03 08:55:30.703 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-03 08:55:30.703 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:30.703 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-03 08:55:30.705 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-03 08:55:30.705 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-03 08:55:30.705 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-03 08:55:30.705 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-03 08:55:30.706 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:30.706 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-03 08:55:30.708 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-03 08:55:30.709 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-03 08:55:30.710 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 08:55:30.710 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-03 08:55:30.711 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:30.711 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 08:55:30.711 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-03 08:55:30.711 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-03 08:55:30.714 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-03 08:55:30.715 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-03 08:55:30.717 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 08:55:30.717 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 08:55:30.717 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:30.717 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 08:55:30.718 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-03 08:55:30.719 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 08:55:30.720 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 08:55:30.720 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:30.720 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 08:55:30.720 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-03 08:55:30.722 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 08:55:30.723 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 08:55:30.723 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:30.723 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 08:55:30.723 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 08:55:30.725 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 08:55:30.727 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 08:55:30.729 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:30.729 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 08:55:30.730 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 08:55:30.732 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 08:55:30.746 [http-nio-8080-exec-7] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxNDY4ODQ0OTMzLCJleHAiOjE3NTE0NzA2NDR9.GCtmZIwmNheACcBWtVRgBG171el4XCkIB1_h0zYVJ29uHUIAO-dxS-q0PfW2_XI6YJepYs2DgKhcUMmep6k84w
2025-07-03 08:55:30.750 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-03 08:55:30.750 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:30.750 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-03 08:55:30.752 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-03 08:55:30.755 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-03 08:55:30.756 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 08:55:30.756 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:30.756 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 08:55:30.757 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-03 08:55:30.760 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-03 08:55:30.760 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 08:55:30.760 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:30.760 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 08:55:30.761 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-03 08:55:30.771 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-03 08:55:30.772 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 08:55:30.772 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:30.772 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 08:55:30.772 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-03 08:55:30.774 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-03 08:55:30.775 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 08:55:30.775 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:30.775 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 08:55:30.776 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-03 08:55:30.778 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-03 08:55:31.173 [http-nio-8080-exec-2] WARN  org.apache.catalina.util.SessionIdGeneratorBase - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [167] milliseconds.
2025-07-03 08:55:31.173 [http-nio-8080-exec-3] WARN  org.apache.catalina.util.SessionIdGeneratorBase - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [166] milliseconds.
2025-07-03 08:55:31.173 [http-nio-8080-exec-8] WARN  org.apache.catalina.util.SessionIdGeneratorBase - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [167] milliseconds.
2025-07-03 08:55:31.173 [http-nio-8080-exec-10] WARN  org.apache.catalina.util.SessionIdGeneratorBase - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [166] milliseconds.
2025-07-03 08:55:31.173 [http-nio-8080-exec-9] WARN  org.apache.catalina.util.SessionIdGeneratorBase - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [166] milliseconds.
2025-07-03 08:55:36.801 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTE0NjEyNzI0NzAsImV4cCI6MTc1MTQ2MzA3Mn0.4RWrVLwupExMTupzwnT2_MMaR5JUdsulgubuoK4ZuyITShgdVz4Nn9Z8QDvkrE4ti8d1YOyuy23Ki17oGue6fQ
2025-07-03 08:55:36.801 [http-nio-8080-exec-2] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTE0NjEyNzI0NzAsImV4cCI6MTc1MTQ2MzA3Mn0.4RWrVLwupExMTupzwnT2_MMaR5JUdsulgubuoK4ZuyITShgdVz4Nn9Z8QDvkrE4ti8d1YOyuy23Ki17oGue6fQ
2025-07-03 08:55:36.802 [http-nio-8080-exec-8] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTE0NjEyNzI0NzAsImV4cCI6MTc1MTQ2MzA3Mn0.4RWrVLwupExMTupzwnT2_MMaR5JUdsulgubuoK4ZuyITShgdVz4Nn9Z8QDvkrE4ti8d1YOyuy23Ki17oGue6fQ
2025-07-03 08:55:36.802 [http-nio-8080-exec-10] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTE0NjEyNzI0NzAsImV4cCI6MTc1MTQ2MzA3Mn0.4RWrVLwupExMTupzwnT2_MMaR5JUdsulgubuoK4ZuyITShgdVz4Nn9Z8QDvkrE4ti8d1YOyuy23Ki17oGue6fQ
2025-07-03 08:55:36.803 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-03 08:55:36.803 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:36.803 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-03 08:55:36.803 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-03 08:55:36.804 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:36.804 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-03 08:55:36.804 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-03 08:55:36.804 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-03 08:55:36.805 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-03 08:55:36.805 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-03 08:55:36.805 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-03 08:55:36.805 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:36.805 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-03 08:55:36.805 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTE0NjEyNzI0NzAsImV4cCI6MTc1MTQ2MzA3Mn0.4RWrVLwupExMTupzwnT2_MMaR5JUdsulgubuoK4ZuyITShgdVz4Nn9Z8QDvkrE4ti8d1YOyuy23Ki17oGue6fQ
2025-07-03 08:55:36.806 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-03 08:55:36.806 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:36.806 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-03 08:55:36.806 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-03 08:55:36.806 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-03 08:55:36.806 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-03 08:55:36.806 [http-nio-8080-exec-9] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTE0NjEyNzI0NzAsImV4cCI6MTc1MTQ2MzA3Mn0.4RWrVLwupExMTupzwnT2_MMaR5JUdsulgubuoK4ZuyITShgdVz4Nn9Z8QDvkrE4ti8d1YOyuy23Ki17oGue6fQ
2025-07-03 08:55:36.807 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:36.807 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-03 08:55:36.807 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-03 08:55:36.807 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-03 08:55:36.808 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-03 08:55:36.808 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:36.808 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-03 08:55:36.808 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-03 08:55:36.811 [http-nio-8080-exec-9] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-03 08:55:36.811 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-03 08:55:36.811 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:36.811 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-03 08:55:36.811 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-03 08:55:36.811 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-03 08:55:36.811 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:36.811 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-03 08:55:36.807 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-03 08:55:36.811 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-03 08:55:36.812 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-03 08:55:36.812 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-03 08:55:36.813 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-03 08:55:36.816 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-03 08:55:36.817 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-03 08:55:36.817 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:36.817 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-03 08:55:36.817 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-03 08:55:36.819 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-03 08:55:36.819 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 08:55:36.819 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:36.819 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 08:55:36.821 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-03 08:55:36.822 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 08:55:36.823 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 08:55:36.823 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:36.823 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 08:55:36.823 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-03 08:55:36.825 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 08:55:36.826 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 08:55:36.826 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:36.826 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 08:55:36.826 [http-nio-8080-exec-7] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTE0NjEyNzI0NzAsImV4cCI6MTc1MTQ2MzA3Mn0.4RWrVLwupExMTupzwnT2_MMaR5JUdsulgubuoK4ZuyITShgdVz4Nn9Z8QDvkrE4ti8d1YOyuy23Ki17oGue6fQ
2025-07-03 08:55:36.826 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-03 08:55:36.827 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-03 08:55:36.827 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:36.827 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-03 08:55:36.827 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-03 08:55:36.827 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 08:55:36.828 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 08:55:36.828 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:36.828 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 08:55:36.828 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 08:55:36.829 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 08:55:36.829 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 08:55:36.829 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:36.830 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 08:55:36.830 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 08:55:36.831 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-03 08:55:36.831 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 08:55:36.832 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:36.832 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 08:55:36.832 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 08:55:36.832 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-03 08:55:36.833 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-03 08:55:36.834 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 08:55:36.834 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:36.834 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 08:55:36.834 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-03 08:55:36.836 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-03 08:55:36.836 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 08:55:36.836 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:36.836 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 08:55:36.836 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-03 08:55:36.838 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-03 08:55:36.838 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 08:55:36.838 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:36.838 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 08:55:36.838 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-03 08:55:36.840 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-03 08:55:39.322 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-03 08:55:39.325 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:39.325 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-03 08:55:39.327 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 2545059634@qq.com(String)
2025-07-03 08:55:39.337 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-03 08:55:39.346 [http-nio-8080-exec-1] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:2545059634@qq.com    数据库密码:$2a$10$w8zNNUSDq3MCiLDDuAhYXedA0QGva1Z4.6UxO61Njhsrlo8voc01G
2025-07-03 08:55:39.447 [http-nio-8080-exec-1] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=2545059634@qq.com, password=$2a$10$w8zNNUSDq3MCiLDDuAhYXedA0QGva1Z4.6UxO61Njhsrlo8voc01G, enabled=true, roles=[ROLE_ADMIN]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=C03F3BFA5F111059C9922DC507725BF4], Granted Authorities=[ROLE_ADMIN]]
2025-07-03 08:55:39.461 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-03 08:55:39.461 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 08:55:39.461 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-03 08:55:39.461 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 2545059634@qq.com(String)
2025-07-03 08:55:39.462 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-03 08:55:56.187 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-03 08:55:56.187 [Thread-7] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-03 08:55:56.188 [Thread-7] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-07-03 08:55:56.198 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-792623402] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-03 08:55:56.199 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-792623402] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-03 08:55:56.200 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-226051721] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-03 08:55:56.200 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-226051721] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-03 08:55:56.201 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-03 08:55:56.203 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-03 08:55:56.233 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-03 08:55:56.240 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-03 08:55:56.240 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-03 08:55:56.246 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-03 08:55:56.350 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 2488 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-03 08:55:56.350 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-03 08:55:56.350 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-03 08:55:56.814 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-03 08:55:56.814 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-03 08:55:56.828 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2025-07-03 08:55:57.021 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$8788cfc8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-03 08:55:57.038 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-03 08:55:57.410 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-03 08:55:57.411 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-03 08:55:57.411 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-03 08:55:57.411 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-03 08:55:57.412 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-03 08:55:57.412 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-03 08:55:57.412 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-03 08:55:57.412 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-03 08:55:57.457 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-03 08:55:57.457 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1099 ms
2025-07-03 08:55:57.461 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-03 08:55:57.726 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} inited
2025-07-03 08:55:57.755 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} inited
2025-07-03 08:55:57.959 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-03 08:55:57.959 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-03 08:55:58.045 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderController': Unsatisfied dependency expressed through field 'orderService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.huang.store.service.imp.OrderService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true), @org.springframework.beans.factory.annotation.Qualifier("orderService")}
2025-07-03 08:55:58.047 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closing ...
2025-07-03 08:55:58.048 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed
2025-07-03 08:55:58.048 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closing ...
2025-07-03 08:55:58.049 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed
2025-07-03 08:55:58.050 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-03 08:55:58.060 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-03 08:55:58.084 [restartedMain] ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field orderService in com.huang.store.controller.OrderController required a bean of type 'com.huang.store.service.imp.OrderService' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)
	- @org.springframework.beans.factory.annotation.Qualifier("orderService")


Action:

Consider defining a bean of type 'com.huang.store.service.imp.OrderService' in your configuration.

2025-07-03 09:01:20.043 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 2488 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-03 09:01:20.043 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-03 09:01:20.043 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-03 09:01:20.488 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-03 09:01:20.488 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-03 09:01:20.504 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2025-07-03 09:01:20.587 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$8788cfc8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-03 09:01:20.594 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-03 09:01:20.673 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-03 09:01:20.673 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-03 09:01:20.673 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-03 09:01:20.674 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-03 09:01:20.674 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-03 09:01:20.675 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-03 09:01:20.675 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-03 09:01:20.675 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-03 09:01:20.718 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-03 09:01:20.718 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 671 ms
2025-07-03 09:01:20.723 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-03 09:01:20.784 [restartedMain] ERROR o.s.boot.web.embedded.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'myUserDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.huang.store.service.imp.UserService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2025-07-03 09:01:20.793 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-03 09:01:20.797 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2025-07-03 09:01:20.801 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-03 09:01:20.806 [restartedMain] ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field userService in com.huang.store.security.MyUserDetailService required a bean of type 'com.huang.store.service.imp.UserService' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'com.huang.store.service.imp.UserService' in your configuration.

2025-07-03 09:01:22.813 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 2488 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-03 09:01:22.814 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-03 09:01:22.814 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-03 09:01:23.192 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-03 09:01:23.193 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-03 09:01:23.210 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
2025-07-03 09:01:23.278 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$8788cfc8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-03 09:01:23.284 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-03 09:01:23.350 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-03 09:01:23.350 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-03 09:01:23.350 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-03 09:01:23.350 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-03 09:01:23.351 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-03 09:01:23.352 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-03 09:01:23.353 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-03 09:01:23.353 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-03 09:01:23.398 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-2].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-03 09:01:23.398 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 582 ms
2025-07-03 09:01:23.402 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-03 09:01:23.578 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} inited
2025-07-03 09:01:23.603 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} inited
2025-07-03 09:01:23.769 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-03 09:01:23.769 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-03 09:01:23.994 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-03 09:01:24.191 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3a433867, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3baf9c7e, org.springframework.security.web.context.SecurityContextPersistenceFilter@f64a2bb, org.springframework.security.web.header.HeaderWriterFilter@11723061, org.springframework.web.filter.CorsFilter@199dbbb6, org.springframework.security.web.authentication.logout.LogoutFilter@1f9c4eca, com.huang.store.security.JwtAuthenticationTokenFilter@732698b0, com.huang.store.security.CustomAuthenticationFilter@2d39deec, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6877994a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5b3de09, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5c217e6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@12f45895, org.springframework.security.web.session.SessionManagementFilter@78b9118c, org.springframework.security.web.access.ExceptionTranslationFilter@785e406e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@69e6b5ce]
2025-07-03 09:01:25.121 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-03 09:01:25.217 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-03 09:01:25.290 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-03 09:01:25.367 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 2.609 seconds (JVM running for 727.271)
2025-07-03 09:01:25.395 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 开始检查超时订单...
2025-07-03 09:01:25.401 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==>  Preparing: SELECT * FROM bookorder WHERE orderStatus = '待付款' AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ? ORDER BY orderTime ASC
2025-07-03 09:01:25.401 [scheduling-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:01:25.401 [scheduling-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM bookorder
        WHERE orderStatus = '待付款'
        AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ?
        ORDER BY orderTime ASC ::: DataSources: slave
2025-07-03 09:01:25.414 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==> Parameters: 30(Integer)
2025-07-03 09:01:25.418 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - <==      Total: 0
2025-07-03 09:01:25.420 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 没有发现超时订单
2025-07-03 09:01:45.177 [Thread-9] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-03 09:01:45.177 [Thread-9] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-03 09:01:45.183 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-691231296] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-03 09:01:45.183 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-691231296] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-03 09:01:45.184 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-167136008] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-03 09:01:45.184 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-167136008] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-03 09:01:45.186 [Thread-9] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-03 09:01:45.187 [Thread-9] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-03 09:01:45.190 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} closing ...
2025-07-03 09:01:45.191 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} closed
2025-07-03 09:01:45.191 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} closing ...
2025-07-03 09:01:45.193 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} closed
2025-07-03 09:01:45.329 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 2488 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-03 09:01:45.329 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-03 09:01:45.329 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-03 09:01:45.701 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-03 09:01:45.701 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-03 09:01:45.717 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2025-07-03 09:01:45.794 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$8788cfc8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-03 09:01:45.800 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-03 09:01:45.895 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-03 09:01:45.895 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-03 09:01:45.895 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-03 09:01:45.895 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-03 09:01:45.896 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-03 09:01:45.897 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-03 09:01:45.897 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-03 09:01:45.897 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-03 09:01:45.952 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-2].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-03 09:01:45.952 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 621 ms
2025-07-03 09:01:45.954 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-03 09:01:46.043 [restartedMain] ERROR o.s.boot.web.embedded.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'myUserDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.huang.store.service.imp.UserService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2025-07-03 09:01:46.051 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-03 09:01:46.056 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2025-07-03 09:01:46.060 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-03 09:01:46.064 [restartedMain] ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field userService in com.huang.store.security.MyUserDetailService required a bean of type 'com.huang.store.service.imp.UserService' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'com.huang.store.service.imp.UserService' in your configuration.

2025-07-03 09:01:47.642 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 2488 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-03 09:01:47.642 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-03 09:01:47.642 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-03 09:01:47.942 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-03 09:01:47.943 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-03 09:01:47.959 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2025-07-03 09:01:48.042 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$8788cfc8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-03 09:01:48.048 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-03 09:01:48.178 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-03 09:01:48.178 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-03 09:01:48.178 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-03 09:01:48.178 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-03 09:01:48.179 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-03 09:01:48.184 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-03 09:01:48.184 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-03 09:01:48.184 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-03 09:01:48.226 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-3].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-03 09:01:48.226 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 583 ms
2025-07-03 09:01:48.230 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-03 09:01:48.352 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} inited
2025-07-03 09:01:48.376 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} inited
2025-07-03 09:01:48.394 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-03 09:01:48.412 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 18148 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-03 09:01:48.427 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-03 09:01:48.437 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-03 09:01:48.563 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-03 09:01:48.566 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-03 09:01:48.608 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-03 09:01:48.610 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-03 09:01:48.825 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-03 09:01:48.968 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3d47c41f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@d064f7, org.springframework.security.web.context.SecurityContextPersistenceFilter@5255d672, org.springframework.security.web.header.HeaderWriterFilter@6e5edd1c, org.springframework.web.filter.CorsFilter@6af0ddc, org.springframework.security.web.authentication.logout.LogoutFilter@4c1275ae, com.huang.store.security.JwtAuthenticationTokenFilter@3952ba0b, com.huang.store.security.CustomAuthenticationFilter@317a1411, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@612108c8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7687c956, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6ea94ca7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@510965b0, org.springframework.security.web.session.SessionManagementFilter@64975d14, org.springframework.security.web.access.ExceptionTranslationFilter@70aa8b8d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4f45725a]
2025-07-03 09:01:49.132 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-03 09:01:49.135 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-03 09:01:49.161 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2025-07-03 09:01:49.197 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-03 09:01:49.215 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-03 09:01:49.228 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-03 09:01:49.232 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 开始检查超时订单...
2025-07-03 09:01:49.233 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 1.632 seconds (JVM running for 751.137)
2025-07-03 09:01:49.242 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==>  Preparing: SELECT * FROM bookorder WHERE orderStatus = '待付款' AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ? ORDER BY orderTime ASC
2025-07-03 09:01:49.244 [scheduling-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:01:49.244 [scheduling-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM bookorder
        WHERE orderStatus = '待付款'
        AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ?
        ORDER BY orderTime ASC ::: DataSources: slave
2025-07-03 09:01:49.252 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==> Parameters: 30(Integer)
2025-07-03 09:01:49.255 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - <==      Total: 0
2025-07-03 09:01:49.256 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 没有发现超时订单
2025-07-03 09:01:49.364 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$754ba120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-03 09:01:49.376 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-03 09:01:49.788 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-03 09:01:49.790 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-03 09:01:49.791 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-03 09:01:49.792 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-03 09:01:49.796 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-03 09:01:49.832 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-03 09:01:49.848 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-03 09:01:49.849 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-03 09:01:49.905 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-03 09:01:49.905 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1293 ms
2025-07-03 09:01:49.909 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-03 09:01:50.673 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-03 09:01:50.703 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-03 09:01:51.024 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-03 09:01:51.024 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-03 09:01:51.461 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-03 09:01:51.619 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4716cb78, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@20c43011, org.springframework.security.web.context.SecurityContextPersistenceFilter@2923cb95, org.springframework.security.web.header.HeaderWriterFilter@66ccb3cd, org.springframework.web.filter.CorsFilter@6b82da50, org.springframework.security.web.authentication.logout.LogoutFilter@748efa3a, com.huang.store.security.JwtAuthenticationTokenFilter@60836ea5, com.huang.store.security.CustomAuthenticationFilter@1aae30dc, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@224c22ba, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5df8f2f0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@28571ac2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4cd7bd04, org.springframework.security.web.session.SessionManagementFilter@6d93a15f, org.springframework.security.web.access.ExceptionTranslationFilter@7a337c1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@493c937a]
2025-07-03 09:01:51.890 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2025-07-03 09:01:51.906 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-03 09:01:51.910 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8080 is already in use
2025-07-03 09:01:51.922 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-03 09:01:51.926 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-03 09:01:51.926 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-03 09:01:51.927 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-03 09:01:51.930 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-03 09:01:51.932 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-03 09:01:51.940 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-03 09:01:51.947 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-03 09:01:51.955 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-03 09:01:51.969 [restartedMain] ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2025-07-03 09:03:42.282 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-03 09:03:42.296 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 19704 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-03 09:03:42.297 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-03 09:03:42.299 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-03 09:03:42.402 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-03 09:03:42.403 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-03 09:03:42.833 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-03 09:03:42.835 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-03 09:03:42.864 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
2025-07-03 09:03:43.051 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$7c964caf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-03 09:03:43.061 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-03 09:03:43.454 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-03 09:03:43.456 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-03 09:03:43.456 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-03 09:03:43.457 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-03 09:03:43.459 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-03 09:03:43.465 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-03 09:03:43.470 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-03 09:03:43.472 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-03 09:03:43.545 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-03 09:03:43.546 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1143 ms
2025-07-03 09:03:43.551 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-03 09:03:44.250 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-03 09:03:44.280 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-03 09:03:44.585 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-03 09:03:44.586 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-03 09:03:44.994 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-03 09:03:45.154 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4716cb78, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@20c43011, org.springframework.security.web.context.SecurityContextPersistenceFilter@4a1f8f5d, org.springframework.security.web.header.HeaderWriterFilter@12b883b5, org.springframework.web.filter.CorsFilter@6b82da50, org.springframework.security.web.authentication.logout.LogoutFilter@11715595, com.huang.store.security.JwtAuthenticationTokenFilter@5fdd9ef3, com.huang.store.security.CustomAuthenticationFilter@5b990c2, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@24114a4c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@11109b2c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6d93a15f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4cd7bd04, org.springframework.security.web.session.SessionManagementFilter@575a1627, org.springframework.security.web.access.ExceptionTranslationFilter@58b1f39e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6f8dbf76]
2025-07-03 09:03:45.395 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-03 09:03:45.409 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-03 09:03:45.426 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-03 09:03:45.433 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 开始检查超时订单...
2025-07-03 09:03:45.435 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 3.447 seconds (JVM running for 3.695)
2025-07-03 09:03:45.485 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==>  Preparing: SELECT * FROM bookorder WHERE orderStatus = '待付款' AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ? ORDER BY orderTime ASC
2025-07-03 09:03:45.508 [scheduling-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:03:45.509 [scheduling-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM bookorder
        WHERE orderStatus = '待付款'
        AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ?
        ORDER BY orderTime ASC ::: DataSources: slave
2025-07-03 09:03:45.569 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==> Parameters: 30(Integer)
2025-07-03 09:03:45.580 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - <==      Total: 0
2025-07-03 09:03:45.586 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 没有发现超时订单
2025-07-03 09:05:31.496 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-03 09:05:31.497 [Thread-7] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-03 09:05:31.508 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1740795896] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-03 09:05:31.509 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1740795896] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-03 09:05:31.511 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1819835386] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-03 09:05:31.513 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1819835386] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-03 09:05:31.516 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-03 09:05:31.520 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-03 09:05:31.556 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-03 09:05:31.562 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-03 09:05:31.563 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-03 09:05:31.565 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-03 09:05:36.581 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 19704 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-03 09:05:36.581 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-03 09:05:36.581 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-03 09:05:36.697 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-03 09:05:36.698 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-03 09:05:36.699 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 0 ms. Found 0 Redis repository interfaces.
2025-07-03 09:05:36.735 [restartedMain] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[com.huang.store.mapper]' package. Please check your configuration.
2025-07-03 09:05:36.779 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-03 09:05:36.780 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-03 09:05:36.780 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-03 09:05:36.780 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-03 09:05:36.781 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-03 09:05:36.782 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-03 09:05:36.782 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-03 09:05:36.796 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-03 09:05:36.797 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 213 ms
2025-07-03 09:05:36.843 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-03 09:05:36.898 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} inited
2025-07-03 09:05:36.915 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} inited
2025-07-03 09:05:36.938 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
2025-07-03 09:05:36.939 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closing ...
2025-07-03 09:05:36.940 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed
2025-07-03 09:05:36.940 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closing ...
2025-07-03 09:05:36.941 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed
2025-07-03 09:05:36.942 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-03 09:05:36.946 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-03 09:05:36.950 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.huang.store.StoreApplication.main(StoreApplication.java:13)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	... 24 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$76eb5b0e.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$76eb5b0e$$FastClassBySpringCGLIB$$fab45dac.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$76eb5b0e.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes\mapping\AddressMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:78)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:144)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:136)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:126)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.huang.store.entity.user.Address'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:150)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.huang.store.entity.user.Address
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 46 common frames omitted
2025-07-03 09:05:39.840 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 19704 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-03 09:05:39.841 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-03 09:05:39.841 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-03 09:05:40.000 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-03 09:05:40.001 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-03 09:05:40.009 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2025-07-03 09:05:40.069 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$7c964caf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-03 09:05:40.075 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-03 09:05:40.138 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-03 09:05:40.138 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-03 09:05:40.139 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-03 09:05:40.139 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-03 09:05:40.140 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-03 09:05:40.140 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-03 09:05:40.141 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-03 09:05:40.169 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-2].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-03 09:05:40.170 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 327 ms
2025-07-03 09:05:40.176 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-03 09:05:40.292 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} inited
2025-07-03 09:05:40.315 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} inited
2025-07-03 09:05:40.552 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-03 09:05:40.552 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-03 09:05:40.877 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-03 09:05:40.996 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@78144be9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@67de0652, org.springframework.security.web.context.SecurityContextPersistenceFilter@67a651cc, org.springframework.security.web.header.HeaderWriterFilter@62908477, org.springframework.web.filter.CorsFilter@7b790895, org.springframework.security.web.authentication.logout.LogoutFilter@650c1ecb, com.huang.store.security.JwtAuthenticationTokenFilter@27042cd1, com.huang.store.security.CustomAuthenticationFilter@5a494a72, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4b2855d4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1c736e78, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7a26f2bd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@62c4d2f8, org.springframework.security.web.session.SessionManagementFilter@4d10f1b0, org.springframework.security.web.access.ExceptionTranslationFilter@5c84f55d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@250ed575]
2025-07-03 09:05:41.160 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-03 09:05:41.176 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-03 09:05:41.194 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 开始检查超时订单...
2025-07-03 09:05:41.195 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 1.386 seconds (JVM running for 119.454)
2025-07-03 09:05:41.200 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==>  Preparing: SELECT * FROM bookorder WHERE orderStatus = '待付款' AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ? ORDER BY orderTime ASC
2025-07-03 09:05:41.200 [scheduling-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:05:41.201 [scheduling-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM bookorder
        WHERE orderStatus = '待付款'
        AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ?
        ORDER BY orderTime ASC ::: DataSources: slave
2025-07-03 09:05:41.202 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==> Parameters: 30(Integer)
2025-07-03 09:05:41.204 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - <==      Total: 0
2025-07-03 09:05:41.205 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 没有发现超时订单
2025-07-03 09:06:09.345 [Thread-9] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-03 09:06:09.347 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1906548241] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-03 09:06:09.347 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1906548241] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-03 09:06:09.348 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1382000937] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-03 09:06:09.348 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1382000937] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-03 09:06:09.352 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} closing ...
2025-07-03 09:06:09.353 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} closed
2025-07-03 09:06:09.354 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} closing ...
2025-07-03 09:06:09.355 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} closed
2025-07-03 09:06:09.413 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 19704 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-03 09:06:09.413 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-03 09:06:09.413 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-03 09:06:09.472 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-03 09:06:09.481 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 20208 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-03 09:06:09.481 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-03 09:06:09.482 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-03 09:06:09.545 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-03 09:06:09.546 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-03 09:06:09.554 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2025-07-03 09:06:09.604 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$7c964caf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-03 09:06:09.608 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-03 09:06:09.627 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-03 09:06:09.627 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-03 09:06:09.665 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-03 09:06:09.666 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-03 09:06:09.666 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-03 09:06:09.666 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-03 09:06:09.667 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-03 09:06:09.667 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-03 09:06:09.667 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-03 09:06:09.681 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-2].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-03 09:06:09.681 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 267 ms
2025-07-03 09:06:09.683 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-03 09:06:09.802 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} inited
2025-07-03 09:06:09.816 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} inited
2025-07-03 09:06:09.892 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-03 09:06:09.892 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-03 09:06:09.982 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-03 09:06:10.040 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@342f15e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6e7ea85a, org.springframework.security.web.context.SecurityContextPersistenceFilter@48e838e3, org.springframework.security.web.header.HeaderWriterFilter@6e55ec91, org.springframework.web.filter.CorsFilter@73000163, org.springframework.security.web.authentication.logout.LogoutFilter@1dda0867, com.huang.store.security.JwtAuthenticationTokenFilter@2e34d0ed, com.huang.store.security.CustomAuthenticationFilter@40272f00, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2013a5bc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@243391d5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6543d0a6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6b6d0a8d, org.springframework.security.web.session.SessionManagementFilter@69f317b2, org.springframework.security.web.access.ExceptionTranslationFilter@3f8a77bc, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@43144bb5]
2025-07-03 09:06:10.101 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-03 09:06:10.102 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-03 09:06:10.121 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-03 09:06:10.121 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2025-07-03 09:06:10.129 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-03 09:06:10.132 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 开始检查超时订单...
2025-07-03 09:06:10.132 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 0.743 seconds (JVM running for 148.392)
2025-07-03 09:06:10.135 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==>  Preparing: SELECT * FROM bookorder WHERE orderStatus = '待付款' AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ? ORDER BY orderTime ASC
2025-07-03 09:06:10.136 [scheduling-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:06:10.136 [scheduling-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM bookorder
        WHERE orderStatus = '待付款'
        AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ?
        ORDER BY orderTime ASC ::: DataSources: slave
2025-07-03 09:06:10.137 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==> Parameters: 30(Integer)
2025-07-03 09:06:10.139 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - <==      Total: 0
2025-07-03 09:06:10.140 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 没有发现超时订单
2025-07-03 09:06:10.288 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$d0bc987a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-03 09:06:10.299 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-03 09:06:10.605 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-03 09:06:10.605 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-03 09:06:10.605 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-03 09:06:10.606 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-03 09:06:10.609 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-03 09:06:10.614 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-03 09:06:10.615 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-03 09:06:10.615 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-03 09:06:10.655 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-03 09:06:10.655 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1028 ms
2025-07-03 09:06:10.659 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-03 09:06:11.213 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-03 09:06:11.238 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-03 09:06:11.477 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-03 09:06:11.477 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-03 09:06:11.813 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-03 09:06:11.923 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3ff6deb1, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@665357aa, org.springframework.security.web.context.SecurityContextPersistenceFilter@22fae2b4, org.springframework.security.web.header.HeaderWriterFilter@47ee6179, org.springframework.web.filter.CorsFilter@f2ade68, org.springframework.security.web.authentication.logout.LogoutFilter@2267bcff, com.huang.store.security.JwtAuthenticationTokenFilter@580bcbbf, com.huang.store.security.CustomAuthenticationFilter@4c4bf3dd, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6df031b5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6ca8f347, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2f15a736, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@36e48274, org.springframework.security.web.session.SessionManagementFilter@66cfc67e, org.springframework.security.web.access.ExceptionTranslationFilter@6ff9a61c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@9024ff]
2025-07-03 09:06:12.149 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2025-07-03 09:06:12.163 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-03 09:06:12.165 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8080 is already in use
2025-07-03 09:06:12.173 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-03 09:06:12.176 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-03 09:06:12.176 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-03 09:06:12.177 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-03 09:06:12.179 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-03 09:06:12.179 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-03 09:06:12.182 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-03 09:06:12.183 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-03 09:06:12.187 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-03 09:06:12.196 [restartedMain] ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2025-07-03 09:06:26.729 [http-nio-8080-exec-1] INFO  o.a.c.c.ContainerBase.[Tomcat-2].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-03 09:06:26.729 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-03 09:06:26.730 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-03 09:06:26.860 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-03 09:06:26.860 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:06:26.860 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-03 09:06:26.862 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 56464ff@456.com(String)
2025-07-03 09:06:26.868 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-03 09:06:26.879 [http-nio-8080-exec-1] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:56464ff@456.com    数据库密码:$2a$10$7OBMT05X3FsorQiaTl2aQuxGJpdi4w1dVWZdG8Oy9K7E61SWT9WAy
2025-07-03 09:06:26.952 [http-nio-8080-exec-1] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=56464ff@456.com, password=$2a$10$7OBMT05X3FsorQiaTl2aQuxGJpdi4w1dVWZdG8Oy9K7E61SWT9WAy, enabled=true, roles=[ROLE_USER]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]
2025-07-03 09:06:26.985 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-03 09:06:26.985 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:06:26.985 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-03 09:06:26.986 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 56464ff@456.com(String)
2025-07-03 09:06:26.987 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-03 09:06:28.206 [http-nio-8080-exec-10] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-03 09:06:28.207 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:06:28.207 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-03 09:06:28.208 [http-nio-8080-exec-6] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-03 09:06:28.208 [http-nio-8080-exec-10] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-03 09:06:28.209 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-03 09:06:28.209 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-03 09:06:28.209 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:06:28.210 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-03 09:06:28.209 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:06:28.210 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-03 09:06:28.213 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-03 09:06:28.213 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-03 09:06:28.213 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-03 09:06:28.214 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:06:28.214 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:06:28.214 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:06:28.214 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-03 09:06:28.214 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-03 09:06:28.214 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-03 09:06:28.219 [http-nio-8080-exec-10] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 6
2025-07-03 09:06:28.221 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-03 09:06:28.221 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:06:28.221 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-03 09:06:28.221 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-03 09:06:28.223 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-03 09:06:28.224 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-03 09:06:28.225 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:06:28.225 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-03 09:06:28.225 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-03 09:06:28.227 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-03 09:06:28.230 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-03 09:06:28.230 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-03 09:06:28.233 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-03 09:06:28.234 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-03 09:06:28.234 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-03 09:06:28.234 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:06:28.234 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-03 09:06:28.234 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-03 09:06:28.235 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-03 09:06:28.235 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:06:28.235 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-03 09:06:28.239 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-03 09:06:28.239 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 6(Long)
2025-07-03 09:06:28.240 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-03 09:06:28.240 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-03 09:06:28.241 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:06:28.241 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-03 09:06:28.242 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-03 09:06:28.242 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-03 09:06:28.243 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-03 09:06:28.245 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 1
2025-07-03 09:06:28.245 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-03 09:06:28.246 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-03 09:06:28.247 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-03 09:06:28.248 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-03 09:06:28.248 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:06:28.248 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-03 09:06:28.249 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 2(Integer)
2025-07-03 09:06:28.251 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-03 09:06:28.252 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-03 09:06:28.255 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:06:28.255 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:06:28.255 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:06:28.255 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:06:28.255 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:06:28.257 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:06:28.257 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-03 09:06:28.259 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-03 09:06:28.262 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:06:28.262 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:06:28.263 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-03 09:06:28.263 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:06:28.263 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:06:28.263 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:06:28.263 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-03 09:06:28.263 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:06:28.264 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-03 09:06:28.264 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-03 09:06:28.265 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:06:28.266 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-03 09:06:28.267 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:06:28.267 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:06:28.267 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:06:28.267 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-03 09:06:28.268 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:06:28.269 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 5(Long)
2025-07-03 09:06:28.269 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-03 09:06:28.269 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-03 09:06:28.270 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 09:06:28.271 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:06:28.272 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-03 09:06:28.272 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 09:06:28.272 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:06:28.273 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-03 09:06:28.273 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:06:28.273 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-03 09:06:28.274 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:06:28.274 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:06:28.274 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-03 09:06:28.274 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:06:28.275 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:06:28.276 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 4(Long)
2025-07-03 09:06:28.276 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-03 09:06:28.276 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:06:28.277 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:06:28.277 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 09:06:28.277 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:06:28.277 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:06:28.277 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:06:28.277 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 09:06:28.277 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:06:28.278 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-03 09:06:28.279 [http-nio-8080-exec-10] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 1
2025-07-03 09:06:28.280 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:06:28.280 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-03 09:06:28.281 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-03 09:06:28.281 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 09:06:28.281 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:06:28.281 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:06:28.281 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-03 09:06:28.281 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 09:06:28.281 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 1(Integer)
2025-07-03 09:06:28.282 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-03 09:06:28.283 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-03 09:06:28.283 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-03 09:06:28.283 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 09:06:28.284 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:06:28.284 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 09:06:28.284 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:06:28.284 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-03 09:06:28.284 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:06:28.284 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:06:28.284 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:06:28.286 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:06:28.286 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-03 09:09:31.103 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-03 09:09:31.104 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:31.105 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-03 09:09:31.123 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-03 09:09:31.139 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-03 09:09:31.141 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 09:09:31.146 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:31.146 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 09:09:31.150 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-03 09:09:31.152 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-03 09:09:31.154 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 09:09:31.155 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:31.156 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 09:09:31.157 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-03 09:09:31.158 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-03 09:09:31.159 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 09:09:31.160 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:31.161 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 09:09:31.162 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-03 09:09:31.164 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-03 09:09:31.166 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 09:09:31.167 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:31.168 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 09:09:31.169 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-03 09:09:31.173 [http-nio-8080-exec-6] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-03 09:09:31.793 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-03 09:09:31.793 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:31.793 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-03 09:09:31.794 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 5(Integer)
2025-07-03 09:09:31.797 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-03 09:09:31.798 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.BookMapper.getBookImgSrcList - ==>  Preparing: select imgSrc from bookimg where isbn=?
2025-07-03 09:09:31.799 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:31.800 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? ::: DataSources: slave
2025-07-03 09:09:31.801 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.BookMapper.getBookImgSrcList - ==> Parameters: 9787020002214(String)
2025-07-03 09:09:31.803 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.BookMapper.getBookImgSrcList - <==      Total: 1
2025-07-03 09:09:31.804 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:09:31.805 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:31.805 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:09:31.806 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:09:31.809 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:09:31.822 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookSort - ==>  Preparing: select * from booksort where id in (select bookSortId from booksortlist where bookId=?)
2025-07-03 09:09:31.824 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:31.824 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where id in (select bookSortId from booksortlist where bookId=?) ::: DataSources: slave
2025-07-03 09:09:31.826 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookSort - ==> Parameters: 5(Integer)
2025-07-03 09:09:31.830 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookSort - <==      Total: 1
2025-07-03 09:09:31.831 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getBookSortId - ==>  Preparing: select id from booksort where upperName=? and sortName=?
2025-07-03 09:09:31.831 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:31.831 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select id from booksort where upperName=? and sortName=? ::: DataSources: slave
2025-07-03 09:09:31.833 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getBookSortId - ==> Parameters: 无(String), 文学(String)
2025-07-03 09:09:31.837 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getBookSortId - <==      Total: 1
2025-07-03 09:09:33.139 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CartController - 添加图书到购物车: 用户=56464ff@456.com, 图书ID=5, 数量=1
2025-07-03 09:09:33.140 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.CartMapper.existProduct - ==>  Preparing: select count(1) from cart where account=? and id = ?
2025-07-03 09:09:33.141 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:33.141 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select count(1) from cart where account=? and id = ? ::: DataSources: slave
2025-07-03 09:09:33.144 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.CartMapper.existProduct - ==> Parameters: 56464ff@456.com(String), 5(Integer)
2025-07-03 09:09:33.148 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.CartMapper.existProduct - <==      Total: 1
2025-07-03 09:09:33.150 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.CartMapper.addProduct - ==>  Preparing: insert into cart(account,id,num,addTime) values (?,?,?,?)
2025-07-03 09:09:33.154 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:33.154 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: insert into cart(account,id,num,addTime)
            values (?,?,?,?) ::: DataSources: master
2025-07-03 09:09:33.374 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.CartMapper.addProduct - ==> Parameters: 56464ff@456.com(String), 5(Integer), 1(Integer), 2025-07-03 09:09:33.149(Timestamp)
2025-07-03 09:09:33.386 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.CartMapper.addProduct - <==    Updates: 1
2025-07-03 09:09:33.386 [http-nio-8080-exec-1] INFO  com.huang.store.controller.CartController - 添加到购物车成功: 用户=56464ff@456.com, 图书ID=5, 数量=1
2025-07-03 09:09:36.755 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.CartMapper.getCartsByPage - ==>  Preparing: select book.id,author,bookName,isbn,publish, birthday,marketPrice,price,stock,description,put,num,addTime,account from book join cart on book.id = cart.id where account=? limit ?,?
2025-07-03 09:09:36.789 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:36.791 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select book.id,author,bookName,isbn,publish,
                birthday,marketPrice,price,stock,description,put,num,addTime,account
         from book join cart on book.id = cart.id
         where account=? limit ?,? ::: DataSources: slave
2025-07-03 09:09:36.804 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.CartMapper.getCartsByPage - ==> Parameters: 56464ff@456.com(String), 0(Integer), 10(Integer)
2025-07-03 09:09:36.810 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.CartMapper.getCartsByPage - <==      Total: 1
2025-07-03 09:09:36.811 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:09:36.813 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:36.815 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:09:36.816 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:09:36.818 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:09:39.585 [http-nio-8080-exec-4] INFO  com.huang.store.controller.OrderController - 初始化订单: 用户=56464ff@456.com, 商品IDs=[5], 来源=1
2025-07-03 09:09:39.608 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBatchBookList - ==>  Preparing: select book.id,author,bookName,isbn,publish, birthday,marketPrice,price,stock,description,cart.num from book inner join cart on book.id = cart.id where cart.account = ? and book.id in ( ? )
2025-07-03 09:09:39.608 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:39.608 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select book.id,author,bookName,isbn,publish,
                birthday,marketPrice,price,stock,description,cart.num
         from book
         inner join cart on book.id = cart.id
         where cart.account = ?
         and book.id in
         (  
            ?
         ) ::: DataSources: slave
2025-07-03 09:09:39.610 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBatchBookList - ==> Parameters: 56464ff@456.com(String), 5(Integer)
2025-07-03 09:09:39.612 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBatchBookList - <==      Total: 1
2025-07-03 09:09:39.613 [http-nio-8080-exec-4] INFO  com.huang.store.controller.OrderController - 从购物车获取到1件商品
2025-07-03 09:09:39.615 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:09:39.615 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:39.615 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:09:39.616 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:09:39.617 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:09:39.618 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.AddressMapper.addressList - ==>  Preparing: select * from address where account=? and off=false
2025-07-03 09:09:39.618 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:39.618 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from address where account=? and off=false ::: DataSources: slave
2025-07-03 09:09:39.619 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.AddressMapper.addressList - ==> Parameters: 56464ff@456.com(String)
2025-07-03 09:09:39.623 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.AddressMapper.addressList - <==      Total: 2
2025-07-03 09:09:39.623 [http-nio-8080-exec-4] INFO  com.huang.store.controller.OrderController - 订单初始化成功: 用户=56464ff@456.com, 商品数量=1, 总金额=38.0
2025-07-03 09:09:43.516 [http-nio-8080-exec-2] INFO  com.huang.store.controller.OrderController - 创建订单: 用户=56464ff@456.com, 商品数量=1
2025-07-03 09:09:43.537 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-03 09:09:43.538 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:43.540 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-03 09:09:43.541 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 5(Integer)
2025-07-03 09:09:43.546 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-03 09:09:43.554 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.addOrder - ==>  Preparing: insert into bookorder(orderId,account,addressId,orderTime,shipTime,getTime,evaluateTime,closeTime,orderStatus,logisticsNum,confirmTime) values (?,?,?,?,?,?,?,?,?,?,?)
2025-07-03 09:09:43.555 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:43.555 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: insert into bookorder(orderId,account,addressId,orderTime,shipTime,getTime,evaluateTime,closeTime,orderStatus,logisticsNum,confirmTime)
            values (?,?,?,?,?,?,?,?,?,?,?) ::: DataSources: master
2025-07-03 09:09:43.572 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.addOrder - ==> Parameters: 20250703090943723937(String), 56464ff@456.com(String), 5(Integer), 2025-07-03 09:09:43.528(Timestamp), null, null, null, null, 待付款(String), null, null
2025-07-03 09:09:43.575 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.addOrder - <==    Updates: 1
2025-07-03 09:09:43.579 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.OrderMapper.batchAddOrderDetail - ==>  Preparing: insert into orderdetail(orderId,bookId,num,price) values (?,?,?,?)
2025-07-03 09:09:43.579 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:43.579 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: insert into orderdetail(orderId,bookId,num,price)
        values
          
            (?,?,?,?) ::: DataSources: master
2025-07-03 09:09:43.582 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.OrderMapper.batchAddOrderDetail - ==> Parameters: 20250703090943723937(String), 5(Integer), 1(Integer), 38.0(Double)
2025-07-03 09:09:43.599 [http-nio-8080-exec-2] DEBUG c.h.store.mapper.OrderMapper.batchAddOrderDetail - <==    Updates: 1
2025-07-03 09:09:43.601 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.ExpenseMapper.addExpense - ==>  Preparing: insert into expense(orderId,productTotalMoney,freight,coupon,activityDiscount,allPrice,finallyPrice) values (?,?,?,?,?,?,?)
2025-07-03 09:09:43.602 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:43.602 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: insert into expense(orderId,productTotalMoney,freight,coupon,activityDiscount,allPrice,finallyPrice)
            values (?,?,?,?,?,?,?) ::: DataSources: master
2025-07-03 09:09:43.605 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.ExpenseMapper.addExpense - ==> Parameters: 20250703090943723937(String), 38.0(Double), 0.0(Double), 0(Integer), 0.0(Double), 38.0(Double), 38.0(Double)
2025-07-03 09:09:43.610 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.ExpenseMapper.addExpense - <==    Updates: 1
2025-07-03 09:09:43.612 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-03 09:09:43.612 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:43.612 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: master
2025-07-03 09:09:43.613 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 5(Integer)
2025-07-03 09:09:43.617 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-03 09:09:43.619 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.StockReservationMapper.insert - ==>  Preparing: INSERT INTO stock_reservation ( book_id, order_id, reserved_quantity, expire_time, status, create_time, update_time ) VALUES ( ?, ?, ?, DATE_ADD(NOW(), INTERVAL 30 MINUTE), ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP )
2025-07-03 09:09:43.619 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:43.623 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: INSERT INTO stock_reservation (
            book_id, order_id, reserved_quantity, expire_time, status, create_time, update_time
        ) VALUES (
            ?, ?, ?,
            DATE_ADD(NOW(), INTERVAL 30 MINUTE), ?,
            CURRENT_TIMESTAMP, CURRENT_TIMESTAMP
        ) ::: DataSources: master
2025-07-03 09:09:43.629 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.StockReservationMapper.insert - ==> Parameters: 5(Integer), 20250703090943723937(String), 1(Integer), 0(Integer)
2025-07-03 09:09:43.646 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.StockReservationMapper.insert - <==    Updates: 1
2025-07-03 09:09:43.648 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - ==>  Preparing: update book set stock=stock-? where id=? and stock>=?
2025-07-03 09:09:43.650 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:43.650 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: update book
            set stock=stock-?
                where id=? and stock>=? ::: DataSources: master
2025-07-03 09:09:43.654 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - ==> Parameters: 1(Integer), 5(Integer), 1(Integer)
2025-07-03 09:09:43.669 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - <==    Updates: 1
2025-07-03 09:09:43.690 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.CartMapper.delBatchProduct - ==>  Preparing: delete from cart where account=? and id in ( ? )
2025-07-03 09:09:43.691 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:43.692 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: delete from cart where account=? and id in
         (  
            ?
         ) ::: DataSources: master
2025-07-03 09:09:43.694 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.CartMapper.delBatchProduct - ==> Parameters: 56464ff@456.com(String), 5(Integer)
2025-07-03 09:09:43.712 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.CartMapper.delBatchProduct - <==    Updates: 1
2025-07-03 09:09:43.712 [http-nio-8080-exec-2] INFO  com.huang.store.controller.OrderController - 订单创建成功，已删除购物车商品: 用户=56464ff@456.com, 删除数量=1
2025-07-03 09:09:44.810 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:09:44.810 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:09:44.814 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:44.817 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:09:44.812 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:44.828 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:09:44.830 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), false(Boolean), 0(Integer), 5(Integer)
2025-07-03 09:09:44.837 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:09:44.841 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:09:44.842 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 5
2025-07-03 09:09:44.848 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:09:44.851 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:44.851 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:09:44.849 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:09:44.853 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703090943723937(String)
2025-07-03 09:09:44.855 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:44.861 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:09:44.862 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703090943723937(String)
2025-07-03 09:09:44.863 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:09:44.866 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:09:44.883 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:09:44.883 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:09:44.883 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:44.883 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:44.884 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:09:44.884 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:09:44.884 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:09:44.884 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:09:44.886 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:09:44.886 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:09:44.889 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:09:44.889 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND beUserDelete = ?
2025-07-03 09:09:44.889 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:44.889 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:44.890 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:09:44.890 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:09:44.890 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250702230939355225(String)
2025-07-03 09:09:44.892 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), false(Boolean)
2025-07-03 09:09:44.893 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:09:44.896 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:09:44.897 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:44.897 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:09:44.897 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:09:44.897 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-03 09:09:44.899 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:09:44.908 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:09:44.909 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:44.911 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:09:44.915 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250702202456192460(String)
2025-07-03 09:09:44.920 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:09:44.924 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:09:44.924 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:44.925 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:09:44.925 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:09:44.927 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:09:44.928 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:09:44.929 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:44.930 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:09:44.930 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:09:44.931 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:44.931 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:09:44.932 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701224811070894(String)
2025-07-03 09:09:44.933 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:09:44.934 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:09:44.935 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:09:44.936 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:44.936 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:09:44.937 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:09:44.938 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:09:44.939 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:09:44.940 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:09:44.940 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:44.941 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:09:44.941 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:09:44.941 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:44.942 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:09:44.942 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703090943723937(String)
2025-07-03 09:09:44.943 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751381288511772(String)
2025-07-03 09:09:44.945 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:09:44.946 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:09:44.947 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:09:44.947 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:09:44.947 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:44.947 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:44.948 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:09:44.947 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:09:44.949 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:09:44.949 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:09:44.951 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:09:44.951 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:09:44.952 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND beUserDelete = ?
2025-07-03 09:09:44.952 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:09:44.952 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:44.952 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:44.953 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:09:44.953 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:09:44.953 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), false(Boolean)
2025-07-03 09:09:44.954 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean)
2025-07-03 09:09:44.955 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:09:44.955 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:09:44.977 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:09:44.978 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:44.978 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:09:44.981 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已付款(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:09:44.987 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:09:44.988 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:09:44.989 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:44.990 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:09:44.991 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701224748414440(String)
2025-07-03 09:09:44.993 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:09:44.995 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:09:44.995 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:44.995 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:09:44.997 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:09:45.000 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:09:45.001 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:09:45.001 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.001 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:09:45.002 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已付款(String), false(Boolean)
2025-07-03 09:09:45.004 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:09:45.019 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:09:45.019 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.019 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:09:45.021 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:09:45.026 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:09:45.027 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:09:45.028 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.028 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:09:45.029 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703090943723937(String)
2025-07-03 09:09:45.033 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:09:45.041 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:09:45.041 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.041 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:09:45.041 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:09:45.042 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:09:45.043 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND beUserDelete = ?
2025-07-03 09:09:45.045 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.043 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:09:45.045 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:09:45.046 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.046 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:09:45.046 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), false(Boolean)
2025-07-03 09:09:45.047 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:09:45.048 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:09:45.049 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:09:45.050 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:09:45.051 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.052 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:09:45.053 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751381288511772(String)
2025-07-03 09:09:45.055 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:09:45.057 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:09:45.060 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.060 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:09:45.061 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:09:45.063 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:09:45.064 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:09:45.064 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.065 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:09:45.066 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean)
2025-07-03 09:09:45.069 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:09:45.069 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:09:45.070 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.070 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:09:45.071 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:09:45.076 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:09:45.076 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:09:45.077 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.077 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:09:45.077 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703090943723937(String)
2025-07-03 09:09:45.078 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:09:45.081 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:09:45.081 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.081 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:09:45.081 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:09:45.082 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:09:45.083 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:09:45.083 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.084 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:09:45.084 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean)
2025-07-03 09:09:45.085 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:09:45.128 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:09:45.128 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:09:45.129 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.130 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.130 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:09:45.130 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:09:45.132 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已完成(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:09:45.134 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已付款(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:09:45.137 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:09:45.137 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:09:45.138 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:09:45.139 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:09:45.139 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.139 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.139 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:09:45.139 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:09:45.140 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701224748414440(String)
2025-07-03 09:09:45.141 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701224811070894(String)
2025-07-03 09:09:45.143 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:09:45.144 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:09:45.145 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:09:45.146 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:09:45.147 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.146 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.147 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:09:45.147 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:09:45.148 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:09:45.148 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:09:45.150 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:09:45.150 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:09:45.151 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:09:45.151 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.151 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:09:45.151 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:09:45.152 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已付款(String), false(Boolean)
2025-07-03 09:09:45.152 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.153 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:09:45.153 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已完成(String), false(Boolean)
2025-07-03 09:09:45.154 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:09:45.154 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:09:45.175 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:09:45.175 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.176 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:09:45.177 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:09:45.179 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:09:45.180 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:09:45.181 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.181 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:09:45.182 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751381288511772(String)
2025-07-03 09:09:45.183 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:09:45.187 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:09:45.188 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:09:45.188 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.188 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.188 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:09:45.188 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:09:45.188 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:09:45.188 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已取消(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:09:45.189 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:09:45.190 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:09:45.191 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.191 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:09:45.192 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:09:45.193 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean)
2025-07-03 09:09:45.194 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:09:45.195 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.195 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:09:45.195 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250702230939355225(String)
2025-07-03 09:09:45.195 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:09:45.197 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:09:45.200 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:09:45.201 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.201 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:09:45.202 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-03 09:09:45.203 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:09:45.204 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:09:45.204 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.204 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:09:45.205 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已取消(String), false(Boolean)
2025-07-03 09:09:45.208 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:09:45.219 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:09:45.219 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.219 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:09:45.220 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已完成(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:09:45.228 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:09:45.229 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:09:45.230 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.230 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:09:45.230 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701224811070894(String)
2025-07-03 09:09:45.233 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:09:45.236 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:09:45.236 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.236 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:09:45.236 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:09:45.237 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:09:45.238 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:09:45.239 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.239 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:09:45.240 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已完成(String), false(Boolean)
2025-07-03 09:09:45.243 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:09:45.260 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:09:45.260 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.260 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:09:45.261 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已取消(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:09:45.264 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:09:45.265 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:09:45.265 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.265 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:09:45.265 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250702230939355225(String)
2025-07-03 09:09:45.267 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:09:45.268 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:09:45.269 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.269 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:09:45.269 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-03 09:09:45.272 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:09:45.274 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:09:45.274 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:45.275 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:09:45.275 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已取消(String), false(Boolean)
2025-07-03 09:09:45.277 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:09:47.350 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:09:47.351 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:47.351 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:09:47.355 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean), 0(Integer), 5(Integer)
2025-07-03 09:09:47.359 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:09:47.360 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:09:47.362 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:47.362 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:09:47.364 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703090943723937(String)
2025-07-03 09:09:47.367 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:09:47.369 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:09:47.369 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:47.369 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:09:47.369 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:09:47.371 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:09:47.374 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:09:47.374 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:47.374 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:09:47.375 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean)
2025-07-03 09:09:47.376 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:09:47.399 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:09:47.399 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:47.399 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:09:47.400 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:09:47.402 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:09:47.402 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:09:47.403 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:47.403 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:09:47.405 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703090943723937(String)
2025-07-03 09:09:47.407 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:09:47.409 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:09:47.410 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:47.411 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:09:47.411 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:09:47.413 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:09:47.414 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND beUserDelete = ?
2025-07-03 09:09:47.415 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:47.415 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:09:47.416 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), false(Boolean)
2025-07-03 09:09:47.417 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:09:47.431 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:09:47.431 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:47.431 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:09:47.432 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:09:47.434 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:09:47.435 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:09:47.435 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:47.435 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:09:47.436 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703090943723937(String)
2025-07-03 09:09:47.438 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:09:47.439 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:09:47.440 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:47.441 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:09:47.442 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:09:47.444 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:09:47.445 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:09:47.445 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:47.445 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:09:47.446 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean)
2025-07-03 09:09:47.447 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:09:47.465 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:09:47.465 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:47.465 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:09:47.465 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已付款(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:09:47.469 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:09:47.470 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:09:47.471 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:47.471 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:09:47.472 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701224748414440(String)
2025-07-03 09:09:47.474 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:09:47.475 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:09:47.475 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:47.476 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:09:47.477 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:09:47.478 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:09:47.479 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:09:47.479 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:47.479 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:09:47.480 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已付款(String), false(Boolean)
2025-07-03 09:09:47.481 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:09:47.499 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:09:47.499 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:47.499 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:09:47.500 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:09:47.502 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:09:47.503 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:09:47.503 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:47.503 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:09:47.504 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751381288511772(String)
2025-07-03 09:09:47.505 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:09:47.506 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:09:47.507 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:47.507 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:09:47.507 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:09:47.508 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:09:47.510 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:09:47.510 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:47.510 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:09:47.511 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean)
2025-07-03 09:09:47.513 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:09:47.527 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:09:47.527 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:47.527 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:09:47.528 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已完成(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:09:47.530 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:09:47.530 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:09:47.531 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:47.532 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:09:47.533 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701224811070894(String)
2025-07-03 09:09:47.535 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:09:47.536 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:09:47.536 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:47.536 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:09:47.536 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:09:47.537 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:09:47.539 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:09:47.540 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:47.540 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:09:47.540 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已完成(String), false(Boolean)
2025-07-03 09:09:47.541 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:09:47.560 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:09:47.561 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:47.561 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:09:47.563 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已取消(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:09:47.566 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:09:47.566 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:09:47.568 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:47.568 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:09:47.569 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250702230939355225(String)
2025-07-03 09:09:47.571 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:09:47.571 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:09:47.572 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:47.572 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:09:47.572 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-03 09:09:47.574 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:09:47.575 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:09:47.576 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:09:47.576 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:09:47.576 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已取消(String), false(Boolean)
2025-07-03 09:09:47.576 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:10:50.260 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.OrderMapper.findOrderDtoByOrderId - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.orderId = ?
2025-07-03 09:10:50.263 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:10:50.265 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
        WHERE o.orderId = ? ::: DataSources: slave
2025-07-03 09:10:50.271 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.OrderMapper.findOrderDtoByOrderId - ==> Parameters: 20250703090943723937(String)
2025-07-03 09:10:50.276 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.OrderMapper.findOrderDtoByOrderId - <==      Total: 1
2025-07-03 09:10:50.278 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.StockReservationMapper.findByOrderId - ==>  Preparing: SELECT * FROM stock_reservation WHERE order_id = ? ORDER BY create_time DESC
2025-07-03 09:10:50.278 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:10:50.278 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: SELECT * FROM stock_reservation 
        WHERE order_id = ?
        ORDER BY create_time DESC ::: DataSources: slave
2025-07-03 09:10:50.280 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.StockReservationMapper.findByOrderId - ==> Parameters: 20250703090943723937(String)
2025-07-03 09:10:50.284 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.StockReservationMapper.findByOrderId - <==      Total: 1
2025-07-03 09:10:50.287 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.StockReservationMapper.updateById - ==>  Preparing: UPDATE stock_reservation SET status = ?, update_time = CURRENT_TIMESTAMP , expire_time = ? WHERE id = ?
2025-07-03 09:10:50.288 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:10:50.290 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: UPDATE stock_reservation 
        SET 
            status = ?,
            update_time = CURRENT_TIMESTAMP
             , expire_time = ? 
        WHERE id = ? ::: DataSources: master
2025-07-03 09:10:50.300 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.StockReservationMapper.updateById - ==> Parameters: 1(Integer), 2025-07-03 09:39:43.0(Timestamp), 1(Long)
2025-07-03 09:10:50.305 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.StockReservationMapper.updateById - <==    Updates: 1
2025-07-03 09:10:50.312 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.modifyOrder - ==>  Preparing: update bookorder set orderStatus=? where id=?
2025-07-03 09:10:50.315 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:10:50.315 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: update bookorder set
         
         
            orderStatus=?
         
         
        where id=? ::: DataSources: master
2025-07-03 09:10:50.315 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.modifyOrder - ==> Parameters: 已付款(String), 28(Integer)
2025-07-03 09:10:50.317 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.modifyOrder - <==    Updates: 1
2025-07-03 09:10:50.338 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:10:50.339 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:10:50.339 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:10:50.340 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean), 0(Integer), 5(Integer)
2025-07-03 09:10:50.342 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 0
2025-07-03 09:10:50.343 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:10:50.343 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:10:50.343 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:10:50.343 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean)
2025-07-03 09:10:50.345 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:10:50.370 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:10:50.370 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:10:50.370 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:10:50.372 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:10:50.378 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:10:50.381 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:10:50.382 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:10:50.383 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:10:50.384 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703090943723937(String)
2025-07-03 09:10:50.386 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:10:50.387 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:10:50.387 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:10:50.387 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:10:50.388 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:10:50.390 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:10:50.391 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND beUserDelete = ?
2025-07-03 09:10:50.391 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:10:50.391 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:10:50.392 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), false(Boolean)
2025-07-03 09:10:50.394 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:10:50.412 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:10:50.412 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:10:50.412 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:10:50.413 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:10:50.415 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 0
2025-07-03 09:10:50.416 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:10:50.416 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:10:50.417 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:10:50.418 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean)
2025-07-03 09:10:50.420 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:10:50.435 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:10:50.436 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:10:50.436 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:10:50.438 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已付款(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:10:50.440 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:10:50.440 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:10:50.440 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:10:50.441 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:10:50.441 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703090943723937(String)
2025-07-03 09:10:50.444 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:10:50.445 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:10:50.445 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:10:50.445 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:10:50.445 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:10:50.446 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:10:50.449 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:10:50.449 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:10:50.449 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:10:50.449 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已付款(String), false(Boolean)
2025-07-03 09:10:50.451 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:10:50.479 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:10:50.479 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:10:50.479 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:10:50.481 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:10:50.484 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:10:50.484 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:10:50.485 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:10:50.485 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:10:50.487 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751381288511772(String)
2025-07-03 09:10:50.489 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:10:50.490 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:10:50.491 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:10:50.491 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:10:50.492 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:10:50.493 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:10:50.496 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:10:50.496 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:10:50.497 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:10:50.497 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean)
2025-07-03 09:10:50.499 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:10:50.515 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:10:50.516 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:10:50.516 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:10:50.517 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已完成(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:10:50.520 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:10:50.520 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:10:50.521 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:10:50.521 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:10:50.523 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701224811070894(String)
2025-07-03 09:10:50.525 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:10:50.527 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:10:50.528 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:10:50.529 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:10:50.530 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:10:50.532 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:10:50.533 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:10:50.533 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:10:50.533 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:10:50.534 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已完成(String), false(Boolean)
2025-07-03 09:10:50.535 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:10:50.552 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:10:50.552 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:10:50.552 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:10:50.553 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已取消(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:10:50.556 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:10:50.558 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:10:50.558 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:10:50.558 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:10:50.558 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250702230939355225(String)
2025-07-03 09:10:50.560 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:10:50.561 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:10:50.562 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:10:50.564 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:10:50.566 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-03 09:10:50.568 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:10:50.570 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:10:50.570 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:10:50.570 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:10:50.573 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已取消(String), false(Boolean)
2025-07-03 09:10:50.574 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:11:10.133 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 开始检查超时订单...
2025-07-03 09:11:10.133 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==>  Preparing: SELECT * FROM bookorder WHERE orderStatus = '待付款' AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ? ORDER BY orderTime ASC
2025-07-03 09:11:10.134 [scheduling-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:10.134 [scheduling-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM bookorder
        WHERE orderStatus = '待付款'
        AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ?
        ORDER BY orderTime ASC ::: DataSources: slave
2025-07-03 09:11:10.136 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==> Parameters: 30(Integer)
2025-07-03 09:11:10.138 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - <==      Total: 0
2025-07-03 09:11:10.141 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 没有发现超时订单
2025-07-03 09:11:13.363 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-03 09:11:13.368 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:13.369 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-03 09:11:13.363 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-03 09:11:13.366 [http-nio-8080-exec-6] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-03 09:11:13.366 [http-nio-8080-exec-7] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-03 09:11:13.377 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-03 09:11:13.367 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-03 09:11:13.370 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-03 09:11:13.372 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-03 09:11:13.382 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:13.383 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-03 09:11:13.375 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:13.377 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:13.377 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:13.377 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:13.382 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-03 09:11:13.383 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-03 09:11:13.384 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-03 09:11:13.384 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-03 09:11:13.384 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-03 09:11:13.385 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-03 09:11:13.385 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-03 09:11:13.386 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-03 09:11:13.388 [http-nio-8080-exec-7] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-03 09:11:13.390 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:13.394 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-03 09:11:13.391 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-03 09:11:13.396 [http-nio-8080-exec-7] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 6
2025-07-03 09:11:13.391 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-03 09:11:13.396 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-03 09:11:13.396 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-03 09:11:13.397 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-03 09:11:13.398 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:13.401 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-03 09:11:13.397 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-03 09:11:13.397 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-03 09:11:13.397 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-03 09:11:13.402 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:13.402 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-03 09:11:13.397 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:13.399 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-03 09:11:13.403 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-03 09:11:13.403 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-03 09:11:13.403 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-03 09:11:13.403 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-03 09:11:13.404 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 6(Long)
2025-07-03 09:11:13.409 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-03 09:11:13.410 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-03 09:11:13.415 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 1
2025-07-03 09:11:13.412 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-03 09:11:13.416 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-03 09:11:13.414 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:13.416 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-03 09:11:13.418 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:13.419 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-03 09:11:13.416 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:13.423 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:13.423 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:13.423 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-03 09:11:13.417 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-03 09:11:13.422 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 2(Integer)
2025-07-03 09:11:13.425 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:13.424 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-03 09:11:13.425 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:13.426 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:13.427 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:13.427 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-03 09:11:13.428 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-03 09:11:13.427 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-03 09:11:13.429 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:13.429 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:13.429 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:13.430 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-03 09:11:13.430 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:13.431 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:13.431 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:13.432 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:13.432 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:13.432 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-03 09:11:13.436 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:13.436 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-03 09:11:13.433 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-03 09:11:13.437 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 5(Long)
2025-07-03 09:11:13.438 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:13.439 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:13.439 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-03 09:11:13.440 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:13.442 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-03 09:11:13.442 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:13.443 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:13.443 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:11:13.443 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-03 09:11:13.444 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 4(Long)
2025-07-03 09:11:13.445 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:13.445 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:13.446 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:13.446 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:13.446 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 1
2025-07-03 09:11:13.450 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:11:13.452 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-03 09:11:13.453 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:13.453 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:13.459 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-03 09:11:13.460 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 1(Integer)
2025-07-03 09:11:13.466 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-03 09:11:13.466 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-03 09:11:13.466 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:13.467 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-03 09:11:13.467 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:13.467 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-03 09:11:13.470 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:13.471 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:13.471 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:11:13.472 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-03 09:11:13.473 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:13.473 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 09:11:13.474 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:13.474 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 09:11:13.479 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-03 09:11:13.480 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-03 09:11:13.481 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 09:11:13.481 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:13.481 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 09:11:13.481 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-03 09:11:13.483 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-03 09:11:13.484 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 09:11:13.484 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:13.485 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 09:11:13.485 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-03 09:11:13.486 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-03 09:11:13.487 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 09:11:13.487 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:13.487 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 09:11:13.488 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-03 09:11:13.490 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-03 09:11:15.150 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-03 09:11:15.151 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:15.152 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-03 09:11:15.153 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-03 09:11:15.157 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-03 09:11:15.158 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-03 09:11:15.160 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 09:11:15.162 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:15.162 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 09:11:15.161 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:15.163 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-03 09:11:15.163 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-03 09:11:15.164 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 5(Integer)
2025-07-03 09:11:15.166 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-03 09:11:15.170 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 09:11:15.170 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-03 09:11:15.173 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:15.175 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.BookMapper.getBookImgSrcList - ==>  Preparing: select imgSrc from bookimg where isbn=?
2025-07-03 09:11:15.177 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 09:11:15.177 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:15.178 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-03 09:11:15.178 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? ::: DataSources: slave
2025-07-03 09:11:15.179 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.BookMapper.getBookImgSrcList - ==> Parameters: 9787020002214(String)
2025-07-03 09:11:15.180 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-03 09:11:15.182 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 09:11:15.182 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.BookMapper.getBookImgSrcList - <==      Total: 1
2025-07-03 09:11:15.184 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:15.184 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 09:11:15.184 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-03 09:11:15.184 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:15.185 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:15.185 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:15.186 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:11:15.186 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-03 09:11:15.188 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 09:11:15.188 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:15.188 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:15.189 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 09:11:15.190 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-03 09:11:15.192 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookSort - ==>  Preparing: select * from booksort where id in (select bookSortId from booksortlist where bookId=?)
2025-07-03 09:11:15.193 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-03 09:11:15.193 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:15.193 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where id in (select bookSortId from booksortlist where bookId=?) ::: DataSources: slave
2025-07-03 09:11:15.194 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookSort - ==> Parameters: 5(Integer)
2025-07-03 09:11:15.195 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookSort - <==      Total: 1
2025-07-03 09:11:15.199 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortId - ==>  Preparing: select id from booksort where upperName=? and sortName=?
2025-07-03 09:11:15.199 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:15.200 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select id from booksort where upperName=? and sortName=? ::: DataSources: slave
2025-07-03 09:11:15.200 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortId - ==> Parameters: 无(String), 文学(String)
2025-07-03 09:11:15.202 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getBookSortId - <==      Total: 1
2025-07-03 09:11:16.643 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CartController - 添加图书到购物车: 用户=56464ff@456.com, 图书ID=5, 数量=1
2025-07-03 09:11:16.643 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.CartMapper.existProduct - ==>  Preparing: select count(1) from cart where account=? and id = ?
2025-07-03 09:11:16.644 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:16.644 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select count(1) from cart where account=? and id = ? ::: DataSources: slave
2025-07-03 09:11:16.644 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.CartMapper.existProduct - ==> Parameters: 56464ff@456.com(String), 5(Integer)
2025-07-03 09:11:16.645 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.CartMapper.existProduct - <==      Total: 1
2025-07-03 09:11:16.647 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.CartMapper.addProduct - ==>  Preparing: insert into cart(account,id,num,addTime) values (?,?,?,?)
2025-07-03 09:11:16.648 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:16.648 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: insert into cart(account,id,num,addTime)
            values (?,?,?,?) ::: DataSources: master
2025-07-03 09:11:16.648 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.CartMapper.addProduct - ==> Parameters: 56464ff@456.com(String), 5(Integer), 1(Integer), 2025-07-03 09:11:16.647(Timestamp)
2025-07-03 09:11:16.655 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.CartMapper.addProduct - <==    Updates: 1
2025-07-03 09:11:16.657 [http-nio-8080-exec-9] INFO  com.huang.store.controller.CartController - 添加到购物车成功: 用户=56464ff@456.com, 图书ID=5, 数量=1
2025-07-03 09:11:19.870 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.CartMapper.getCartsByPage - ==>  Preparing: select book.id,author,bookName,isbn,publish, birthday,marketPrice,price,stock,description,put,num,addTime,account from book join cart on book.id = cart.id where account=? limit ?,?
2025-07-03 09:11:19.871 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:19.871 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select book.id,author,bookName,isbn,publish,
                birthday,marketPrice,price,stock,description,put,num,addTime,account
         from book join cart on book.id = cart.id
         where account=? limit ?,? ::: DataSources: slave
2025-07-03 09:11:19.873 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.CartMapper.getCartsByPage - ==> Parameters: 56464ff@456.com(String), 0(Integer), 10(Integer)
2025-07-03 09:11:19.876 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.CartMapper.getCartsByPage - <==      Total: 1
2025-07-03 09:11:19.877 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:19.878 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:19.878 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:19.878 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:11:19.880 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:22.553 [http-nio-8080-exec-6] INFO  com.huang.store.controller.OrderController - 初始化订单: 用户=56464ff@456.com, 商品IDs=[5], 来源=1
2025-07-03 09:11:22.553 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBatchBookList - ==>  Preparing: select book.id,author,bookName,isbn,publish, birthday,marketPrice,price,stock,description,cart.num from book inner join cart on book.id = cart.id where cart.account = ? and book.id in ( ? )
2025-07-03 09:11:22.553 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:22.553 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select book.id,author,bookName,isbn,publish,
                birthday,marketPrice,price,stock,description,cart.num
         from book
         inner join cart on book.id = cart.id
         where cart.account = ?
         and book.id in
         (  
            ?
         ) ::: DataSources: slave
2025-07-03 09:11:22.555 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBatchBookList - ==> Parameters: 56464ff@456.com(String), 5(Integer)
2025-07-03 09:11:22.558 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBatchBookList - <==      Total: 1
2025-07-03 09:11:22.558 [http-nio-8080-exec-6] INFO  com.huang.store.controller.OrderController - 从购物车获取到1件商品
2025-07-03 09:11:22.559 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:22.560 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:22.560 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:22.561 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:11:22.564 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:22.565 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.AddressMapper.addressList - ==>  Preparing: select * from address where account=? and off=false
2025-07-03 09:11:22.566 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:22.566 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from address where account=? and off=false ::: DataSources: slave
2025-07-03 09:11:22.567 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.AddressMapper.addressList - ==> Parameters: 56464ff@456.com(String)
2025-07-03 09:11:22.571 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.AddressMapper.addressList - <==      Total: 2
2025-07-03 09:11:22.572 [http-nio-8080-exec-6] INFO  com.huang.store.controller.OrderController - 订单初始化成功: 用户=56464ff@456.com, 商品数量=1, 总金额=38.0
2025-07-03 09:11:25.183 [http-nio-8080-exec-3] INFO  com.huang.store.controller.OrderController - 创建订单: 用户=56464ff@456.com, 商品数量=1
2025-07-03 09:11:25.184 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-03 09:11:25.185 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:25.187 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-03 09:11:25.189 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 5(Integer)
2025-07-03 09:11:25.192 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-03 09:11:25.193 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.addOrder - ==>  Preparing: insert into bookorder(orderId,account,addressId,orderTime,shipTime,getTime,evaluateTime,closeTime,orderStatus,logisticsNum,confirmTime) values (?,?,?,?,?,?,?,?,?,?,?)
2025-07-03 09:11:25.194 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:25.194 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: insert into bookorder(orderId,account,addressId,orderTime,shipTime,getTime,evaluateTime,closeTime,orderStatus,logisticsNum,confirmTime)
            values (?,?,?,?,?,?,?,?,?,?,?) ::: DataSources: master
2025-07-03 09:11:25.196 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.addOrder - ==> Parameters: 20250703091125948517(String), 56464ff@456.com(String), 5(Integer), 2025-07-03 09:11:25.183(Timestamp), null, null, null, null, 待付款(String), null, null
2025-07-03 09:11:25.201 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.addOrder - <==    Updates: 1
2025-07-03 09:11:25.206 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.OrderMapper.batchAddOrderDetail - ==>  Preparing: insert into orderdetail(orderId,bookId,num,price) values (?,?,?,?)
2025-07-03 09:11:25.207 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:25.211 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: insert into orderdetail(orderId,bookId,num,price)
        values
          
            (?,?,?,?) ::: DataSources: master
2025-07-03 09:11:25.214 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.OrderMapper.batchAddOrderDetail - ==> Parameters: 20250703091125948517(String), 5(Integer), 1(Integer), 38.0(Double)
2025-07-03 09:11:25.217 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.OrderMapper.batchAddOrderDetail - <==    Updates: 1
2025-07-03 09:11:25.219 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.ExpenseMapper.addExpense - ==>  Preparing: insert into expense(orderId,productTotalMoney,freight,coupon,activityDiscount,allPrice,finallyPrice) values (?,?,?,?,?,?,?)
2025-07-03 09:11:25.220 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:25.221 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: insert into expense(orderId,productTotalMoney,freight,coupon,activityDiscount,allPrice,finallyPrice)
            values (?,?,?,?,?,?,?) ::: DataSources: master
2025-07-03 09:11:25.222 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.ExpenseMapper.addExpense - ==> Parameters: 20250703091125948517(String), 38.0(Double), 0.0(Double), 0(Integer), 0.0(Double), 38.0(Double), 38.0(Double)
2025-07-03 09:11:25.224 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.ExpenseMapper.addExpense - <==    Updates: 1
2025-07-03 09:11:25.227 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-03 09:11:25.227 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:25.228 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: master
2025-07-03 09:11:25.229 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 5(Integer)
2025-07-03 09:11:25.231 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-03 09:11:25.231 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.StockReservationMapper.insert - ==>  Preparing: INSERT INTO stock_reservation ( book_id, order_id, reserved_quantity, expire_time, status, create_time, update_time ) VALUES ( ?, ?, ?, DATE_ADD(NOW(), INTERVAL 30 MINUTE), ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP )
2025-07-03 09:11:25.231 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:25.231 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: INSERT INTO stock_reservation (
            book_id, order_id, reserved_quantity, expire_time, status, create_time, update_time
        ) VALUES (
            ?, ?, ?,
            DATE_ADD(NOW(), INTERVAL 30 MINUTE), ?,
            CURRENT_TIMESTAMP, CURRENT_TIMESTAMP
        ) ::: DataSources: master
2025-07-03 09:11:25.232 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.StockReservationMapper.insert - ==> Parameters: 5(Integer), 20250703091125948517(String), 1(Integer), 0(Integer)
2025-07-03 09:11:25.235 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.StockReservationMapper.insert - <==    Updates: 1
2025-07-03 09:11:25.236 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - ==>  Preparing: update book set stock=stock-? where id=? and stock>=?
2025-07-03 09:11:25.236 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:25.237 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: update book
            set stock=stock-?
                where id=? and stock>=? ::: DataSources: master
2025-07-03 09:11:25.239 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - ==> Parameters: 1(Integer), 5(Integer), 1(Integer)
2025-07-03 09:11:25.243 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - <==    Updates: 1
2025-07-03 09:11:25.254 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.CartMapper.delBatchProduct - ==>  Preparing: delete from cart where account=? and id in ( ? )
2025-07-03 09:11:25.255 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:25.255 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: delete from cart where account=? and id in
         (  
            ?
         ) ::: DataSources: master
2025-07-03 09:11:25.256 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.CartMapper.delBatchProduct - ==> Parameters: 56464ff@456.com(String), 5(Integer)
2025-07-03 09:11:25.261 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.CartMapper.delBatchProduct - <==    Updates: 1
2025-07-03 09:11:25.263 [http-nio-8080-exec-3] INFO  com.huang.store.controller.OrderController - 订单创建成功，已删除购物车商品: 用户=56464ff@456.com, 删除数量=1
2025-07-03 09:11:26.540 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:11:26.543 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.545 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:11:26.545 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:11:26.547 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), false(Boolean), 0(Integer), 5(Integer)
2025-07-03 09:11:26.549 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.553 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 5
2025-07-03 09:11:26.563 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:11:26.564 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:11:26.566 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.567 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:11:26.566 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:11:26.568 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703091125948517(String)
2025-07-03 09:11:26.571 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:11:26.571 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:11:26.573 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:11:26.576 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.577 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:26.581 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:11:26.582 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.583 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:26.583 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703091125948517(String)
2025-07-03 09:11:26.583 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:11:26.585 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:11:26.585 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:26.587 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:26.588 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:11:26.589 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.590 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:26.590 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.591 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:11:26.590 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:11:26.591 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703090943723937(String)
2025-07-03 09:11:26.593 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:26.597 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:11:26.598 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND beUserDelete = ?
2025-07-03 09:11:26.599 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.603 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:11:26.603 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:26.604 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.604 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:26.604 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), false(Boolean)
2025-07-03 09:11:26.604 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:11:26.607 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:26.607 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:11:26.612 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:11:26.614 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.616 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:11:26.617 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250702230939355225(String)
2025-07-03 09:11:26.619 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:11:26.620 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:26.625 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.626 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:26.627 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-03 09:11:26.630 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:26.632 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:11:26.632 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.632 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:11:26.632 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:11:26.634 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:11:26.635 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.636 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:11:26.637 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250702202456192460(String)
2025-07-03 09:11:26.638 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:11:26.639 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:11:26.640 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.640 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:11:26.642 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:11:26.647 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703091125948517(String)
2025-07-03 09:11:26.648 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:26.648 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.648 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:26.649 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:11:26.650 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:11:26.653 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:26.654 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.654 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:26.653 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:26.654 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:11:26.658 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:11:26.658 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:26.658 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.659 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:11:26.659 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701224811070894(String)
2025-07-03 09:11:26.660 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:11:26.661 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.661 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:11:26.661 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean)
2025-07-03 09:11:26.662 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:11:26.665 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:26.665 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:11:26.665 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.666 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:26.666 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:11:26.668 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:26.668 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND beUserDelete = ?
2025-07-03 09:11:26.669 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.670 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:11:26.670 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), false(Boolean)
2025-07-03 09:11:26.672 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:11:26.684 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:11:26.685 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.685 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:11:26.686 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已付款(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:11:26.688 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:11:26.689 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:11:26.690 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.690 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:11:26.691 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703090943723937(String)
2025-07-03 09:11:26.694 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:11:26.695 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:26.696 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.696 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:26.696 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:11:26.698 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:26.700 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:11:26.703 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.703 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:11:26.704 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已付款(String), false(Boolean)
2025-07-03 09:11:26.706 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:11:26.725 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:11:26.727 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.727 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:11:26.733 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:11:26.738 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:11:26.747 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:11:26.747 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.748 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:11:26.753 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703091125948517(String)
2025-07-03 09:11:26.757 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:11:26.758 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:11:26.760 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.760 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:11:26.760 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:26.761 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.761 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:26.761 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:11:26.762 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:11:26.764 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:26.764 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:11:26.767 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:11:26.768 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.769 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:11:26.770 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND beUserDelete = ?
2025-07-03 09:11:26.771 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751381288511772(String)
2025-07-03 09:11:26.771 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.772 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:11:26.772 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), false(Boolean)
2025-07-03 09:11:26.773 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:11:26.774 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:11:26.774 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:26.777 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.777 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:26.778 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:11:26.780 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:26.783 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:11:26.785 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.785 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:11:26.786 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean)
2025-07-03 09:11:26.787 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:11:26.829 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:11:26.832 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.841 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:11:26.843 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:11:26.849 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:11:26.850 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:11:26.852 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.851 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:11:26.853 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.853 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:11:26.854 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703091125948517(String)
2025-07-03 09:11:26.853 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:11:26.857 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已完成(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:11:26.857 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:11:26.861 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:11:26.864 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:26.867 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.867 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:11:26.867 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.867 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:26.868 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:11:26.868 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:11:26.868 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701224811070894(String)
2025-07-03 09:11:26.870 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:26.871 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:11:26.873 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:26.874 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:11:26.874 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.875 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:26.875 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.875 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:11:26.875 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:11:26.876 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean)
2025-07-03 09:11:26.877 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:26.879 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:11:26.880 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:11:26.882 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.882 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:11:26.883 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已完成(String), false(Boolean)
2025-07-03 09:11:26.887 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:11:26.903 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:11:26.903 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.903 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:11:26.916 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已付款(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:11:26.919 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:11:26.924 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:11:26.926 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.927 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:11:26.928 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703090943723937(String)
2025-07-03 09:11:26.930 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:11:26.932 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.933 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:11:26.933 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:11:26.934 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已取消(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:11:26.934 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:26.937 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:11:26.937 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.938 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:26.939 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:11:26.938 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:11:26.940 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.940 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:26.941 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:11:26.943 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250702230939355225(String)
2025-07-03 09:11:26.944 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:11:26.944 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.945 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:11:26.945 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:11:26.946 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已付款(String), false(Boolean)
2025-07-03 09:11:26.949 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:26.949 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:11:26.950 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.954 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:26.955 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-03 09:11:26.957 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:26.959 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:11:26.959 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.960 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:11:26.962 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已取消(String), false(Boolean)
2025-07-03 09:11:26.964 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:11:26.967 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:11:26.969 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.969 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:11:26.970 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:11:26.972 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:11:26.972 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:11:26.972 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.972 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:11:26.974 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751381288511772(String)
2025-07-03 09:11:26.976 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:11:26.978 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:26.978 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.978 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:26.978 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:11:26.980 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:26.982 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:11:26.983 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:26.984 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:11:26.984 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean)
2025-07-03 09:11:26.985 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:11:27.000 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:11:27.001 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:27.001 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:11:27.002 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已完成(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:11:27.004 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:11:27.005 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:11:27.005 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:27.005 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:11:27.007 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701224811070894(String)
2025-07-03 09:11:27.008 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:11:27.010 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:27.010 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:27.010 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:27.011 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:11:27.012 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:27.013 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:11:27.013 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:27.013 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:11:27.014 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已完成(String), false(Boolean)
2025-07-03 09:11:27.014 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:11:27.030 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:11:27.031 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:27.032 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:11:27.034 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已取消(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:11:27.035 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:11:27.036 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:11:27.038 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:27.039 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:11:27.039 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250702230939355225(String)
2025-07-03 09:11:27.040 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:11:27.041 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:27.041 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:27.042 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:27.043 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-03 09:11:27.045 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:27.047 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:11:27.047 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:27.047 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:11:27.048 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已取消(String), false(Boolean)
2025-07-03 09:11:27.049 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:11:28.266 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:11:28.267 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:28.267 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:11:28.271 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean), 0(Integer), 5(Integer)
2025-07-03 09:11:28.275 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:11:28.276 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:11:28.276 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:28.276 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:11:28.277 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703091125948517(String)
2025-07-03 09:11:28.279 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:11:28.281 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:28.282 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:28.282 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:28.282 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:11:28.284 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:28.287 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:11:28.287 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:28.288 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:11:28.288 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean)
2025-07-03 09:11:28.290 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:11:28.311 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:11:28.312 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:28.312 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:11:28.313 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:11:28.315 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:11:28.315 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:11:28.315 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:28.316 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:11:28.316 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703091125948517(String)
2025-07-03 09:11:28.317 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:11:28.318 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:28.318 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:28.318 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:28.319 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:11:28.320 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:28.321 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND beUserDelete = ?
2025-07-03 09:11:28.321 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:28.322 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:11:28.323 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), false(Boolean)
2025-07-03 09:11:28.324 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:11:28.338 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:11:28.338 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:28.338 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:11:28.339 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:11:28.341 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:11:28.341 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:11:28.342 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:28.343 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:11:28.343 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703091125948517(String)
2025-07-03 09:11:28.345 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:11:28.345 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:28.346 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:28.346 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:28.346 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:11:28.347 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:28.348 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:11:28.348 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:28.348 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:11:28.349 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean)
2025-07-03 09:11:28.349 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:11:28.361 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:11:28.361 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:28.362 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:11:28.363 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已付款(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:11:28.365 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:11:28.366 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:11:28.366 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:28.366 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:11:28.366 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703090943723937(String)
2025-07-03 09:11:28.367 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:11:28.368 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:28.368 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:28.368 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:28.368 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:11:28.369 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:28.370 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:11:28.371 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:28.371 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:11:28.372 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已付款(String), false(Boolean)
2025-07-03 09:11:28.373 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:11:28.389 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:11:28.389 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:28.390 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:11:28.391 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:11:28.394 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:11:28.395 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:11:28.395 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:28.395 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:11:28.395 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751381288511772(String)
2025-07-03 09:11:28.396 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:11:28.397 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:28.397 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:28.398 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:28.398 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:11:28.399 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:28.400 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:11:28.401 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:28.401 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:11:28.401 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean)
2025-07-03 09:11:28.402 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:11:28.416 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:11:28.416 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:28.417 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:11:28.417 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已完成(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:11:28.419 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:11:28.419 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:11:28.419 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:28.420 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:11:28.420 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701224811070894(String)
2025-07-03 09:11:28.421 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:11:28.422 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:28.422 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:28.422 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:28.422 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:11:28.423 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:28.423 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:11:28.423 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:28.423 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:11:28.423 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已完成(String), false(Boolean)
2025-07-03 09:11:28.424 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:11:28.437 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:11:28.437 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:28.437 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:11:28.438 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已取消(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:11:28.440 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:11:28.441 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:11:28.441 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:28.441 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:11:28.441 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250702230939355225(String)
2025-07-03 09:11:28.442 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:11:28.443 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:28.443 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:28.443 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:28.443 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-03 09:11:28.444 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:28.445 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:11:28.446 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:28.447 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:11:28.448 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已取消(String), false(Boolean)
2025-07-03 09:11:28.449 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:11:41.015 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.modifyOrder - ==>  Preparing: update bookorder set orderStatus=? where id=?
2025-07-03 09:11:41.016 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:41.016 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: update bookorder set
         
         
            orderStatus=?
         
         
        where id=? ::: DataSources: master
2025-07-03 09:11:41.018 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.modifyOrder - ==> Parameters: 已取消(String), 29(Integer)
2025-07-03 09:11:41.024 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.modifyOrder - <==    Updates: 1
2025-07-03 09:11:41.042 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:11:41.043 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:41.043 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:11:41.046 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean), 0(Integer), 5(Integer)
2025-07-03 09:11:41.047 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 0
2025-07-03 09:11:41.048 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:11:41.048 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:41.048 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:11:41.048 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean)
2025-07-03 09:11:41.050 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:11:41.072 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:11:41.073 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:41.073 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:11:41.074 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:11:41.075 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:11:41.076 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:11:41.076 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:41.077 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:11:41.079 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703091125948517(String)
2025-07-03 09:11:41.081 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:11:41.082 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:41.082 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:41.082 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:41.083 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:11:41.084 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:41.085 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND beUserDelete = ?
2025-07-03 09:11:41.085 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:41.085 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:11:41.085 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), false(Boolean)
2025-07-03 09:11:41.087 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:11:41.104 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:11:41.105 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:41.105 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:11:41.112 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:11:41.117 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 0
2025-07-03 09:11:41.118 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:11:41.119 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:41.120 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:11:41.126 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean)
2025-07-03 09:11:41.137 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:11:41.159 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:11:41.159 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:41.160 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:11:41.161 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已付款(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:11:41.164 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:11:41.164 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:11:41.166 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:41.166 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:11:41.166 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703090943723937(String)
2025-07-03 09:11:41.167 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:11:41.168 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:41.168 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:41.168 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:41.169 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:11:41.170 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:41.172 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:11:41.172 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:41.173 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:11:41.173 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已付款(String), false(Boolean)
2025-07-03 09:11:41.175 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:11:41.189 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:11:41.189 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:41.190 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:11:41.190 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:11:41.194 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:11:41.194 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:11:41.194 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:41.195 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:11:41.195 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751381288511772(String)
2025-07-03 09:11:41.196 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:11:41.196 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:41.196 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:41.196 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:41.196 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:11:41.197 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:41.199 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:11:41.201 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:41.201 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:11:41.202 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean)
2025-07-03 09:11:41.202 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:11:41.218 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:11:41.218 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:41.219 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:11:41.220 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已完成(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:11:41.221 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:11:41.222 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:11:41.222 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:41.222 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:11:41.223 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701224811070894(String)
2025-07-03 09:11:41.224 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:11:41.225 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:41.225 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:41.225 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:41.225 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:11:41.227 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:41.227 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:11:41.228 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:41.228 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:11:41.228 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已完成(String), false(Boolean)
2025-07-03 09:11:41.229 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:11:41.242 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:11:41.242 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:41.242 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:11:41.243 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已取消(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:11:41.244 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:11:41.245 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:11:41.245 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:41.245 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:11:41.245 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703091125948517(String)
2025-07-03 09:11:41.247 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:11:41.248 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:11:41.248 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:41.248 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:11:41.248 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:11:41.249 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:11:41.250 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:11:41.250 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:11:41.250 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:11:41.252 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已取消(String), false(Boolean)
2025-07-03 09:11:41.253 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:14:02.750 [Thread-23] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-03 09:14:02.750 [Thread-23] INFO  o.a.c.c.ContainerBase.[Tomcat-2].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-07-03 09:14:02.758 [Thread-23] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-458899138] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-03 09:14:02.758 [Thread-23] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-458899138] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-03 09:14:02.759 [Thread-23] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-2010549900] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-03 09:14:02.760 [Thread-23] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-2010549900] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-03 09:14:02.760 [Thread-23] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-nioEventLoop-8-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/sun.nio.ch.WEPoll.wait(Native Method)
 java.base@17.0.8/sun.nio.ch.WEPollSelectorImpl.doSelect(WEPollSelectorImpl.java:111)
 java.base@17.0.8/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:129)
 java.base@17.0.8/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:146)
 app//io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:68)
 app//io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:879)
 app//io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:526)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-03 09:14:02.761 [Thread-23] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-6-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-03 09:14:02.761 [Thread-23] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-6-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-03 09:14:02.762 [Thread-23] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-6-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-03 09:14:02.762 [Thread-23] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-6-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-03 09:14:02.878 [Thread-23] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} closing ...
2025-07-03 09:14:02.880 [Thread-23] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} closed
2025-07-03 09:14:02.880 [Thread-23] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} closing ...
2025-07-03 09:14:02.882 [Thread-23] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} closed
2025-07-03 09:14:02.959 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 19704 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-03 09:14:02.959 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-03 09:14:02.960 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-03 09:14:03.063 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-03 09:14:03.063 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-03 09:14:03.070 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-07-03 09:14:03.102 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$7c964caf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-03 09:14:03.110 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-03 09:14:03.155 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-03 09:14:03.156 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-03 09:14:03.156 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-03 09:14:03.156 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-03 09:14:03.157 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-03 09:14:03.157 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-03 09:14:03.157 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-03 09:14:03.166 [restartedMain] INFO  o.a.c.c.ContainerBase.[Tomcat-2].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-03 09:14:03.167 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 204 ms
2025-07-03 09:14:03.169 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-03 09:14:03.243 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-9} inited
2025-07-03 09:14:03.258 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-10} inited
2025-07-03 09:14:03.335 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-03 09:14:03.335 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-03 09:14:03.434 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-03 09:14:03.487 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5656868f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2540d06a, org.springframework.security.web.context.SecurityContextPersistenceFilter@26d1cff8, org.springframework.security.web.header.HeaderWriterFilter@7d64f6fa, org.springframework.web.filter.CorsFilter@2b92abcc, org.springframework.security.web.authentication.logout.LogoutFilter@4ac5dfc0, com.huang.store.security.JwtAuthenticationTokenFilter@1b2ab9aa, com.huang.store.security.CustomAuthenticationFilter@3361f638, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3c05d16a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@56284318, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@ca1ac01, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6c1e0ace, org.springframework.security.web.session.SessionManagementFilter@62d18bb9, org.springframework.security.web.access.ExceptionTranslationFilter@52c459bb, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@a20187d]
2025-07-03 09:14:03.575 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-03 09:14:03.584 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-03 09:14:03.588 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 开始检查超时订单...
2025-07-03 09:14:03.588 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 0.652 seconds (JVM running for 621.847)
2025-07-03 09:14:03.590 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==>  Preparing: SELECT * FROM bookorder WHERE orderStatus = '待付款' AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ? ORDER BY orderTime ASC
2025-07-03 09:14:03.591 [scheduling-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:14:03.591 [scheduling-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM bookorder
        WHERE orderStatus = '待付款'
        AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ?
        ORDER BY orderTime ASC ::: DataSources: slave
2025-07-03 09:14:03.591 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==> Parameters: 30(Integer)
2025-07-03 09:14:03.593 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - <==      Total: 0
2025-07-03 09:14:03.594 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 没有发现超时订单
2025-07-03 09:14:37.501 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-03 09:14:37.518 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 20304 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-03 09:14:37.519 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-03 09:14:37.519 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-03 09:14:37.652 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-03 09:14:37.652 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-03 09:14:38.095 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-03 09:14:38.096 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-03 09:14:38.122 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2025-07-03 09:14:38.304 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$f4ad8f59] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-03 09:14:38.315 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-03 09:14:38.763 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-03 09:14:38.764 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-03 09:14:38.764 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-03 09:14:38.765 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-03 09:14:38.769 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-03 09:14:38.777 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-03 09:14:38.779 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-03 09:14:38.779 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-03 09:14:38.833 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-03 09:14:38.833 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1180 ms
2025-07-03 09:14:38.838 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-03 09:14:39.495 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-03 09:14:39.520 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-03 09:14:39.786 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-03 09:14:39.787 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-03 09:14:40.209 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-03 09:14:40.342 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@da995ad, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@9c3edc1, org.springframework.security.web.context.SecurityContextPersistenceFilter@77c1e723, org.springframework.security.web.header.HeaderWriterFilter@6e6c7923, org.springframework.web.filter.CorsFilter@27526397, org.springframework.security.web.authentication.logout.LogoutFilter@531a5968, com.huang.store.security.JwtAuthenticationTokenFilter@321405bf, com.huang.store.security.CustomAuthenticationFilter@612660db, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5392bd41, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4d08f0d9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@61b4e11f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1761fbc6, org.springframework.security.web.session.SessionManagementFilter@1d42245a, org.springframework.security.web.access.ExceptionTranslationFilter@94d9e3a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3cbcfd43]
2025-07-03 09:14:40.591 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-03 09:14:40.609 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-03 09:14:40.626 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-03 09:14:40.635 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 开始检查超时订单...
2025-07-03 09:14:40.639 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 3.456 seconds (JVM running for 3.725)
2025-07-03 09:14:40.667 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==>  Preparing: SELECT * FROM bookorder WHERE orderStatus = '待付款' AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ? ORDER BY orderTime ASC
2025-07-03 09:14:40.679 [scheduling-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:14:40.680 [scheduling-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM bookorder
        WHERE orderStatus = '待付款'
        AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ?
        ORDER BY orderTime ASC ::: DataSources: slave
2025-07-03 09:14:40.725 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==> Parameters: 30(Integer)
2025-07-03 09:14:40.738 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - <==      Total: 0
2025-07-03 09:14:40.743 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 没有发现超时订单
2025-07-03 09:15:13.029 [http-nio-8080-exec-2] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-03 09:15:13.030 [http-nio-8080-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-03 09:15:13.031 [http-nio-8080-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-03 09:15:55.010 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-03 09:15:55.010 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-03 09:15:55.010 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:55.010 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-03 09:15:55.010 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-03 09:15:55.010 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-03 09:15:55.010 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-03 09:15:55.010 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:55.010 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-03 09:15:55.010 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:55.010 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:55.010 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:55.011 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:55.011 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-03 09:15:55.011 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-03 09:15:55.011 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-03 09:15:55.011 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-03 09:15:55.011 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-03 09:15:55.017 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 56464ff@456.com(String)
2025-07-03 09:15:55.023 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-03 09:15:55.024 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 56464ff@456.com(String)
2025-07-03 09:15:55.026 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-03 09:15:55.027 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 56464ff@456.com(String)
2025-07-03 09:15:55.028 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 56464ff@456.com(String)
2025-07-03 09:15:55.029 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-03 09:15:55.030 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 56464ff@456.com(String)
2025-07-03 09:15:55.030 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-03 09:15:55.032 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 56464ff@456.com(String)
2025-07-03 09:15:55.032 [http-nio-8080-exec-7] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:56464ff@456.com    数据库密码:$2a$10$7OBMT05X3FsorQiaTl2aQuxGJpdi4w1dVWZdG8Oy9K7E61SWT9WAy
2025-07-03 09:15:55.032 [http-nio-8080-exec-3] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:56464ff@456.com    数据库密码:$2a$10$7OBMT05X3FsorQiaTl2aQuxGJpdi4w1dVWZdG8Oy9K7E61SWT9WAy
2025-07-03 09:15:55.033 [http-nio-8080-exec-5] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:56464ff@456.com    数据库密码:$2a$10$7OBMT05X3FsorQiaTl2aQuxGJpdi4w1dVWZdG8Oy9K7E61SWT9WAy
2025-07-03 09:15:55.033 [http-nio-8080-exec-6] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:56464ff@456.com    数据库密码:$2a$10$7OBMT05X3FsorQiaTl2aQuxGJpdi4w1dVWZdG8Oy9K7E61SWT9WAy
2025-07-03 09:15:55.033 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-03 09:15:55.034 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-03 09:15:55.035 [http-nio-8080-exec-1] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:56464ff@456.com    数据库密码:$2a$10$7OBMT05X3FsorQiaTl2aQuxGJpdi4w1dVWZdG8Oy9K7E61SWT9WAy
2025-07-03 09:15:55.036 [http-nio-8080-exec-4] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:56464ff@456.com    数据库密码:$2a$10$7OBMT05X3FsorQiaTl2aQuxGJpdi4w1dVWZdG8Oy9K7E61SWT9WAy
2025-07-03 09:15:55.057 [http-nio-8080-exec-7] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-03 09:15:55.057 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:55.057 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-03 09:15:55.059 [http-nio-8080-exec-7] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-03 09:15:55.060 [http-nio-8080-exec-6] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-03 09:15:55.060 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-03 09:15:55.060 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-03 09:15:55.060 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:55.060 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:55.060 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-03 09:15:55.060 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-03 09:15:55.062 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-03 09:15:55.062 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-03 09:15:55.063 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-03 09:15:55.063 [http-nio-8080-exec-1] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-03 09:15:55.064 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-03 09:15:55.064 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:55.064 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-03 09:15:55.064 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-03 09:15:55.064 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-03 09:15:55.064 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:55.065 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-03 09:15:55.066 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-03 09:15:55.064 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:55.066 [http-nio-8080-exec-7] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 6
2025-07-03 09:15:55.065 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-03 09:15:55.066 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-03 09:15:55.067 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:55.067 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-03 09:15:55.068 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-03 09:15:55.068 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-03 09:15:55.068 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:55.068 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-03 09:15:55.070 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-03 09:15:55.070 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-03 09:15:55.070 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-03 09:15:55.071 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-03 09:15:55.071 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-03 09:15:55.072 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-03 09:15:55.072 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-03 09:15:55.073 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:55.073 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:55.073 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-03 09:15:55.073 [http-nio-8080-exec-3] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-03 09:15:55.074 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-03 09:15:55.074 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-03 09:15:55.074 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-03 09:15:55.075 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:55.075 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-03 09:15:55.075 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-03 09:15:55.076 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-03 09:15:55.076 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 6(Long)
2025-07-03 09:15:55.077 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-03 09:15:55.078 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-03 09:15:55.079 [http-nio-8080-exec-3] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-03 09:15:55.081 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:15:55.081 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:55.082 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:15:55.082 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 1
2025-07-03 09:15:55.083 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-03 09:15:55.083 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-03 09:15:55.083 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:55.083 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-03 09:15:55.084 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 2(Integer)
2025-07-03 09:15:55.084 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:15:55.085 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:15:55.085 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:55.086 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:15:55.086 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-03 09:15:55.086 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-03 09:15:55.087 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:15:55.087 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:55.087 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:15:55.089 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-03 09:15:55.089 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:15:55.089 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:15:55.090 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:55.090 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:15:55.090 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-03 09:15:55.090 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:15:55.091 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:15:55.092 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:15:55.092 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-03 09:15:55.092 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:55.093 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:55.093 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:15:55.093 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-03 09:15:55.093 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:15:55.094 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 5(Long)
2025-07-03 09:15:55.095 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:15:55.096 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:15:55.096 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:55.096 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:15:55.097 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:15:55.097 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-03 09:15:55.098 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-03 09:15:55.098 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:55.099 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-03 09:15:55.099 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:15:55.099 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 4(Long)
2025-07-03 09:15:55.103 [http-nio-8080-exec-7] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 1
2025-07-03 09:15:55.104 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-03 09:15:55.105 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:55.105 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-03 09:15:55.106 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 1(Integer)
2025-07-03 09:15:55.110 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-03 09:15:55.111 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:15:55.111 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:55.111 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:15:55.112 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:15:55.113 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:15:55.117 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-03 09:15:55.117 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:55.117 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-03 09:15:55.118 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 56464ff@456.com(String)
2025-07-03 09:15:55.120 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-03 09:15:55.122 [http-nio-8080-exec-8] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:56464ff@456.com    数据库密码:$2a$10$7OBMT05X3FsorQiaTl2aQuxGJpdi4w1dVWZdG8Oy9K7E61SWT9WAy
2025-07-03 09:15:55.126 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-03 09:15:55.127 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:55.127 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-03 09:15:55.129 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-03 09:15:55.131 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-03 09:15:55.132 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 09:15:55.132 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:55.133 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 09:15:55.133 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-03 09:15:55.135 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-03 09:15:55.136 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 09:15:55.136 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:55.136 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 09:15:55.137 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-03 09:15:55.139 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-03 09:15:55.140 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 09:15:55.140 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:55.140 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 09:15:55.141 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-03 09:15:55.143 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-03 09:15:55.144 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 09:15:55.144 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:55.144 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 09:15:55.145 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-03 09:15:55.146 [http-nio-8080-exec-8] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-03 09:15:57.944 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-03 09:15:57.944 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:57.945 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-03 09:15:57.945 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-03 09:15:57.949 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-03 09:15:57.949 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 09:15:57.949 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:57.949 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 09:15:57.950 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-03 09:15:57.952 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-03 09:15:57.953 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 09:15:57.953 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:57.953 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 09:15:57.954 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-03 09:15:57.955 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-03 09:15:57.957 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 09:15:57.957 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:57.957 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 09:15:57.957 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-03 09:15:57.958 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-03 09:15:57.959 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 09:15:57.959 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:57.959 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 09:15:57.960 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-03 09:15:57.961 [http-nio-8080-exec-10] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-03 09:15:58.217 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-03 09:15:58.218 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:58.218 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-03 09:15:58.218 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 5(Integer)
2025-07-03 09:15:58.219 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-03 09:15:58.220 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getBookImgSrcList - ==>  Preparing: select imgSrc from bookimg where isbn=?
2025-07-03 09:15:58.220 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:58.220 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? ::: DataSources: slave
2025-07-03 09:15:58.221 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getBookImgSrcList - ==> Parameters: 9787020002214(String)
2025-07-03 09:15:58.222 [http-nio-8080-exec-9] DEBUG c.huang.store.mapper.BookMapper.getBookImgSrcList - <==      Total: 1
2025-07-03 09:15:58.223 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:15:58.223 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:58.223 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:15:58.224 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:15:58.225 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:15:58.227 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookSort - ==>  Preparing: select * from booksort where id in (select bookSortId from booksortlist where bookId=?)
2025-07-03 09:15:58.227 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:58.227 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select * from booksort where id in (select bookSortId from booksortlist where bookId=?) ::: DataSources: slave
2025-07-03 09:15:58.228 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookSort - ==> Parameters: 5(Integer)
2025-07-03 09:15:58.229 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookSort - <==      Total: 1
2025-07-03 09:15:58.229 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getBookSortId - ==>  Preparing: select id from booksort where upperName=? and sortName=?
2025-07-03 09:15:58.230 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:58.230 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select id from booksort where upperName=? and sortName=? ::: DataSources: slave
2025-07-03 09:15:58.231 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getBookSortId - ==> Parameters: 无(String), 文学(String)
2025-07-03 09:15:58.232 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.SortMapper.getBookSortId - <==      Total: 1
2025-07-03 09:15:59.967 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CartController - 添加图书到购物车: 用户=56464ff@456.com, 图书ID=5, 数量=1
2025-07-03 09:15:59.967 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.CartMapper.existProduct - ==>  Preparing: select count(1) from cart where account=? and id = ?
2025-07-03 09:15:59.968 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:59.968 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select count(1) from cart where account=? and id = ? ::: DataSources: slave
2025-07-03 09:15:59.969 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.CartMapper.existProduct - ==> Parameters: 56464ff@456.com(String), 5(Integer)
2025-07-03 09:15:59.970 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.CartMapper.existProduct - <==      Total: 1
2025-07-03 09:15:59.971 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.CartMapper.addProduct - ==>  Preparing: insert into cart(account,id,num,addTime) values (?,?,?,?)
2025-07-03 09:15:59.972 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:15:59.972 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: insert into cart(account,id,num,addTime)
            values (?,?,?,?) ::: DataSources: master
2025-07-03 09:16:00.035 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.CartMapper.addProduct - ==> Parameters: 56464ff@456.com(String), 5(Integer), 1(Integer), 2025-07-03 09:15:59.971(Timestamp)
2025-07-03 09:16:00.040 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.CartMapper.addProduct - <==    Updates: 1
2025-07-03 09:16:00.041 [http-nio-8080-exec-2] INFO  com.huang.store.controller.CartController - 添加到购物车成功: 用户=56464ff@456.com, 图书ID=5, 数量=1
2025-07-03 09:16:04.449 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.CartMapper.getCartsByPage - ==>  Preparing: select book.id,author,bookName,isbn,publish, birthday,marketPrice,price,stock,description,put,num,addTime,account from book join cart on book.id = cart.id where account=? limit ?,?
2025-07-03 09:16:04.449 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:04.449 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select book.id,author,bookName,isbn,publish,
                birthday,marketPrice,price,stock,description,put,num,addTime,account
         from book join cart on book.id = cart.id
         where account=? limit ?,? ::: DataSources: slave
2025-07-03 09:16:04.451 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.CartMapper.getCartsByPage - ==> Parameters: 56464ff@456.com(String), 0(Integer), 10(Integer)
2025-07-03 09:16:04.454 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.CartMapper.getCartsByPage - <==      Total: 1
2025-07-03 09:16:04.455 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:04.456 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:04.456 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:04.457 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:16:04.458 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:07.353 [http-nio-8080-exec-6] INFO  com.huang.store.controller.OrderController - 初始化订单: 用户=56464ff@456.com, 商品IDs=[5], 来源=1
2025-07-03 09:16:07.366 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBatchBookList - ==>  Preparing: select book.id,author,bookName,isbn,publish, birthday,marketPrice,price,stock,description,cart.num from book inner join cart on book.id = cart.id where cart.account = ? and book.id in ( ? )
2025-07-03 09:16:07.366 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:07.366 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select book.id,author,bookName,isbn,publish,
                birthday,marketPrice,price,stock,description,cart.num
         from book
         inner join cart on book.id = cart.id
         where cart.account = ?
         and book.id in
         (  
            ?
         ) ::: DataSources: slave
2025-07-03 09:16:07.367 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBatchBookList - ==> Parameters: 56464ff@456.com(String), 5(Integer)
2025-07-03 09:16:07.369 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBatchBookList - <==      Total: 1
2025-07-03 09:16:07.370 [http-nio-8080-exec-6] INFO  com.huang.store.controller.OrderController - 从购物车获取到1件商品
2025-07-03 09:16:07.370 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:07.370 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:07.370 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:07.370 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:16:07.372 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:07.372 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.AddressMapper.addressList - ==>  Preparing: select * from address where account=? and off=false
2025-07-03 09:16:07.372 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:07.372 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from address where account=? and off=false ::: DataSources: slave
2025-07-03 09:16:07.373 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.AddressMapper.addressList - ==> Parameters: 56464ff@456.com(String)
2025-07-03 09:16:07.374 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.AddressMapper.addressList - <==      Total: 2
2025-07-03 09:16:07.375 [http-nio-8080-exec-6] INFO  com.huang.store.controller.OrderController - 订单初始化成功: 用户=56464ff@456.com, 商品数量=1, 总金额=38.0
2025-07-03 09:16:09.976 [http-nio-8080-exec-5] INFO  com.huang.store.controller.OrderController - 创建订单: 用户=56464ff@456.com, 商品数量=1
2025-07-03 09:16:09.982 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-03 09:16:09.982 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:09.982 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-03 09:16:09.982 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 5(Integer)
2025-07-03 09:16:09.983 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-03 09:16:09.986 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.addOrder - ==>  Preparing: insert into bookorder(orderId,account,addressId,orderTime,shipTime,getTime,evaluateTime,closeTime,orderStatus,logisticsNum,confirmTime) values (?,?,?,?,?,?,?,?,?,?,?)
2025-07-03 09:16:09.986 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:09.986 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: insert into bookorder(orderId,account,addressId,orderTime,shipTime,getTime,evaluateTime,closeTime,orderStatus,logisticsNum,confirmTime)
            values (?,?,?,?,?,?,?,?,?,?,?) ::: DataSources: master
2025-07-03 09:16:09.988 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.addOrder - ==> Parameters: 20250703091609136788(String), 56464ff@456.com(String), 5(Integer), 2025-07-03 09:16:09.979(Timestamp), null, null, null, null, 待付款(String), null, null
2025-07-03 09:16:09.989 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.addOrder - <==    Updates: 1
2025-07-03 09:16:09.991 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.OrderMapper.batchAddOrderDetail - ==>  Preparing: insert into orderdetail(orderId,bookId,num,price) values (?,?,?,?)
2025-07-03 09:16:09.991 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:09.991 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: insert into orderdetail(orderId,bookId,num,price)
        values
          
            (?,?,?,?) ::: DataSources: master
2025-07-03 09:16:09.992 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.OrderMapper.batchAddOrderDetail - ==> Parameters: 20250703091609136788(String), 5(Integer), 1(Integer), 38.0(Double)
2025-07-03 09:16:09.993 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.OrderMapper.batchAddOrderDetail - <==    Updates: 1
2025-07-03 09:16:09.994 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.ExpenseMapper.addExpense - ==>  Preparing: insert into expense(orderId,productTotalMoney,freight,coupon,activityDiscount,allPrice,finallyPrice) values (?,?,?,?,?,?,?)
2025-07-03 09:16:09.994 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:09.994 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: insert into expense(orderId,productTotalMoney,freight,coupon,activityDiscount,allPrice,finallyPrice)
            values (?,?,?,?,?,?,?) ::: DataSources: master
2025-07-03 09:16:09.995 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.ExpenseMapper.addExpense - ==> Parameters: 20250703091609136788(String), 38.0(Double), 0.0(Double), 0(Integer), 0.0(Double), 38.0(Double), 38.0(Double)
2025-07-03 09:16:09.995 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.ExpenseMapper.addExpense - <==    Updates: 1
2025-07-03 09:16:09.996 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-03 09:16:09.996 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:09.996 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: master
2025-07-03 09:16:09.997 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 5(Integer)
2025-07-03 09:16:09.998 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-03 09:16:09.998 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.StockReservationMapper.insert - ==>  Preparing: INSERT INTO stock_reservation ( book_id, order_id, reserved_quantity, expire_time, status, create_time, update_time ) VALUES ( ?, ?, ?, DATE_ADD(NOW(), INTERVAL 30 MINUTE), ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP )
2025-07-03 09:16:09.999 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:09.999 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: INSERT INTO stock_reservation (
            book_id, order_id, reserved_quantity, expire_time, status, create_time, update_time
        ) VALUES (
            ?, ?, ?,
            DATE_ADD(NOW(), INTERVAL 30 MINUTE), ?,
            CURRENT_TIMESTAMP, CURRENT_TIMESTAMP
        ) ::: DataSources: master
2025-07-03 09:16:10.001 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.StockReservationMapper.insert - ==> Parameters: 5(Integer), 20250703091609136788(String), 1(Integer), 0(Integer)
2025-07-03 09:16:10.002 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.StockReservationMapper.insert - <==    Updates: 1
2025-07-03 09:16:10.004 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - ==>  Preparing: update book set stock=stock-? where id=? and stock>=?
2025-07-03 09:16:10.004 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:10.004 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: update book
            set stock=stock-?
                where id=? and stock>=? ::: DataSources: master
2025-07-03 09:16:10.005 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - ==> Parameters: 1(Integer), 5(Integer), 1(Integer)
2025-07-03 09:16:10.006 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.modifyBookStock - <==    Updates: 1
2025-07-03 09:16:10.014 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.CartMapper.delBatchProduct - ==>  Preparing: delete from cart where account=? and id in ( ? )
2025-07-03 09:16:10.014 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:10.014 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: delete from cart where account=? and id in
         (  
            ?
         ) ::: DataSources: master
2025-07-03 09:16:10.015 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.CartMapper.delBatchProduct - ==> Parameters: 56464ff@456.com(String), 5(Integer)
2025-07-03 09:16:10.019 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.CartMapper.delBatchProduct - <==    Updates: 1
2025-07-03 09:16:10.019 [http-nio-8080-exec-5] INFO  com.huang.store.controller.OrderController - 订单创建成功，已删除购物车商品: 用户=56464ff@456.com, 删除数量=1
2025-07-03 09:16:11.068 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:16:11.068 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:16:11.069 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.070 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:16:11.069 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.070 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:16:11.071 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), false(Boolean), 0(Integer), 5(Integer)
2025-07-03 09:16:11.072 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:16:11.074 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:16:11.076 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:11.076 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 5
2025-07-03 09:16:11.076 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.076 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:11.076 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:11.077 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.077 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:11.078 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703091609136788(String)
2025-07-03 09:16:11.078 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703091609136788(String)
2025-07-03 09:16:11.079 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:11.079 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:11.087 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:11.087 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:11.087 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.088 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.088 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:11.088 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:11.088 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:16:11.088 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:16:11.089 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:11.089 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:11.090 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:11.090 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.090 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND beUserDelete = ?
2025-07-03 09:16:11.090 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:11.090 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.091 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:16:11.091 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703091125948517(String)
2025-07-03 09:16:11.092 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), false(Boolean)
2025-07-03 09:16:11.092 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:11.094 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:11.094 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:16:11.094 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.094 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:11.095 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:16:11.096 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:11.097 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:11.097 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.097 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:11.098 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703090943723937(String)
2025-07-03 09:16:11.101 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:11.102 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:11.102 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.102 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:11.102 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:16:11.104 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:11.105 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:11.105 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.105 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:11.106 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250702230939355225(String)
2025-07-03 09:16:11.108 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:11.109 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:11.109 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.109 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:11.110 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-03 09:16:11.111 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:11.112 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:11.112 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.112 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:11.113 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250702202456192460(String)
2025-07-03 09:16:11.113 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:16:11.113 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.113 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:16:11.114 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:11.115 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:11.115 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.116 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:11.116 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:16:11.116 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:16:11.117 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:11.117 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:16:11.118 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:11.118 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND beUserDelete = ?
2025-07-03 09:16:11.118 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.118 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.118 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:11.118 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:16:11.119 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703091609136788(String)
2025-07-03 09:16:11.119 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), false(Boolean)
2025-07-03 09:16:11.119 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:16:11.119 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:11.120 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:11.120 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.120 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:11.120 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:16:11.122 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:11.123 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:16:11.123 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.123 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:16:11.124 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean)
2025-07-03 09:16:11.126 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:16:11.154 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:16:11.154 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.154 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:16:11.155 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:16:11.157 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:16:11.158 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:11.158 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.158 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:11.159 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703091609136788(String)
2025-07-03 09:16:11.161 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:11.161 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:11.162 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.162 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:11.162 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:16:11.163 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:11.164 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND beUserDelete = ?
2025-07-03 09:16:11.165 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.165 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:16:11.165 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), false(Boolean)
2025-07-03 09:16:11.167 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:16:11.173 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:16:11.174 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.174 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:16:11.176 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已付款(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:16:11.180 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:16:11.180 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:11.181 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.181 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:11.181 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703090943723937(String)
2025-07-03 09:16:11.183 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:11.184 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:11.184 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.184 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:11.184 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:16:11.186 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:11.187 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:16:11.187 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.187 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:16:11.187 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已付款(String), false(Boolean)
2025-07-03 09:16:11.189 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:16:11.194 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:16:11.194 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.194 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:16:11.195 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:16:11.196 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:16:11.197 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:11.197 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.197 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:11.198 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703091609136788(String)
2025-07-03 09:16:11.199 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:11.200 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:11.200 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.201 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:11.201 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:16:11.202 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:11.203 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:16:11.203 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.203 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:16:11.203 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean)
2025-07-03 09:16:11.205 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:16:11.212 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:16:11.212 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.212 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:16:11.213 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:16:11.216 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:16:11.217 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:11.217 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.217 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:11.217 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751381288511772(String)
2025-07-03 09:16:11.218 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:11.219 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:11.219 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.219 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:11.219 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:16:11.220 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:16:11.220 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.220 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:16:11.221 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:11.221 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已付款(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:16:11.222 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:16:11.222 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.222 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:16:11.223 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean)
2025-07-03 09:16:11.223 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:16:11.223 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:11.224 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:16:11.224 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.224 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:11.224 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703090943723937(String)
2025-07-03 09:16:11.225 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:11.226 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:11.226 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.226 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:11.227 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:16:11.229 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:11.230 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:16:11.230 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.230 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:16:11.231 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已付款(String), false(Boolean)
2025-07-03 09:16:11.232 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:16:11.244 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:16:11.244 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:16:11.244 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.244 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.244 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:16:11.244 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:16:11.245 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已完成(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:16:11.245 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:16:11.246 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:16:11.246 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:16:11.246 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:11.246 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:11.247 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.247 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.247 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:11.247 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:11.247 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751381288511772(String)
2025-07-03 09:16:11.247 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701224811070894(String)
2025-07-03 09:16:11.248 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:11.248 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:11.249 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:11.249 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:11.249 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.249 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.249 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:11.249 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:11.249 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:16:11.249 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:16:11.250 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:11.250 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:11.251 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:16:11.251 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:16:11.251 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.251 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.251 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:16:11.251 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:16:11.252 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已完成(String), false(Boolean)
2025-07-03 09:16:11.252 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean)
2025-07-03 09:16:11.253 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:16:11.253 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:16:11.265 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:16:11.265 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.265 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:16:11.266 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已完成(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:16:11.270 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:16:11.271 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:11.271 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.271 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:11.271 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701224811070894(String)
2025-07-03 09:16:11.273 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:11.274 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:11.274 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.274 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:11.274 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:16:11.275 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:16:11.275 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.275 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:11.275 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:16:11.276 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已取消(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:16:11.276 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:16:11.276 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.276 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:16:11.276 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已完成(String), false(Boolean)
2025-07-03 09:16:11.277 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:16:11.279 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:16:11.280 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:11.280 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.281 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:11.281 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703091125948517(String)
2025-07-03 09:16:11.284 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:11.285 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:11.286 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.286 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:11.286 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:16:11.287 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:11.289 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:16:11.289 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.289 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:16:11.289 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已取消(String), false(Boolean)
2025-07-03 09:16:11.290 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:16:11.300 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:16:11.300 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.300 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:16:11.301 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已取消(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:16:11.303 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:16:11.303 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:11.304 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.304 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:11.304 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703091125948517(String)
2025-07-03 09:16:11.306 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:11.307 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:11.307 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.307 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:11.307 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:16:11.308 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:11.309 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:16:11.309 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:11.310 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:16:11.310 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已取消(String), false(Boolean)
2025-07-03 09:16:11.311 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:16:21.463 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.findOrderDto - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.id = ?
2025-07-03 09:16:21.464 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.464 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
        WHERE o.id = ? ::: DataSources: slave
2025-07-03 09:16:21.466 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.findOrderDto - ==> Parameters: 30(Integer)
2025-07-03 09:16:21.469 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.findOrderDto - <==      Total: 1
2025-07-03 09:16:21.471 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.StockReservationMapper.findByOrderId - ==>  Preparing: SELECT * FROM stock_reservation WHERE order_id = ? ORDER BY create_time DESC
2025-07-03 09:16:21.472 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.472 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: SELECT * FROM stock_reservation 
        WHERE order_id = ?
        ORDER BY create_time DESC ::: DataSources: slave
2025-07-03 09:16:21.472 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.StockReservationMapper.findByOrderId - ==> Parameters: 20250703091609136788(String)
2025-07-03 09:16:21.474 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.StockReservationMapper.findByOrderId - <==      Total: 1
2025-07-03 09:16:21.474 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.restoreBookStock - ==>  Preparing: update book set stock=stock+? where id=?
2025-07-03 09:16:21.474 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.474 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: update book
            set stock=stock+?
                where id=? ::: DataSources: master
2025-07-03 09:16:21.475 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.restoreBookStock - ==> Parameters: 1(Integer), 5(Integer)
2025-07-03 09:16:21.477 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.restoreBookStock - <==    Updates: 1
2025-07-03 09:16:21.478 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.StockReservationMapper.updateById - ==>  Preparing: UPDATE stock_reservation SET status = ?, update_time = CURRENT_TIMESTAMP , expire_time = ? WHERE id = ?
2025-07-03 09:16:21.478 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.478 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: UPDATE stock_reservation 
        SET 
            status = ?,
            update_time = CURRENT_TIMESTAMP
             , expire_time = ? 
        WHERE id = ? ::: DataSources: master
2025-07-03 09:16:21.479 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.StockReservationMapper.updateById - ==> Parameters: 2(Integer), 2025-07-03 09:46:10.0(Timestamp), 3(Long)
2025-07-03 09:16:21.481 [http-nio-8080-exec-10] DEBUG c.h.store.mapper.StockReservationMapper.updateById - <==    Updates: 1
2025-07-03 09:16:21.483 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.modifyOrder - ==>  Preparing: update bookorder set orderStatus=? where id=?
2025-07-03 09:16:21.483 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.483 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: update bookorder set
         
         
            orderStatus=?
         
         
        where id=? ::: DataSources: master
2025-07-03 09:16:21.484 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.modifyOrder - ==> Parameters: 已取消(String), 30(Integer)
2025-07-03 09:16:21.486 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.modifyOrder - <==    Updates: 1
2025-07-03 09:16:21.500 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:16:21.500 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.500 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:16:21.500 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), false(Boolean), 0(Integer), 5(Integer)
2025-07-03 09:16:21.502 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 5
2025-07-03 09:16:21.503 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:21.503 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.503 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:21.503 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703091609136788(String)
2025-07-03 09:16:21.505 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:21.506 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:21.506 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.506 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:21.507 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:16:21.508 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:21.509 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:21.509 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.509 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:21.509 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703091125948517(String)
2025-07-03 09:16:21.511 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:21.512 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:21.512 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.512 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:21.513 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:16:21.514 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:21.514 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:21.514 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.514 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:21.515 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703090943723937(String)
2025-07-03 09:16:21.516 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:21.516 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:21.516 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.516 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:21.517 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:16:21.517 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:21.518 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:21.518 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.519 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:21.520 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250702230939355225(String)
2025-07-03 09:16:21.521 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:21.522 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:21.522 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.522 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:21.522 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-03 09:16:21.523 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:21.523 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:21.523 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.523 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:21.523 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250702202456192460(String)
2025-07-03 09:16:21.524 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:21.525 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:21.525 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.525 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:21.526 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:16:21.527 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:21.527 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND beUserDelete = ?
2025-07-03 09:16:21.527 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.527 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:16:21.527 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), false(Boolean)
2025-07-03 09:16:21.528 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:16:21.551 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:16:21.551 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.551 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:16:21.552 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:16:21.555 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:16:21.555 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:21.556 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.556 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:21.557 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703091609136788(String)
2025-07-03 09:16:21.559 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:21.560 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:21.560 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.560 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:21.561 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:16:21.562 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:21.562 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND beUserDelete = ?
2025-07-03 09:16:21.563 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.563 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:16:21.563 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), false(Boolean)
2025-07-03 09:16:21.563 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:16:21.574 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:16:21.575 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.575 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:16:21.575 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:16:21.576 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 0
2025-07-03 09:16:21.577 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:16:21.577 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.577 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:16:21.578 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean)
2025-07-03 09:16:21.578 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:16:21.596 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:16:21.596 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.596 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:16:21.597 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已付款(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:16:21.598 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:16:21.598 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:21.599 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.599 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:21.599 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703090943723937(String)
2025-07-03 09:16:21.600 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:21.600 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:21.600 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.601 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:21.601 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:16:21.602 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:21.603 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:16:21.603 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.603 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:16:21.603 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已付款(String), false(Boolean)
2025-07-03 09:16:21.604 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:16:21.614 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:16:21.615 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.615 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:16:21.615 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:16:21.617 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:16:21.617 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:21.617 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.617 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:21.618 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751381288511772(String)
2025-07-03 09:16:21.619 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:21.619 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:21.619 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.619 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:21.620 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:16:21.620 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:21.621 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:16:21.622 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.622 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:16:21.622 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean)
2025-07-03 09:16:21.624 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:16:21.637 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:16:21.637 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.638 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:16:21.638 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已完成(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:16:21.638 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:16:21.639 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:21.639 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.639 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:21.639 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701224811070894(String)
2025-07-03 09:16:21.640 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:21.641 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:21.641 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.641 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:21.641 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:16:21.642 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:21.643 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:16:21.643 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.643 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:16:21.644 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已完成(String), false(Boolean)
2025-07-03 09:16:21.645 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:16:21.655 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:16:21.656 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.656 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:16:21.656 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已取消(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:16:21.658 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:16:21.658 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:21.659 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.659 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:21.659 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703091609136788(String)
2025-07-03 09:16:21.660 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:21.661 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:21.661 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.661 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:21.662 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:16:21.662 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:21.663 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:16:21.663 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:21.663 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:16:21.664 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已取消(String), false(Boolean)
2025-07-03 09:16:21.665 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:16:31.519 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:16:31.519 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:31.519 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:16:31.520 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean), 0(Integer), 5(Integer)
2025-07-03 09:16:31.522 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 0
2025-07-03 09:16:31.522 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:16:31.522 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:31.522 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:16:31.523 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean)
2025-07-03 09:16:31.523 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:16:31.540 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:16:31.540 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:31.540 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:16:31.541 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:16:31.543 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:16:31.544 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:31.544 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:31.544 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:31.545 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703091609136788(String)
2025-07-03 09:16:31.545 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:31.546 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:31.546 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:31.546 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:31.546 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:16:31.547 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:31.548 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND beUserDelete = ?
2025-07-03 09:16:31.548 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:31.548 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:16:31.548 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), false(Boolean)
2025-07-03 09:16:31.549 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:16:31.560 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:16:31.561 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:31.561 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:16:31.562 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:16:31.563 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 0
2025-07-03 09:16:31.563 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:16:31.564 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:31.564 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:16:31.564 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean)
2025-07-03 09:16:31.565 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:16:31.575 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:16:31.575 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:31.575 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:16:31.576 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已付款(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:16:31.577 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:16:31.578 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:31.578 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:31.578 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:31.578 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703090943723937(String)
2025-07-03 09:16:31.579 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:31.580 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:31.580 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:31.580 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:31.580 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:16:31.581 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:31.581 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:16:31.581 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:31.581 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:16:31.582 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已付款(String), false(Boolean)
2025-07-03 09:16:31.583 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:16:31.593 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:16:31.593 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:31.593 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:16:31.594 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:16:31.595 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:16:31.596 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:31.596 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:31.596 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:31.597 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751381288511772(String)
2025-07-03 09:16:31.598 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:31.598 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:31.598 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:31.598 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:31.599 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:16:31.600 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:31.600 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:16:31.600 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:31.600 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:16:31.600 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean)
2025-07-03 09:16:31.601 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:16:31.612 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:16:31.612 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:31.612 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:16:31.612 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已完成(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:16:31.613 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:16:31.613 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:31.613 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:31.613 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:31.614 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701224811070894(String)
2025-07-03 09:16:31.615 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:31.615 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:31.615 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:31.615 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:31.615 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:16:31.616 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:31.617 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:16:31.617 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:31.617 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:16:31.617 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已完成(String), false(Boolean)
2025-07-03 09:16:31.618 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:16:31.629 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:16:31.629 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:31.629 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:16:31.630 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已取消(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:16:31.632 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:16:31.632 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:31.632 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:31.633 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:31.633 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703091609136788(String)
2025-07-03 09:16:31.634 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:31.634 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:31.634 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:31.634 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:31.635 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:16:31.635 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:31.636 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:16:31.636 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:31.636 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:16:31.636 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已取消(String), false(Boolean)
2025-07-03 09:16:31.637 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:16:31.943 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:16:31.944 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:31.944 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:16:31.946 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已付款(String), false(Boolean), 0(Integer), 5(Integer)
2025-07-03 09:16:31.950 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 5
2025-07-03 09:16:31.950 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:31.950 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:31.950 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:31.951 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703090943723937(String)
2025-07-03 09:16:31.952 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:31.953 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:31.953 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:31.953 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:31.954 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:16:31.955 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:31.956 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:31.956 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:31.956 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:31.956 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701224748414440(String)
2025-07-03 09:16:31.957 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:31.958 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:31.958 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:31.958 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:31.958 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:16:31.959 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:31.959 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:31.960 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:31.960 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:31.960 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701211827858439(String)
2025-07-03 09:16:31.962 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:31.963 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:31.963 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:31.963 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:31.964 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:16:31.964 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:31.965 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:31.965 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:31.965 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:31.965 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701210858965375(String)
2025-07-03 09:16:31.966 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:31.967 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:31.967 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:31.967 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:31.967 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-03 09:16:31.968 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:31.968 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:31.968 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:31.968 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:31.969 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250630185416346684(String)
2025-07-03 09:16:31.970 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:31.970 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:31.970 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:31.970 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:31.971 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:16:31.971 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:31.972 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:16:31.972 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:31.972 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:16:31.972 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已付款(String), false(Boolean)
2025-07-03 09:16:31.973 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:16:32.000 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:16:32.001 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:32.001 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:16:32.001 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:16:32.004 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:16:32.004 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:32.005 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:32.005 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:32.006 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703091609136788(String)
2025-07-03 09:16:32.008 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:32.010 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:32.011 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:32.011 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:32.011 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:16:32.012 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:32.013 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND beUserDelete = ?
2025-07-03 09:16:32.013 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:32.014 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:16:32.014 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), false(Boolean)
2025-07-03 09:16:32.015 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:16:32.025 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:16:32.025 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:32.025 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:16:32.025 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:16:32.026 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 0
2025-07-03 09:16:32.027 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:16:32.027 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:32.027 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:16:32.027 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean)
2025-07-03 09:16:32.028 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:16:32.038 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:16:32.039 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:32.039 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:16:32.039 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已付款(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:16:32.040 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:16:32.041 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:32.041 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:32.041 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:32.041 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703090943723937(String)
2025-07-03 09:16:32.042 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:32.043 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:32.043 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:32.043 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:32.043 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:16:32.044 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:32.045 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:16:32.045 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:32.045 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:16:32.045 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已付款(String), false(Boolean)
2025-07-03 09:16:32.046 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:16:32.057 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:16:32.058 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:32.058 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:16:32.058 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:16:32.060 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:16:32.060 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:32.060 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:32.060 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:32.060 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751381288511772(String)
2025-07-03 09:16:32.061 [http-nio-8080-exec-8] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:32.061 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:32.061 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:32.061 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:32.061 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:16:32.062 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:32.063 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:16:32.063 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:32.063 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:16:32.063 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean)
2025-07-03 09:16:32.064 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:16:32.074 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:16:32.074 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:32.074 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:16:32.075 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已完成(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:16:32.076 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:16:32.076 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:32.076 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:32.076 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:32.077 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701224811070894(String)
2025-07-03 09:16:32.077 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:32.078 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:32.078 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:32.078 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:32.078 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:16:32.079 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:32.080 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:16:32.080 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:32.080 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:16:32.080 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已完成(String), false(Boolean)
2025-07-03 09:16:32.081 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:16:32.098 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:16:32.098 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:32.098 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:16:32.098 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已取消(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:16:32.101 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:16:32.101 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:16:32.101 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:32.101 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:16:32.102 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703091609136788(String)
2025-07-03 09:16:32.103 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:16:32.103 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:16:32.103 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:32.103 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:16:32.103 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:16:32.104 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:16:32.105 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:16:32.105 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:16:32.105 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:16:32.105 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已取消(String), false(Boolean)
2025-07-03 09:16:32.106 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:19:38.405 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==>  Preparing: select * from book order by birthday desc limit ?,?
2025-07-03 09:19:38.411 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:19:38.411 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book order by birthday desc limit ?,? ::: DataSources: slave
2025-07-03 09:19:38.409 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-03 09:19:38.415 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:19:38.410 [http-nio-8080-exec-1] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==>  Preparing: SELECT * FROM spikeActivity ORDER BY startTime ASC
2025-07-03 09:19:38.410 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==>  Preparing: select * from booktopic limit ?,?
2025-07-03 09:19:38.416 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:19:38.416 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select * from booktopic limit ?,? ::: DataSources: slave
2025-07-03 09:19:38.414 [http-nio-8080-exec-3] INFO  com.huang.store.controller.BookController - 获取分类图书列表: sortId=117
2025-07-03 09:19:38.415 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - ==> Parameters: 0(Integer), 10(Integer)
2025-07-03 09:19:38.415 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from recommend limit ?,?)as t )
2025-07-03 09:19:38.416 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-03 09:19:38.416 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:19:38.418 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM spikeActivity 
        ORDER BY startTime ASC ::: DataSources: slave
2025-07-03 09:19:38.419 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-03 09:19:38.417 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==>  Preparing: select * from booksort where id=?
2025-07-03 09:19:38.418 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - ==> Parameters: 0(Integer), 5(Integer)
2025-07-03 09:19:38.418 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:19:38.419 [http-nio-8080-exec-4] DEBUG c.huang.store.mapper.BookMapper.getNewPutBookList - <==      Total: 5
2025-07-03 09:19:38.421 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:19:38.423 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-03 09:19:38.423 [http-nio-8080-exec-2] DEBUG c.huang.store.mapper.TopicMapper.getBookTopicList - <==      Total: 2
2025-07-03 09:19:38.423 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from recommend limit ?,?)as t ) ::: DataSources: slave
2025-07-03 09:19:38.424 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-03 09:19:38.427 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:19:38.428 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-03 09:19:38.425 [http-nio-8080-exec-1] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - ==> Parameters: 
2025-07-03 09:19:38.425 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select * from booksort where id=? ::: DataSources: slave
2025-07-03 09:19:38.425 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-03 09:19:38.426 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==>  Preparing: select count(*) from booktopic
2025-07-03 09:19:38.429 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:19:38.429 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select count(*) from booktopic ::: DataSources: slave
2025-07-03 09:19:38.427 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-03 09:19:38.429 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-03 09:19:38.429 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:19:38.431 [http-nio-8080-exec-1] DEBUG c.h.s.m.S.getAllActivitiesOrderByTime - <==      Total: 6
2025-07-03 09:19:38.432 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-03 09:19:38.432 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getRecommendsByPage - <==      Total: 0
2025-07-03 09:19:38.432 [http-nio-8080-exec-4] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-03 09:19:38.435 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:19:38.437 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:19:38.437 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:19:38.433 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - ==> Parameters: 117(Integer)
2025-07-03 09:19:38.433 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-03 09:19:38.434 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==>  Preparing: select * from book where id in (select t.bookId from (select * from newproduct limit ?,?)as t )
2025-07-03 09:19:38.435 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - ==> Parameters: 
2025-07-03 09:19:38.435 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-03 09:19:38.439 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:19:38.440 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-03 09:19:38.439 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:19:38.445 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from book where id in
         (select t.bookId from (select * from newproduct limit ?,?)as t ) ::: DataSources: slave
2025-07-03 09:19:38.439 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.SortMapper.getBookSortById - <==      Total: 0
2025-07-03 09:19:38.440 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.TopicMapper.getTopicCount - <==      Total: 1
2025-07-03 09:19:38.441 [http-nio-8080-exec-6] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-03 09:19:38.443 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-03 09:19:38.447 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 6(Long)
2025-07-03 09:19:38.447 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - ==> Parameters: 1(Integer), 14(Integer)
2025-07-03 09:19:38.457 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:19:38.457 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 1
2025-07-03 09:19:38.462 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:19:38.463 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:19:38.462 [http-nio-8080-exec-5] DEBUG c.h.store.mapper.BookMapper.getNewProductsByPage - <==      Total: 0
2025-07-03 09:19:38.463 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-03 09:19:38.463 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:19:38.466 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:19:38.466 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-03 09:19:38.466 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-03 09:19:38.468 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:19:38.470 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:19:38.468 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 2(Integer)
2025-07-03 09:19:38.469 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-03 09:19:38.471 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:19:38.472 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:19:38.472 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:19:38.473 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-03 09:19:38.473 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-03 09:19:38.474 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-03 09:19:38.474 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-03 09:19:38.474 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:19:38.475 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:19:38.475 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-03 09:19:38.475 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:19:38.476 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:19:38.476 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:19:38.476 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:19:38.476 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 09:19:38.477 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-03 09:19:38.477 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:19:38.477 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:19:38.478 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:19:38.478 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:19:38.478 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 09:19:38.479 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-03 09:19:38.480 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:19:38.480 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-03 09:19:38.480 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:19:38.481 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:19:38.481 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-03 09:19:38.482 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:19:38.482 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:19:38.482 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-03 09:19:38.483 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 5(Long)
2025-07-03 09:19:38.483 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:19:38.483 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 09:19:38.484 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:19:38.484 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 09:19:38.484 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 0
2025-07-03 09:19:38.484 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:19:38.484 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-03 09:19:38.485 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==>  Preparing: SELECT sg.*, b.id as book_id, b.bookName, b.author, b.publish, b.isbn, b.price, b.marketPrice, b.description, b.stock FROM spikeGoods sg LEFT JOIN book b ON sg.bookId = b.id WHERE sg.activityId = ? AND sg.status = 1 ORDER BY sg.sortOrder ASC
2025-07-03 09:19:38.487 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:19:38.487 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: SELECT 
            sg.*,
            b.id as book_id,
            b.bookName,
            b.author,
            b.publish,
            b.isbn,
            b.price,
            b.marketPrice,
            b.description,
            b.stock
        FROM spikeGoods sg
        LEFT JOIN book b ON sg.bookId = b.id
        WHERE sg.activityId = ?
        AND sg.status = 1
        ORDER BY sg.sortOrder ASC ::: DataSources: slave
2025-07-03 09:19:38.486 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-03 09:19:38.488 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 09:19:38.488 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - ==> Parameters: 4(Long)
2025-07-03 09:19:38.489 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:19:38.489 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 09:19:38.490 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-03 09:19:38.491 [http-nio-8080-exec-1] DEBUG c.h.s.m.SpikeGoodsMapper.getSpikeGoodsByActivity - <==      Total: 1
2025-07-03 09:19:38.491 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-03 09:19:38.492 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBook - ==>  Preparing: select * from book where id = ?
2025-07-03 09:19:38.492 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:19:38.492 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 09:19:38.492 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select * from book where id = ? ::: DataSources: slave
2025-07-03 09:19:38.493 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:19:38.493 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 09:19:38.493 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBook - ==> Parameters: 1(Integer)
2025-07-03 09:19:38.493 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-03 09:19:38.495 [http-nio-8080-exec-7] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-03 09:19:38.495 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBook - <==      Total: 1
2025-07-03 09:19:38.496 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:19:38.496 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:19:38.498 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:19:38.499 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:19:38.500 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:19:40.637 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 开始检查超时订单...
2025-07-03 09:19:40.637 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==>  Preparing: SELECT * FROM bookorder WHERE orderStatus = '待付款' AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ? ORDER BY orderTime ASC
2025-07-03 09:19:40.637 [scheduling-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:19:40.638 [scheduling-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM bookorder
        WHERE orderStatus = '待付款'
        AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ?
        ORDER BY orderTime ASC ::: DataSources: slave
2025-07-03 09:19:40.639 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==> Parameters: 30(Integer)
2025-07-03 09:19:40.641 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - <==      Total: 0
2025-07-03 09:19:40.642 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 没有发现超时订单
2025-07-03 09:24:40.636 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 开始检查超时订单...
2025-07-03 09:24:40.639 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==>  Preparing: SELECT * FROM bookorder WHERE orderStatus = '待付款' AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ? ORDER BY orderTime ASC
2025-07-03 09:24:40.642 [scheduling-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:24:40.643 [scheduling-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM bookorder
        WHERE orderStatus = '待付款'
        AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ?
        ORDER BY orderTime ASC ::: DataSources: slave
2025-07-03 09:24:40.646 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==> Parameters: 30(Integer)
2025-07-03 09:24:40.647 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - <==      Total: 0
2025-07-03 09:24:40.650 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 没有发现超时订单
2025-07-03 09:28:22.624 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-03 09:28:22.624 [Thread-7] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-03 09:28:22.660 [Thread-7] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-07-03 09:28:22.688 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-257547022] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-03 09:28:22.689 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-257547022] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-03 09:28:22.690 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-507994358] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-03 09:28:22.690 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-507994358] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-03 09:28:22.690 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-nioEventLoop-4-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/sun.nio.ch.WEPoll.wait(Native Method)
 java.base@17.0.8/sun.nio.ch.WEPollSelectorImpl.doSelect(WEPollSelectorImpl.java:111)
 java.base@17.0.8/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:129)
 java.base@17.0.8/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:146)
 app//io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:68)
 app//io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:879)
 app//io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:526)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-03 09:28:22.691 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-03 09:28:22.691 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-03 09:28:22.692 [Thread-7] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
2025-07-03 09:28:22.692 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-03 09:28:22.694 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-03 09:28:22.813 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-07-03 09:28:22.816 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-07-03 09:28:22.817 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2025-07-03 09:28:22.820 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2025-07-03 09:28:22.896 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 20304 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-03 09:28:22.896 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-03 09:28:22.896 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-03 09:28:23.042 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-03 09:28:23.042 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-03 09:28:23.048 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2025-07-03 09:28:23.101 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$f4ad8f59] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-03 09:28:23.107 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-03 09:28:23.171 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-03 09:28:23.171 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-03 09:28:23.171 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-03 09:28:23.172 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-03 09:28:23.173 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-03 09:28:23.173 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-03 09:28:23.173 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-03 09:28:23.173 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-03 09:28:23.185 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-03 09:28:23.185 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 285 ms
2025-07-03 09:28:23.187 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-03 09:28:23.274 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} inited
2025-07-03 09:28:23.286 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} inited
2025-07-03 09:28:23.389 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-03 09:28:23.389 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-03 09:28:23.495 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-03 09:28:23.562 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@69930bb2, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7d062e2b, org.springframework.security.web.context.SecurityContextPersistenceFilter@5787aa5a, org.springframework.security.web.header.HeaderWriterFilter@4de0d9a0, org.springframework.web.filter.CorsFilter@2816b273, org.springframework.security.web.authentication.logout.LogoutFilter@46d1a675, com.huang.store.security.JwtAuthenticationTokenFilter@3ec98622, com.huang.store.security.CustomAuthenticationFilter@16ee3725, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@57b2698, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@747d9d26, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3f1b77d0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@27d526ef, org.springframework.security.web.session.SessionManagementFilter@3f759261, org.springframework.security.web.access.ExceptionTranslationFilter@727a3478, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5efac930]
2025-07-03 09:28:23.666 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-03 09:28:23.675 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-03 09:28:23.678 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-03 09:28:23.681 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 开始检查超时订单...
2025-07-03 09:28:23.681 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 0.812 seconds (JVM running for 826.767)
2025-07-03 09:28:23.685 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==>  Preparing: SELECT * FROM bookorder WHERE orderStatus = '待付款' AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ? ORDER BY orderTime ASC
2025-07-03 09:28:23.685 [scheduling-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:28:23.685 [scheduling-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM bookorder
        WHERE orderStatus = '待付款'
        AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ?
        ORDER BY orderTime ASC ::: DataSources: slave
2025-07-03 09:28:23.686 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==> Parameters: 30(Integer)
2025-07-03 09:28:23.688 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - <==      Total: 0
2025-07-03 09:28:23.689 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 没有发现超时订单
2025-07-03 09:28:40.419 [Thread-9] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-03 09:28:40.419 [Thread-9] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-03 09:28:40.425 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-938543354] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-03 09:28:40.427 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-938543354] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-03 09:28:40.427 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-308471353] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-03 09:28:40.428 [Thread-9] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-308471353] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-03 09:28:40.429 [Thread-9] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-03 09:28:40.430 [Thread-9] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-03 09:28:40.433 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closing ...
2025-07-03 09:28:40.434 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed
2025-07-03 09:28:40.434 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closing ...
2025-07-03 09:28:40.435 [Thread-9] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed
2025-07-03 09:28:40.492 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 20304 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-03 09:28:40.493 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-03 09:28:40.493 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-03 09:28:40.588 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-03 09:28:40.588 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-03 09:28:40.595 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-07-03 09:28:40.627 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$f4ad8f59] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-03 09:28:40.631 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-03 09:28:40.672 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-03 09:28:40.672 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-03 09:28:40.672 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-03 09:28:40.672 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-03 09:28:40.673 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-03 09:28:40.673 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-03 09:28:40.673 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-03 09:28:40.673 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-03 09:28:40.684 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-03 09:28:40.684 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 190 ms
2025-07-03 09:28:40.686 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-03 09:28:40.748 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} inited
2025-07-03 09:28:40.773 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} inited
2025-07-03 09:28:40.851 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-03 09:28:40.851 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-03 09:28:40.944 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-03 09:28:40.996 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2d96d54e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5bdb9d4b, org.springframework.security.web.context.SecurityContextPersistenceFilter@52777073, org.springframework.security.web.header.HeaderWriterFilter@6c75cba6, org.springframework.web.filter.CorsFilter@3fd5d08, org.springframework.security.web.authentication.logout.LogoutFilter@5b9a2751, com.huang.store.security.JwtAuthenticationTokenFilter@524a050, com.huang.store.security.CustomAuthenticationFilter@644ef69f, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@17e92be6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3a876cb4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@78eda8b9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5a29bcde, org.springframework.security.web.session.SessionManagementFilter@4ef08a14, org.springframework.security.web.access.ExceptionTranslationFilter@9ac3687, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2b278b44]
2025-07-03 09:28:41.077 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-03 09:28:41.084 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-03 09:28:41.087 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-03 09:28:41.089 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 开始检查超时订单...
2025-07-03 09:28:41.090 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 0.619 seconds (JVM running for 844.176)
2025-07-03 09:28:41.092 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==>  Preparing: SELECT * FROM bookorder WHERE orderStatus = '待付款' AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ? ORDER BY orderTime ASC
2025-07-03 09:28:41.093 [scheduling-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:28:41.093 [scheduling-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM bookorder
        WHERE orderStatus = '待付款'
        AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ?
        ORDER BY orderTime ASC ::: DataSources: slave
2025-07-03 09:28:41.094 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==> Parameters: 30(Integer)
2025-07-03 09:28:41.095 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - <==      Total: 0
2025-07-03 09:28:41.096 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 没有发现超时订单
2025-07-03 09:28:57.864 [Thread-15] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-03 09:28:57.865 [Thread-15] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-03 09:28:57.867 [Thread-15] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1955591890] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-03 09:28:57.867 [Thread-15] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1955591890] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-03 09:28:57.867 [Thread-15] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1894309282] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-03 09:28:57.868 [Thread-15] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1894309282] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-03 09:28:57.868 [Thread-15] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-03 09:28:57.868 [Thread-15] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-03 09:28:57.871 [Thread-15] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} closing ...
2025-07-03 09:28:57.871 [Thread-15] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} closed
2025-07-03 09:28:57.872 [Thread-15] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} closing ...
2025-07-03 09:28:57.872 [Thread-15] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} closed
2025-07-03 09:28:57.925 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 20304 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-03 09:28:57.925 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-03 09:28:57.925 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-03 09:28:58.019 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-03 09:28:58.020 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-03 09:28:58.027 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2025-07-03 09:28:58.058 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$f4ad8f59] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-03 09:28:58.061 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-03 09:28:58.100 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-03 09:28:58.100 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-03 09:28:58.101 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-03 09:28:58.101 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-03 09:28:58.101 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-03 09:28:58.101 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-03 09:28:58.101 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-03 09:28:58.102 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-03 09:28:58.111 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-03 09:28:58.111 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 185 ms
2025-07-03 09:28:58.114 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-03 09:28:58.185 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} inited
2025-07-03 09:28:58.198 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} inited
2025-07-03 09:28:58.268 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-03 09:28:58.269 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-03 09:28:58.355 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-03 09:28:58.409 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2f3c27ec, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4e76c356, org.springframework.security.web.context.SecurityContextPersistenceFilter@315af730, org.springframework.security.web.header.HeaderWriterFilter@786aa8c6, org.springframework.web.filter.CorsFilter@42becd80, org.springframework.security.web.authentication.logout.LogoutFilter@72267be2, com.huang.store.security.JwtAuthenticationTokenFilter@2c9b1a89, com.huang.store.security.CustomAuthenticationFilter@656800f6, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@466a321b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@379b714e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1a1ad3e3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@60ef72a1, org.springframework.security.web.session.SessionManagementFilter@14a3528b, org.springframework.security.web.access.ExceptionTranslationFilter@5cfb5792, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4950eab8]
2025-07-03 09:28:58.495 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-03 09:28:58.501 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-03 09:28:58.505 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-03 09:28:58.508 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 开始检查超时订单...
2025-07-03 09:28:58.509 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 0.603 seconds (JVM running for 861.595)
2025-07-03 09:28:58.512 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==>  Preparing: SELECT * FROM bookorder WHERE orderStatus = '待付款' AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ? ORDER BY orderTime ASC
2025-07-03 09:28:58.513 [scheduling-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:28:58.513 [scheduling-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM bookorder
        WHERE orderStatus = '待付款'
        AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ?
        ORDER BY orderTime ASC ::: DataSources: slave
2025-07-03 09:28:58.514 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==> Parameters: 30(Integer)
2025-07-03 09:28:58.515 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - <==      Total: 0
2025-07-03 09:28:58.516 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 没有发现超时订单
2025-07-03 09:29:17.266 [Thread-21] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-07-03 09:29:17.266 [Thread-21] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-03 09:29:17.270 [Thread-21] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-173324997] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-03 09:29:17.271 [Thread-21] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-173324997] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-03 09:29:17.271 [Thread-21] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1886803095] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 app//com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2921)
2025-07-03 09:29:17.271 [Thread-21] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1886803095] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8/java.lang.Thread.sleep(Native Method)
 app//com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:3020)
2025-07-03 09:29:17.272 [Thread-21] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-03 09:29:17.273 [Thread-21] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-07-03 09:29:17.276 [Thread-21] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} closing ...
2025-07-03 09:29:17.277 [Thread-21] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-7} closed
2025-07-03 09:29:17.277 [Thread-21] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} closing ...
2025-07-03 09:29:17.278 [Thread-21] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-8} closed
2025-07-03 09:29:17.337 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 20304 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-03 09:29:17.338 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-03 09:29:17.338 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-03 09:29:17.434 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-03 09:29:17.435 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-03 09:29:17.442 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2025-07-03 09:29:17.472 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$f4ad8f59] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-03 09:29:17.476 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-03 09:29:17.513 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-03 09:29:17.514 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-03 09:29:17.514 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-03 09:29:17.514 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-03 09:29:17.514 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-03 09:29:17.515 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-03 09:29:17.515 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-03 09:29:17.515 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-03 09:29:17.526 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-03 09:29:17.526 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 187 ms
2025-07-03 09:29:17.528 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-03 09:29:17.600 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-9} inited
2025-07-03 09:29:17.614 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-10} inited
2025-07-03 09:29:17.683 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-03 09:29:17.683 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-03 09:29:17.771 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-03 09:29:17.828 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@e98529e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@e16acff, org.springframework.security.web.context.SecurityContextPersistenceFilter@4ccf8eae, org.springframework.security.web.header.HeaderWriterFilter@2d0ea45a, org.springframework.web.filter.CorsFilter@1edc77c1, org.springframework.security.web.authentication.logout.LogoutFilter@79af8154, com.huang.store.security.JwtAuthenticationTokenFilter@63aeb8c1, com.huang.store.security.CustomAuthenticationFilter@3753f1d0, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@26e689ff, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@16c41150, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4e305ba6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7076e6e0, org.springframework.security.web.session.SessionManagementFilter@2074eccc, org.springframework.security.web.access.ExceptionTranslationFilter@18e84720, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7e875068]
2025-07-03 09:29:17.911 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-03 09:29:17.918 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-03 09:29:17.921 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-03 09:29:17.925 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 开始检查超时订单...
2025-07-03 09:29:17.925 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 0.607 seconds (JVM running for 881.012)
2025-07-03 09:29:17.928 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==>  Preparing: SELECT * FROM bookorder WHERE orderStatus = '待付款' AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ? ORDER BY orderTime ASC
2025-07-03 09:29:17.929 [scheduling-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:29:17.929 [scheduling-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM bookorder
        WHERE orderStatus = '待付款'
        AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ?
        ORDER BY orderTime ASC ::: DataSources: slave
2025-07-03 09:29:17.929 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==> Parameters: 30(Integer)
2025-07-03 09:29:17.930 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - <==      Total: 0
2025-07-03 09:29:17.931 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 没有发现超时订单
2025-07-03 09:34:17.926 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 开始检查超时订单...
2025-07-03 09:34:17.928 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==>  Preparing: SELECT * FROM bookorder WHERE orderStatus = '待付款' AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ? ORDER BY orderTime ASC
2025-07-03 09:34:17.928 [scheduling-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:34:17.928 [scheduling-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM bookorder
        WHERE orderStatus = '待付款'
        AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ?
        ORDER BY orderTime ASC ::: DataSources: slave
2025-07-03 09:34:17.932 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==> Parameters: 30(Integer)
2025-07-03 09:34:17.934 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - <==      Total: 0
2025-07-03 09:34:17.935 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 没有发现超时订单
2025-07-03 09:39:17.925 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 开始检查超时订单...
2025-07-03 09:39:17.927 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==>  Preparing: SELECT * FROM bookorder WHERE orderStatus = '待付款' AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ? ORDER BY orderTime ASC
2025-07-03 09:39:17.928 [scheduling-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:39:17.928 [scheduling-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM bookorder
        WHERE orderStatus = '待付款'
        AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ?
        ORDER BY orderTime ASC ::: DataSources: slave
2025-07-03 09:39:17.931 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==> Parameters: 30(Integer)
2025-07-03 09:39:17.933 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - <==      Total: 0
2025-07-03 09:39:17.935 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 没有发现超时订单
2025-07-03 09:44:17.927 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 开始检查超时订单...
2025-07-03 09:44:17.928 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==>  Preparing: SELECT * FROM bookorder WHERE orderStatus = '待付款' AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ? ORDER BY orderTime ASC
2025-07-03 09:44:17.929 [scheduling-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:44:17.931 [scheduling-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM bookorder
        WHERE orderStatus = '待付款'
        AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ?
        ORDER BY orderTime ASC ::: DataSources: slave
2025-07-03 09:44:17.933 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==> Parameters: 30(Integer)
2025-07-03 09:44:17.934 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - <==      Total: 0
2025-07-03 09:44:17.935 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 没有发现超时订单
2025-07-03 09:47:38.756 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-03 09:47:38.757 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-03 09:47:38.759 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-03 09:47:38.772 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxNTA0Nzg2OTU1LCJleHAiOjE3NTE1MDY1ODZ9.exQegqrK7_4TJaR8WP3G5FXnw_J3B8oJMWFW9V1Np8JmJqTsdF0MXCkXHw3Lf3T5b2eUREymn-qTrf36-8M16g
2025-07-03 09:47:38.778 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.CartMapper.getCartsByPage - ==>  Preparing: select book.id,author,bookName,isbn,publish, birthday,marketPrice,price,stock,description,put,num,addTime,account from book join cart on book.id = cart.id where account=? limit ?,?
2025-07-03 09:47:38.779 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:38.779 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select book.id,author,bookName,isbn,publish,
                birthday,marketPrice,price,stock,description,put,num,addTime,account
         from book join cart on book.id = cart.id
         where account=? limit ?,? ::: DataSources: slave
2025-07-03 09:47:38.783 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.CartMapper.getCartsByPage - ==> Parameters: 56464ff@456.com(String), 0(Integer), 10(Integer)
2025-07-03 09:47:38.785 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.CartMapper.getCartsByPage - <==      Total: 0
2025-07-03 09:47:40.206 [http-nio-8080-exec-2] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxNTA0Nzg2OTU1LCJleHAiOjE3NTE1MDY1ODZ9.exQegqrK7_4TJaR8WP3G5FXnw_J3B8oJMWFW9V1Np8JmJqTsdF0MXCkXHw3Lf3T5b2eUREymn-qTrf36-8M16g
2025-07-03 09:47:40.206 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxNTA0Nzg2OTU1LCJleHAiOjE3NTE1MDY1ODZ9.exQegqrK7_4TJaR8WP3G5FXnw_J3B8oJMWFW9V1Np8JmJqTsdF0MXCkXHw3Lf3T5b2eUREymn-qTrf36-8M16g
2025-07-03 09:47:40.215 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:47:40.215 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:47:40.220 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.221 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.222 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:47:40.222 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:47:40.225 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:47:40.228 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:47:40.229 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:47:40.231 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.232 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:47:40.230 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), false(Boolean), 0(Integer), 5(Integer)
2025-07-03 09:47:40.238 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 5
2025-07-03 09:47:40.239 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:47:40.239 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.240 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:47:40.240 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703091609136788(String)
2025-07-03 09:47:40.244 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:47:40.245 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703091609136788(String)
2025-07-03 09:47:40.247 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:47:40.261 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:47:40.263 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.263 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:47:40.261 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:47:40.265 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.265 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:47:40.265 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:47:40.266 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:47:40.267 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:47:40.267 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:47:40.269 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND beUserDelete = ?
2025-07-03 09:47:40.269 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:47:40.270 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.270 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.270 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:47:40.270 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:47:40.271 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703091125948517(String)
2025-07-03 09:47:40.271 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), false(Boolean)
2025-07-03 09:47:40.272 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:47:40.272 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:47:40.274 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:47:40.274 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.275 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:47:40.276 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:47:40.278 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:47:40.278 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:47:40.279 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.279 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:47:40.280 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703090943723937(String)
2025-07-03 09:47:40.281 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:47:40.282 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:47:40.283 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.283 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:47:40.283 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:47:40.284 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:47:40.285 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:47:40.285 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.286 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:47:40.286 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250702230939355225(String)
2025-07-03 09:47:40.288 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:47:40.291 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:47:40.291 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.292 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:47:40.293 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-03 09:47:40.293 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxNTA0Nzg2OTU1LCJleHAiOjE3NTE1MDY1ODZ9.exQegqrK7_4TJaR8WP3G5FXnw_J3B8oJMWFW9V1Np8JmJqTsdF0MXCkXHw3Lf3T5b2eUREymn-qTrf36-8M16g
2025-07-03 09:47:40.294 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:47:40.296 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:47:40.296 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:47:40.298 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.298 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.298 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:47:40.298 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:47:40.299 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250702202456192460(String)
2025-07-03 09:47:40.300 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:47:40.301 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:47:40.302 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 0
2025-07-03 09:47:40.302 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:47:40.302 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:47:40.303 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.302 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.303 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:47:40.303 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:47:40.304 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:47:40.304 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean)
2025-07-03 09:47:40.305 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:47:40.306 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:47:40.307 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND beUserDelete = ?
2025-07-03 09:47:40.307 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.307 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:47:40.307 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), false(Boolean)
2025-07-03 09:47:40.309 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:47:40.321 [http-nio-8080-exec-6] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxNTA0Nzg2OTU1LCJleHAiOjE3NTE1MDY1ODZ9.exQegqrK7_4TJaR8WP3G5FXnw_J3B8oJMWFW9V1Np8JmJqTsdF0MXCkXHw3Lf3T5b2eUREymn-qTrf36-8M16g
2025-07-03 09:47:40.323 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:47:40.324 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.324 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:47:40.325 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已付款(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:47:40.326 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:47:40.327 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:47:40.327 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.327 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:47:40.328 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703090943723937(String)
2025-07-03 09:47:40.330 [http-nio-8080-exec-6] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:47:40.331 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:47:40.331 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.331 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:47:40.331 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:47:40.332 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:47:40.333 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:47:40.333 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.333 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:47:40.334 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已付款(String), false(Boolean)
2025-07-03 09:47:40.335 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:47:40.340 [http-nio-8080-exec-7] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxNTA0Nzg2OTU1LCJleHAiOjE3NTE1MDY1ODZ9.exQegqrK7_4TJaR8WP3G5FXnw_J3B8oJMWFW9V1Np8JmJqTsdF0MXCkXHw3Lf3T5b2eUREymn-qTrf36-8M16g
2025-07-03 09:47:40.342 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:47:40.342 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.343 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:47:40.344 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:47:40.345 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:47:40.346 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:47:40.346 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.346 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:47:40.347 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703091609136788(String)
2025-07-03 09:47:40.348 [http-nio-8080-exec-7] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:47:40.349 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:47:40.349 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.349 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:47:40.349 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:47:40.350 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:47:40.351 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND beUserDelete = ?
2025-07-03 09:47:40.351 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.351 [http-nio-8080-exec-7] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:47:40.352 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), false(Boolean)
2025-07-03 09:47:40.352 [http-nio-8080-exec-7] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:47:40.370 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxNTA0Nzg2OTU1LCJleHAiOjE3NTE1MDY1ODZ9.exQegqrK7_4TJaR8WP3G5FXnw_J3B8oJMWFW9V1Np8JmJqTsdF0MXCkXHw3Lf3T5b2eUREymn-qTrf36-8M16g
2025-07-03 09:47:40.371 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:47:40.371 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.372 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:47:40.373 [http-nio-8080-exec-8] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxNTA0Nzg2OTU1LCJleHAiOjE3NTE1MDY1ODZ9.exQegqrK7_4TJaR8WP3G5FXnw_J3B8oJMWFW9V1Np8JmJqTsdF0MXCkXHw3Lf3T5b2eUREymn-qTrf36-8M16g
2025-07-03 09:47:40.374 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:47:40.376 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:47:40.376 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:47:40.376 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:47:40.376 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.377 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.377 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:47:40.377 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:47:40.378 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:47:40.379 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751381288511772(String)
2025-07-03 09:47:40.381 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 0
2025-07-03 09:47:40.381 [http-nio-8080-exec-5] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:47:40.381 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:47:40.382 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.382 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:47:40.382 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:47:40.383 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.383 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:47:40.383 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 待付款(String), false(Boolean)
2025-07-03 09:47:40.383 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:47:40.384 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:47:40.384 [http-nio-8080-exec-8] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:47:40.385 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:47:40.385 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.386 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:47:40.386 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean)
2025-07-03 09:47:40.387 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:47:40.398 [http-nio-8080-exec-9] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxNTA0Nzg2OTU1LCJleHAiOjE3NTE1MDY1ODZ9.exQegqrK7_4TJaR8WP3G5FXnw_J3B8oJMWFW9V1Np8JmJqTsdF0MXCkXHw3Lf3T5b2eUREymn-qTrf36-8M16g
2025-07-03 09:47:40.400 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:47:40.400 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.400 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:47:40.402 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已付款(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:47:40.403 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:47:40.404 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:47:40.404 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.404 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:47:40.405 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703090943723937(String)
2025-07-03 09:47:40.406 [http-nio-8080-exec-9] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:47:40.407 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:47:40.407 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.408 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:47:40.408 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:47:40.410 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:47:40.411 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:47:40.411 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.411 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:47:40.411 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已付款(String), false(Boolean)
2025-07-03 09:47:40.412 [http-nio-8080-exec-9] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:47:40.417 [http-nio-8080-exec-10] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxNTA0Nzg2OTU1LCJleHAiOjE3NTE1MDY1ODZ9.exQegqrK7_4TJaR8WP3G5FXnw_J3B8oJMWFW9V1Np8JmJqTsdF0MXCkXHw3Lf3T5b2eUREymn-qTrf36-8M16g
2025-07-03 09:47:40.419 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:47:40.419 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.419 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:47:40.420 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已完成(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:47:40.421 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:47:40.422 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:47:40.422 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.422 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:47:40.423 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701224811070894(String)
2025-07-03 09:47:40.424 [http-nio-8080-exec-10] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:47:40.425 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:47:40.425 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.425 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:47:40.425 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:47:40.426 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:47:40.426 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:47:40.427 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.427 [http-nio-8080-exec-10] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:47:40.427 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已完成(String), false(Boolean)
2025-07-03 09:47:40.427 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxNTA0Nzg2OTU1LCJleHAiOjE3NTE1MDY1ODZ9.exQegqrK7_4TJaR8WP3G5FXnw_J3B8oJMWFW9V1Np8JmJqTsdF0MXCkXHw3Lf3T5b2eUREymn-qTrf36-8M16g
2025-07-03 09:47:40.428 [http-nio-8080-exec-10] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:47:40.429 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:47:40.430 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.430 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:47:40.432 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:47:40.433 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:47:40.434 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:47:40.434 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.434 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:47:40.435 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: SPIKE1751381288511772(String)
2025-07-03 09:47:40.436 [http-nio-8080-exec-1] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:47:40.437 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:47:40.437 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.437 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:47:40.437 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:47:40.438 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:47:40.439 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:47:40.439 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.439 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:47:40.440 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已发货(String), false(Boolean)
2025-07-03 09:47:40.441 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:47:40.451 [http-nio-8080-exec-3] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxNTA0Nzg2OTU1LCJleHAiOjE3NTE1MDY1ODZ9.exQegqrK7_4TJaR8WP3G5FXnw_J3B8oJMWFW9V1Np8JmJqTsdF0MXCkXHw3Lf3T5b2eUREymn-qTrf36-8M16g
2025-07-03 09:47:40.452 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:47:40.453 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.453 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:47:40.454 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已取消(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:47:40.455 [http-nio-8080-exec-4] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxNTA0Nzg2OTU1LCJleHAiOjE3NTE1MDY1ODZ9.exQegqrK7_4TJaR8WP3G5FXnw_J3B8oJMWFW9V1Np8JmJqTsdF0MXCkXHw3Lf3T5b2eUREymn-qTrf36-8M16g
2025-07-03 09:47:40.455 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:47:40.456 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:47:40.456 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.457 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:47:40.457 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703091609136788(String)
2025-07-03 09:47:40.458 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:47:40.458 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.458 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:47:40.458 [http-nio-8080-exec-3] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:47:40.459 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已完成(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:47:40.459 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:47:40.460 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.460 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:47:40.460 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:47:40.461 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:47:40.461 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:47:40.461 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.461 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:47:40.461 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:47:40.461 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250701224811070894(String)
2025-07-03 09:47:40.461 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:47:40.462 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.462 [http-nio-8080-exec-3] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:47:40.462 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已取消(String), false(Boolean)
2025-07-03 09:47:40.463 [http-nio-8080-exec-4] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:47:40.464 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:47:40.464 [http-nio-8080-exec-3] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:47:40.464 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.464 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:47:40.465 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 09:47:40.466 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:47:40.468 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:47:40.468 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.469 [http-nio-8080-exec-4] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:47:40.469 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已完成(String), false(Boolean)
2025-07-03 09:47:40.471 [http-nio-8080-exec-4] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:47:40.487 [http-nio-8080-exec-2] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NjQ2NGZmQDQ1Ni5jb20iLCJjcmVhdGVkIjoxNzUxNTA0Nzg2OTU1LCJleHAiOjE3NTE1MDY1ODZ9.exQegqrK7_4TJaR8WP3G5FXnw_J3B8oJMWFW9V1Np8JmJqTsdF0MXCkXHw3Lf3T5b2eUREymn-qTrf36-8M16g
2025-07-03 09:47:40.489 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==>  Preparing: select o.id, o.orderId, o.account, o.orderTime, o.shipTime, o.getTime, o.evaluateTime, o.closeTime, o.orderStatus, o.logisticsNum, o.confirmTime, e.`productTotalMoney` AS productTotalMoney, e.`freight` AS freight, e.`coupon` AS coupon, e.`activityDiscount` AS activityDiscount, e.`allPrice` AS allPrice, e.`finallyPrice` AS finallyPrice, a.`name` AS name, a.`phone` AS phone, a.`addr` AS addr, a.`label` AS label FROM bookorder AS o LEFT JOIN expense AS e ON o.orderId = e.orderId LEFT JOIN address AS a ON a.id = o.addressId WHERE o.account = ? AND o.orderStatus = ? AND o.beUserDelete = ? order by o.orderTime DESC limit ?,?
2025-07-03 09:47:40.489 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.489 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.id,
          o.orderId,
          o.account,
          o.orderTime,
          o.shipTime,
          o.getTime,
          o.evaluateTime,
          o.closeTime,
          o.orderStatus,
          o.logisticsNum,
          o.confirmTime,
          e.`productTotalMoney` AS productTotalMoney,
          e.`freight` AS freight,
          e.`coupon` AS coupon,
          e.`activityDiscount` AS activityDiscount,
          e.`allPrice` AS allPrice,
          e.`finallyPrice` AS finallyPrice,
          a.`name` AS name,
          a.`phone` AS phone,
          a.`addr` AS addr,
          a.`label` AS label
     
        FROM
        bookorder AS o
        LEFT JOIN expense AS e ON o.orderId = e.orderId
        LEFT JOIN address AS a ON a.id = o.addressId
         WHERE  o.account = ?
            
            
                AND o.orderStatus = ?
            
                AND o.beUserDelete = ? 
        order by o.orderTime DESC
        limit ?,? ::: DataSources: slave
2025-07-03 09:47:40.490 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - ==> Parameters: 56464ff@456.com(String), 已取消(String), false(Boolean), 0(Integer), 1(Integer)
2025-07-03 09:47:40.491 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.orderDtoList - <==      Total: 1
2025-07-03 09:47:40.491 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==>  Preparing: select o.orderid, o.num, o.price, b.bookName, b.id, b.author, b.isbn, b.publish, b.birthday, b.marketPrice, b.price AS bookPrice, b.stock, b.description FROM orderdetail AS o LEFT JOIN book AS b ON o.bookId = b.id where o.orderId = ?
2025-07-03 09:47:40.492 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.492 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select
         
          o.orderid,
          o.num,
          o.price,
          b.bookName,
          b.id,
          b.author,
          b.isbn,
          b.publish,
          b.birthday,
          b.marketPrice,
          b.price AS bookPrice,
          b.stock,
          b.description
     
        FROM
        orderdetail AS o
        LEFT JOIN book AS b ON o.bookId = b.id
        where o.orderId = ? ::: DataSources: slave
2025-07-03 09:47:40.492 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - ==> Parameters: 20250703091609136788(String)
2025-07-03 09:47:40.494 [http-nio-8080-exec-2] DEBUG c.h.s.mapper.OrderMapper.findOrderDetailDtoList - <==      Total: 1
2025-07-03 09:47:40.494 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 09:47:40.494 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.494 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 09:47:40.495 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 09:47:40.495 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 09:47:40.496 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.count - ==>  Preparing: select count(*) from bookorder WHERE bookorder.account = ? AND orderStatus = ? AND beUserDelete = ?
2025-07-03 09:47:40.496 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:47:40.496 [http-nio-8080-exec-2] INFO  ShardingSphere-SQL - SQL: select count(*) from bookorder
         WHERE  bookorder.account = ?
            
            
                AND orderStatus = ?
            
                AND beUserDelete = ? ::: DataSources: slave
2025-07-03 09:47:40.496 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.count - ==> Parameters: 56464ff@456.com(String), 已取消(String), false(Boolean)
2025-07-03 09:47:40.497 [http-nio-8080-exec-2] DEBUG com.huang.store.mapper.OrderMapper.count - <==      Total: 1
2025-07-03 09:49:17.926 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 开始检查超时订单...
2025-07-03 09:49:17.927 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==>  Preparing: SELECT * FROM bookorder WHERE orderStatus = '待付款' AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ? ORDER BY orderTime ASC
2025-07-03 09:49:17.927 [scheduling-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 09:49:17.928 [scheduling-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM bookorder
        WHERE orderStatus = '待付款'
        AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ?
        ORDER BY orderTime ASC ::: DataSources: slave
2025-07-03 09:49:17.930 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==> Parameters: 30(Integer)
2025-07-03 09:49:17.932 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - <==      Total: 0
2025-07-03 09:49:17.933 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 没有发现超时订单
2025-07-03 10:10:44.746 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-03 10:10:44.760 [restartedMain] INFO  com.huang.store.StoreApplication - Starting StoreApplication using Java 17.0.8 on djj with PID 19964 (D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server\target\classes started by 86131 in D:\project_home\software-project\bookStore-Springboot-Vue\bookstore_server)
2025-07-03 10:10:44.760 [restartedMain] DEBUG com.huang.store.StoreApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-07-03 10:10:44.760 [restartedMain] INFO  com.huang.store.StoreApplication - The following 1 profile is active: "dev"
2025-07-03 10:10:44.883 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-03 10:10:44.883 [restartedMain] INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-03 10:10:45.431 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-03 10:10:45.433 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-03 10:10:45.455 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2025-07-03 10:10:45.636 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validationConfig' of type [com.huang.store.config.ValidationConfig$$EnhancerBySpringCGLIB$$7e65faf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-03 10:10:45.649 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'validator' of type [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-03 10:10:45.998 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-07-03 10:10:45.999 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
2025-07-03 10:10:45.999 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
2025-07-03 10:10:45.999 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2025-07-03 10:10:46.003 [restartedMain] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
2025-07-03 10:10:46.009 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-03 10:10:46.010 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-07-03 10:10:46.010 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-07-03 10:10:46.059 [restartedMain] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-03 10:10:46.059 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1176 ms
2025-07-03 10:10:46.063 [restartedMain] INFO  com.huang.store.configure.DruidConfiguration - init Druid Servlet Configuration 
2025-07-03 10:10:46.790 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-07-03 10:10:46.814 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2025-07-03 10:10:47.079 [restartedMain] DEBUG c.h.store.security.JwtAuthenticationTokenFilter - Filter 'jwtAuthenticationTokenFilter' configured for use
2025-07-03 10:10:47.079 [restartedMain] DEBUG c.huang.store.security.CustomAuthenticationFilter - Filter 'CAFilter' configured for use
2025-07-03 10:10:47.649 [restartedMain] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2025-07-03 10:10:47.808 [restartedMain] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7d5e66e9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@58f6a266, org.springframework.security.web.context.SecurityContextPersistenceFilter@1cb11a70, org.springframework.security.web.header.HeaderWriterFilter@3c7c5452, org.springframework.web.filter.CorsFilter@5388b35c, org.springframework.security.web.authentication.logout.LogoutFilter@4d4e3004, com.huang.store.security.JwtAuthenticationTokenFilter@6d338848, com.huang.store.security.CustomAuthenticationFilter@30ec6434, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@525d6cdd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@645ca7ca, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3d7642fe, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@187ef688, org.springframework.security.web.session.SessionManagementFilter@713a5685, org.springframework.security.web.access.ExceptionTranslationFilter@45080051, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@280e82b8]
2025-07-03 10:10:48.098 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35730
2025-07-03 10:10:48.113 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-03 10:10:48.127 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-07-03 10:10:48.133 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 开始检查超时订单...
2025-07-03 10:10:48.135 [restartedMain] INFO  com.huang.store.StoreApplication - Started StoreApplication in 3.727 seconds (JVM running for 4.328)
2025-07-03 10:10:48.157 [scheduling-1] DEBUG com.huang.store.mapper.OrderConfigMapper.getByKey - ==>  Preparing: SELECT * FROM order_config WHERE config_key = ?
2025-07-03 10:10:48.168 [scheduling-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 10:10:48.169 [scheduling-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM order_config WHERE config_key = ? ::: DataSources: slave
2025-07-03 10:10:48.215 [scheduling-1] DEBUG com.huang.store.mapper.OrderConfigMapper.getByKey - ==> Parameters: normal_payment_timeout(String)
2025-07-03 10:10:48.226 [scheduling-1] DEBUG com.huang.store.mapper.OrderConfigMapper.getByKey - <==      Total: 1
2025-07-03 10:10:48.230 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 使用配置的超时时间: 60分钟
2025-07-03 10:10:48.234 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==>  Preparing: SELECT * FROM bookorder WHERE orderStatus = '待付款' AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ? ORDER BY orderTime ASC
2025-07-03 10:10:48.234 [scheduling-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 10:10:48.234 [scheduling-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM bookorder
        WHERE orderStatus = '待付款'
        AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ?
        ORDER BY orderTime ASC ::: DataSources: slave
2025-07-03 10:10:48.238 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==> Parameters: 60(Integer)
2025-07-03 10:10:48.240 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - <==      Total: 0
2025-07-03 10:10:48.241 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 没有发现超时订单
2025-07-03 10:10:51.401 [http-nio-8080-exec-5] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-03 10:10:51.402 [http-nio-8080-exec-5] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-03 10:10:51.403 [http-nio-8080-exec-5] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-03 10:10:51.460 [http-nio-8080-exec-5] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTE1MDQxMzk0NDcsImV4cCI6MTc1MTUwNTkzOX0.WRXrTtuMeMDVQ7gyOop_scHv08sXIj1bTAF5P1mXqRztMgWv_eSfFUENP8lP6ATG72U85cNDNLzut4tpbndQAg
2025-07-03 10:10:51.460 [http-nio-8080-exec-1] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTE1MDQxMzk0NDcsImV4cCI6MTc1MTUwNTkzOX0.WRXrTtuMeMDVQ7gyOop_scHv08sXIj1bTAF5P1mXqRztMgWv_eSfFUENP8lP6ATG72U85cNDNLzut4tpbndQAg
2025-07-03 10:10:51.460 [http-nio-8080-exec-2] INFO  com.huang.store.util.JwtTokenUtil - JWT格式验证失败:eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNTQ1MDU5NjM0QHFxLmNvbSIsImNyZWF0ZWQiOjE3NTE1MDQxMzk0NDcsImV4cCI6MTc1MTUwNTkzOX0.WRXrTtuMeMDVQ7gyOop_scHv08sXIj1bTAF5P1mXqRztMgWv_eSfFUENP8lP6ATG72U85cNDNLzut4tpbndQAg
2025-07-03 10:10:51.476 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==>  Preparing: select * from booksort where level="级别一"
2025-07-03 10:10:51.476 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 10:10:51.476 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where level="级别一" ::: DataSources: slave
2025-07-03 10:10:51.476 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - ==> Parameters: 
2025-07-03 10:10:51.480 [http-nio-8080-exec-5] DEBUG com.huang.store.mapper.SortMapper.getAllFirSorts - <==      Total: 4
2025-07-03 10:10:51.481 [http-nio-8080-exec-1] INFO  com.huang.store.controller.BookController - 按页获取图书列表: page=1, pageSize=5
2025-07-03 10:10:51.481 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 10:10:51.481 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 10:10:51.481 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 10:10:51.481 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==>  Preparing: select b.*, COALESCE(sales_data.total_sales, 0) as sales from book b left join ( select od.bookId, sum(od.num) as total_sales from orderdetail od inner join bookorder bo on od.orderId = bo.orderId where bo.orderStatus in ('已发货', '已收货', '已评价') group by od.bookId ) sales_data on b.id = sales_data.bookId order by b.rank desc, b.id desc limit ?,?
2025-07-03 10:10:51.481 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 10:10:51.481 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select b.*,
               COALESCE(sales_data.total_sales, 0) as sales
        from book b
        left join (
            select od.bookId, sum(od.num) as total_sales
            from orderdetail od
            inner join bookorder bo on od.orderId = bo.orderId
            where bo.orderStatus in ('已发货', '已收货', '已评价')
            group by od.bookId
        ) sales_data on b.id = sales_data.bookId
        order by b.rank desc, b.id desc
        limit ?,? ::: DataSources: slave
2025-07-03 10:10:51.482 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 文学(String)
2025-07-03 10:10:51.483 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 3
2025-07-03 10:10:51.486 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 10:10:51.486 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 10:10:51.486 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 10:10:51.494 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - ==> Parameters: 0(Integer), 5(Integer)
2025-07-03 10:10:51.498 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 科技(String)
2025-07-03 10:10:51.507 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-03 10:10:51.508 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 10:10:51.508 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 10:10:51.508 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 10:10:51.508 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 教育(String)
2025-07-03 10:10:51.508 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBooksByPage - <==      Total: 5
2025-07-03 10:10:51.508 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 10:10:51.508 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 10:10:51.508 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 10:10:51.509 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002207(String)
2025-07-03 10:10:51.509 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-03 10:10:51.509 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==>  Preparing: select * from booksort where upperName=?
2025-07-03 10:10:51.509 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 10:10:51.509 [http-nio-8080-exec-5] INFO  ShardingSphere-SQL - SQL: select * from booksort where upperName=? ::: DataSources: slave
2025-07-03 10:10:51.509 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - ==> Parameters: 生活(String)
2025-07-03 10:10:51.511 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 10:10:51.511 [http-nio-8080-exec-5] DEBUG c.huang.store.mapper.SortMapper.getSecondSortList - <==      Total: 2
2025-07-03 10:10:51.511 [http-nio-8080-exec-1] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002207
2025-07-03 10:10:51.511 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 10:10:51.511 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 10:10:51.511 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 10:10:51.513 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111213826(String)
2025-07-03 10:10:51.515 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 10:10:51.515 [http-nio-8080-exec-1] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111213826
2025-07-03 10:10:51.515 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 10:10:51.515 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 10:10:51.515 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 10:10:51.516 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787111407010(String)
2025-07-03 10:10:51.517 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 10:10:51.517 [http-nio-8080-exec-1] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787111407010
2025-07-03 10:10:51.517 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 10:10:51.517 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 10:10:51.517 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 10:10:51.517 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787121291005(String)
2025-07-03 10:10:51.519 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 10:10:51.519 [http-nio-8080-exec-1] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787121291005
2025-07-03 10:10:51.520 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==>  Preparing: select imgSrc from bookimg where isbn=? limit 1
2025-07-03 10:10:51.520 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 10:10:51.520 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select imgSrc from bookimg where isbn=? limit 1 ::: DataSources: slave
2025-07-03 10:10:51.520 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - ==> Parameters: 9787020002214(String)
2025-07-03 10:10:51.521 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCover - <==      Total: 1
2025-07-03 10:10:51.522 [http-nio-8080-exec-1] DEBUG com.huang.store.controller.BookController - 设置图书封面图片: isbn=9787020002214
2025-07-03 10:10:51.522 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==>  Preparing: select count(*) from book
2025-07-03 10:10:51.522 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 10:10:51.522 [http-nio-8080-exec-1] INFO  ShardingSphere-SQL - SQL: select count(*) from book ::: DataSources: slave
2025-07-03 10:10:51.523 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCount - ==> Parameters: 
2025-07-03 10:10:51.525 [http-nio-8080-exec-1] DEBUG com.huang.store.mapper.BookMapper.getBookCount - <==      Total: 1
2025-07-03 10:10:53.739 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-03 10:10:53.741 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 10:10:53.742 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-03 10:10:53.744 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 2545059634@qq.com(String)
2025-07-03 10:10:53.751 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-03 10:10:53.763 [http-nio-8080-exec-6] INFO  com.huang.store.security.MyUserDetailService - 登录用户名:2545059634@qq.com    数据库密码:$2a$10$w8zNNUSDq3MCiLDDuAhYXedA0QGva1Z4.6UxO61Njhsrlo8voc01G
2025-07-03 10:10:53.887 [http-nio-8080-exec-6] DEBUG c.huang.store.security.CustomAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=SecurityUser(id=null, username=2545059634@qq.com, password=$2a$10$w8zNNUSDq3MCiLDDuAhYXedA0QGva1Z4.6UxO61Njhsrlo8voc01G, enabled=true, roles=[ROLE_ADMIN]), Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=ACEFF007E9BF0CA55DDB88F8E27D5141], Granted Authorities=[ROLE_ADMIN]]
2025-07-03 10:10:53.899 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - ==>  Preparing: select * from user where account = ?
2025-07-03 10:10:53.899 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 10:10:53.899 [http-nio-8080-exec-6] INFO  ShardingSphere-SQL - SQL: select * from user where account = ? ::: DataSources: slave
2025-07-03 10:10:53.900 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - ==> Parameters: 2545059634@qq.com(String)
2025-07-03 10:10:53.903 [http-nio-8080-exec-6] DEBUG com.huang.store.mapper.UserMapper.getUser - <==      Total: 1
2025-07-03 10:10:57.034 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.OrderConfigMapper.getAllConfigs - ==>  Preparing: SELECT * FROM order_config ORDER BY config_key
2025-07-03 10:10:57.035 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 10:10:57.035 [http-nio-8080-exec-9] INFO  ShardingSphere-SQL - SQL: SELECT * FROM order_config ORDER BY config_key ::: DataSources: slave
2025-07-03 10:10:57.037 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.OrderConfigMapper.getAllConfigs - ==> Parameters: 
2025-07-03 10:10:57.042 [http-nio-8080-exec-9] DEBUG c.h.store.mapper.OrderConfigMapper.getAllConfigs - <==      Total: 4
2025-07-03 10:10:57.042 [http-nio-8080-exec-9] INFO  com.huang.store.controller.OrderConfigController - 获取订单配置映射成功，共4个配置
2025-07-03 10:11:05.481 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.OrderConfigMapper.updateConfig - ==>  Preparing: UPDATE order_config SET config_value = ?, update_time = CURRENT_TIMESTAMP WHERE config_key = ?
2025-07-03 10:11:05.482 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 10:11:05.483 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: UPDATE order_config 
        SET config_value = ?, update_time = CURRENT_TIMESTAMP
        WHERE config_key = ? ::: DataSources: master
2025-07-03 10:11:05.489 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.OrderConfigMapper.updateConfig - ==> Parameters: 30(String), spike_payment_timeout(String)
2025-07-03 10:11:05.495 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.OrderConfigMapper.updateConfig - <==    Updates: 1
2025-07-03 10:11:05.496 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.OrderConfigMapper.updateConfig - ==>  Preparing: UPDATE order_config SET config_value = ?, update_time = CURRENT_TIMESTAMP WHERE config_key = ?
2025-07-03 10:11:05.496 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 10:11:05.496 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: UPDATE order_config 
        SET config_value = ?, update_time = CURRENT_TIMESTAMP
        WHERE config_key = ? ::: DataSources: master
2025-07-03 10:11:05.497 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.OrderConfigMapper.updateConfig - ==> Parameters: 50(String), normal_payment_timeout(String)
2025-07-03 10:11:05.554 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.OrderConfigMapper.updateConfig - <==    Updates: 1
2025-07-03 10:11:05.554 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.OrderConfigMapper.updateConfig - ==>  Preparing: UPDATE order_config SET config_value = ?, update_time = CURRENT_TIMESTAMP WHERE config_key = ?
2025-07-03 10:11:05.554 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 10:11:05.554 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: UPDATE order_config 
        SET config_value = ?, update_time = CURRENT_TIMESTAMP
        WHERE config_key = ? ::: DataSources: master
2025-07-03 10:11:05.554 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.OrderConfigMapper.updateConfig - ==> Parameters: 7(String), delivery_timeout(String)
2025-07-03 10:11:05.560 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.OrderConfigMapper.updateConfig - <==    Updates: 1
2025-07-03 10:11:05.560 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.OrderConfigMapper.updateConfig - ==>  Preparing: UPDATE order_config SET config_value = ?, update_time = CURRENT_TIMESTAMP WHERE config_key = ?
2025-07-03 10:11:05.560 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 10:11:05.560 [http-nio-8080-exec-8] INFO  ShardingSphere-SQL - SQL: UPDATE order_config 
        SET config_value = ?, update_time = CURRENT_TIMESTAMP
        WHERE config_key = ? ::: DataSources: master
2025-07-03 10:11:05.560 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.OrderConfigMapper.updateConfig - ==> Parameters: 7(String), receive_timeout(String)
2025-07-03 10:11:05.564 [http-nio-8080-exec-8] DEBUG c.h.store.mapper.OrderConfigMapper.updateConfig - <==    Updates: 1
2025-07-03 10:11:05.566 [http-nio-8080-exec-8] INFO  com.huang.store.controller.OrderConfigController - 批量更新配置成功，共4个配置
2025-07-03 10:15:48.133 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 开始检查超时订单...
2025-07-03 10:15:48.133 [scheduling-1] DEBUG com.huang.store.mapper.OrderConfigMapper.getByKey - ==>  Preparing: SELECT * FROM order_config WHERE config_key = ?
2025-07-03 10:15:48.133 [scheduling-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 10:15:48.133 [scheduling-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM order_config WHERE config_key = ? ::: DataSources: slave
2025-07-03 10:15:48.142 [scheduling-1] DEBUG com.huang.store.mapper.OrderConfigMapper.getByKey - ==> Parameters: normal_payment_timeout(String)
2025-07-03 10:15:48.144 [scheduling-1] DEBUG com.huang.store.mapper.OrderConfigMapper.getByKey - <==      Total: 1
2025-07-03 10:15:48.145 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 使用配置的超时时间: 50分钟
2025-07-03 10:15:48.145 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==>  Preparing: SELECT * FROM bookorder WHERE orderStatus = '待付款' AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ? ORDER BY orderTime ASC
2025-07-03 10:15:48.145 [scheduling-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 10:15:48.145 [scheduling-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM bookorder
        WHERE orderStatus = '待付款'
        AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ?
        ORDER BY orderTime ASC ::: DataSources: slave
2025-07-03 10:15:48.146 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==> Parameters: 50(Integer)
2025-07-03 10:15:48.149 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - <==      Total: 0
2025-07-03 10:15:48.149 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 没有发现超时订单
2025-07-03 10:20:48.134 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 开始检查超时订单...
2025-07-03 10:20:48.136 [scheduling-1] DEBUG com.huang.store.mapper.OrderConfigMapper.getByKey - ==>  Preparing: SELECT * FROM order_config WHERE config_key = ?
2025-07-03 10:20:48.136 [scheduling-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 10:20:48.136 [scheduling-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM order_config WHERE config_key = ? ::: DataSources: slave
2025-07-03 10:20:48.140 [scheduling-1] DEBUG com.huang.store.mapper.OrderConfigMapper.getByKey - ==> Parameters: normal_payment_timeout(String)
2025-07-03 10:20:48.142 [scheduling-1] DEBUG com.huang.store.mapper.OrderConfigMapper.getByKey - <==      Total: 1
2025-07-03 10:20:48.143 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 使用配置的超时时间: 50分钟
2025-07-03 10:20:48.143 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==>  Preparing: SELECT * FROM bookorder WHERE orderStatus = '待付款' AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ? ORDER BY orderTime ASC
2025-07-03 10:20:48.143 [scheduling-1] INFO  ShardingSphere-SQL - Rule Type: master-slave
2025-07-03 10:20:48.144 [scheduling-1] INFO  ShardingSphere-SQL - SQL: SELECT * FROM bookorder
        WHERE orderStatus = '待付款'
        AND TIMESTAMPDIFF(MINUTE, orderTime, NOW()) > ?
        ORDER BY orderTime ASC ::: DataSources: slave
2025-07-03 10:20:48.144 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - ==> Parameters: 50(Integer)
2025-07-03 10:20:48.146 [scheduling-1] DEBUG c.h.s.mapper.OrderMapper.findTimeoutPendingOrders - <==      Total: 0
2025-07-03 10:20:48.147 [scheduling-1] DEBUG com.huang.store.service.OrderTimeoutService - 没有发现超时订单
